<?xml version="1.0" encoding="utf-8"?>
<TestRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Results>
    <UnitTestResult>
      <TestDate>2013-07-15T00:25:41</TestDate>
      <Passed>116</Passed>
      <Errors>3</Errors>
      <Failures>2</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
  </Results>
  <Tests>
    <TestRecord Name="MathildaLib">
      <Results>
        <UnitTestResult>
          <TestDate>2013-07-15T00:25:41</TestDate>
          <Passed>116</Passed>
          <Errors>3</Errors>
          <Failures>2</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-07-15T01:11:21</TestDate>
          <Passed>116</Passed>
          <Errors>3</Errors>
          <Failures>3</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-07-15T14:53:26</TestDate>
          <Passed>120</Passed>
          <Errors>3</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-07-15T15:06:20</TestDate>
          <Passed>113</Passed>
          <Errors>6</Errors>
          <Failures>5</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
      </Results>
      <Tests>
        <TestRecord Name="TestAdd">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,24ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,22ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,66ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:54:31</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,76ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:15</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,64ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,67ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestAdd1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(+3+4))
MathildaLib.SumOperator: (+3+(+7))
MathildaLib.LiftOperator: (+3+7)
MathildaLib.SumOperator: (+10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(+3+4))
MathildaLib.SumOperator: (+3+(+7))
MathildaLib.LiftOperator: (+3+7)
MathildaLib.SumOperator: (+10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(+3+4))
MathildaLib.SumOperator: (+3+(+7))
MathildaLib.LiftOperator: (+3+7)
MathildaLib.SumOperator: (+10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(+3+4))
MathildaLib.SumOperator: (+3+(+7))
MathildaLib.LiftOperator: (+3+7)
MathildaLib.SumOperator: (+10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(+3+4))
MathildaLib.SumOperator: (+3+(+7))
MathildaLib.LiftOperator: (+3+7)
MathildaLib.SumOperator: (+10)
MathildaLib.SwapOperator: (+7+3)
MathildaLib.SwapOperator: (+(+7)+3)
MathildaLib.SwapOperator: (+3+(+4+3))
MathildaLib.SwapOperator: (+(+4+3)+3)
MathildaLib.SwapOperator: (+(+3+4)+3)
MathildaLib.SumOperator: (+1+2+(+7))
MathildaLib.LiftOperator: (+1+2+7)
MathildaLib.SwapOperator: (+1+7+2)
MathildaLib.SwapOperator: (+2+7+1)
MathildaLib.SwapOperator: (+2+1+7)
MathildaLib.SwapOperator: (+7+1+2)
MathildaLib.SwapOperator: (+7+2+1)
MathildaLib.SwapOperator: (+1+(+7)+2)
MathildaLib.SwapOperator: (+2+(+7)+1)
MathildaLib.SwapOperator: (+2+1+(+7))
MathildaLib.SwapOperator: (+(+7)+1+2)
MathildaLib.SwapOperator: (+(+7)+2+1)
MathildaLib.SwapOperator: (+1+2+(+4+3))
MathildaLib.SwapOperator: (+1+(+4+3)+2)
MathildaLib.SwapOperator: (+1+(+3+4)+2)
MathildaLib.SwapOperator: (+2+(+3+4)+1)
MathildaLib.SwapOperator: (+2+1+(+3+4))
MathildaLib.SwapOperator: (+2+1+(+4+3))
MathildaLib.SwapOperator: (+2+(+4+3)+1)
MathildaLib.SwapOperator: (+(+4+3)+2+1)
MathildaLib.SwapOperator: (+(+3+4)+2+1)
MathildaLib.SwapOperator: (+(+3+4)+1+2)
MathildaLib.SwapOperator: (+(+4+3)+1+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(+3+4))
MathildaLib.SumOperator: (+3+(+7))
MathildaLib.LiftOperator: (+3+7)
MathildaLib.SumOperator: (+10)
MathildaLib.SwapOperator: (+7+3)
MathildaLib.SwapOperator: (+(+7)+3)
MathildaLib.SwapOperator: (+3+(+4+3))
MathildaLib.SwapOperator: (+(+4+3)+3)
MathildaLib.SwapOperator: (+(+3+4)+3)
MathildaLib.SumOperator: (+1+2+(+7))
MathildaLib.LiftOperator: (+1+2+7)
MathildaLib.SwapOperator: (+1+7+2)
MathildaLib.SwapOperator: (+2+7+1)
MathildaLib.SwapOperator: (+2+1+7)
MathildaLib.SwapOperator: (+7+1+2)
MathildaLib.SwapOperator: (+7+2+1)
MathildaLib.SwapOperator: (+1+(+7)+2)
MathildaLib.SwapOperator: (+2+(+7)+1)
MathildaLib.SwapOperator: (+2+1+(+7))
MathildaLib.SwapOperator: (+(+7)+1+2)
MathildaLib.SwapOperator: (+(+7)+2+1)
MathildaLib.SwapOperator: (+1+2+(+4+3))
MathildaLib.SwapOperator: (+1+(+4+3)+2)
MathildaLib.SwapOperator: (+1+(+3+4)+2)
MathildaLib.SwapOperator: (+2+(+3+4)+1)
MathildaLib.SwapOperator: (+2+1+(+3+4))
MathildaLib.SwapOperator: (+2+1+(+4+3))
MathildaLib.SwapOperator: (+2+(+4+3)+1)
MathildaLib.SwapOperator: (+(+4+3)+2+1)
MathildaLib.SwapOperator: (+(+3+4)+2+1)
MathildaLib.SwapOperator: (+(+3+4)+1+2)
MathildaLib.SwapOperator: (+(+4+3)+1+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(*3*4))
MathildaLib.ScalarProductOperator: (+3+(*12))
MathildaLib.LiftOperator: (+3+12)
MathildaLib.SumOperator: (+15)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(*3*4))
MathildaLib.ScalarProductOperator: (+3+(*12))
MathildaLib.LiftOperator: (+3+12)
MathildaLib.SumOperator: (+15)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(*3*4))
MathildaLib.ScalarProductOperator: (+3+(*12))
MathildaLib.LiftOperator: (+3+12)
MathildaLib.SumOperator: (+15)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(*3*4))
MathildaLib.ScalarProductOperator: (+3+(*12))
MathildaLib.LiftOperator: (+3+12)
MathildaLib.SumOperator: (+15)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(*3*4))
MathildaLib.ScalarProductOperator: (+3+(*12))
MathildaLib.LiftOperator: (+3+12)
MathildaLib.SumOperator: (+15)
MathildaLib.SwapOperator: (+12+3)
MathildaLib.SwapOperator: (+(*12)+3)
MathildaLib.SwapOperator: (+3+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+3)
MathildaLib.SwapOperator: (+(*3*4)+3)
MathildaLib.ScalarProductOperator: (+1+2+(*12))
MathildaLib.LiftOperator: (+1+2+12)
MathildaLib.SwapOperator: (+1+12+2)
MathildaLib.SwapOperator: (+2+12+1)
MathildaLib.SwapOperator: (+2+1+12)
MathildaLib.SwapOperator: (+12+1+2)
MathildaLib.SwapOperator: (+12+2+1)
MathildaLib.SwapOperator: (+1+(*12)+2)
MathildaLib.SwapOperator: (+2+(*12)+1)
MathildaLib.SwapOperator: (+2+1+(*12))
MathildaLib.SwapOperator: (+(*12)+1+2)
MathildaLib.SwapOperator: (+(*12)+2+1)
MathildaLib.SwapOperator: (+1+2+(*4*3))
MathildaLib.SwapOperator: (+1+(*4*3)+2)
MathildaLib.SwapOperator: (+1+(*3*4)+2)
MathildaLib.SwapOperator: (+2+(*3*4)+1)
MathildaLib.SwapOperator: (+2+1+(*3*4))
MathildaLib.SwapOperator: (+2+1+(*4*3))
MathildaLib.SwapOperator: (+2+(*4*3)+1)
MathildaLib.SwapOperator: (+(*4*3)+2+1)
MathildaLib.SwapOperator: (+(*3*4)+2+1)
MathildaLib.SwapOperator: (+(*3*4)+1+2)
MathildaLib.SwapOperator: (+(*4*3)+1+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+3+(*3*4))
MathildaLib.ScalarProductOperator: (+3+(*12))
MathildaLib.LiftOperator: (+3+12)
MathildaLib.SumOperator: (+15)
MathildaLib.SwapOperator: (+12+3)
MathildaLib.SwapOperator: (+(*12)+3)
MathildaLib.SwapOperator: (+3+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+3)
MathildaLib.SwapOperator: (+(*3*4)+3)
MathildaLib.ScalarProductOperator: (+1+2+(*12))
MathildaLib.LiftOperator: (+1+2+12)
MathildaLib.SwapOperator: (+1+12+2)
MathildaLib.SwapOperator: (+2+12+1)
MathildaLib.SwapOperator: (+2+1+12)
MathildaLib.SwapOperator: (+12+1+2)
MathildaLib.SwapOperator: (+12+2+1)
MathildaLib.SwapOperator: (+1+(*12)+2)
MathildaLib.SwapOperator: (+2+(*12)+1)
MathildaLib.SwapOperator: (+2+1+(*12))
MathildaLib.SwapOperator: (+(*12)+1+2)
MathildaLib.SwapOperator: (+(*12)+2+1)
MathildaLib.SwapOperator: (+1+2+(*4*3))
MathildaLib.SwapOperator: (+1+(*4*3)+2)
MathildaLib.SwapOperator: (+1+(*3*4)+2)
MathildaLib.SwapOperator: (+2+(*3*4)+1)
MathildaLib.SwapOperator: (+2+1+(*3*4))
MathildaLib.SwapOperator: (+2+1+(*4*3))
MathildaLib.SwapOperator: (+2+(*4*3)+1)
MathildaLib.SwapOperator: (+(*4*3)+2+1)
MathildaLib.SwapOperator: (+(*3*4)+2+1)
MathildaLib.SwapOperator: (+(*3*4)+1+2)
MathildaLib.SwapOperator: (+(*4*3)+1+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+3+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+(*2))
MathildaLib.LiftOperator: (+3+2)
MathildaLib.SumOperator: (+5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+3+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+(*2))
MathildaLib.LiftOperator: (+3+2)
MathildaLib.SumOperator: (+5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+3+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+(*2))
MathildaLib.LiftOperator: (+3+2)
MathildaLib.SumOperator: (+5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+3+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+(*2))
MathildaLib.LiftOperator: (+3+2)
MathildaLib.SumOperator: (+5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+3+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+(*2))
MathildaLib.LiftOperator: (+3+2)
MathildaLib.SumOperator: (+5)
MathildaLib.SwapOperator: (+2+3)
MathildaLib.SwapOperator: (+(*2)+3)
MathildaLib.SwapOperator: (+3+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+3+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+(*2))
MathildaLib.LiftOperator: (+3+2)
MathildaLib.SumOperator: (+5)
MathildaLib.SwapOperator: (+2+3)
MathildaLib.SwapOperator: (+(*2)+3)
MathildaLib.SwapOperator: (+3+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+a+(*1*2))
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+a+(*1*2))
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+a+(*1*2))
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+a+(*1*2))
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+a+(*1*2))
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
MathildaLib.SwapOperator: (+(*2)+a)
MathildaLib.SwapOperator: (+a+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+a)
========
MathildaLib.SwapOperator: (+a+2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+a+(*1*2))
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
MathildaLib.SwapOperator: (+(*2)+a)
MathildaLib.SwapOperator: (+a+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+a)
========
MathildaLib.SwapOperator: (+a+2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+7)
MathildaLib.SwapOperator: (+7+(*1*2))
MathildaLib.MultiplyOneOperator: (+7+(*2))
MathildaLib.LiftOperator: (+7+2)
MathildaLib.SumOperator: (+9)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+7)
MathildaLib.SwapOperator: (+7+(*1*2))
MathildaLib.MultiplyOneOperator: (+7+(*2))
MathildaLib.LiftOperator: (+7+2)
MathildaLib.SumOperator: (+9)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+7)
MathildaLib.SwapOperator: (+7+(*1*2))
MathildaLib.MultiplyOneOperator: (+7+(*2))
MathildaLib.LiftOperator: (+7+2)
MathildaLib.SumOperator: (+9)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+7)
MathildaLib.SwapOperator: (+7+(*1*2))
MathildaLib.MultiplyOneOperator: (+7+(*2))
MathildaLib.LiftOperator: (+7+2)
MathildaLib.SumOperator: (+9)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+7)
MathildaLib.SwapOperator: (+7+(*1*2))
MathildaLib.MultiplyOneOperator: (+7+(*2))
MathildaLib.LiftOperator: (+7+2)
MathildaLib.SumOperator: (+9)
MathildaLib.SwapOperator: (+2+7)
MathildaLib.SwapOperator: (+(*2)+7)
MathildaLib.SwapOperator: (+7+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+7)
MathildaLib.SwapOperator: (+3+(*1*2)+4)
MathildaLib.SwapOperator: (+3+4+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+4+(*2))
MathildaLib.LiftOperator: (+3+4+2)
MathildaLib.SwapOperator: (+2+4+3)
MathildaLib.SwapOperator: (+2+3+4)
MathildaLib.SwapOperator: (+3+2+4)
MathildaLib.SwapOperator: (+4+2+3)
MathildaLib.SwapOperator: (+4+3+2)
MathildaLib.SwapOperator: (+3+(*2)+4)
MathildaLib.SwapOperator: (+4+(*2)+3)
MathildaLib.SwapOperator: (+4+3+(*2))
MathildaLib.SwapOperator: (+(*2)+3+4)
MathildaLib.SwapOperator: (+(*2)+4+3)
MathildaLib.SwapOperator: (+3+4+(*2*1))
MathildaLib.SwapOperator: (+3+(*2*1)+4)
MathildaLib.SwapOperator: (+4+(*2*1)+3)
MathildaLib.SwapOperator: (+4+3+(*2*1))
MathildaLib.SwapOperator: (+4+3+(*1*2))
MathildaLib.SwapOperator: (+4+(*1*2)+3)
MathildaLib.SwapOperator: (+(*1*2)+4+3)
MathildaLib.SwapOperator: (+(*2*1)+4+3)
MathildaLib.SwapOperator: (+(*2*1)+3+4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+7)
MathildaLib.SwapOperator: (+7+(*1*2))
MathildaLib.MultiplyOneOperator: (+7+(*2))
MathildaLib.LiftOperator: (+7+2)
MathildaLib.SumOperator: (+9)
MathildaLib.SwapOperator: (+2+7)
MathildaLib.SwapOperator: (+(*2)+7)
MathildaLib.SwapOperator: (+7+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+7)
MathildaLib.SwapOperator: (+3+(*1*2)+4)
MathildaLib.SwapOperator: (+3+4+(*1*2))
MathildaLib.MultiplyOneOperator: (+3+4+(*2))
MathildaLib.LiftOperator: (+3+4+2)
MathildaLib.SwapOperator: (+2+4+3)
MathildaLib.SwapOperator: (+2+3+4)
MathildaLib.SwapOperator: (+3+2+4)
MathildaLib.SwapOperator: (+4+2+3)
MathildaLib.SwapOperator: (+4+3+2)
MathildaLib.SwapOperator: (+3+(*2)+4)
MathildaLib.SwapOperator: (+4+(*2)+3)
MathildaLib.SwapOperator: (+4+3+(*2))
MathildaLib.SwapOperator: (+(*2)+3+4)
MathildaLib.SwapOperator: (+(*2)+4+3)
MathildaLib.SwapOperator: (+3+4+(*2*1))
MathildaLib.SwapOperator: (+3+(*2*1)+4)
MathildaLib.SwapOperator: (+4+(*2*1)+3)
MathildaLib.SwapOperator: (+4+3+(*2*1))
MathildaLib.SwapOperator: (+4+3+(*1*2))
MathildaLib.SwapOperator: (+4+(*1*2)+3)
MathildaLib.SwapOperator: (+(*1*2)+4+3)
MathildaLib.SwapOperator: (+(*2*1)+4+3)
MathildaLib.SwapOperator: (+(*2*1)+3+4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)+(*3*4))
MathildaLib.LiftOperator: (+2+(*3*4))
MathildaLib.ScalarProductOperator: (+2+(*12))
MathildaLib.LiftOperator: (+2+12)
MathildaLib.SumOperator: (+14)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)+(*3*4))
MathildaLib.LiftOperator: (+2+(*3*4))
MathildaLib.ScalarProductOperator: (+2+(*12))
MathildaLib.LiftOperator: (+2+12)
MathildaLib.SumOperator: (+14)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)+(*3*4))
MathildaLib.LiftOperator: (+2+(*3*4))
MathildaLib.ScalarProductOperator: (+2+(*12))
MathildaLib.LiftOperator: (+2+12)
MathildaLib.SumOperator: (+14)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)+(*3*4))
MathildaLib.LiftOperator: (+2+(*3*4))
MathildaLib.ScalarProductOperator: (+2+(*12))
MathildaLib.LiftOperator: (+2+12)
MathildaLib.SumOperator: (+14)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)+(*3*4))
MathildaLib.LiftOperator: (+2+(*3*4))
MathildaLib.ScalarProductOperator: (+2+(*12))
MathildaLib.LiftOperator: (+2+12)
MathildaLib.SumOperator: (+14)
MathildaLib.SwapOperator: (+12+2)
MathildaLib.SwapOperator: (+(*12)+2)
MathildaLib.SwapOperator: (+2+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+2)
MathildaLib.SwapOperator: (+(*3*4)+2)
MathildaLib.ScalarProductOperator: (+(*2)+(*12))
MathildaLib.LiftOperator: (+(*2)+12)
MathildaLib.SwapOperator: (+12+(*2))
MathildaLib.SwapOperator: (+(*12)+(*2))
MathildaLib.SwapOperator: (+(*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*2))
MathildaLib.SwapOperator: (+(*3*4)+(*2))
MathildaLib.ScalarProductOperator: (+(*1*2)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*1*2))
MathildaLib.LiftOperator: (+12+(*1*2))
MathildaLib.SwapOperator: (+12+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+12)
MathildaLib.SwapOperator: (+(*1*2)+12)
MathildaLib.SwapOperator: (+(*12)+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+(*12))
MathildaLib.SwapOperator: (+(*1*2)+(*4*3))
MathildaLib.SwapOperator: (+(*2*1)+(*4*3))
MathildaLib.SwapOperator: (+(*2*1)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*2*1))
MathildaLib.SwapOperator: (+(*3*4)+(*1*2))
MathildaLib.SwapOperator: (+(*4*3)+(*1*2))
MathildaLib.SwapOperator: (+(*4*3)+(*2*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)+(*3*4))
MathildaLib.LiftOperator: (+2+(*3*4))
MathildaLib.ScalarProductOperator: (+2+(*12))
MathildaLib.LiftOperator: (+2+12)
MathildaLib.SumOperator: (+14)
MathildaLib.SwapOperator: (+12+2)
MathildaLib.SwapOperator: (+(*12)+2)
MathildaLib.SwapOperator: (+2+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+2)
MathildaLib.SwapOperator: (+(*3*4)+2)
MathildaLib.ScalarProductOperator: (+(*2)+(*12))
MathildaLib.LiftOperator: (+(*2)+12)
MathildaLib.SwapOperator: (+12+(*2))
MathildaLib.SwapOperator: (+(*12)+(*2))
MathildaLib.SwapOperator: (+(*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*2))
MathildaLib.SwapOperator: (+(*3*4)+(*2))
MathildaLib.ScalarProductOperator: (+(*1*2)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*1*2))
MathildaLib.LiftOperator: (+12+(*1*2))
MathildaLib.SwapOperator: (+12+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+12)
MathildaLib.SwapOperator: (+(*1*2)+12)
MathildaLib.SwapOperator: (+(*12)+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+(*12))
MathildaLib.SwapOperator: (+(*1*2)+(*4*3))
MathildaLib.SwapOperator: (+(*2*1)+(*4*3))
MathildaLib.SwapOperator: (+(*2*1)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*2*1))
MathildaLib.SwapOperator: (+(*3*4)+(*1*2))
MathildaLib.SwapOperator: (+(*4*3)+(*1*2))
MathildaLib.SwapOperator: (+(*4*3)+(*2*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+6)
MathildaLib.SwapOperator: (+1+3+2)
MathildaLib.SwapOperator: (+2+3+1)
MathildaLib.SwapOperator: (+2+1+3)
MathildaLib.SwapOperator: (+3+1+2)
MathildaLib.SwapOperator: (+3+2+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+6)
MathildaLib.SwapOperator: (+1+3+2)
MathildaLib.SwapOperator: (+2+3+1)
MathildaLib.SwapOperator: (+2+1+3)
MathildaLib.SwapOperator: (+3+1+2)
MathildaLib.SwapOperator: (+3+2+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1+(*6))
MathildaLib.LiftOperator: (+1+6)
MathildaLib.SumOperator: (+7)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1+(*6))
MathildaLib.LiftOperator: (+1+6)
MathildaLib.SumOperator: (+7)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1+(*6))
MathildaLib.LiftOperator: (+1+6)
MathildaLib.SumOperator: (+7)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,10ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1+(*6))
MathildaLib.LiftOperator: (+1+6)
MathildaLib.SumOperator: (+7)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1+(*6))
MathildaLib.LiftOperator: (+1+6)
MathildaLib.SumOperator: (+7)
MathildaLib.SwapOperator: (+6+1)
MathildaLib.SwapOperator: (+(*6)+1)
MathildaLib.SwapOperator: (+1+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+1)
MathildaLib.SwapOperator: (+(*2*3)+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1+(*6))
MathildaLib.LiftOperator: (+1+6)
MathildaLib.SumOperator: (+7)
MathildaLib.SwapOperator: (+6+1)
MathildaLib.SwapOperator: (+(*6)+1)
MathildaLib.SwapOperator: (+1+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+1)
MathildaLib.SwapOperator: (+(*2*3)+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
MathildaLib.SwapOperator: (+2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
MathildaLib.SwapOperator: (+2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
MathildaLib.SwapOperator: (+2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
========
MathildaLib.SwapOperator: (+2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
MathildaLib.SwapOperator: (+(*2)+a)
MathildaLib.SwapOperator: (+a+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+a)
MathildaLib.SwapOperator: (+(*1*2)+a)
========
MathildaLib.SwapOperator: (+2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a+(*2))
MathildaLib.LiftOperator: (+a+2)
MathildaLib.SwapOperator: (+2+a)
MathildaLib.SwapOperator: (+(*2)+a)
MathildaLib.SwapOperator: (+a+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+a)
MathildaLib.SwapOperator: (+(*1*2)+a)
========
MathildaLib.SwapOperator: (+2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestAdd9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:54:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestCompare">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="Test2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (-c+(*i*b))
MathildaLib.SwapOperator: (+(*i*b)-c)
MathildaLib.SwapOperator: (+(*b*i)-c)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="Test3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="Test4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="Test5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestCompareSmartList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestCompare.TestCompareSmartList () [0x0013d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestCompare.cs:131 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>aMass 13 bMass 17
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestCompare.TestCompareSmartList () [0x0013d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestCompare.cs:131 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>aMass 13 bMass 17
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestCompare.TestCompareSmartList () [0x0013d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestCompare.cs:131 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>aMass 13 bMass 17
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:35</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestCompare.TestCompareSmartList () [0x0013d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestCompare.cs:131 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>aMass 13 bMass 17
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestCompare.TestCompareSmartList () [0x0013d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestCompare.cs:131 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>aMass 13 bMass 17
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNestedProductList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestProductListEquivalentToSumListWithOnlyOneElement">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubListLessThanSize">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*c*i*i)
MathildaLib.SwapOperator: (*i*c*i)
MathildaLib.SwapOperator: (*i*i*c)
========
MathildaLib.SwapOperator: (*i*c*i)
MathildaLib.SwapOperator: (*i*i*c)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestCompareIgnoreScalar">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,00ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,00ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,07ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,08ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestTwoVSNone">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestTwoVSOne">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestComplex">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,01ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,01ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestComplexComplexMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestComplexMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestComplexToString">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestComplexNumbers">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,01ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,01ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,12ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestABA">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a*a*b)
MathildaLib.ReplaceOperator: (*1*b)
MathildaLib.MultiplyOneOperator: (*b)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a*a*b)
MathildaLib.ReplaceOperator: (*1*b)
MathildaLib.MultiplyOneOperator: (*b)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a*a*b)
MathildaLib.ReplaceOperator: (*1*b)
MathildaLib.MultiplyOneOperator: (*b)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a*a*b)
MathildaLib.ReplaceOperator: (*1*b)
MathildaLib.MultiplyOneOperator: (*b)
MathildaLib.SwapOperator: (*b*1)
MathildaLib.SwapOperator: (*b*a*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestISquared">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ReplaceOperator: (*-1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ReplaceOperator: (*-1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ReplaceOperator: (*-1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ReplaceOperator: (*-1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNested1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*1)+(*i*i)))
MathildaLib.MultiplyOneOperator: (+(*i)+(*i*i))
MathildaLib.LiftOperator: (+i+(*i*i))
MathildaLib.ReplaceOperator: (+i+(*-1))
MathildaLib.LiftOperator: (+i+-1)
MathildaLib.SwapOperator: (+-1+i)
========
MathildaLib.SwapOperator: (+-1+i)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*1)+(*i*i)))
MathildaLib.MultiplyOneOperator: (+(*i)+(*i*i))
MathildaLib.LiftOperator: (+i+(*i*i))
MathildaLib.ReplaceOperator: (+i+(*-1))
MathildaLib.LiftOperator: (+i+-1)
MathildaLib.SwapOperator: (+-1+i)
========
MathildaLib.SwapOperator: (+-1+i)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*1)+(*i*i)))
MathildaLib.MultiplyOneOperator: (+(*i)+(*i*i))
MathildaLib.LiftOperator: (+i+(*i*i))
MathildaLib.ReplaceOperator: (+i+(*-1))
MathildaLib.LiftOperator: (+i+-1)
MathildaLib.SwapOperator: (+-1+i)
========
MathildaLib.SwapOperator: (+-1+i)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*1)+(*i*i)))
MathildaLib.MultiplyOneOperator: (+(*i)+(*i*i))
MathildaLib.LiftOperator: (+i+(*i*i))
MathildaLib.ReplaceOperator: (+i+(*-1))
MathildaLib.LiftOperator: (+i+-1)
MathildaLib.SwapOperator: (+-1+i)
MathildaLib.SwapOperator: (+(*-1)+i)
MathildaLib.SwapOperator: (+(*i*i)+i)
MathildaLib.ReplaceOperator: (+(*i)+(*-1))
MathildaLib.SwapOperator: (+(*-1)+(*i))
MathildaLib.LiftOperator: (+-1+(*i))
MathildaLib.SwapOperator: (+(*i)+-1)
MathildaLib.SwapOperator: (+(*i*i)+(*i))
MathildaLib.SwapOperator: (+(*1*i)+(*i*i))
MathildaLib.ReplaceOperator: (+(*1*i)+(*-1))
MathildaLib.SwapOperator: (+(*-1)+(*1*i))
MathildaLib.LiftOperator: (+-1+(*1*i))
MathildaLib.SwapOperator: (+-1+(*i*1))
MathildaLib.SwapOperator: (+(*i*1)+-1)
MathildaLib.SwapOperator: (+(*1*i)+-1)
MathildaLib.SwapOperator: (+(*-1)+(*i*1))
MathildaLib.SwapOperator: (+(*i*1)+(*-1))
MathildaLib.SwapOperator: (+(*i*1)+(*i*i))
MathildaLib.SwapOperator: (+(*i*i)+(*i*1))
MathildaLib.SwapOperator: (+(*i*i)+(*1*i))
MathildaLib.SwapOperator: (*i*(+i+1))
MathildaLib.MultiplyOperator: (*(+(*i*i)+(*i*1)))
MathildaLib.SwapOperator: (*(+i+1)*i)
MathildaLib.MultiplyOperator: (*(+(*i*i)+(*1*i)))
MathildaLib.SwapOperator: (*(+1+i)*i)
MathildaLib.MultiplyOperator: (*(+(*1*i)+(*i*i)))
========
MathildaLib.SwapOperator: (+-1+i)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestConjugate">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestCase">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestConjugate.TestCase () [0x0008e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestConjugate.cs:26 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*b)+(*i*c*i)))
MathildaLib.SwapOperator: (+(*b*i)+(*i*c*i))
MathildaLib.SwapOperator: (+(*b*i)+(*c*i*i))
MathildaLib.ReplaceOperator: (+(*b*i)+(*c*-1))
MathildaLib.SwapOperator: (+(*b*i)+(*-1*c))
MathildaLib.SwapOperator: (+(*-1*c)+(*b*i))
MathildaLib.NegativeProductOperator: (-(*c)+(*b*i))
MathildaLib.LiftOperator: (-c+(*b*i))
========
MathildaLib.MultiplyOperator: (*(+(*(-i)*b)+(+(*(-i)*c*(-i)))))
MathildaLib.LiftOperator: (+(*(-i)*b)+(*(-i)*c*(-i)))
MathildaLib.SwapOperator: (+(*b*(-i))+(*(-i)*c*(-i)))
MathildaLib.MultiplyOperator: (+(*(-(*b*i)))+(*(-i)*c*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-i)*c*(-i)))
after smart lift (+(*b*i)+(*(-i)*c*(-i)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestConjugate.TestCase () [0x0008e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestConjugate.cs:26 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*b)+(*i*c*i)))
MathildaLib.SwapOperator: (+(*b*i)+(*i*c*i))
MathildaLib.SwapOperator: (+(*b*i)+(*c*i*i))
MathildaLib.ReplaceOperator: (+(*b*i)+(*c*-1))
MathildaLib.SwapOperator: (+(*b*i)+(*-1*c))
MathildaLib.SwapOperator: (+(*-1*c)+(*b*i))
MathildaLib.NegativeProductOperator: (-(*c)+(*b*i))
MathildaLib.LiftOperator: (-c+(*b*i))
========
MathildaLib.MultiplyOperator: (*(+(*(-i)*b)+(+(*(-i)*c*(-i)))))
MathildaLib.LiftOperator: (+(*(-i)*b)+(*(-i)*c*(-i)))
MathildaLib.SwapOperator: (+(*b*(-i))+(*(-i)*c*(-i)))
MathildaLib.MultiplyOperator: (+(*(-(*b*i)))+(*(-i)*c*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-i)*c*(-i)))
after smart lift (+(*b*i)+(*(-i)*c*(-i)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestConjugate.TestCase () [0x0008e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestConjugate.cs:26 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*b)+(*i*c*i)))
MathildaLib.SwapOperator: (+(*b*i)+(*i*c*i))
MathildaLib.SwapOperator: (+(*b*i)+(*c*i*i))
MathildaLib.ReplaceOperator: (+(*b*i)+(*c*-1))
MathildaLib.SwapOperator: (+(*b*i)+(*-1*c))
MathildaLib.SwapOperator: (+(*-1*c)+(*b*i))
MathildaLib.NegativeProductOperator: (-(*c)+(*b*i))
MathildaLib.LiftOperator: (-c+(*b*i))
========
MathildaLib.MultiplyOperator: (*(+(*(-i)*b)+(+(*(-i)*c*(-i)))))
MathildaLib.LiftOperator: (+(*(-i)*b)+(*(-i)*c*(-i)))
MathildaLib.SwapOperator: (+(*b*(-i))+(*(-i)*c*(-i)))
MathildaLib.MultiplyOperator: (+(*(-(*b*i)))+(*(-i)*c*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-i)*c*(-i)))
after smart lift (+(*b*i)+(*(-i)*c*(-i)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001be] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:174 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.TestConjugate.TestCase () [0x0008e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestConjugate.cs:26 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*i*b)+(*i*c*i)))
MathildaLib.SwapOperator: (+(*b*i)+(*i*c*i))
MathildaLib.SwapOperator: (+(*b*i)+(*c*i*i))
MathildaLib.ReplaceOperator: (+(*b*i)+(*c*-1))
MathildaLib.SwapOperator: (+(*b*i)+(*-1*c))
MathildaLib.SwapOperator: (+(*-1*c)+(*b*i))
MathildaLib.NegativeProductOperator: (-(*c)+(*b*i))
MathildaLib.LiftOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (-c+(*i*b))
MathildaLib.SwapOperator: (+(*i*b)-c)
MathildaLib.SwapOperator: (+(*b*i)-c)
MathildaLib.SwapOperator: (-(*c)+(*i*b))
MathildaLib.SwapOperator: (+(*i*b)-(*c))
MathildaLib.SwapOperator: (+(*b*i)-(*c))
MathildaLib.SwapOperator: (+(*-1*c)+(*i*b))
MathildaLib.SwapOperator: (+(*c*-1)+(*i*b))
MathildaLib.SwapOperator: (+(*c*-1)+(*b*i))
MathildaLib.SwapOperator: (+(*i*b)+(*c*-1))
MathildaLib.SwapOperator: (+(*i*b)+(*-1*c))
MathildaLib.NegativeVariableOperator: (+(*i*b)+(-c))
MathildaLib.SwapOperator: (+(-c)+(*i*b))
MathildaLib.SwapOperator: (+(-c)+(*b*i))
MathildaLib.SwapOperator: (+(*b*i)+(-c))
MathildaLib.SwapOperator: (+(*b*i)+(*i*i*c))
MathildaLib.SwapOperator: (+(*i*b)+(*i*i*c))
MathildaLib.SwapOperator: (+(*i*b)+(*c*i*i))
MathildaLib.SwapOperator: (+(*i*b)+(*i*c*i))
MathildaLib.SwapOperator: (+(*i*c*i)+(*i*b))
MathildaLib.SwapOperator: (+(*c*i*i)+(*i*b))
MathildaLib.SwapOperator: (+(*c*i*i)+(*b*i))
MathildaLib.SwapOperator: (+(*i*c*i)+(*b*i))
MathildaLib.SwapOperator: (+(*i*i*c)+(*b*i))
MathildaLib.SwapOperator: (+(*i*i*c)+(*i*b))
MathildaLib.SwapOperator: (*i*(+b+(*i*c)))
MathildaLib.MultiplyOperator: (*(+(*i*b)+(*i*i*c)))
MathildaLib.SwapOperator: (*i*(+(*i*c)+b))
MathildaLib.MultiplyOperator: (*(+(*i*i*c)+(*i*b)))
MathildaLib.SwapOperator: (*i*(+(*c*i)+b))
MathildaLib.MultiplyOperator: (*(+(*i*c*i)+(*i*b)))
MathildaLib.SwapOperator: (*(+(*c*i)+b)*i)
MathildaLib.MultiplyOperator: (*(+(*c*i*i)+(*b*i)))
MathildaLib.SwapOperator: (*(+b+(*c*i))*i)
MathildaLib.MultiplyOperator: (*(+(*b*i)+(*c*i*i)))
MathildaLib.SwapOperator: (*(+b+(*i*c))*i)
MathildaLib.MultiplyOperator: (*(+(*b*i)+(*i*c*i)))
MathildaLib.SwapOperator: (*(+(*i*c)+b)*i)
MathildaLib.MultiplyOperator: (*(+(*i*c*i)+(*b*i)))
========
MathildaLib.MultiplyOperator: (*(+(*(-i)*b)+(+(*(-i)*c*(-i)))))
MathildaLib.LiftOperator: (+(*(-i)*b)+(*(-i)*c*(-i)))
MathildaLib.SwapOperator: (+(*b*(-i))+(*(-i)*c*(-i)))
MathildaLib.MultiplyOperator: (+(*(-(*b*i)))+(*(-i)*c*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-i)*c*(-i)))
after smart lift (+(*b*i)+(*(-i)*c*(-i)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestDivide">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>17</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,07ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>17</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,07ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>17</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,56ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>10</Passed>
              <Errors>3</Errors>
              <Failures>4</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestDivide1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.5)
MathildaLib.MultiplyOneOperator: (/2)
MathildaLib.FixSignOperator: (*1*0.5)
MathildaLib.SwapOperator: (*0.5*1)
MathildaLib.SwapOperator: (/2*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a)))
MathildaLib.CancelVariableOperator: (+(*1)+(*2/a))
MathildaLib.LiftOperator: (+1+(*2/a))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a)))
MathildaLib.CancelVariableOperator: (+(*1)+(*2/a))
MathildaLib.LiftOperator: (+1+(*2/a))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a)))
MathildaLib.CancelVariableOperator: (+(*1)+(*2/a))
MathildaLib.LiftOperator: (+1+(*2/a))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a)))
MathildaLib.CancelVariableOperator: (+(*1)+(*2/a))
MathildaLib.LiftOperator: (+1+(*2/a))
MathildaLib.SwapOperator: (+1+(/a*2))
MathildaLib.SwapOperator: (+(/a*2)+1)
MathildaLib.SwapOperator: (+(*2/a)+1)
MathildaLib.SwapOperator: (+(*1)+(/a*2))
MathildaLib.SwapOperator: (+(/a*2)+(*1))
MathildaLib.SwapOperator: (+(*2/a)+(*1))
MathildaLib.SwapOperator: (+(*2/a)+(*a/a))
MathildaLib.SwapOperator: (+(*2/a)+(/a*a))
MathildaLib.SwapOperator: (+(/a*2)+(/a*a))
MathildaLib.SwapOperator: (+(/a*2)+(*a/a))
MathildaLib.SwapOperator: (+(*a/a)+(/a*2))
MathildaLib.SwapOperator: (+(*a/a)+(*2/a))
MathildaLib.SwapOperator: (+(/a*a)+(*2/a))
MathildaLib.SwapOperator: (+(/a*a)+(/a*2))
MathildaLib.SwapOperator: (/a*(+a+2))
MathildaLib.MultiplyOperator: (*(+(*a*a)+(*a*2)))
MathildaLib.SwapOperator: (+(*a*2)+(*a*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+(*a*a)+(*2*a))
MathildaLib.SwapOperator: (+(*a*a)+(*a*2))
MathildaLib.SwapOperator: (/a*(+2+a))
MathildaLib.MultiplyOperator: (*(+(*a*2)+(*a*a)))
MathildaLib.SwapOperator: (*(+2+a)/a)
MathildaLib.MultiplyOperator: (*(+(*2/a)+(*a/a)))
========
MathildaLib.SwapOperator: (+1+(/a*2))
MathildaLib.SwapOperator: (+(/a*2)+1)
MathildaLib.SwapOperator: (+(*2/a)+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001be] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:174 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestDivide.TestDivide11 () [0x00045] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*1)
MathildaLib.SwapOperator: (*(+2+a)/(+a+2))
MathildaLib.MultiplyOperator: (*(+(*2/(+a+2))+(*a/(+a+2))))
MathildaLib.SwapOperator: (+(*2/(+2+a))+(*a/(+a+2)))
MathildaLib.SwapOperator: (+(*2/(+2+a))+(*a/(+2+a)))
MathildaLib.SwapOperator: (+(*2/(+2+a))+(/(+2+a)*a))
MathildaLib.MultiplyOperator: (+(*2/(+2+a))+(*(+(*2*a)+(*a*a))))
before smart lift (+(*2/(+2+a))+(*(+(*2*a)+(*a*a))))
after smart lift (+(*2/(+2+a))+(*2*a)+(*a*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a))/2)
MathildaLib.MultiplyOperator: (*(+(*a/a/2)+(*2/a/2)))
MathildaLib.CancelVariableOperator: (+(*1/2)+(*2/a/2))
MathildaLib.ScalarProductOperator: (+(*0.5)+(*2/a/2))
MathildaLib.LiftOperator: (+0.5+(*2/a/2))
MathildaLib.ScalarProductOperator: (+0.5+(*1/a))
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
========
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a))/2)
MathildaLib.MultiplyOperator: (*(+(*a/a/2)+(*2/a/2)))
MathildaLib.CancelVariableOperator: (+(*1/2)+(*2/a/2))
MathildaLib.ScalarProductOperator: (+(*0.5)+(*2/a/2))
MathildaLib.LiftOperator: (+0.5+(*2/a/2))
MathildaLib.ScalarProductOperator: (+0.5+(*1/a))
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
========
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a))/2)
MathildaLib.MultiplyOperator: (*(+(*a/a/2)+(*2/a/2)))
MathildaLib.CancelVariableOperator: (+(*1/2)+(*2/a/2))
MathildaLib.ScalarProductOperator: (+(*0.5)+(*2/a/2))
MathildaLib.LiftOperator: (+0.5+(*2/a/2))
MathildaLib.ScalarProductOperator: (+0.5+(*1/a))
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
========
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 1,21ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/a)+(*2/a))/2)
MathildaLib.MultiplyOperator: (*(+(*a/a/2)+(*2/a/2)))
MathildaLib.CancelVariableOperator: (+(*1/2)+(*2/a/2))
MathildaLib.ScalarProductOperator: (+(*0.5)+(*2/a/2))
MathildaLib.LiftOperator: (+0.5+(*2/a/2))
MathildaLib.ScalarProductOperator: (+0.5+(*1/a))
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(/a)+0.5)
MathildaLib.SwapOperator: (+0.5+(/a*1))
MathildaLib.SwapOperator: (+(/a*1)+0.5)
MathildaLib.SwapOperator: (+(*1/a)+0.5)
MathildaLib.SwapOperator: (+0.5+(*2/2/a))
MathildaLib.FixSignOperator: (+0.5+(*2*0.5/a))
MathildaLib.SwapOperator: (+0.5+(*0.5*2/a))
MathildaLib.SwapOperator: (+0.5+(*0.5/a*2))
MathildaLib.SwapOperator: (+0.5+(*2/a*0.5))
MathildaLib.SwapOperator: (+0.5+(/a*2*0.5))
MathildaLib.SwapOperator: (+0.5+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+0.5)
MathildaLib.SwapOperator: (+(*0.5/a*2)+0.5)
MathildaLib.SwapOperator: (+(*0.5*2/a)+0.5)
MathildaLib.SwapOperator: (+(*2*0.5/a)+0.5)
MathildaLib.SwapOperator: (+(*2/a*0.5)+0.5)
MathildaLib.SwapOperator: (+(/a*2*0.5)+0.5)
MathildaLib.SwapOperator: (+0.5+(/2*2/a))
MathildaLib.MultiplyOperator: (+0.5+(/4/a))
MathildaLib.FixSignOperator: (+0.5+(*0.25/a))
MathildaLib.SwapOperator: (+0.5+(/a*0.25))
MathildaLib.SwapOperator: (+(/a*0.25)+0.5)
MathildaLib.SwapOperator: (+(*0.25/a)+0.5)
MathildaLib.SwapOperator: (+0.5+(/a/4))
MathildaLib.SwapOperator: (+(/a/4)+0.5)
MathildaLib.SwapOperator: (+(/4/a)+0.5)
MathildaLib.SwapOperator: (+0.5+(/2/a*2))
MathildaLib.SwapOperator: (+0.5+(/a/2*2))
MathildaLib.SwapOperator: (+0.5+(/a*2/2))
MathildaLib.SwapOperator: (+(/a*2/2)+0.5)
MathildaLib.SwapOperator: (+(*2/a/2)+0.5)
MathildaLib.SwapOperator: (+(*2/2/a)+0.5)
MathildaLib.SwapOperator: (+(/2*2/a)+0.5)
MathildaLib.SwapOperator: (+(/2/a*2)+0.5)
MathildaLib.SwapOperator: (+(/a/2*2)+0.5)
MathildaLib.ScalarProductOperator: (+(*0.5)+(*1/a))
MathildaLib.MultiplyOneOperator: (+(*0.5)+(/a))
MathildaLib.SwapOperator: (+(/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/a*1))
MathildaLib.SwapOperator: (+(/a*1)+(*0.5))
MathildaLib.SwapOperator: (+(*1/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(*2/2/a))
MathildaLib.FixSignOperator: (+(*0.5)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*0.5)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*0.5))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/2*2/a))
MathildaLib.MultiplyOperator: (+(*0.5)+(/4/a))
MathildaLib.FixSignOperator: (+(*0.5)+(*0.25/a))
MathildaLib.SwapOperator: (+(*0.5)+(/a*0.25))
MathildaLib.SwapOperator: (+(/a*0.25)+(*0.5))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/a/4))
MathildaLib.SwapOperator: (+(/a/4)+(*0.5))
MathildaLib.SwapOperator: (+(/4/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/2/a*2))
MathildaLib.SwapOperator: (+(*0.5)+(/a/2*2))
MathildaLib.SwapOperator: (+(*0.5)+(/a*2/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(*0.5))
MathildaLib.SwapOperator: (+(*2/a/2)+(*0.5))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5))
MathildaLib.SwapOperator: (+(/2*2/a)+(*0.5))
MathildaLib.SwapOperator: (+(/2/a*2)+(*0.5))
MathildaLib.SwapOperator: (+(/a/2*2)+(*0.5))
MathildaLib.MultiplyOneOperator: (+(/2)+(*2/a/2))
MathildaLib.ScalarProductOperator: (+(/2)+(*1/a))
MathildaLib.MultiplyOneOperator: (+(/2)+(/a))
MathildaLib.SwapOperator: (+(/a)+(/2))
MathildaLib.SwapOperator: (+(/2)+(/a*1))
MathildaLib.SwapOperator: (+(/a*1)+(/2))
MathildaLib.SwapOperator: (+(*1/a)+(/2))
MathildaLib.SwapOperator: (+(/2)+(*2/2/a))
MathildaLib.FixSignOperator: (+(/2)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/2)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/2)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/2)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/2)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/2))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/2))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/2))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/2))
MathildaLib.SwapOperator: (+(/2)+(/2*2/a))
MathildaLib.MultiplyOperator: (+(/2)+(/4/a))
MathildaLib.FixSignOperator: (+(/2)+(*0.25/a))
MathildaLib.SwapOperator: (+(/2)+(/a*0.25))
MathildaLib.SwapOperator: (+(/a*0.25)+(/2))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2))
MathildaLib.SwapOperator: (+(/2)+(/a/4))
MathildaLib.SwapOperator: (+(/a/4)+(/2))
MathildaLib.SwapOperator: (+(/4/a)+(/2))
MathildaLib.SwapOperator: (+(/2)+(/2/a*2))
MathildaLib.SwapOperator: (+(/2)+(/a/2*2))
MathildaLib.SwapOperator: (+(/2)+(/a*2/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(/2))
MathildaLib.SwapOperator: (+(*2/a/2)+(/2))
MathildaLib.SwapOperator: (+(*2/2/a)+(/2))
MathildaLib.SwapOperator: (+(/2*2/a)+(/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(/2))
MathildaLib.SwapOperator: (+(/a/2*2)+(/2))
MathildaLib.FixSignOperator: (+(*1*0.5)+(*2/a/2))
MathildaLib.SwapOperator: (+(*0.5*1)+(*2/a/2))
MathildaLib.ScalarProductOperator: (+(*0.5*1)+(*1/a))
MathildaLib.MultiplyOneOperator: (+(*0.5*1)+(/a))
MathildaLib.SwapOperator: (+(/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*1))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a*1))
MathildaLib.SwapOperator: (+(*1*0.5)+(*1/a))
MathildaLib.SwapOperator: (+(*1/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(*1/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*1)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*1)+(*1*0.5))
MathildaLib.SwapOperator: (+(*0.5*1)+(*2/2/a))
MathildaLib.FixSignOperator: (+(*0.5*1)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*0.5*1)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*1)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*0.5*1)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*1*0.5)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*1*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*1*0.5)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*1*0.5)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*1*0.5))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*0.5*1))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*1*0.5))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*1*0.5))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*1*0.5))
MathildaLib.SwapOperator: (+(*0.5*1)+(/2*2/a))
MathildaLib.MultiplyOperator: (+(*0.5*1)+(/4/a))
MathildaLib.FixSignOperator: (+(*0.5*1)+(*0.25/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*0.25/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(*1*0.5)+(*0.25/a))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a*0.25))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*0.25))
MathildaLib.SwapOperator: (+(/a*0.25)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*0.25)+(*1*0.5))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a/4))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a/4))
MathildaLib.SwapOperator: (+(*1*0.5)+(/4/a))
MathildaLib.SwapOperator: (+(/4/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(/4/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a/4)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a/4)+(*1*0.5))
MathildaLib.SwapOperator: (+(*0.5*1)+(/2/a*2))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a/2*2))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*2/2))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a*2/2))
MathildaLib.SwapOperator: (+(*1*0.5)+(/2*2/a))
MathildaLib.SwapOperator: (+(*1*0.5)+(*2/2/a))
MathildaLib.SwapOperator: (+(*1*0.5)+(/a/2*2))
MathildaLib.SwapOperator: (+(*1*0.5)+(/2/a*2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*1*0.5))
MathildaLib.SwapOperator: (+(*2/a/2)+(*1*0.5))
MathildaLib.SwapOperator: (+(*2/2/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*2/a/2)+(*0.5*1))
MathildaLib.SwapOperator: (+(/2/a*2)+(*0.5*1))
MathildaLib.SwapOperator: (+(/2*2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/2*2/a)+(*1*0.5))
MathildaLib.SwapOperator: (+(/a*2/2)+(*1*0.5))
MathildaLib.SwapOperator: (+(/a*2/2)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a/2*2)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a/2*2)+(*1*0.5))
MathildaLib.ScalarProductOperator: (+(*1/2)+(*1/a))
MathildaLib.MultiplyOneOperator: (+(*1/2)+(/a))
MathildaLib.SwapOperator: (+(/a)+(*1/2))
MathildaLib.SwapOperator: (+(/a)+(/2*1))
MathildaLib.SwapOperator: (+(/2*1)+(/a))
MathildaLib.SwapOperator: (+(*1/2)+(/a*1))
MathildaLib.SwapOperator: (+(/2*1)+(/a*1))
MathildaLib.SwapOperator: (+(/2*1)+(*1/a))
MathildaLib.SwapOperator: (+(*1/a)+(/2*1))
MathildaLib.SwapOperator: (+(*1/a)+(*1/2))
MathildaLib.SwapOperator: (+(/a*1)+(*1/2))
MathildaLib.SwapOperator: (+(/a*1)+(/2*1))
MathildaLib.SwapOperator: (+(*1/2)+(*2/2/a))
MathildaLib.FixSignOperator: (+(*1/2)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*1/2)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*1/2)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*1/2)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*1/2)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*1/2)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/2*1)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/2*1)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/2*1)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2*1)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/2*1)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/2*1)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/2*1))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/2*1))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*1/2))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*1/2))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/2*1))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/2*1))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/2*1))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*1/2))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*1/2))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*1/2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*1/2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2*1))
MathildaLib.SwapOperator: (+(*1/2)+(/2*2/a))
MathildaLib.MultiplyOperator: (+(*1/2)+(/4/a))
MathildaLib.FixSignOperator: (+(*1/2)+(*0.25/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*1/2))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*1))
MathildaLib.SwapOperator: (+(/2*1)+(*0.25/a))
MathildaLib.SwapOperator: (+(/2*1)+(/a*0.25))
MathildaLib.SwapOperator: (+(*1/2)+(/a*0.25))
MathildaLib.SwapOperator: (+(/a*0.25)+(*1/2))
MathildaLib.SwapOperator: (+(/a*0.25)+(/2*1))
MathildaLib.SwapOperator: (+(*1/2)+(/a/4))
MathildaLib.SwapOperator: (+(/2*1)+(/a/4))
MathildaLib.SwapOperator: (+(/2*1)+(/4/a))
MathildaLib.SwapOperator: (+(/4/a)+(/2*1))
MathildaLib.SwapOperator: (+(/4/a)+(*1/2))
MathildaLib.SwapOperator: (+(/a/4)+(*1/2))
MathildaLib.SwapOperator: (+(/a/4)+(/2*1))
MathildaLib.SwapOperator: (+(*1/2)+(/2/a*2))
MathildaLib.SwapOperator: (+(*1/2)+(/a/2*2))
MathildaLib.SwapOperator: (+(*1/2)+(/a*2/2))
MathildaLib.SwapOperator: (+(/2*1)+(/a*2/2))
MathildaLib.SwapOperator: (+(/2*1)+(*2/a/2))
MathildaLib.SwapOperator: (+(/2*1)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*1)+(/2*2/a))
MathildaLib.SwapOperator: (+(/2*1)+(/2/a*2))
MathildaLib.SwapOperator: (+(/2*1)+(/a/2*2))
MathildaLib.SwapOperator: (+(/a/2*2)+(/2*1))
MathildaLib.SwapOperator: (+(*2/2/a)+(/2*1))
MathildaLib.SwapOperator: (+(*2/2/a)+(*1/2))
MathildaLib.SwapOperator: (+(*2/a/2)+(*1/2))
MathildaLib.SwapOperator: (+(*2/a/2)+(/2*1))
MathildaLib.SwapOperator: (+(/2/a*2)+(/2*1))
MathildaLib.SwapOperator: (+(/2*2/a)+(/2*1))
MathildaLib.SwapOperator: (+(/2*2/a)+(*1/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*1/2))
MathildaLib.SwapOperator: (+(/a/2*2)+(*1/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(*1/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(/2*1))
MathildaLib.SwapOperator: (+(*2/a/2)+(*a/a/2))
MathildaLib.ScalarProductOperator: (+(*1/a)+(*a/a/2))
MathildaLib.MultiplyOneOperator: (+(/a)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a)+(/2/a*a))
MathildaLib.FixSignOperator: (+(/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a))
MathildaLib.SwapOperator: (+(/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a))
MathildaLib.SwapOperator: (+(*1/a)+(/2/a*a))
MathildaLib.FixSignOperator: (+(*1/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*1/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*1/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*1/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*1/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(*1/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*1)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*1)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a*1)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*1)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a*1)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a*1)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a*1))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a*1))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*1/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*1/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a*1))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a*1))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a*1))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*1/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*1/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*1/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*1/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a*1))
MathildaLib.SwapOperator: (+(*1/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*1/a)+(*a/2/a))
MathildaLib.SwapOperator: (+(*1/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(*1/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*1)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*1)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*1)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*1)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a*1)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*1)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*1))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a*1))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a*1))
MathildaLib.SwapOperator: (+(/2*a/a)+(*1/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(*1/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(*1/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*1/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a*1))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a*1))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a*1))
MathildaLib.SwapOperator: (+(/a*a/2)+(*1/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*1/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*a/a/2))
MathildaLib.FixSignOperator: (+(*2*0.5/a)+(*a/a/2))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*a/a/2))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/2/a*a))
MathildaLib.FixSignOperator: (+(*0.5*2/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*a/2/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/a*a/2))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a/2/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/a/2*a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/a/2*a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/2/a*a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*a/2/a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*a/2/a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/2*a/a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/2/a*a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*a/a/2))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/2/a*a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/2/a*a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/2/a*a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(*a/a/2)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(*a/a/2)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(*a/a/2)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/a/2*a)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a*2*0.5))
MathildaLib.SwapOperator: (+(/a*a/2)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(*0.5/a*2))
MathildaLib.SwapOperator: (+(/a*a/2)+(*2/a*0.5))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*2/2/a)+(/2/a*a))
MathildaLib.FixSignOperator: (+(*2/2/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*2/2/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*2/a/2))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/2/a*2))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/2*2/a))
MathildaLib.MultiplyOperator: (+(*0.5*a/a)+(/4/a))
MathildaLib.SwapOperator: (+(/4/a)+(*0.5*a/a))
MathildaLib.FixSignOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*0.25/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a*0.25)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a*0.25)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a*0.25)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a*0.25)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a*0.25))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a*0.25))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a*0.25))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*0.25/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a*0.25))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a*0.25))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a*0.25))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/4/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/4/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/4/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/4/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/4/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a/4)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a/4)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a/4)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a/4)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a/4)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a/4)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a/4))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a/4))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a/4))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a/4))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/4/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/4/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/4/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/4/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/4/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a/4))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a/4))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a*2/2))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a/2*2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a/2*2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/2/a*2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*2/a/2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/a*2/2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/2*2/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/2*2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*2/2/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(*2/2/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*2/a/2)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*2/a/2)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(*2/a/2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/a/2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*2/a/2)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*2/a/2)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/2/a*2)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/2*2/a)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/2*2/a)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/2*2/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/2/a*2)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/2/a*2))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/2/a*2))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2/a/2))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/2*2/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a*2/2))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(/a/2*2))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a/2*2))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*2/a/2))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a*2/2))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/2*2/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/2*2/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/2*2/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*2/a/2))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/2/a*2))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a/2*2))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a*2/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a*2/2)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a/2*2)+(/a*a*0.5))
MathildaLib.SwapOperator: (+(/a/2*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(*0.5/a*a))
MathildaLib.SwapOperator: (+(/a/2*2)+(*a/a*0.5))
MathildaLib.SwapOperator: (+(/a/2*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a/2*2))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*2/a/2))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/2/a*2))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(/a*2/2))
MathildaLib.SwapOperator: (+(*2/2/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*a/2/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(*2/2/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2/a/2)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2/a/2)+(/2*a/a))
MathildaLib.SwapOperator: (+(*2/a/2)+(/2/a*a))
MathildaLib.SwapOperator: (+(*2/a/2)+(/a/2*a))
MathildaLib.SwapOperator: (+(*2/a/2)+(*a/2/a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/2/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(*a/2/a))
MathildaLib.MultiplyOperator: (+(/4/a)+(*a/2/a))
MathildaLib.FixSignOperator: (+(*0.25/a)+(*a/2/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2/a*a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*a/a/2))
MathildaLib.SwapOperator: (+(*0.25/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*0.25/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a*0.25)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a*0.25)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.25)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a*0.25)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a*0.25))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a*0.25))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a*0.25))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a*0.25))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a*0.25))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*0.25))
MathildaLib.SwapOperator: (+(/4/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(/4/a)+(/2/a*a))
MathildaLib.SwapOperator: (+(/4/a)+(*a/a/2))
MathildaLib.SwapOperator: (+(/4/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(/4/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a/4)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a/4)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a/4)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a/4)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a/4)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a/4)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a/4))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a/4))
MathildaLib.SwapOperator: (+(/2*a/a)+(/4/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(/4/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a/4))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a/4))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a/4))
MathildaLib.SwapOperator: (+(*a/2/a)+(/4/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(/4/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(/4/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/4/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a/4))
MathildaLib.SwapOperator: (+(/2*2/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(/2/a*a))
MathildaLib.SwapOperator: (+(/2*2/a)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2*2/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(/2*2/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(/2/a*2)+(/a/2*a))
MathildaLib.SwapOperator: (+(/2/a*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/2/a*2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/2/a*2))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/a/2))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/2*2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a*2/2))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a/2*2))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a/2*2))
MathildaLib.SwapOperator: (+(/2/a*a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(*2/a/2))
MathildaLib.SwapOperator: (+(/2/a*a)+(/2/a*2))
MathildaLib.SwapOperator: (+(/2/a*a)+(/2*2/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(/a*2/2))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a*2/2))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a*2/2))
MathildaLib.SwapOperator: (+(*a/2/a)+(*2/a/2))
MathildaLib.SwapOperator: (+(*a/2/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(/2*2/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(/2/a*2))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a/2*2))
MathildaLib.SwapOperator: (+(*a/a/2)+(/a/2*2))
MathildaLib.SwapOperator: (+(*a/a/2)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(*2/a/2))
MathildaLib.SwapOperator: (+(*a/a/2)+(/2/a*2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a/2*2)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(/a*a/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a/2*2)+(/a/2*a))
MathildaLib.SwapOperator: (+(/a/2*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a/2*2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a/2*2))
MathildaLib.SwapOperator: (+(/a/2*a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*2/a/2))
MathildaLib.SwapOperator: (+(/a/2*a)+(/2/a*2))
MathildaLib.SwapOperator: (+(/a/2*a)+(/2*2/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*2/2))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a*2/2))
MathildaLib.SwapOperator: (+(/a*a/2)+(*2/a/2))
MathildaLib.SwapOperator: (+(/a*a/2)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(/2*2/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(/2*2/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(/2/a*2))
MathildaLib.SwapOperator: (+(/a*a/2)+(/a/2*2))
MathildaLib.SwapOperator: (/2*(+(*a/a)+(*2/a)))
MathildaLib.MultiplyOperator: (*(+(*2*a/a)+(*2*2/a)))
MathildaLib.CancelVariableOperator: (+(*2*1)+(*2*2/a))
MathildaLib.MultiplyOneOperator: (+(*2)+(*2*2/a))
MathildaLib.LiftOperator: (+2+(*2*2/a))
MathildaLib.ScalarProductOperator: (+2+(*4/a))
MathildaLib.SwapOperator: (+2+(/a*4))
MathildaLib.SwapOperator: (+(/a*4)+2)
MathildaLib.SwapOperator: (+(*4/a)+2)
MathildaLib.SwapOperator: (+2+(*2/a*2))
MathildaLib.SwapOperator: (+2+(/a*2*2))
MathildaLib.SwapOperator: (+(/a*2*2)+2)
MathildaLib.SwapOperator: (+(*2*2/a)+2)
MathildaLib.SwapOperator: (+(*2/a*2)+2)
MathildaLib.ScalarProductOperator: (+(*2)+(*4/a))
MathildaLib.SwapOperator: (+(*2)+(/a*4))
MathildaLib.SwapOperator: (+(/a*4)+(*2))
MathildaLib.SwapOperator: (+(*4/a)+(*2))
MathildaLib.SwapOperator: (+(*2)+(*2/a*2))
MathildaLib.SwapOperator: (+(*2)+(/a*2*2))
MathildaLib.SwapOperator: (+(/a*2*2)+(*2))
MathildaLib.SwapOperator: (+(*2*2/a)+(*2))
MathildaLib.SwapOperator: (+(*2/a*2)+(*2))
MathildaLib.SwapOperator: (+(*1*2)+(*2*2/a))
MathildaLib.ScalarProductOperator: (+(*1*2)+(*4/a))
MathildaLib.SwapOperator: (+(*1*2)+(/a*4))
MathildaLib.SwapOperator: (+(*2*1)+(/a*4))
MathildaLib.SwapOperator: (+(*2*1)+(*4/a))
MathildaLib.SwapOperator: (+(*4/a)+(*2*1))
MathildaLib.SwapOperator: (+(*4/a)+(*1*2))
MathildaLib.SwapOperator: (+(/a*4)+(*1*2))
MathildaLib.SwapOperator: (+(/a*4)+(*2*1))
MathildaLib.SwapOperator: (+(*1*2)+(*2/a*2))
MathildaLib.SwapOperator: (+(*1*2)+(/a*2*2))
MathildaLib.SwapOperator: (+(*2*1)+(/a*2*2))
MathildaLib.SwapOperator: (+(*2*1)+(*2/a*2))
MathildaLib.SwapOperator: (+(*2/a*2)+(*2*1))
MathildaLib.SwapOperator: (+(*2*2/a)+(*2*1))
MathildaLib.SwapOperator: (+(*2*2/a)+(*1*2))
MathildaLib.SwapOperator: (+(*2/a*2)+(*1*2))
MathildaLib.SwapOperator: (+(/a*2*2)+(*1*2))
MathildaLib.SwapOperator: (+(/a*2*2)+(*2*1))
MathildaLib.SwapOperator: (+(*2*2/a)+(*2*a/a))
MathildaLib.ScalarProductOperator: (+(*4/a)+(*2*a/a))
MathildaLib.SwapOperator: (+(*4/a)+(*2/a*a))
MathildaLib.SwapOperator: (+(*4/a)+(*a/a*2))
MathildaLib.SwapOperator: (+(*4/a)+(*a*2/a))
MathildaLib.SwapOperator: (+(*4/a)+(/a*2*a))
MathildaLib.SwapOperator: (+(*4/a)+(/a*a*2))
MathildaLib.SwapOperator: (+(/a*4)+(/a*a*2))
MathildaLib.SwapOperator: (+(/a*4)+(*2*a/a))
MathildaLib.SwapOperator: (+(/a*4)+(*2/a*a))
MathildaLib.SwapOperator: (+(/a*4)+(*a/a*2))
MathildaLib.SwapOperator: (+(/a*4)+(*a*2/a))
MathildaLib.SwapOperator: (+(/a*4)+(/a*2*a))
MathildaLib.SwapOperator: (+(/a*2*a)+(/a*4))
MathildaLib.SwapOperator: (+(*2/a*a)+(/a*4))
MathildaLib.SwapOperator: (+(*2*a/a)+(/a*4))
MathildaLib.SwapOperator: (+(*2*a/a)+(*4/a))
MathildaLib.SwapOperator: (+(*2/a*a)+(*4/a))
MathildaLib.SwapOperator: (+(*a/a*2)+(*4/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*4/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(/a*4))
MathildaLib.SwapOperator: (+(*a/a*2)+(/a*4))
MathildaLib.SwapOperator: (+(/a*a*2)+(/a*4))
MathildaLib.SwapOperator: (+(/a*a*2)+(*4/a))
MathildaLib.SwapOperator: (+(/a*2*a)+(*4/a))
MathildaLib.SwapOperator: (+(*2*2/a)+(*2/a*a))
MathildaLib.SwapOperator: (+(*2*2/a)+(*a/a*2))
MathildaLib.SwapOperator: (+(*2*2/a)+(*a*2/a))
MathildaLib.SwapOperator: (+(*2*2/a)+(/a*2*a))
MathildaLib.SwapOperator: (+(*2*2/a)+(/a*a*2))
MathildaLib.SwapOperator: (+(*2/a*2)+(/a*a*2))
MathildaLib.SwapOperator: (+(*2/a*2)+(*2*a/a))
MathildaLib.SwapOperator: (+(*2*a/a)+(*2/a*2))
MathildaLib.SwapOperator: (+(*2*a/a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*2*a/a)+(/a*2*2))
MathildaLib.SwapOperator: (+(*2/a*a)+(/a*2*2))
MathildaLib.SwapOperator: (+(*2/a*a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*2/a*a)+(*2/a*2))
MathildaLib.SwapOperator: (+(*2/a*2)+(*2/a*a))
MathildaLib.SwapOperator: (+(*2/a*2)+(*a/a*2))
MathildaLib.SwapOperator: (+(*2/a*2)+(*a*2/a))
MathildaLib.SwapOperator: (+(*2/a*2)+(/a*2*a))
MathildaLib.SwapOperator: (+(/a*2*2)+(/a*2*a))
MathildaLib.SwapOperator: (+(/a*2*2)+(*2/a*a))
MathildaLib.SwapOperator: (+(/a*2*2)+(*2*a/a))
MathildaLib.SwapOperator: (+(/a*2*2)+(*a*2/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(/a*2*2))
MathildaLib.SwapOperator: (+(*a*2/a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*2/a*2))
MathildaLib.SwapOperator: (+(*a/a*2)+(*2/a*2))
MathildaLib.SwapOperator: (+(*a/a*2)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a/a*2)+(/a*2*2))
MathildaLib.SwapOperator: (+(/a*2*2)+(*a/a*2))
MathildaLib.SwapOperator: (+(/a*2*2)+(/a*a*2))
MathildaLib.SwapOperator: (+(/a*a*2)+(/a*2*2))
MathildaLib.SwapOperator: (+(/a*2*a)+(/a*2*2))
MathildaLib.SwapOperator: (+(/a*2*a)+(*2*2/a))
MathildaLib.SwapOperator: (+(/a*2*a)+(*2/a*2))
MathildaLib.SwapOperator: (+(/a*a*2)+(*2/a*2))
MathildaLib.SwapOperator: (+(/a*a*2)+(*2*2/a))
MathildaLib.FixSignOperator: (*0.5*(+(*a/a)+(*2/a)))
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(*0.5*2/a)))
MathildaLib.CancelVariableOperator: (*0.5*(+(*1)+(*2/a)))
MathildaLib.MultiplyOperator: (*(+(*0.5*1)+(*0.5*2/a)))
MathildaLib.LiftOperator: (*0.5*(+1+(*2/a)))
MathildaLib.SwapOperator: (*0.5*(+1+(/a*2)))
MathildaLib.MultiplyOperator: (*(+(*0.5*1)+(*0.5/a*2)))
MathildaLib.SwapOperator: (*0.5*(+(/a*2)+1))
MathildaLib.MultiplyOperator: (*(+(*0.5/a*2)+(*0.5*1)))
MathildaLib.SwapOperator: (*0.5*(+(*2/a)+1))
MathildaLib.MultiplyOperator: (*(+(*0.5*2/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*2/a)+1)*0.5)
MathildaLib.MultiplyOperator: (*(+(*2/a*0.5)+(*1*0.5)))
MathildaLib.SwapOperator: (*(+1+(*2/a))*0.5)
MathildaLib.MultiplyOperator: (*(+(*1*0.5)+(*2/a*0.5)))
MathildaLib.SwapOperator: (*(+1+(/a*2))*0.5)
MathildaLib.MultiplyOperator: (*(+(*1*0.5)+(/a*2*0.5)))
MathildaLib.SwapOperator: (*(+(/a*2)+1)*0.5)
MathildaLib.MultiplyOperator: (*(+(/a*2*0.5)+(*1*0.5)))
MathildaLib.SwapOperator: (*0.5*(+(*1)+(/a*2)))
MathildaLib.SwapOperator: (*0.5*(+(/a*2)+(*1)))
MathildaLib.SwapOperator: (*0.5*(+(*2/a)+(*1)))
MathildaLib.SwapOperator: (*(+(*2/a)+(*1))*0.5)
MathildaLib.SwapOperator: (*(+(*1)+(*2/a))*0.5)
MathildaLib.SwapOperator: (*(+(*1)+(/a*2))*0.5)
MathildaLib.SwapOperator: (*(+(/a*2)+(*1))*0.5)
MathildaLib.SwapOperator: (*0.5*(+(*2/a)+(*a/a)))
MathildaLib.MultiplyOperator: (*(+(*0.5*2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*0.5*(+(*2/a)+(/a*a)))
MathildaLib.MultiplyOperator: (*(+(*0.5*2/a)+(*0.5/a*a)))
MathildaLib.SwapOperator: (*0.5*(+(/a*2)+(/a*a)))
MathildaLib.MultiplyOperator: (*(+(*0.5/a*2)+(*0.5/a*a)))
MathildaLib.SwapOperator: (*0.5*(+(/a*2)+(*a/a)))
MathildaLib.MultiplyOperator: (*(+(*0.5/a*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*0.5*(+(*a/a)+(/a*2)))
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(*0.5/a*2)))
MathildaLib.SwapOperator: (*0.5*(+(/a*a)+(/a*2)))
MathildaLib.MultiplyOperator: (*(+(*0.5/a*a)+(*0.5/a*2)))
MathildaLib.SwapOperator: (*0.5*(+(/a*a)+(*2/a)))
MathildaLib.MultiplyOperator: (*(+(*0.5/a*a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/a*a)+(*2/a))*0.5)
MathildaLib.MultiplyOperator: (*(+(/a*a*0.5)+(*2/a*0.5)))
MathildaLib.SwapOperator: (*(+(*2/a)+(/a*a))*0.5)
MathildaLib.MultiplyOperator: (*(+(*2/a*0.5)+(/a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*2/a)+(*a/a))*0.5)
MathildaLib.MultiplyOperator: (*(+(*2/a*0.5)+(*a/a*0.5)))
MathildaLib.SwapOperator: (*(+(*a/a)+(*2/a))*0.5)
MathildaLib.MultiplyOperator: (*(+(*a/a*0.5)+(*2/a*0.5)))
MathildaLib.SwapOperator: (*(+(*a/a)+(/a*2))*0.5)
MathildaLib.MultiplyOperator: (*(+(*a/a*0.5)+(/a*2*0.5)))
MathildaLib.SwapOperator: (*(+(/a*2)+(*a/a))*0.5)
MathildaLib.MultiplyOperator: (*(+(/a*2*0.5)+(*a/a*0.5)))
MathildaLib.SwapOperator: (*(+(/a*2)+(/a*a))*0.5)
MathildaLib.MultiplyOperator: (*(+(/a*2*0.5)+(/a*a*0.5)))
MathildaLib.SwapOperator: (*(+(/a*a)+(/a*2))*0.5)
MathildaLib.MultiplyOperator: (*(+(/a*a*0.5)+(/a*2*0.5)))
MathildaLib.CancelVariableOperator: (/2*(+(*1)+(*2/a)))
MathildaLib.MultiplyOperator: (*(+(*2*1)+(*2*2/a)))
MathildaLib.LiftOperator: (/2*(+1+(*2/a)))
MathildaLib.SwapOperator: (/2*(+1+(/a*2)))
MathildaLib.MultiplyOperator: (*(+(*2*1)+(*2/a*2)))
MathildaLib.SwapOperator: (/2*(+(/a*2)+1))
MathildaLib.MultiplyOperator: (*(+(*2/a*2)+(*2*1)))
MathildaLib.SwapOperator: (/2*(+(*2/a)+1))
MathildaLib.MultiplyOperator: (*(+(*2*2/a)+(*2*1)))
MathildaLib.SwapOperator: (*(+(*2/a)+1)/2)
MathildaLib.MultiplyOperator: (*(+(*2/a/2)+(*1/2)))
MathildaLib.SwapOperator: (*(+1+(*2/a))/2)
MathildaLib.MultiplyOperator: (*(+(*1/2)+(*2/a/2)))
MathildaLib.SwapOperator: (*(+1+(/a*2))/2)
MathildaLib.MultiplyOperator: (*(+(*1/2)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(/a*2)+1)/2)
MathildaLib.MultiplyOperator: (*(+(/a*2/2)+(*1/2)))
MathildaLib.SwapOperator: (/2*(+(*1)+(/a*2)))
MathildaLib.SwapOperator: (/2*(+(/a*2)+(*1)))
MathildaLib.SwapOperator: (/2*(+(*2/a)+(*1)))
MathildaLib.SwapOperator: (*(+(*2/a)+(*1))/2)
MathildaLib.SwapOperator: (*(+(*1)+(*2/a))/2)
MathildaLib.SwapOperator: (*(+(*1)+(/a*2))/2)
MathildaLib.SwapOperator: (*(+(/a*2)+(*1))/2)
MathildaLib.SwapOperator: (/2*(+(*2/a)+(*a/a)))
MathildaLib.MultiplyOperator: (*(+(*2*2/a)+(*2*a/a)))
MathildaLib.SwapOperator: (/2*(+(*2/a)+(/a*a)))
MathildaLib.MultiplyOperator: (*(+(*2*2/a)+(*2/a*a)))
MathildaLib.SwapOperator: (/2*(+(/a*2)+(/a*a)))
MathildaLib.MultiplyOperator: (*(+(*2/a*2)+(*2/a*a)))
MathildaLib.SwapOperator: (/2*(+(/a*2)+(*a/a)))
MathildaLib.MultiplyOperator: (*(+(*2/a*2)+(*2*a/a)))
MathildaLib.SwapOperator: (/2*(+(*a/a)+(/a*2)))
MathildaLib.MultiplyOperator: (*(+(*2*a/a)+(*2/a*2)))
MathildaLib.SwapOperator: (/2*(+(/a*a)+(/a*2)))
MathildaLib.MultiplyOperator: (*(+(*2/a*a)+(*2/a*2)))
MathildaLib.SwapOperator: (/2*(+(/a*a)+(*2/a)))
MathildaLib.MultiplyOperator: (*(+(*2/a*a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(/a*a)+(*2/a))/2)
MathildaLib.MultiplyOperator: (*(+(/a*a/2)+(*2/a/2)))
MathildaLib.SwapOperator: (*(+(*2/a)+(/a*a))/2)
MathildaLib.MultiplyOperator: (*(+(*2/a/2)+(/a*a/2)))
MathildaLib.SwapOperator: (*(+(*2/a)+(*a/a))/2)
MathildaLib.MultiplyOperator: (*(+(*2/a/2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/a*2)+(*a/a))/2)
MathildaLib.MultiplyOperator: (*(+(/a*2/2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(*a/a)+(/a*2))/2)
MathildaLib.MultiplyOperator: (*(+(*a/a/2)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(/a*a)+(/a*2))/2)
MathildaLib.MultiplyOperator: (*(+(/a*a/2)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(/a*2)+(/a*a))/2)
MathildaLib.MultiplyOperator: (*(+(/a*2/2)+(/a*a/2)))
MathildaLib.SwapOperator: (/2/a*(+a+2))
MathildaLib.MultiplyOperator: (/2*(+(*a*a)+(*a*2)))
MathildaLib.MultiplyOperator: (*(+(*2*a*a)+(*2*a*2)))
MathildaLib.SwapOperator: (+(*2*a*2)+(*2*a*a))
MathildaLib.ScalarProductOperator: (+(*4*a)+(*2*a*a))
MathildaLib.SwapOperator: (+(*4*a)+(*a*2*a))
MathildaLib.SwapOperator: (+(*4*a)+(*a*a*2))
MathildaLib.SwapOperator: (+(*a*4)+(*a*a*2))
MathildaLib.SwapOperator: (+(*a*4)+(*2*a*a))
MathildaLib.SwapOperator: (+(*a*4)+(*a*2*a))
MathildaLib.SwapOperator: (+(*a*2*a)+(*a*4))
MathildaLib.SwapOperator: (+(*2*a*a)+(*a*4))
MathildaLib.SwapOperator: (+(*2*a*a)+(*4*a))
MathildaLib.SwapOperator: (+(*a*2*a)+(*4*a))
MathildaLib.SwapOperator: (+(*a*a*2)+(*4*a))
MathildaLib.SwapOperator: (+(*a*a*2)+(*a*4))
MathildaLib.SwapOperator: (+(*2*2*a)+(*2*a*a))
MathildaLib.SwapOperator: (+(*2*2*a)+(*a*2*a))
MathildaLib.SwapOperator: (+(*2*2*a)+(*a*a*2))
MathildaLib.SwapOperator: (+(*2*a*2)+(*a*a*2))
MathildaLib.SwapOperator: (+(*2*a*2)+(*a*2*a))
MathildaLib.SwapOperator: (+(*a*2*2)+(*a*2*a))
MathildaLib.SwapOperator: (+(*a*2*2)+(*2*a*a))
MathildaLib.SwapOperator: (+(*2*a*a)+(*a*2*2))
MathildaLib.SwapOperator: (+(*2*a*a)+(*2*2*a))
MathildaLib.SwapOperator: (+(*2*a*a)+(*2*a*2))
MathildaLib.SwapOperator: (+(*a*2*a)+(*2*a*2))
MathildaLib.SwapOperator: (+(*a*2*a)+(*2*2*a))
MathildaLib.SwapOperator: (+(*a*2*a)+(*a*2*2))
MathildaLib.SwapOperator: (+(*a*a*2)+(*a*2*2))
MathildaLib.SwapOperator: (+(*a*2*2)+(*a*a*2))
MathildaLib.SwapOperator: (+(*a*a*2)+(*2*2*a))
MathildaLib.SwapOperator: (+(*a*a*2)+(*2*a*2))
MathildaLib.FixSignOperator: (*0.5*(+(*a*a)+(*a*2)))
MathildaLib.MultiplyOperator: (*(+(*0.5*a*a)+(*0.5*a*2)))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(*0.5*a*a))
MathildaLib.ScalarProductOperator: (+(*1*a)+(*0.5*a*a))
MathildaLib.MultiplyOneOperator: (+(*a)+(*0.5*a*a))
MathildaLib.LiftOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (+a+(*a*0.5*a))
MathildaLib.SwapOperator: (+a+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*a*0.5)+a)
MathildaLib.SwapOperator: (+(*0.5*a*a)+a)
MathildaLib.SwapOperator: (+(*a*0.5*a)+a)
MathildaLib.SwapOperator: (+(*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*1)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*1)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*1)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a*1))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*1))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*1*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a*1))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*2*a*0.5)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*2*0.5*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*2*0.5*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.5*a*2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*2*a*0.5))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*2*0.5))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*2*0.5*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*2*a*0.5)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*2*a*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a*2*0.5))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*0.5*a*2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*0.5*a*2))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*2*a*0.5))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a*2*0.5))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*a*a*0.5))
MathildaLib.SwapOperator: (*0.5*(+(*a*2)+(*a*a)))
MathildaLib.MultiplyOperator: (*(+(*0.5*a*2)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*0.5*(+(*2*a)+(*a*a)))
MathildaLib.MultiplyOperator: (*(+(*0.5*2*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*0.5*(+(*a*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(+(*0.5*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*a*a)+(*2*a))*0.5)
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*2*a*0.5)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a*a))*0.5)
MathildaLib.MultiplyOperator: (*(+(*2*a*0.5)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*a*a))*0.5)
MathildaLib.MultiplyOperator: (*(+(*a*2*0.5)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*a)+(*a*2))*0.5)
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*a*2*0.5)))
MathildaLib.SwapOperator: (/2*(+(*a*2)+(*a*a)))
MathildaLib.MultiplyOperator: (*(+(*2*a*2)+(*2*a*a)))
MathildaLib.SwapOperator: (/2*(+(*2*a)+(*a*a)))
MathildaLib.MultiplyOperator: (*(+(*2*2*a)+(*2*a*a)))
MathildaLib.SwapOperator: (/2*(+(*a*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(+(*2*a*a)+(*2*2*a)))
MathildaLib.SwapOperator: (*(+(*a*a)+(*2*a))/2)
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*2*a/2)))
MathildaLib.SwapOperator: (+(*2*a/2)+(*a*a/2))
MathildaLib.ScalarProductOperator: (+(*1*a)+(*a*a/2))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*a/2))
MathildaLib.LiftOperator: (+a+(*a*a/2))
MathildaLib.SwapOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (+a+(*a/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+a)
MathildaLib.SwapOperator: (+(/2*a*a)+a)
MathildaLib.SwapOperator: (+(*a*a/2)+a)
MathildaLib.SwapOperator: (+(*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a))
MathildaLib.SwapOperator: (+(*1*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a*1)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a*1)+(/2*a*a))
MathildaLib.SwapOperator: (+(*a*1)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a*1))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a*1))
MathildaLib.SwapOperator: (+(/2*a*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a*1))
MathildaLib.SwapOperator: (+(*a*a/2)+(*1*a))
MathildaLib.SwapOperator: (+(*2/2*a)+(*a*a/2))
MathildaLib.FixSignOperator: (+(*2*0.5*a)+(*a*a/2))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(*a*a/2))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(*a/2*a))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(*a*a/2))
MathildaLib.SwapOperator: (+(*2*a*0.5)+(*a*a/2))
MathildaLib.SwapOperator: (+(*2*a*0.5)+(/2*a*a))
MathildaLib.SwapOperator: (+(*2*0.5*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*2*0.5*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(*2*a*0.5)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(/2*a*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.5*a*2))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2*a*0.5))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a*2*0.5))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(/2*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*a/2*a)+(*0.5*a*2))
MathildaLib.SwapOperator: (+(*a/2*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*2*a*0.5))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a*2*0.5))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a*2*0.5))
MathildaLib.SwapOperator: (+(*a*a/2)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*0.5*a*2))
MathildaLib.SwapOperator: (+(*a*a/2)+(*2*a*0.5))
MathildaLib.SwapOperator: (+(*a*a/2)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(*2/2*a)+(/2*a*a))
MathildaLib.FixSignOperator: (+(*2/2*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(/2*a*2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(/2*2*a))
MathildaLib.MultiplyOperator: (+(*0.5*a*a)+(/4*a))
MathildaLib.SwapOperator: (+(/4*a)+(*0.5*a*a))
MathildaLib.FixSignOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.25)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.25)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*0.25)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a*0.25))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*0.25))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a*0.25))
MathildaLib.SwapOperator: (+(/4*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(/4*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a/4)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a/4)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a/4)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a/4))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a/4))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a/4))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(/4*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(/4*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*2/2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a/2*2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a/2*2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(*2/2*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*2/2*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*2*a/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*2*a/2)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*2*a/2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(/2*a*2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(/2*2*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(/2*2*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(/2*2*a)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(/2*a*2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(/2*a*2)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a/2*2)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2/2)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*a*2/2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(/2*a*2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(/2*2*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(/2*2*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*2/2*a))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*2*a/2))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(/2*a*2))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a/2*2))
MathildaLib.SwapOperator: (+(*a/2*2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*a*0.5)+(*a*2/2))
MathildaLib.SwapOperator: (+(*a/2*2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*2/2*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(*2*a/2)+(*a/2*a))
MathildaLib.SwapOperator: (+(*2*a/2)+(/2*a*a))
MathildaLib.SwapOperator: (+(/2*a*2)+(/2*a*a))
MathildaLib.SwapOperator: (+(/2*2*a)+(/2*a*a))
MathildaLib.MultiplyOperator: (+(/4*a)+(/2*a*a))
MathildaLib.FixSignOperator: (+(*0.25*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*0.25)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*0.25)+(/2*a*a))
MathildaLib.SwapOperator: (+(*a*0.25)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a*0.25))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a*0.25))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a*0.25))
MathildaLib.SwapOperator: (+(/4*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(/4*a)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a/4)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a/4)+(/2*a*a))
MathildaLib.SwapOperator: (+(*a/4)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a/4))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a/4))
MathildaLib.SwapOperator: (+(/2*a*a)+(/4*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(/4*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(/4*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a/4))
MathildaLib.SwapOperator: (+(/2*2*a)+(*a/2*a))
MathildaLib.SwapOperator: (+(/2*2*a)+(*a*a/2))
MathildaLib.SwapOperator: (+(/2*a*2)+(*a*a/2))
MathildaLib.SwapOperator: (+(/2*a*2)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a/2*2)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a/2*a))
MathildaLib.SwapOperator: (+(*a*2/2)+(/2*a*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a*2/2))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(/2*2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(/2*a*2))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a/2*2))
MathildaLib.SwapOperator: (+(*a/2*2)+(/2*a*a))
MathildaLib.SwapOperator: (+(*a/2*2)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a*2/2))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a*2/2))
MathildaLib.SwapOperator: (+(*a/2*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(*a/2*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(/2*2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(/2*a*2))
MathildaLib.SwapOperator: (+(*a/2*a)+(*a/2*2))
MathildaLib.SwapOperator: (+(*a*a/2)+(*a/2*2))
MathildaLib.SwapOperator: (+(*a*a/2)+(*2/2*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*2*a/2))
MathildaLib.SwapOperator: (+(*a*a/2)+(/2*a*2))
MathildaLib.SwapOperator: (+(*a*a/2)+(/2*2*a))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a*a))/2)
MathildaLib.MultiplyOperator: (*(+(*2*a/2)+(*a*a/2)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*a*a))/2)
MathildaLib.MultiplyOperator: (*(+(*a*2/2)+(*a*a/2)))
MathildaLib.SwapOperator: (*(+(*a*a)+(*a*2))/2)
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*a*2/2)))
MathildaLib.FixSignOperator: (*0.5/a*(+a+2))
MathildaLib.SwapOperator: (*0.5/a*(+2+a))
MathildaLib.SwapOperator: (*0.5*(+2+a)/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*2)+(*0.5*a))/a)
MathildaLib.SwapOperator: (/a*(+(*0.5*2)+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*2)+(*a*0.5*a)))
MathildaLib.ScalarProductOperator: (/a*(+(*1)+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*0.5*a)))
MathildaLib.LiftOperator: (/a*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (/a*(+1+(*a*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+1))
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*a*1)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+1))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*a)+(*a*1)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+1)/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+1+(*0.5*a))/a)
MathildaLib.MultiplyOperator: (*(+(*1/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+1+(*a*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*1/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5)+1)/a)
MathildaLib.MultiplyOperator: (*(+(*a*0.5/a)+(*1/a)))
MathildaLib.SwapOperator: (/a*(+(*1)+(*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+(*1)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*1)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*1))/a)
MathildaLib.SwapOperator: (*(+(*1)+(*0.5*a))/a)
MathildaLib.SwapOperator: (*(+(*1)+(*a*0.5))/a)
MathildaLib.SwapOperator: (*(+(*a*0.5)+(*1))/a)
MathildaLib.SwapOperator: (/a*(+(*0.5*2)+(*a*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*2*0.5)+(*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*2*0.5)+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+(*a*2*0.5)+(*a*0.5*a)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*2*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*a)+(*a*2*0.5)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*0.5*2)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*a)+(*a*0.5*2)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+(*0.5*2)))
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*a*0.5*2)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+(*2*0.5)))
MathildaLib.SwapOperator: (*(+(*a*0.5)+(*2*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*a*0.5/a)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*2*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*0.5*2))/a)
MathildaLib.SwapOperator: (*(+(*a*0.5)+(*0.5*2))/a)
MathildaLib.MultiplyOperator: (*(+(*a*0.5/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*a*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*2/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5)+(*a*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*2*0.5/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5)+(*0.5*a))/a)
MathildaLib.MultiplyOperator: (*(+(*2*0.5/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*0.5*(+a+2)/a)
MathildaLib.SwapOperator: (/a*(+a+2)*0.5)
MathildaLib.SwapOperator: (/a*0.5*(+a+2))
MathildaLib.SwapOperator: (/a*0.5*(+2+a))
MathildaLib.SwapOperator: (/a*(+2+a)*0.5)
MathildaLib.SwapOperator: (*(+2+a)/a*0.5)
MathildaLib.SwapOperator: (*(+2+a)*0.5/a)
MathildaLib.SwapOperator: (*(+a+2)*0.5/a)
MathildaLib.SwapOperator: (*(+a+2)/a*0.5)
MathildaLib.SwapOperator: (/2/a*(+2+a))
MathildaLib.SwapOperator: (/2*(+2+a)/a)
MathildaLib.MultiplyOperator: (*(+(*2*2)+(*2*a))/a)
MathildaLib.SwapOperator: (/a*(+(*2*2)+(*2*a)))
MathildaLib.MultiplyOperator: (*(+(*a*2*2)+(*a*2*a)))
MathildaLib.ScalarProductOperator: (/a*(+(*4)+(*2*a)))
MathildaLib.MultiplyOperator: (*(+(*a*4)+(*a*2*a)))
MathildaLib.LiftOperator: (/a*(+4+(*2*a)))
MathildaLib.SwapOperator: (/a*(+4+(*a*2)))
MathildaLib.MultiplyOperator: (*(+(*a*4)+(*a*a*2)))
MathildaLib.SwapOperator: (/a*(+(*a*2)+4))
MathildaLib.MultiplyOperator: (*(+(*a*a*2)+(*a*4)))
MathildaLib.SwapOperator: (/a*(+(*2*a)+4))
MathildaLib.MultiplyOperator: (*(+(*a*2*a)+(*a*4)))
MathildaLib.SwapOperator: (*(+(*2*a)+4)/a)
MathildaLib.MultiplyOperator: (*(+(*2*a/a)+(*4/a)))
MathildaLib.SwapOperator: (*(+4+(*2*a))/a)
MathildaLib.MultiplyOperator: (*(+(*4/a)+(*2*a/a)))
MathildaLib.SwapOperator: (*(+4+(*a*2))/a)
MathildaLib.MultiplyOperator: (*(+(*4/a)+(*a*2/a)))
MathildaLib.SwapOperator: (*(+(*a*2)+4)/a)
MathildaLib.MultiplyOperator: (*(+(*a*2/a)+(*4/a)))
MathildaLib.SwapOperator: (/a*(+(*4)+(*a*2)))
MathildaLib.SwapOperator: (/a*(+(*a*2)+(*4)))
MathildaLib.SwapOperator: (/a*(+(*2*a)+(*4)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*4))/a)
MathildaLib.SwapOperator: (*(+(*4)+(*2*a))/a)
MathildaLib.SwapOperator: (*(+(*4)+(*a*2))/a)
MathildaLib.SwapOperator: (*(+(*a*2)+(*4))/a)
MathildaLib.SwapOperator: (/a*(+(*2*2)+(*a*2)))
MathildaLib.MultiplyOperator: (*(+(*a*2*2)+(*a*a*2)))
MathildaLib.SwapOperator: (/a*(+(*a*2)+(*2*2)))
MathildaLib.MultiplyOperator: (*(+(*a*a*2)+(*a*2*2)))
MathildaLib.SwapOperator: (/a*(+(*2*a)+(*2*2)))
MathildaLib.MultiplyOperator: (*(+(*a*2*a)+(*a*2*2)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*2*2))/a)
MathildaLib.SwapOperator: (*(+(*a*2)+(*2*2))/a)
MathildaLib.MultiplyOperator: (*(+(*a*2/a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*2*2)+(*a*2))/a)
MathildaLib.MultiplyOperator: (*(+(*2*2/a)+(*a*2/a)))
MathildaLib.SwapOperator: (/2*(+a+2)/a)
MathildaLib.SwapOperator: (/a*(+a+2)/2)
MathildaLib.MultiplyOperator: (/a*(+(*a/2)+(*2/2)))
MathildaLib.SwapOperator: (/a*(+(*2/2)+(*a/2)))
MathildaLib.ScalarProductOperator: (/a*(+(*1)+(*a/2)))
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*a/2)))
MathildaLib.LiftOperator: (/a*(+1+(*a/2)))
MathildaLib.SwapOperator: (/a*(+1+(/2*a)))
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a/2*a)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+1))
MathildaLib.MultiplyOperator: (*(+(*a/2*a)+(*a*1)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+1))
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*a*1)))
MathildaLib.SwapOperator: (*(+(*a/2)+1)/a)
MathildaLib.MultiplyOperator: (*(+(*a/2/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+1+(*a/2))/a)
MathildaLib.MultiplyOperator: (*(+(*1/a)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+1+(/2*a))/a)
MathildaLib.MultiplyOperator: (*(+(*1/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/2*a)+1)/a)
MathildaLib.MultiplyOperator: (*(+(/2*a/a)+(*1/a)))
MathildaLib.SwapOperator: (/a*(+(*1)+(/2*a)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*1)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+(*1)))
MathildaLib.SwapOperator: (*(+(*a/2)+(*1))/a)
MathildaLib.SwapOperator: (*(+(*1)+(*a/2))/a)
MathildaLib.SwapOperator: (*(+(*1)+(/2*a))/a)
MathildaLib.SwapOperator: (*(+(/2*a)+(*1))/a)
MathildaLib.FixSignOperator: (/a*(+(*2*0.5)+(*a/2)))
MathildaLib.MultiplyOperator: (*(+(*a*2*0.5)+(*a*a/2)))
MathildaLib.SwapOperator: (/a*(+(*0.5*2)+(*a/2)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*2)+(*a*a/2)))
MathildaLib.SwapOperator: (/a*(+(*0.5*2)+(/2*a)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*2)+(*a/2*a)))
MathildaLib.SwapOperator: (/a*(+(*2*0.5)+(/2*a)))
MathildaLib.MultiplyOperator: (*(+(*a*2*0.5)+(*a/2*a)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*2*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a/2*a)+(*a*2*0.5)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*0.5*2)))
MathildaLib.MultiplyOperator: (*(+(*a/2*a)+(*a*0.5*2)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+(*0.5*2)))
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*a*0.5*2)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+(*2*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*a*2*0.5)))
MathildaLib.SwapOperator: (*(+(*a/2)+(*2*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*a/2/a)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5)+(*a/2))/a)
MathildaLib.MultiplyOperator: (*(+(*2*0.5/a)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*a/2))/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*2/a)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2)+(/2*a))/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*2/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5)+(/2*a))/a)
MathildaLib.MultiplyOperator: (*(+(*2*0.5/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*2*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(/2*a/a)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*0.5*2))/a)
MathildaLib.MultiplyOperator: (*(+(/2*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*a/2)+(*0.5*2))/a)
MathildaLib.MultiplyOperator: (*(+(*a/2/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (/a*(+(*2/2)+(/2*a)))
MathildaLib.MultiplyOperator: (*(+(*a*2/2)+(*a/2*a)))
MathildaLib.FixSignOperator: (/a*(+(*2/2)+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+(*a*2/2)+(*a*0.5*a)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*2/2)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*a)+(*a*2/2)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(/2*2)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*a)+(*a/2*2)))
MathildaLib.MultiplyOperator: (/a*(+(*0.5*a)+(/4)))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*a)+(*a/4)))
MathildaLib.SwapOperator: (/a*(+(/4)+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+(*a/4)+(*a*0.5*a)))
MathildaLib.FixSignOperator: (/a*(+(*0.25)+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+(*a*0.25)+(*a*0.5*a)))
MathildaLib.LiftOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (/a*(+0.25+(*a*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a*0.25)+(*a*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+0.25))
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*a*0.25)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+0.25))
MathildaLib.MultiplyOperator: (*(+(*a*0.5*a)+(*a*0.25)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+0.25)/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+0.25+(*0.5*a))/a)
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+0.25+(*a*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5)+0.25)/a)
MathildaLib.MultiplyOperator: (*(+(*a*0.5/a)+(*0.25/a)))
MathildaLib.SwapOperator: (/a*(+(*0.25)+(*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+(*0.25)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*0.25)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*0.25))/a)
MathildaLib.SwapOperator: (*(+(*0.25)+(*0.5*a))/a)
MathildaLib.SwapOperator: (*(+(*0.25)+(*a*0.5))/a)
MathildaLib.SwapOperator: (*(+(*a*0.5)+(*0.25))/a)
MathildaLib.SwapOperator: (/a*(+(/4)+(*a*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a/4)+(*a*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+(/4)))
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*a/4)))
MathildaLib.SwapOperator: (*(+(*a*0.5)+(/4))/a)
MathildaLib.MultiplyOperator: (*(+(*a*0.5/a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(/4)+(*a*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(/4/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/4)+(*0.5*a))/a)
MathildaLib.MultiplyOperator: (*(+(/4/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(/4))/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(/4/a)))
MathildaLib.SwapOperator: (/a*(+(/2*2)+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+(*a/2*2)+(*a*0.5*a)))
MathildaLib.SwapOperator: (/a*(+(/2*2)+(*a*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a/2*2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*2/2)+(*a*0.5)))
MathildaLib.MultiplyOperator: (*(+(*a*2/2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+(*2/2)))
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*a*2/2)))
MathildaLib.SwapOperator: (/a*(+(*a*0.5)+(/2*2)))
MathildaLib.MultiplyOperator: (*(+(*a*a*0.5)+(*a/2*2)))
MathildaLib.SwapOperator: (*(+(*a*0.5)+(/2*2))/a)
MathildaLib.MultiplyOperator: (*(+(*a*0.5/a)+(/2*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(/2*2))/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(/2*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*2/2))/a)
MathildaLib.MultiplyOperator: (*(+(*0.5*a/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*2/2)+(*0.5*a))/a)
MathildaLib.MultiplyOperator: (*(+(*2/2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*2/2)+(*a*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(*2/2/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/2*2)+(*a*0.5))/a)
MathildaLib.MultiplyOperator: (*(+(/2*2/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/2*2)+(*0.5*a))/a)
MathildaLib.MultiplyOperator: (*(+(/2*2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5)+(*2/2))/a)
MathildaLib.MultiplyOperator: (*(+(*a*0.5/a)+(*2/2/a)))
MathildaLib.SwapOperator: (/a*(+(/2*2)+(/2*a)))
MathildaLib.MultiplyOperator: (*(+(*a/2*2)+(*a/2*a)))
MathildaLib.MultiplyOperator: (/a*(+(/4)+(/2*a)))
MathildaLib.MultiplyOperator: (*(+(*a/4)+(*a/2*a)))
MathildaLib.FixSignOperator: (/a*(+(*0.25)+(/2*a)))
MathildaLib.MultiplyOperator: (*(+(*a*0.25)+(*a/2*a)))
MathildaLib.LiftOperator: (/a*(+0.25+(/2*a)))
MathildaLib.SwapOperator: (/a*(+0.25+(*a/2)))
MathildaLib.MultiplyOperator: (*(+(*a*0.25)+(*a*a/2)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+0.25))
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*a*0.25)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+0.25))
MathildaLib.MultiplyOperator: (*(+(*a/2*a)+(*a*0.25)))
MathildaLib.SwapOperator: (*(+(/2*a)+0.25)/a)
MathildaLib.MultiplyOperator: (*(+(/2*a/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+0.25+(/2*a))/a)
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+0.25+(*a/2))/a)
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(*a/2)+0.25)/a)
MathildaLib.MultiplyOperator: (*(+(*a/2/a)+(*0.25/a)))
MathildaLib.SwapOperator: (/a*(+(*0.25)+(*a/2)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+(*0.25)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*0.25)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*0.25))/a)
MathildaLib.SwapOperator: (*(+(*0.25)+(/2*a))/a)
MathildaLib.SwapOperator: (*(+(*0.25)+(*a/2))/a)
MathildaLib.SwapOperator: (*(+(*a/2)+(*0.25))/a)
MathildaLib.SwapOperator: (/a*(+(/4)+(*a/2)))
MathildaLib.MultiplyOperator: (*(+(*a/4)+(*a*a/2)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+(/4)))
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*a/4)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(/4)))
MathildaLib.MultiplyOperator: (*(+(*a/2*a)+(*a/4)))
MathildaLib.SwapOperator: (*(+(/2*a)+(/4))/a)
MathildaLib.MultiplyOperator: (*(+(/2*a/a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(/4)+(/2*a))/a)
MathildaLib.MultiplyOperator: (*(+(/4/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/4)+(*a/2))/a)
MathildaLib.MultiplyOperator: (*(+(/4/a)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(*a/2)+(/4))/a)
MathildaLib.MultiplyOperator: (*(+(*a/2/a)+(/4/a)))
MathildaLib.SwapOperator: (/a*(+(/2*2)+(*a/2)))
MathildaLib.MultiplyOperator: (*(+(*a/2*2)+(*a*a/2)))
MathildaLib.SwapOperator: (/a*(+(*a/2)+(/2*2)))
MathildaLib.MultiplyOperator: (*(+(*a*a/2)+(*a/2*2)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(/2*2)))
MathildaLib.MultiplyOperator: (*(+(*a/2*a)+(*a/2*2)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*2/2)))
MathildaLib.MultiplyOperator: (*(+(*a/2*a)+(*a*2/2)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*2/2))/a)
MathildaLib.MultiplyOperator: (*(+(/2*a/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*2/2)+(/2*a))/a)
MathildaLib.MultiplyOperator: (*(+(*2/2/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*2/2)+(*a/2))/a)
MathildaLib.MultiplyOperator: (*(+(*2/2/a)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(/2*2)+(*a/2))/a)
MathildaLib.MultiplyOperator: (*(+(/2*2/a)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(/2*2)+(/2*a))/a)
MathildaLib.MultiplyOperator: (*(+(/2*2/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(/2*2))/a)
MathildaLib.MultiplyOperator: (*(+(/2*a/a)+(/2*2/a)))
MathildaLib.SwapOperator: (*(+(*a/2)+(/2*2))/a)
MathildaLib.MultiplyOperator: (*(+(*a/2/a)+(/2*2/a)))
MathildaLib.SwapOperator: (*(+(*a/2)+(*2/2))/a)
MathildaLib.MultiplyOperator: (*(+(*a/2/a)+(*2/2/a)))
MathildaLib.SwapOperator: (/a/2*(+a+2))
MathildaLib.SwapOperator: (/a/2*(+2+a))
MathildaLib.SwapOperator: (/a*(+2+a)/2)
MathildaLib.SwapOperator: (*(+2+a)/a/2)
MathildaLib.SwapOperator: (*(+2+a)/2/a)
MathildaLib.SwapOperator: (*(+a+2)/2/a)
========
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(/a)+0.5)
MathildaLib.SwapOperator: (+0.5+(/a*1))
MathildaLib.SwapOperator: (+(/a*1)+0.5)
MathildaLib.SwapOperator: (+(*1/a)+0.5)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*a*1)
MathildaLib.MultiplyOneOperator: (*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*a*1)
MathildaLib.MultiplyOneOperator: (*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*a*1)
MathildaLib.MultiplyOneOperator: (*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*a*1)
MathildaLib.MultiplyOneOperator: (*a)
MathildaLib.SwapOperator: (*1*a)
MathildaLib.SwapOperator: (*2*a/2)
MathildaLib.SwapOperator: (*2/2*a)
MathildaLib.FixSignOperator: (*2*0.5*a)
MathildaLib.SwapOperator: (*0.5*2*a)
MathildaLib.SwapOperator: (*0.5*a*2)
MathildaLib.SwapOperator: (*2*a*0.5)
MathildaLib.SwapOperator: (*a*2*0.5)
MathildaLib.SwapOperator: (*a*0.5*2)
MathildaLib.SwapOperator: (/2*2*a)
MathildaLib.MultiplyOperator: (/4*a)
MathildaLib.FixSignOperator: (*0.25*a)
MathildaLib.SwapOperator: (*a*0.25)
MathildaLib.SwapOperator: (*a/4)
MathildaLib.SwapOperator: (/2*a*2)
MathildaLib.SwapOperator: (*a/2*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/a)
MathildaLib.CancelVariableOperator: (*2*1)
MathildaLib.MultiplyOneOperator: (*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/a)
MathildaLib.CancelVariableOperator: (*2*1)
MathildaLib.MultiplyOneOperator: (*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/a)
MathildaLib.CancelVariableOperator: (*2*1)
MathildaLib.MultiplyOneOperator: (*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/a)
MathildaLib.CancelVariableOperator: (*2*1)
MathildaLib.MultiplyOneOperator: (*2)
MathildaLib.SwapOperator: (*1*2)
MathildaLib.SwapOperator: (*2/a*a)
MathildaLib.SwapOperator: (*a/a*2)
MathildaLib.SwapOperator: (/a*a*2)
MathildaLib.SwapOperator: (/a*2*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/(+a+a))
MathildaLib.AddOperator: (*2*a/(+(*2*a)))
MathildaLib.LiftOperator: (*2*a/(*2*a))
MathildaLib.MultiplyOperator: (*2/(*2))
MathildaLib.MultiplyOperator: (/(*0.5*2))
MathildaLib.ScalarProductOperator: (/(*1))
MathildaLib.LiftOperator: (/1)
MathildaLib.FixSignOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/(+a+a))
MathildaLib.AddOperator: (*2*a/(+(*2*a)))
MathildaLib.LiftOperator: (*2*a/(*2*a))
MathildaLib.MultiplyOperator: (*2/(*2))
MathildaLib.MultiplyOperator: (/(*0.5*2))
MathildaLib.ScalarProductOperator: (/(*1))
MathildaLib.LiftOperator: (/1)
MathildaLib.FixSignOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/(+a+a))
MathildaLib.AddOperator: (*2*a/(+(*2*a)))
MathildaLib.LiftOperator: (*2*a/(*2*a))
MathildaLib.MultiplyOperator: (*2/(*2))
MathildaLib.MultiplyOperator: (/(*0.5*2))
MathildaLib.ScalarProductOperator: (/(*1))
MathildaLib.LiftOperator: (/1)
MathildaLib.FixSignOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.NotImplementedException : The requested feature is not implemented.</Message>
                  <StackTrace>  at MathildaLib.MultiplyOperator.Do (MathildaLib.Node&amp; node) [0x00638] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:226 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.MultiplyOperator+&lt;Multiply&gt;c__AnonStorey2.&lt;&gt;m__2 (Int32 i, Int32 j) [0x00008] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:240 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.MultiplyOperator.Multiply (Search search) [0x0003a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:242 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x000d1] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:127 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestDivide.TestDivide15 () [0x00032] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:124 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a/(+a+a))
MathildaLib.AddOperator: (*2*a/(+(*2*a)))
MathildaLib.LiftOperator: (*2*a/(*2*a))
MathildaLib.MultiplyOperator: (*2/(*2))
MathildaLib.MultiplyOperator: (/(*0.5*2))
MathildaLib.ScalarProductOperator: (/(*1))
MathildaLib.LiftOperator: (/1)
MathildaLib.FixSignOperator: (*1)
MathildaLib.SwapOperator: (/(*2*0.5))
MathildaLib.LiftOperator: (*2/2)
MathildaLib.FixSignOperator: (*2*0.5)
MathildaLib.SwapOperator: (*0.5*2)
MathildaLib.SwapOperator: (*2*0.5)
MathildaLib.SwapOperator: (/2*2)
MathildaLib.MultiplyOperator: (/4)
MathildaLib.FixSignOperator: (*0.25)
MathildaLib.SwapOperator: (/(*2)*2)
MathildaLib.MultiplyOperator: (/(*2))
MathildaLib.LiftOperator: (/2)
MathildaLib.FixSignOperator: (*0.5)
MathildaLib.SwapOperator: (*2*a/(*a*2))
unsupported multiply a (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (/a*1*a)
MathildaLib.MultiplyOneOperator: (/a*a)
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (/a*1*a)
MathildaLib.MultiplyOneOperator: (/a*a)
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (/a*1*a)
MathildaLib.MultiplyOneOperator: (/a*a)
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivide16 () [0x00036] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (/a*1*a)
MathildaLib.MultiplyOneOperator: (/a*a)
MathildaLib.CancelVariableOperator: (*1)
MathildaLib.SwapOperator: (*a/a)
MathildaLib.SwapOperator: (*1/a*a)
MathildaLib.CancelVariableOperator: (*1*1)
MathildaLib.MultiplyOneOperator: ()
MathildaLib.SwapOperator: (*1*a/a)
MathildaLib.SwapOperator: (*a*1/a)
MathildaLib.SwapOperator: (*a/a*1)
MathildaLib.SwapOperator: (/a*a*1)
MathildaLib.SwapOperator: (*2/2*a/a)
MathildaLib.CancelVariableOperator: (*2/2*1)
MathildaLib.MultiplyOneOperator: (*2/2)
MathildaLib.FixSignOperator: (*2*0.5)
MathildaLib.SwapOperator: (*0.5*2)
MathildaLib.SwapOperator: (/2*2)
MathildaLib.MultiplyOperator: (/4)
MathildaLib.FixSignOperator: (*0.25)
MathildaLib.SwapOperator: (*1/2*2)
MathildaLib.MultiplyOperator: (*1/4)
MathildaLib.FixSignOperator: (*1*0.25)
MathildaLib.SwapOperator: (*0.25*1)
MathildaLib.SwapOperator: (/4*1)
MathildaLib.FixSignOperator: (*1*0.5*2)
MathildaLib.SwapOperator: (*0.5*1*2)
MathildaLib.SwapOperator: (*0.5*2*1)
MathildaLib.SwapOperator: (*1*2*0.5)
MathildaLib.SwapOperator: (*2*1*0.5)
MathildaLib.SwapOperator: (*2*0.5*1)
MathildaLib.SwapOperator: (*1*2/2)
MathildaLib.SwapOperator: (*2*1/2)
MathildaLib.SwapOperator: (/2*1*2)
MathildaLib.SwapOperator: (/2*2*1)
MathildaLib.FixSignOperator: (*2*0.5*a/a)
MathildaLib.SwapOperator: (*0.5*2*a/a)
MathildaLib.SwapOperator: (*0.5*2/a*a)
MathildaLib.SwapOperator: (*0.5*a/a*2)
MathildaLib.SwapOperator: (*0.5*a*2/a)
MathildaLib.SwapOperator: (*0.5/a*2*a)
MathildaLib.SwapOperator: (*0.5/a*a*2)
MathildaLib.SwapOperator: (*2/a*a*0.5)
MathildaLib.SwapOperator: (*2*a/a*0.5)
MathildaLib.SwapOperator: (*2*0.5/a*a)
MathildaLib.SwapOperator: (*2/a*0.5*a)
MathildaLib.SwapOperator: (*2*a*0.5/a)
MathildaLib.SwapOperator: (*a*2*0.5/a)
MathildaLib.SwapOperator: (*a*0.5*2/a)
MathildaLib.SwapOperator: (*a*0.5/a*2)
MathildaLib.SwapOperator: (*a*2/a*0.5)
MathildaLib.SwapOperator: (*a/a*2*0.5)
MathildaLib.SwapOperator: (*a/a*0.5*2)
MathildaLib.SwapOperator: (/a*a*0.5*2)
MathildaLib.SwapOperator: (/a*0.5*a*2)
MathildaLib.SwapOperator: (/a*0.5*2*a)
MathildaLib.SwapOperator: (/a*2*0.5*a)
MathildaLib.SwapOperator: (/a*2*a*0.5)
MathildaLib.SwapOperator: (/a*a*2*0.5)
MathildaLib.SwapOperator: (*2/2/a*a)
MathildaLib.SwapOperator: (*2*a/a/2)
MathildaLib.SwapOperator: (*2*a/2/a)
MathildaLib.SwapOperator: (*2/a/2*a)
MathildaLib.SwapOperator: (*2/a*a/2)
MathildaLib.SwapOperator: (/2/a*a*2)
MathildaLib.SwapOperator: (/2*2*a/a)
MathildaLib.MultiplyOperator: (/4*a/a)
MathildaLib.FixSignOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (*0.25/a*a)
MathildaLib.SwapOperator: (*a/a*0.25)
MathildaLib.SwapOperator: (*a*0.25/a)
MathildaLib.SwapOperator: (/a*0.25*a)
MathildaLib.SwapOperator: (/a*a*0.25)
MathildaLib.SwapOperator: (/4/a*a)
MathildaLib.SwapOperator: (*a/a/4)
MathildaLib.SwapOperator: (*a/4/a)
MathildaLib.SwapOperator: (/a/4*a)
MathildaLib.SwapOperator: (/a*a/4)
MathildaLib.SwapOperator: (/2*2/a*a)
MathildaLib.SwapOperator: (/2*a/a*2)
MathildaLib.SwapOperator: (/2*a*2/a)
MathildaLib.SwapOperator: (/2/a*2*a)
MathildaLib.SwapOperator: (*a/a*2/2)
MathildaLib.SwapOperator: (*a*2/a/2)
MathildaLib.SwapOperator: (*a*2/2/a)
MathildaLib.SwapOperator: (*a/2*2/a)
MathildaLib.SwapOperator: (*a/2/a*2)
MathildaLib.SwapOperator: (*a/a/2*2)
MathildaLib.SwapOperator: (/a*a/2*2)
MathildaLib.SwapOperator: (/a*2/2*a)
MathildaLib.SwapOperator: (/a*2*a/2)
MathildaLib.SwapOperator: (/a*a*2/2)
MathildaLib.SwapOperator: (/a/2*2*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (*4/(+4))
MathildaLib.LiftOperator: (*4/4)
MathildaLib.ScalarProductOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (*4/(+4))
MathildaLib.LiftOperator: (*4/4)
MathildaLib.ScalarProductOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (*4/(+4))
MathildaLib.LiftOperator: (*4/4)
MathildaLib.ScalarProductOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivide3 () [0x0003f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:28 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (*4/(+4))
MathildaLib.LiftOperator: (*4/4)
MathildaLib.ScalarProductOperator: (*1)
MathildaLib.FixSignOperator: (*4*0.25)
MathildaLib.SwapOperator: (*0.25*4)
MathildaLib.SwapOperator: (/4*4)
MathildaLib.MultiplyOperator: (/16)
MathildaLib.FixSignOperator: (*0.0625)
MathildaLib.SwapOperator: (/(+4)*4)
MathildaLib.SwapOperator: (*4/(+3+1))
MathildaLib.SwapOperator: (/(+3+1)*4)
MathildaLib.MultiplyOperator: (*(+(*3*4)+(*1*4)))
MathildaLib.ScalarProductOperator: (+(*12)+(*1*4))
MathildaLib.LiftOperator: (+12+(*1*4))
MathildaLib.MultiplyOneOperator: (+12+(*4))
MathildaLib.LiftOperator: (+12+4)
MathildaLib.SumOperator: (+16)
MathildaLib.SwapOperator: (+4+12)
MathildaLib.SwapOperator: (+(*4)+12)
MathildaLib.SwapOperator: (+12+(*4*1))
MathildaLib.SwapOperator: (+(*4*1)+12)
MathildaLib.SwapOperator: (+(*1*4)+12)
MathildaLib.MultiplyOneOperator: (+(*12)+(*4))
MathildaLib.SwapOperator: (+(*4)+(*12))
MathildaLib.LiftOperator: (+4+(*12))
MathildaLib.SwapOperator: (+(*12)+4)
MathildaLib.SwapOperator: (+(*12)+(*4*1))
MathildaLib.SwapOperator: (+(*4*1)+(*12))
MathildaLib.SwapOperator: (+(*1*4)+(*12))
MathildaLib.SwapOperator: (+(*1*4)+(*3*4))
MathildaLib.MultiplyOneOperator: (+(*4)+(*3*4))
MathildaLib.LiftOperator: (+4+(*3*4))
MathildaLib.SwapOperator: (+4+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+4)
MathildaLib.SwapOperator: (+(*3*4)+4)
MathildaLib.SwapOperator: (+(*4)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4))
MathildaLib.SwapOperator: (+(*1*4)+(*4*3))
MathildaLib.SwapOperator: (+(*4*1)+(*4*3))
MathildaLib.SwapOperator: (+(*4*1)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*1))
MathildaLib.SwapOperator: (+(*3*4)+(*1*4))
MathildaLib.SwapOperator: (+(*4*3)+(*1*4))
MathildaLib.SwapOperator: (+(*4*3)+(*4*1))
MathildaLib.SwapOperator: (/(+1+3)*4)
MathildaLib.MultiplyOperator: (*(+(*1*4)+(*3*4)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.166666666666667)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.166666666666667)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.166666666666667)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*0.166666666666667)
MathildaLib.MultiplyOperator: (*0.5/3)
MathildaLib.FixSignOperator: (*0.5*0.333333333333333)
MathildaLib.SwapOperator: (*0.333333333333333*0.5)
MathildaLib.SwapOperator: (/3*0.5)
MathildaLib.MultiplyOperator: (/1.5)
MathildaLib.FixSignOperator: (*0.666666666666667)
MathildaLib.MultiplyOperator: (*1/0.666666666666667)
MathildaLib.MultiplyOneOperator: (/0.666666666666667)
MathildaLib.FixSignOperator: (*1.5)
MathildaLib.SwapOperator: (/0.666666666666667*1)
MathildaLib.FixSignOperator: (*1.5*1)
MathildaLib.SwapOperator: (*1*1.5)
MathildaLib.MultiplyOneOperator: (/2/3)
MathildaLib.SwapOperator: (/3/2)
MathildaLib.FixSignOperator: (*1*0.5*0.333333333333333)
MathildaLib.MultiplyOperator: (*1*0.166666666666667)
MathildaLib.SwapOperator: (*0.166666666666667*1)
MathildaLib.SwapOperator: (*0.333333333333333*0.5*1)
MathildaLib.SwapOperator: (*0.333333333333333*1*0.5)
MathildaLib.SwapOperator: (*0.5*1*0.333333333333333)
MathildaLib.SwapOperator: (*0.5*0.333333333333333*1)
MathildaLib.SwapOperator: (*1*0.333333333333333*0.5)
MathildaLib.SwapOperator: (*1/3/2)
MathildaLib.MultiplyOperator: (*0.333333333333333/2)
MathildaLib.SwapOperator: (/2*0.333333333333333)
MathildaLib.MultiplyOperator: (*1/1.5)
MathildaLib.FixSignOperator: (*1*0.666666666666667)
MathildaLib.SwapOperator: (*0.666666666666667*1)
MathildaLib.SwapOperator: (/1.5*1)
MathildaLib.SwapOperator: (/2/3*1)
MathildaLib.SwapOperator: (/2*1/3)
MathildaLib.SwapOperator: (/3*1/2)
MathildaLib.SwapOperator: (/3/2*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (/2*a)
MathildaLib.FixSignOperator: (*0.5*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (/2*a)
MathildaLib.FixSignOperator: (*0.5*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (/2*a)
MathildaLib.FixSignOperator: (*0.5*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (/2*a)
MathildaLib.FixSignOperator: (*0.5*a)
MathildaLib.SwapOperator: (*a*0.5)
========
MathildaLib.SwapOperator: (*a*0.5)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
MathildaLib.SwapOperator: (/a*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (*a/(+(*2*a)))
MathildaLib.LiftOperator: (*a/(*2*a))
MathildaLib.MultiplyOperator: (/(*2))
MathildaLib.LiftOperator: (/2)
MathildaLib.FixSignOperator: (*0.5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (*a/(+(*2*a)))
MathildaLib.LiftOperator: (*a/(*2*a))
MathildaLib.MultiplyOperator: (/(*2))
MathildaLib.LiftOperator: (/2)
MathildaLib.FixSignOperator: (*0.5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (*a/(+(*2*a)))
MathildaLib.LiftOperator: (*a/(*2*a))
MathildaLib.MultiplyOperator: (/(*2))
MathildaLib.LiftOperator: (/2)
MathildaLib.FixSignOperator: (*0.5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.NotImplementedException : The requested feature is not implemented.</Message>
                  <StackTrace>  at MathildaLib.MultiplyOperator.Do (MathildaLib.Node&amp; node) [0x00638] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:226 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.MultiplyOperator+&lt;Multiply&gt;c__AnonStorey2.&lt;&gt;m__2 (Int32 i, Int32 j) [0x00008] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:240 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.MultiplyOperator.Multiply (Search search) [0x0003a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:242 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x000d1] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:127 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestDivide.TestDivide7 () [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:57 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (*a/(+(*2*a)))
MathildaLib.LiftOperator: (*a/(*2*a))
MathildaLib.MultiplyOperator: (/(*2))
MathildaLib.LiftOperator: (/2)
MathildaLib.FixSignOperator: (*0.5)
MathildaLib.SwapOperator: (*a/(*a*2))
unsupported multiply a (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a/a/b)
MathildaLib.CancelVariableOperator: (*1/b)
MathildaLib.MultiplyOneOperator: (/b)
========
MathildaLib.MultiplyOneOperator: (/b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a/a/b)
MathildaLib.CancelVariableOperator: (*1/b)
MathildaLib.MultiplyOneOperator: (/b)
========
MathildaLib.MultiplyOneOperator: (/b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a/a/b)
MathildaLib.CancelVariableOperator: (*1/b)
MathildaLib.MultiplyOneOperator: (/b)
========
MathildaLib.MultiplyOneOperator: (/b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*a/a/b)
MathildaLib.CancelVariableOperator: (*1/b)
MathildaLib.MultiplyOneOperator: (/b)
MathildaLib.SwapOperator: (/b*1)
MathildaLib.SwapOperator: (/a*a/b)
MathildaLib.SwapOperator: (/a/b*a)
MathildaLib.SwapOperator: (/b/a*a)
MathildaLib.SwapOperator: (/b*a/a)
========
MathildaLib.MultiplyOneOperator: (/b)
MathildaLib.SwapOperator: (/b*1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/2)+(*2/2)))
MathildaLib.SwapOperator: (+(*2/2)+(*a/2))
MathildaLib.ScalarProductOperator: (+(*1)+(*a/2))
MathildaLib.LiftOperator: (+1+(*a/2))
MathildaLib.SwapOperator: (+1+(/2*a))
MathildaLib.FixSignOperator: (+1+(*0.5*a))
========
MathildaLib.SwapOperator: (+1+(*0.5*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/2)+(*2/2)))
MathildaLib.SwapOperator: (+(*2/2)+(*a/2))
MathildaLib.ScalarProductOperator: (+(*1)+(*a/2))
MathildaLib.LiftOperator: (+1+(*a/2))
MathildaLib.SwapOperator: (+1+(/2*a))
MathildaLib.FixSignOperator: (+1+(*0.5*a))
========
MathildaLib.SwapOperator: (+1+(*0.5*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/2)+(*2/2)))
MathildaLib.SwapOperator: (+(*2/2)+(*a/2))
MathildaLib.ScalarProductOperator: (+(*1)+(*a/2))
MathildaLib.LiftOperator: (+1+(*a/2))
MathildaLib.SwapOperator: (+1+(/2*a))
MathildaLib.FixSignOperator: (+1+(*0.5*a))
========
MathildaLib.SwapOperator: (+1+(*0.5*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivide9 () [0x0004e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:72 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a/2)+(*2/2)))
MathildaLib.SwapOperator: (+(*2/2)+(*a/2))
MathildaLib.ScalarProductOperator: (+(*1)+(*a/2))
MathildaLib.LiftOperator: (+1+(*a/2))
MathildaLib.SwapOperator: (+1+(/2*a))
MathildaLib.FixSignOperator: (+1+(*0.5*a))
MathildaLib.SwapOperator: (+1+(*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5)+1)
MathildaLib.SwapOperator: (+(*0.5*a)+1)
MathildaLib.SwapOperator: (+(/2*a)+1)
MathildaLib.SwapOperator: (+(*a/2)+1)
MathildaLib.SwapOperator: (+(*1)+(/2*a))
MathildaLib.FixSignOperator: (+(*1)+(*0.5*a))
MathildaLib.SwapOperator: (+(*1)+(*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5)+(*1))
MathildaLib.SwapOperator: (+(*0.5*a)+(*1))
MathildaLib.SwapOperator: (+(/2*a)+(*1))
MathildaLib.SwapOperator: (+(*a/2)+(*1))
MathildaLib.FixSignOperator: (+(*2*0.5)+(*a/2))
MathildaLib.SwapOperator: (+(*0.5*2)+(*a/2))
MathildaLib.SwapOperator: (+(*0.5*2)+(/2*a))
MathildaLib.FixSignOperator: (+(*0.5*2)+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*2)+(*a*0.5))
MathildaLib.SwapOperator: (+(*2*0.5)+(*a*0.5))
MathildaLib.SwapOperator: (+(*2*0.5)+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a)+(*2*0.5))
MathildaLib.SwapOperator: (+(*0.5*a)+(*0.5*2))
MathildaLib.SwapOperator: (+(*a*0.5)+(*0.5*2))
MathildaLib.SwapOperator: (+(*a*0.5)+(*2*0.5))
MathildaLib.SwapOperator: (+(*2*0.5)+(/2*a))
MathildaLib.SwapOperator: (+(/2*a)+(*2*0.5))
MathildaLib.SwapOperator: (+(/2*a)+(*0.5*2))
MathildaLib.SwapOperator: (+(*a/2)+(*0.5*2))
MathildaLib.SwapOperator: (+(*a/2)+(*2*0.5))
MathildaLib.SwapOperator: (+(*2/2)+(/2*a))
MathildaLib.FixSignOperator: (+(*2/2)+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a)+(*2/2))
MathildaLib.SwapOperator: (+(*0.5*a)+(/2*2))
MathildaLib.MultiplyOperator: (+(*0.5*a)+(/4))
MathildaLib.SwapOperator: (+(/4)+(*0.5*a))
MathildaLib.FixSignOperator: (+(*0.25)+(*0.5*a))
MathildaLib.LiftOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+0.25+(*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5)+0.25)
MathildaLib.SwapOperator: (+(*0.5*a)+0.25)
MathildaLib.SwapOperator: (+(*0.25)+(*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5)+(*0.25))
MathildaLib.SwapOperator: (+(*0.5*a)+(*0.25))
MathildaLib.SwapOperator: (+(/4)+(*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5)+(/4))
MathildaLib.SwapOperator: (+(/2*2)+(*0.5*a))
MathildaLib.SwapOperator: (+(/2*2)+(*a*0.5))
MathildaLib.SwapOperator: (+(*2/2)+(*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5)+(*2/2))
MathildaLib.SwapOperator: (+(*a*0.5)+(/2*2))
MathildaLib.SwapOperator: (+(/2*2)+(/2*a))
MathildaLib.MultiplyOperator: (+(/4)+(/2*a))
MathildaLib.FixSignOperator: (+(*0.25)+(/2*a))
MathildaLib.LiftOperator: (+0.25+(/2*a))
MathildaLib.SwapOperator: (+0.25+(*a/2))
MathildaLib.SwapOperator: (+(*a/2)+0.25)
MathildaLib.SwapOperator: (+(/2*a)+0.25)
MathildaLib.SwapOperator: (+(*0.25)+(*a/2))
MathildaLib.SwapOperator: (+(*a/2)+(*0.25))
MathildaLib.SwapOperator: (+(/2*a)+(*0.25))
MathildaLib.SwapOperator: (+(/4)+(*a/2))
MathildaLib.SwapOperator: (+(*a/2)+(/4))
MathildaLib.SwapOperator: (+(/2*a)+(/4))
MathildaLib.SwapOperator: (+(/2*2)+(*a/2))
MathildaLib.SwapOperator: (+(*a/2)+(/2*2))
MathildaLib.SwapOperator: (+(/2*a)+(/2*2))
MathildaLib.SwapOperator: (+(/2*a)+(*2/2))
MathildaLib.SwapOperator: (+(*a/2)+(*2/2))
MathildaLib.SwapOperator: (/2*(+a+2))
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*2*2)))
MathildaLib.SwapOperator: (+(*2*2)+(*2*a))
MathildaLib.ScalarProductOperator: (+(*4)+(*2*a))
MathildaLib.LiftOperator: (+4+(*2*a))
MathildaLib.SwapOperator: (+4+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+4)
MathildaLib.SwapOperator: (+(*2*a)+4)
MathildaLib.SwapOperator: (+(*4)+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+(*4))
MathildaLib.SwapOperator: (+(*2*a)+(*4))
MathildaLib.SwapOperator: (+(*2*2)+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+(*2*2))
MathildaLib.SwapOperator: (+(*2*a)+(*2*2))
MathildaLib.FixSignOperator: (*0.5*(+a+2))
MathildaLib.MultiplyOperator: (*(+(*0.5*a)+(*0.5*2)))
MathildaLib.SwapOperator: (*0.5*(+2+a))
MathildaLib.MultiplyOperator: (*(+(*0.5*2)+(*0.5*a)))
MathildaLib.SwapOperator: (*(+2+a)*0.5)
MathildaLib.MultiplyOperator: (*(+(*2*0.5)+(*a*0.5)))
MathildaLib.SwapOperator: (*(+a+2)*0.5)
MathildaLib.MultiplyOperator: (*(+(*a*0.5)+(*2*0.5)))
MathildaLib.SwapOperator: (/2*(+2+a))
MathildaLib.MultiplyOperator: (*(+(*2*2)+(*2*a)))
MathildaLib.SwapOperator: (*(+2+a)/2)
MathildaLib.MultiplyOperator: (*(+(*2/2)+(*a/2)))
========
MathildaLib.SwapOperator: (+1+(*0.5*a))
MathildaLib.SwapOperator: (+1+(*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5)+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivideByZero">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (/0)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (/0)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (/0)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivideByZero () [0x00045] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (/0)
MathildaLib.SwapOperator: (/0*1)
MathildaLib.ScalarProductOperator: (*Infinity)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestDualQuaternionModule">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:48</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T00:26:10</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T00:27:06</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T00:41:31</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:03:10</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:03:48</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:32:19</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:32:48</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:53:31</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:55:25</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:55:48</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:56:26</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:46:40</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:52:55</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:53:55</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:54:26</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:54:43</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:54:55</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:55:51</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:56:08</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:57:35</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:58:18</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:58:51</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T12:59:58</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:00:39</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:01:12</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:02:27</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:07:26</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:08:11</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:08:29</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:09:08</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:09:42</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:10:03</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:10:32</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:11:38</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:11:53</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:13:02</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:13:42</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:13:56</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T13:15:05</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:49:17</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Connection refused</Message>
              <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,03ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,03ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestCase">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00024] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*a0^1*b0^1+-1*a2^1*b2^1+-1*a4^1*b4^1+-1*a6^1*b6^1)/(+1),(+1*a0^1*b1^1+1*a1^1*b0^1+-1*a2^1*b3^1+-1*a3^1*b2^1+-1*a4^1*b5^1+-1*a5^1*b4^1+-1*a6^1*b7^1+-1*a7^1*b6^1)/(+1)},{(+1*a0^1*b2^1+1*a2^1*b0^1+1*a4^1*b6^1+-1*a6^1*b4^1)/(+1),(+1*a0^1*b3^1+1*a1^1*b2^1+1*a2^1*b1^1+1*a3^1*b0^1+1*a4^1*b7^1+1*a5^1*b6^1+-1*a6^1*b5^1+-1*a7^1*b4^1)/(+1)},{(+1*a0^1*b4^1+-1*a2^1*b6^1+1*a4^1*b0^1+1*a6^1*b2^1)/(+1),(+1*a0^1*b5^1+1*a1^1*b4^1+-1*a2^1*b7^1+-1*a3^1*b6^1+1*a4^1*b1^1+1*a5^1*b0^1+1*a6^1*b3^1+1*a7^1*b2^1)/(+1)},{(+1*a0^1*b6^1+1*a2^1*b4^1+-1*a4^1*b2^1+1*a6^1*b0^1)/(+1),(+1*a0^1*b7^1+1*a1^1*b6^1+1*a2^1*b5^1+1*a3^1*b4^1+-1*a4^1*b3^1+-1*a5^1*b2^1+1*a6^1*b1^1+1*a7^1*b0^1)/(+1)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:48</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00024] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*a0^1*b0^1+-1*a2^1*b2^1+-1*a4^1*b4^1+-1*a6^1*b6^1)/(+1),(+1*a0^1*b1^1+1*a1^1*b0^1+-1*a2^1*b3^1+-1*a3^1*b2^1+-1*a4^1*b5^1+-1*a5^1*b4^1+-1*a6^1*b7^1+-1*a7^1*b6^1)/(+1)},{(+1*a0^1*b2^1+1*a2^1*b0^1+1*a4^1*b6^1+-1*a6^1*b4^1)/(+1),(+1*a0^1*b3^1+1*a1^1*b2^1+1*a2^1*b1^1+1*a3^1*b0^1+1*a4^1*b7^1+1*a5^1*b6^1+-1*a6^1*b5^1+-1*a7^1*b4^1)/(+1)},{(+1*a0^1*b4^1+-1*a2^1*b6^1+1*a4^1*b0^1+1*a6^1*b2^1)/(+1),(+1*a0^1*b5^1+1*a1^1*b4^1+-1*a2^1*b7^1+-1*a3^1*b6^1+1*a4^1*b1^1+1*a5^1*b0^1+1*a6^1*b3^1+1*a7^1*b2^1)/(+1)},{(+1*a0^1*b6^1+1*a2^1*b4^1+-1*a4^1*b2^1+1*a6^1*b0^1)/(+1),(+1*a0^1*b7^1+1*a1^1*b6^1+1*a2^1*b5^1+1*a3^1*b4^1+-1*a4^1*b3^1+-1*a5^1*b2^1+1*a6^1*b1^1+1*a7^1*b0^1)/(+1)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:26:10</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0002a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(a0*b0-a2*b2-a4*b4-a6*b6),(+1*a0^1*b1^1+1*a1^1*b0^1+-1*a2^1*b3^1+-1*a3^1*b2^1+-1*a4^1*b5^1+-1*a5^1*b4^1+-1*a6^1*b7^1+-1*a7^1*b6^1)/(+1)},{(a0*b2+a2*b0+a4*b6-a6*b4),(+1*a0^1*b3^1+1*a1^1*b2^1+1*a2^1*b1^1+1*a3^1*b0^1+1*a4^1*b7^1+1*a5^1*b6^1+-1*a6^1*b5^1+-1*a7^1*b4^1)/(+1)},{(a0*b4-a2*b6+a4*b0+a6*b2),(+1*a0^1*b5^1+1*a1^1*b4^1+-1*a2^1*b7^1+-1*a3^1*b6^1+1*a4^1*b1^1+1*a5^1*b0^1+1*a6^1*b3^1+1*a7^1*b2^1)/(+1)},{(a0*b6+a2*b4-a4*b2+a6*b0),(+1*a0^1*b7^1+1*a1^1*b6^1+1*a2^1*b5^1+1*a3^1*b4^1+-1*a4^1*b3^1+-1*a5^1*b2^1+1*a6^1*b1^1+1*a7^1*b0^1)/(+1)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:27:06</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0002a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(a0*b0-a2*b2-a4*b4-a6*b6),(a0*b1+a1*b0-a2*b3-a3*b2-a4*b5-a5*b4-a6*b7-a7*b6)},{(a0*b2+a2*b0+a4*b6-a6*b4),(a0*b3+a1*b2+a2*b1+a3*b0+a4*b7+a5*b6-a6*b5-a7*b4)},{(a0*b4-a2*b6+a4*b0+a6*b2),(a0*b5+a1*b4-a2*b7-a3*b6+a4*b1+a5*b0+a6*b3+a7*b2)},{(a0*b6+a2*b4-a4*b2+a6*b0),(a0*b7+a1*b6+a2*b5+a3*b4-a4*b3-a5*b2+a6*b1+a7*b0)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:41:31</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0002a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(a[0]*b[0]-a[2]*b[2]-a[4]*b[4]-a[6]*b[6]),(a[0]*b[1]+a[1]*b[0]-a[2]*b[3]-a[3]*b[2]-a[4]*b[5]-a[5]*b[4]-a[6]*b[7]-a[7]*b[6])},{(a[0]*b[2]+a[2]*b[0]+a[4]*b[6]-a[6]*b[4]),(a[0]*b[3]+a[1]*b[2]+a[2]*b[1]+a[3]*b[0]+a[4]*b[7]+a[5]*b[6]-a[6]*b[5]-a[7]*b[4])},{(a[0]*b[4]-a[2]*b[6]+a[4]*b[0]+a[6]*b[2]),(a[0]*b[5]+a[1]*b[4]-a[2]*b[7]-a[3]*b[6]+a[4]*b[1]+a[5]*b[0]+a[6]*b[3]+a[7]*b[2])},{(a[0]*b[6]+a[2]*b[4]-a[4]*b[2]+a[6]*b[0]),(a[0]*b[7]+a[1]*b[6]+a[2]*b[5]+a[3]*b[4]-a[4]*b[3]-a[5]*b[2]+a[6]*b[1]+a[7]*b[0])}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:03:10</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0002a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(cos(a/2)*cos(b/2)-3*sin(a/2)*sin(b/2)),()},{(cos(a/2)*sin(b/2)+cos(b/2)*sin(a/2)+0*sin(a/2)*sin(b/2)),()},{(cos(a/2)*sin(b/2)+cos(b/2)*sin(a/2)+0*sin(a/2)*sin(b/2)),()},{(cos(a/2)*sin(b/2)+cos(b/2)*sin(a/2)),()}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:03:48</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0002a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*cos(a/2)^1*cos(b/2)^1+-3*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1+0*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1+0*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0002a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*cos(a/2)^1*cos(b/2)^1+-3*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1+0*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1+0*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:32:19</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0002a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*cos(a/2)^1*cos(b/2)^1+-3*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:32:48</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00030] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:19 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*cos(a/2)^1*cos(b/2)^1+-3*sin(a/2)^1*sin(b/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)},{(+1*cos(a/2)^1*sin(b/2)^1+1*cos(b/2)^1*sin(a/2)^1)/(+1),()/(+1)}}
{{(cos(a/2)*cos(b/2)-3*sin(a/2)*sin(b/2)),0},{(cos(a/2)*sin(b/2)+cos(b/2)*sin(a/2)),0},{(cos(a/2)*sin(b/2)+cos(b/2)*sin(a/2)),0},{(cos(a/2)*sin(b/2)+cos(b/2)*sin(a/2)),0}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:53:31</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00049] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:21 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+-1*cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6+-6*cos(a/2)^6*sin(a/2)^2)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+28697814*cos(a/2)^1*sin(a/2)^31*x^1+28697814*cos(a/2)^1*sin(a/2)^31*y^1+28697814*cos(a/2)^1*sin(a/2)^31*z^1+143489070*cos(a/2)^3*sin(a/2)^29*x^1+143489070*cos(a/2)^3*sin(a/2)^29*y^1+143489070*cos(a/2)^3*sin(a/2)^29*z^1+334807830*cos(a/2)^5*sin(a/2)^27*x^1+334807830*cos(a/2)^5*sin(a/2)^27*y^1+334807830*cos(a/2)^5*sin(a/2)^27*z^1+483611310*cos(a/2)^7*sin(a/2)^25*x^1+483611310*cos(a/2)^7*sin(a/2)^25*y^1+483611310*cos(a/2)^7*sin(a/2)^25*z^1+483611310*cos(a/2)^9*sin(a/2)^23*x^1+483611310*cos(a/2)^9*sin(a/2)^23*y^1+483611310*cos(a/2)^9*sin(a/2)^23*z^1+354648294*cos(a/2)^11*sin(a/2)^21*x^1+354648294*cos(a/2)^11*sin(a/2)^21*y^1+354648294*cos(a/2)^11*sin(a/2)^21*z^1+197026830*cos(a/2)^13*sin(a/2)^19*x^1+197026830*cos(a/2)^13*sin(a/2)^19*y^1+197026830*cos(a/2)^13*sin(a/2)^19*z^1+84440070*cos(a/2)^15*sin(a/2)^17*x^1+84440070*cos(a/2)^15*sin(a/2)^17*y^1+84440070*cos(a/2)^15*sin(a/2)^17*z^1+28146690*cos(a/2)^17*sin(a/2)^15*x^1+28146690*cos(a/2)^17*sin(a/2)^15*y^1+28146690*cos(a/2)^17*sin(a/2)^15*z^1+7297290*cos(a/2)^19*sin(a/2)^13*x^1+7297290*cos(a/2)^19*sin(a/2)^13*y^1+7297290*cos(a/2)^19*sin(a/2)^13*z^1+1459458*cos(a/2)^21*sin(a/2)^11*x^1+1459458*cos(a/2)^21*sin(a/2)^11*y^1+1459458*cos(a/2)^21*sin(a/2)^11*z^1+221130*cos(a/2)^23*sin(a/2)^9*x^1+221130*cos(a/2)^23*sin(a/2)^9*y^1+221130*cos(a/2)^23*sin(a/2)^9*z^1+24570*cos(a/2)^25*sin(a/2)^7*x^1+24570*cos(a/2)^25*sin(a/2)^7*y^1+24570*cos(a/2)^25*sin(a/2)^7*z^1+1890*cos(a/2)^27*sin(a/2)^5*x^1+1890*cos(a/2)^27*sin(a/2)^5*y^1+1890*cos(a/2)^27*sin(a/2)^5*z^1+90*cos(a/2)^29*sin(a/2)^3*x^1+90*cos(a/2)^29*sin(a/2)^3*y^1+90*cos(a/2)^29*sin(a/2)^3*z^1+2*cos(a/2)^31*sin(a/2)^1*x^1+2*cos(a/2)^31*sin(a/2)^1*y^1+2*cos(a/2)^31*sin(a/2)^1*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*x^1+-14348907*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+-86093442*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+-239148450*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+-409209570*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+-483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+-419129802*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+-275837562*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+-140733450*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+-56293380*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+-17721990*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+-4378374*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+-840294*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+-122850*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+-13230*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+-990*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+-46*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*y^1+28697814*sin(a/2)^32*x^1+-14348907*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+-86093442*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+-239148450*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+-409209570*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+-483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+-419129802*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+-275837562*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+-140733450*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+-56293380*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+-17721990*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+-4378374*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+-840294*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+-122850*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+-13230*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+-990*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+-46*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*z^1+28697814*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+-14348907*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+-86093442*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+-239148450*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+-409209570*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+-483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+-419129802*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+-275837562*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+-140733450*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+-56293380*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+-17721990*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+-4378374*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+-840294*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+-122850*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+-13230*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+-990*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+-46*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
{{(-cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6-6*cos(a/2)^6*sin(a/2)^2)/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(28697814*cos(a/2)*sin(a/2)^31*x+28697814*cos(a/2)*sin(a/2)^31*y+28697814*cos(a/2)*sin(a/2)^31*z+143489070*cos(a/2)^3*sin(a/2)^29*x+143489070*cos(a/2)^3*sin(a/2)^29*y+143489070*cos(a/2)^3*sin(a/2)^29*z+334807830*cos(a/2)^5*sin(a/2)^27*x+334807830*cos(a/2)^5*sin(a/2)^27*y+334807830*cos(a/2)^5*sin(a/2)^27*z+483611310*cos(a/2)^7*sin(a/2)^25*x+483611310*cos(a/2)^7*sin(a/2)^25*y+483611310*cos(a/2)^7*sin(a/2)^25*z+483611310*cos(a/2)^9*sin(a/2)^23*x+483611310*cos(a/2)^9*sin(a/2)^23*y+483611310*cos(a/2)^9*sin(a/2)^23*z+354648294*cos(a/2)^11*sin(a/2)^21*x+354648294*cos(a/2)^11*sin(a/2)^21*y+354648294*cos(a/2)^11*sin(a/2)^21*z+197026830*cos(a/2)^13*sin(a/2)^19*x+197026830*cos(a/2)^13*sin(a/2)^19*y+197026830*cos(a/2)^13*sin(a/2)^19*z+84440070*cos(a/2)^15*sin(a/2)^17*x+84440070*cos(a/2)^15*sin(a/2)^17*y+84440070*cos(a/2)^15*sin(a/2)^17*z+28146690*cos(a/2)^17*sin(a/2)^15*x+28146690*cos(a/2)^17*sin(a/2)^15*y+28146690*cos(a/2)^17*sin(a/2)^15*z+7297290*cos(a/2)^19*sin(a/2)^13*x+7297290*cos(a/2)^19*sin(a/2)^13*y+7297290*cos(a/2)^19*sin(a/2)^13*z+1459458*cos(a/2)^21*sin(a/2)^11*x+1459458*cos(a/2)^21*sin(a/2)^11*y+1459458*cos(a/2)^21*sin(a/2)^11*z+221130*cos(a/2)^23*sin(a/2)^9*x+221130*cos(a/2)^23*sin(a/2)^9*y+221130*cos(a/2)^23*sin(a/2)^9*z+24570*cos(a/2)^25*sin(a/2)^7*x+24570*cos(a/2)^25*sin(a/2)^7*y+24570*cos(a/2)^25*sin(a/2)^7*z+1890*cos(a/2)^27*sin(a/2)^5*x+1890*cos(a/2)^27*sin(a/2)^5*y+1890*cos(a/2)^27*sin(a/2)^5*z+90*cos(a/2)^29*sin(a/2)^3*x+90*cos(a/2)^29*sin(a/2)^3*y+90*cos(a/2)^29*sin(a/2)^3*z+2*cos(a/2)^31*sin(a/2)*x+2*cos(a/2)^31*sin(a/2)*y+2*cos(a/2)^31*sin(a/2)*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*x-14348907*sin(a/2)^32*x+28697814*sin(a/2)^32*y+28697814*sin(a/2)^32*z-86093442*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z-239148450*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z-409209570*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z-483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z-419129802*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z-275837562*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z-140733450*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z-56293380*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z-17721990*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z-4378374*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z-840294*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z-122850*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z-13230*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z-990*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z-46*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*y+28697814*sin(a/2)^32*x-14348907*sin(a/2)^32*y+28697814*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x-86093442*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x-239148450*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x-409209570*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x-483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x-419129802*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x-275837562*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x-140733450*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x-56293380*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x-17721990*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x-4378374*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x-840294*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x-122850*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x-13230*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x-990*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x-46*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*z+28697814*sin(a/2)^32*x+28697814*sin(a/2)^32*y-14348907*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y-86093442*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y-239148450*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y-409209570*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y-483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y-419129802*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y-275837562*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y-140733450*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y-56293380*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y-17721990*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y-4378374*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y-840294*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y-122850*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y-13230*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y-990*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y-46*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:55:25</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:24 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*cos(a/2)^1)/(+1),(+0)/(+1)},{(+1*sin(a/2)^1)/(+1),(+0)/(+1)},{(+1*sin(a/2)^1)/(+1),(+0)/(+1)},{(+1*sin(a/2)^1)/(+1),(+0)/(+1)}}
{{(+-1*cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6+-6*cos(a/2)^6*sin(a/2)^2)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+28697814*cos(a/2)^1*sin(a/2)^31*x^1+28697814*cos(a/2)^1*sin(a/2)^31*y^1+28697814*cos(a/2)^1*sin(a/2)^31*z^1+143489070*cos(a/2)^3*sin(a/2)^29*x^1+143489070*cos(a/2)^3*sin(a/2)^29*y^1+143489070*cos(a/2)^3*sin(a/2)^29*z^1+334807830*cos(a/2)^5*sin(a/2)^27*x^1+334807830*cos(a/2)^5*sin(a/2)^27*y^1+334807830*cos(a/2)^5*sin(a/2)^27*z^1+483611310*cos(a/2)^7*sin(a/2)^25*x^1+483611310*cos(a/2)^7*sin(a/2)^25*y^1+483611310*cos(a/2)^7*sin(a/2)^25*z^1+483611310*cos(a/2)^9*sin(a/2)^23*x^1+483611310*cos(a/2)^9*sin(a/2)^23*y^1+483611310*cos(a/2)^9*sin(a/2)^23*z^1+354648294*cos(a/2)^11*sin(a/2)^21*x^1+354648294*cos(a/2)^11*sin(a/2)^21*y^1+354648294*cos(a/2)^11*sin(a/2)^21*z^1+197026830*cos(a/2)^13*sin(a/2)^19*x^1+197026830*cos(a/2)^13*sin(a/2)^19*y^1+197026830*cos(a/2)^13*sin(a/2)^19*z^1+84440070*cos(a/2)^15*sin(a/2)^17*x^1+84440070*cos(a/2)^15*sin(a/2)^17*y^1+84440070*cos(a/2)^15*sin(a/2)^17*z^1+28146690*cos(a/2)^17*sin(a/2)^15*x^1+28146690*cos(a/2)^17*sin(a/2)^15*y^1+28146690*cos(a/2)^17*sin(a/2)^15*z^1+7297290*cos(a/2)^19*sin(a/2)^13*x^1+7297290*cos(a/2)^19*sin(a/2)^13*y^1+7297290*cos(a/2)^19*sin(a/2)^13*z^1+1459458*cos(a/2)^21*sin(a/2)^11*x^1+1459458*cos(a/2)^21*sin(a/2)^11*y^1+1459458*cos(a/2)^21*sin(a/2)^11*z^1+221130*cos(a/2)^23*sin(a/2)^9*x^1+221130*cos(a/2)^23*sin(a/2)^9*y^1+221130*cos(a/2)^23*sin(a/2)^9*z^1+24570*cos(a/2)^25*sin(a/2)^7*x^1+24570*cos(a/2)^25*sin(a/2)^7*y^1+24570*cos(a/2)^25*sin(a/2)^7*z^1+1890*cos(a/2)^27*sin(a/2)^5*x^1+1890*cos(a/2)^27*sin(a/2)^5*y^1+1890*cos(a/2)^27*sin(a/2)^5*z^1+90*cos(a/2)^29*sin(a/2)^3*x^1+90*cos(a/2)^29*sin(a/2)^3*y^1+90*cos(a/2)^29*sin(a/2)^3*z^1+2*cos(a/2)^31*sin(a/2)^1*x^1+2*cos(a/2)^31*sin(a/2)^1*y^1+2*cos(a/2)^31*sin(a/2)^1*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*x^1+-14348907*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+-86093442*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+-239148450*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+-409209570*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+-483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+-419129802*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+-275837562*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+-140733450*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+-56293380*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+-17721990*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+-4378374*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+-840294*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+-122850*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+-13230*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+-990*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+-46*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*y^1+28697814*sin(a/2)^32*x^1+-14348907*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+-86093442*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+-239148450*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+-409209570*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+-483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+-419129802*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+-275837562*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+-140733450*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+-56293380*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+-17721990*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+-4378374*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+-840294*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+-122850*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+-13230*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+-990*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+-46*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*z^1+28697814*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+-14348907*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+-86093442*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+-239148450*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+-409209570*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+-483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+-419129802*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+-275837562*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+-140733450*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+-56293380*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+-17721990*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+-4378374*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+-840294*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+-122850*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+-13230*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+-990*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+-46*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
{{(-cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6-6*cos(a/2)^6*sin(a/2)^2)/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(28697814*cos(a/2)*sin(a/2)^31*x+28697814*cos(a/2)*sin(a/2)^31*y+28697814*cos(a/2)*sin(a/2)^31*z+143489070*cos(a/2)^3*sin(a/2)^29*x+143489070*cos(a/2)^3*sin(a/2)^29*y+143489070*cos(a/2)^3*sin(a/2)^29*z+334807830*cos(a/2)^5*sin(a/2)^27*x+334807830*cos(a/2)^5*sin(a/2)^27*y+334807830*cos(a/2)^5*sin(a/2)^27*z+483611310*cos(a/2)^7*sin(a/2)^25*x+483611310*cos(a/2)^7*sin(a/2)^25*y+483611310*cos(a/2)^7*sin(a/2)^25*z+483611310*cos(a/2)^9*sin(a/2)^23*x+483611310*cos(a/2)^9*sin(a/2)^23*y+483611310*cos(a/2)^9*sin(a/2)^23*z+354648294*cos(a/2)^11*sin(a/2)^21*x+354648294*cos(a/2)^11*sin(a/2)^21*y+354648294*cos(a/2)^11*sin(a/2)^21*z+197026830*cos(a/2)^13*sin(a/2)^19*x+197026830*cos(a/2)^13*sin(a/2)^19*y+197026830*cos(a/2)^13*sin(a/2)^19*z+84440070*cos(a/2)^15*sin(a/2)^17*x+84440070*cos(a/2)^15*sin(a/2)^17*y+84440070*cos(a/2)^15*sin(a/2)^17*z+28146690*cos(a/2)^17*sin(a/2)^15*x+28146690*cos(a/2)^17*sin(a/2)^15*y+28146690*cos(a/2)^17*sin(a/2)^15*z+7297290*cos(a/2)^19*sin(a/2)^13*x+7297290*cos(a/2)^19*sin(a/2)^13*y+7297290*cos(a/2)^19*sin(a/2)^13*z+1459458*cos(a/2)^21*sin(a/2)^11*x+1459458*cos(a/2)^21*sin(a/2)^11*y+1459458*cos(a/2)^21*sin(a/2)^11*z+221130*cos(a/2)^23*sin(a/2)^9*x+221130*cos(a/2)^23*sin(a/2)^9*y+221130*cos(a/2)^23*sin(a/2)^9*z+24570*cos(a/2)^25*sin(a/2)^7*x+24570*cos(a/2)^25*sin(a/2)^7*y+24570*cos(a/2)^25*sin(a/2)^7*z+1890*cos(a/2)^27*sin(a/2)^5*x+1890*cos(a/2)^27*sin(a/2)^5*y+1890*cos(a/2)^27*sin(a/2)^5*z+90*cos(a/2)^29*sin(a/2)^3*x+90*cos(a/2)^29*sin(a/2)^3*y+90*cos(a/2)^29*sin(a/2)^3*z+2*cos(a/2)^31*sin(a/2)*x+2*cos(a/2)^31*sin(a/2)*y+2*cos(a/2)^31*sin(a/2)*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*x-14348907*sin(a/2)^32*x+28697814*sin(a/2)^32*y+28697814*sin(a/2)^32*z-86093442*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z-239148450*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z-409209570*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z-483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z-419129802*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z-275837562*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z-140733450*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z-56293380*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z-17721990*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z-4378374*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z-840294*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z-122850*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z-13230*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z-990*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z-46*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*y+28697814*sin(a/2)^32*x-14348907*sin(a/2)^32*y+28697814*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x-86093442*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x-239148450*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x-409209570*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x-483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x-419129802*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x-275837562*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x-140733450*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x-56293380*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x-17721990*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x-4378374*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x-840294*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x-122850*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x-13230*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x-990*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x-46*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*z+28697814*sin(a/2)^32*x+28697814*sin(a/2)^32*y-14348907*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y-86093442*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y-239148450*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y-409209570*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y-483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y-419129802*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y-275837562*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y-140733450*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y-56293380*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y-17721990*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y-4378374*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y-840294*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y-122850*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y-13230*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y-990*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y-46*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:55:48</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0005a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:25 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(cos(a/2)),(0)},{(sin(a/2)),(0)},{(sin(a/2)),(0)},{(sin(a/2)),(0)}}

{{(+-1*cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6+-6*cos(a/2)^6*sin(a/2)^2)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+28697814*cos(a/2)^1*sin(a/2)^31*x^1+28697814*cos(a/2)^1*sin(a/2)^31*y^1+28697814*cos(a/2)^1*sin(a/2)^31*z^1+143489070*cos(a/2)^3*sin(a/2)^29*x^1+143489070*cos(a/2)^3*sin(a/2)^29*y^1+143489070*cos(a/2)^3*sin(a/2)^29*z^1+334807830*cos(a/2)^5*sin(a/2)^27*x^1+334807830*cos(a/2)^5*sin(a/2)^27*y^1+334807830*cos(a/2)^5*sin(a/2)^27*z^1+483611310*cos(a/2)^7*sin(a/2)^25*x^1+483611310*cos(a/2)^7*sin(a/2)^25*y^1+483611310*cos(a/2)^7*sin(a/2)^25*z^1+483611310*cos(a/2)^9*sin(a/2)^23*x^1+483611310*cos(a/2)^9*sin(a/2)^23*y^1+483611310*cos(a/2)^9*sin(a/2)^23*z^1+354648294*cos(a/2)^11*sin(a/2)^21*x^1+354648294*cos(a/2)^11*sin(a/2)^21*y^1+354648294*cos(a/2)^11*sin(a/2)^21*z^1+197026830*cos(a/2)^13*sin(a/2)^19*x^1+197026830*cos(a/2)^13*sin(a/2)^19*y^1+197026830*cos(a/2)^13*sin(a/2)^19*z^1+84440070*cos(a/2)^15*sin(a/2)^17*x^1+84440070*cos(a/2)^15*sin(a/2)^17*y^1+84440070*cos(a/2)^15*sin(a/2)^17*z^1+28146690*cos(a/2)^17*sin(a/2)^15*x^1+28146690*cos(a/2)^17*sin(a/2)^15*y^1+28146690*cos(a/2)^17*sin(a/2)^15*z^1+7297290*cos(a/2)^19*sin(a/2)^13*x^1+7297290*cos(a/2)^19*sin(a/2)^13*y^1+7297290*cos(a/2)^19*sin(a/2)^13*z^1+1459458*cos(a/2)^21*sin(a/2)^11*x^1+1459458*cos(a/2)^21*sin(a/2)^11*y^1+1459458*cos(a/2)^21*sin(a/2)^11*z^1+221130*cos(a/2)^23*sin(a/2)^9*x^1+221130*cos(a/2)^23*sin(a/2)^9*y^1+221130*cos(a/2)^23*sin(a/2)^9*z^1+24570*cos(a/2)^25*sin(a/2)^7*x^1+24570*cos(a/2)^25*sin(a/2)^7*y^1+24570*cos(a/2)^25*sin(a/2)^7*z^1+1890*cos(a/2)^27*sin(a/2)^5*x^1+1890*cos(a/2)^27*sin(a/2)^5*y^1+1890*cos(a/2)^27*sin(a/2)^5*z^1+90*cos(a/2)^29*sin(a/2)^3*x^1+90*cos(a/2)^29*sin(a/2)^3*y^1+90*cos(a/2)^29*sin(a/2)^3*z^1+2*cos(a/2)^31*sin(a/2)^1*x^1+2*cos(a/2)^31*sin(a/2)^1*y^1+2*cos(a/2)^31*sin(a/2)^1*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*x^1+-14348907*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+-86093442*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+-239148450*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+-409209570*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+-483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+-419129802*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+-275837562*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+-140733450*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+-56293380*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+-17721990*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+-4378374*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+-840294*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+-122850*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+-13230*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+-990*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+-46*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*y^1+28697814*sin(a/2)^32*x^1+-14348907*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+-86093442*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+-239148450*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+-409209570*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+-483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+-419129802*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+-275837562*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+-140733450*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+-56293380*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+-17721990*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+-4378374*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+-840294*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+-122850*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+-13230*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+-990*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+-46*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*z^1+28697814*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+-14348907*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+-86093442*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+-239148450*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+-409209570*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+-483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+-419129802*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+-275837562*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+-140733450*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+-56293380*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+-17721990*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+-4378374*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+-840294*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+-122850*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+-13230*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+-990*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+-46*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
{{(-cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6-6*cos(a/2)^6*sin(a/2)^2)/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(28697814*cos(a/2)*sin(a/2)^31*x+28697814*cos(a/2)*sin(a/2)^31*y+28697814*cos(a/2)*sin(a/2)^31*z+143489070*cos(a/2)^3*sin(a/2)^29*x+143489070*cos(a/2)^3*sin(a/2)^29*y+143489070*cos(a/2)^3*sin(a/2)^29*z+334807830*cos(a/2)^5*sin(a/2)^27*x+334807830*cos(a/2)^5*sin(a/2)^27*y+334807830*cos(a/2)^5*sin(a/2)^27*z+483611310*cos(a/2)^7*sin(a/2)^25*x+483611310*cos(a/2)^7*sin(a/2)^25*y+483611310*cos(a/2)^7*sin(a/2)^25*z+483611310*cos(a/2)^9*sin(a/2)^23*x+483611310*cos(a/2)^9*sin(a/2)^23*y+483611310*cos(a/2)^9*sin(a/2)^23*z+354648294*cos(a/2)^11*sin(a/2)^21*x+354648294*cos(a/2)^11*sin(a/2)^21*y+354648294*cos(a/2)^11*sin(a/2)^21*z+197026830*cos(a/2)^13*sin(a/2)^19*x+197026830*cos(a/2)^13*sin(a/2)^19*y+197026830*cos(a/2)^13*sin(a/2)^19*z+84440070*cos(a/2)^15*sin(a/2)^17*x+84440070*cos(a/2)^15*sin(a/2)^17*y+84440070*cos(a/2)^15*sin(a/2)^17*z+28146690*cos(a/2)^17*sin(a/2)^15*x+28146690*cos(a/2)^17*sin(a/2)^15*y+28146690*cos(a/2)^17*sin(a/2)^15*z+7297290*cos(a/2)^19*sin(a/2)^13*x+7297290*cos(a/2)^19*sin(a/2)^13*y+7297290*cos(a/2)^19*sin(a/2)^13*z+1459458*cos(a/2)^21*sin(a/2)^11*x+1459458*cos(a/2)^21*sin(a/2)^11*y+1459458*cos(a/2)^21*sin(a/2)^11*z+221130*cos(a/2)^23*sin(a/2)^9*x+221130*cos(a/2)^23*sin(a/2)^9*y+221130*cos(a/2)^23*sin(a/2)^9*z+24570*cos(a/2)^25*sin(a/2)^7*x+24570*cos(a/2)^25*sin(a/2)^7*y+24570*cos(a/2)^25*sin(a/2)^7*z+1890*cos(a/2)^27*sin(a/2)^5*x+1890*cos(a/2)^27*sin(a/2)^5*y+1890*cos(a/2)^27*sin(a/2)^5*z+90*cos(a/2)^29*sin(a/2)^3*x+90*cos(a/2)^29*sin(a/2)^3*y+90*cos(a/2)^29*sin(a/2)^3*z+2*cos(a/2)^31*sin(a/2)*x+2*cos(a/2)^31*sin(a/2)*y+2*cos(a/2)^31*sin(a/2)*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*x-14348907*sin(a/2)^32*x+28697814*sin(a/2)^32*y+28697814*sin(a/2)^32*z-86093442*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z-239148450*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z-409209570*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z-483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z-419129802*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z-275837562*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z-140733450*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z-56293380*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z-17721990*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z-4378374*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z-840294*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z-122850*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z-13230*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z-990*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z-46*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*y+28697814*sin(a/2)^32*x-14348907*sin(a/2)^32*y+28697814*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x-86093442*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x-239148450*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x-409209570*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x-483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x-419129802*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x-275837562*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x-140733450*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x-56293380*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x-17721990*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x-4378374*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x-840294*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x-122850*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x-13230*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x-990*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x-46*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*z+28697814*sin(a/2)^32*x+28697814*sin(a/2)^32*y-14348907*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y-86093442*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y-239148450*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y-409209570*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y-483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y-419129802*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y-275837562*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y-140733450*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y-56293380*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y-17721990*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y-4378374*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y-840294*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y-122850*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y-13230*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y-990*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y-46*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:56:26</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0006b] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:26 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(cos(a/2)),(0)},{(sin(a/2)),(0)},{(sin(a/2)),(0)},{(sin(a/2)),(0)}}
{{(-cos(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0},{(-sin(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0},{(-sin(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0},{(-sin(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0}}

{{(+-1*cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6+-6*cos(a/2)^6*sin(a/2)^2)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+28697814*cos(a/2)^1*sin(a/2)^31*x^1+28697814*cos(a/2)^1*sin(a/2)^31*y^1+28697814*cos(a/2)^1*sin(a/2)^31*z^1+143489070*cos(a/2)^3*sin(a/2)^29*x^1+143489070*cos(a/2)^3*sin(a/2)^29*y^1+143489070*cos(a/2)^3*sin(a/2)^29*z^1+334807830*cos(a/2)^5*sin(a/2)^27*x^1+334807830*cos(a/2)^5*sin(a/2)^27*y^1+334807830*cos(a/2)^5*sin(a/2)^27*z^1+483611310*cos(a/2)^7*sin(a/2)^25*x^1+483611310*cos(a/2)^7*sin(a/2)^25*y^1+483611310*cos(a/2)^7*sin(a/2)^25*z^1+483611310*cos(a/2)^9*sin(a/2)^23*x^1+483611310*cos(a/2)^9*sin(a/2)^23*y^1+483611310*cos(a/2)^9*sin(a/2)^23*z^1+354648294*cos(a/2)^11*sin(a/2)^21*x^1+354648294*cos(a/2)^11*sin(a/2)^21*y^1+354648294*cos(a/2)^11*sin(a/2)^21*z^1+197026830*cos(a/2)^13*sin(a/2)^19*x^1+197026830*cos(a/2)^13*sin(a/2)^19*y^1+197026830*cos(a/2)^13*sin(a/2)^19*z^1+84440070*cos(a/2)^15*sin(a/2)^17*x^1+84440070*cos(a/2)^15*sin(a/2)^17*y^1+84440070*cos(a/2)^15*sin(a/2)^17*z^1+28146690*cos(a/2)^17*sin(a/2)^15*x^1+28146690*cos(a/2)^17*sin(a/2)^15*y^1+28146690*cos(a/2)^17*sin(a/2)^15*z^1+7297290*cos(a/2)^19*sin(a/2)^13*x^1+7297290*cos(a/2)^19*sin(a/2)^13*y^1+7297290*cos(a/2)^19*sin(a/2)^13*z^1+1459458*cos(a/2)^21*sin(a/2)^11*x^1+1459458*cos(a/2)^21*sin(a/2)^11*y^1+1459458*cos(a/2)^21*sin(a/2)^11*z^1+221130*cos(a/2)^23*sin(a/2)^9*x^1+221130*cos(a/2)^23*sin(a/2)^9*y^1+221130*cos(a/2)^23*sin(a/2)^9*z^1+24570*cos(a/2)^25*sin(a/2)^7*x^1+24570*cos(a/2)^25*sin(a/2)^7*y^1+24570*cos(a/2)^25*sin(a/2)^7*z^1+1890*cos(a/2)^27*sin(a/2)^5*x^1+1890*cos(a/2)^27*sin(a/2)^5*y^1+1890*cos(a/2)^27*sin(a/2)^5*z^1+90*cos(a/2)^29*sin(a/2)^3*x^1+90*cos(a/2)^29*sin(a/2)^3*y^1+90*cos(a/2)^29*sin(a/2)^3*z^1+2*cos(a/2)^31*sin(a/2)^1*x^1+2*cos(a/2)^31*sin(a/2)^1*y^1+2*cos(a/2)^31*sin(a/2)^1*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*x^1+-14348907*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+-86093442*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+-239148450*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+-409209570*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+-483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+-419129802*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+-275837562*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+-140733450*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+-56293380*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+-17721990*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+-4378374*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+-840294*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+-122850*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+-13230*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+-990*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+-46*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*y^1+28697814*sin(a/2)^32*x^1+-14348907*sin(a/2)^32*y^1+28697814*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+-86093442*cos(a/2)^2*sin(a/2)^30*y^1+143489070*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+-239148450*cos(a/2)^4*sin(a/2)^28*y^1+334807830*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+-409209570*cos(a/2)^6*sin(a/2)^26*y^1+483611310*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+-483611310*cos(a/2)^8*sin(a/2)^24*y^1+483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+-419129802*cos(a/2)^10*sin(a/2)^22*y^1+354648294*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+-275837562*cos(a/2)^12*sin(a/2)^20*y^1+197026830*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+-140733450*cos(a/2)^14*sin(a/2)^18*y^1+84440070*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+-56293380*cos(a/2)^16*sin(a/2)^16*y^1+28146690*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+-17721990*cos(a/2)^18*sin(a/2)^14*y^1+7297290*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+-4378374*cos(a/2)^20*sin(a/2)^12*y^1+1459458*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+-840294*cos(a/2)^22*sin(a/2)^10*y^1+221130*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+-122850*cos(a/2)^24*sin(a/2)^8*y^1+24570*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+-13230*cos(a/2)^26*sin(a/2)^6*y^1+1890*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+-990*cos(a/2)^28*sin(a/2)^4*y^1+90*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+-46*cos(a/2)^30*sin(a/2)^2*y^1+2*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32*z^1+28697814*sin(a/2)^32*x^1+28697814*sin(a/2)^32*y^1+-14348907*sin(a/2)^32*z^1+143489070*cos(a/2)^2*sin(a/2)^30*x^1+143489070*cos(a/2)^2*sin(a/2)^30*y^1+-86093442*cos(a/2)^2*sin(a/2)^30*z^1+334807830*cos(a/2)^4*sin(a/2)^28*x^1+334807830*cos(a/2)^4*sin(a/2)^28*y^1+-239148450*cos(a/2)^4*sin(a/2)^28*z^1+483611310*cos(a/2)^6*sin(a/2)^26*x^1+483611310*cos(a/2)^6*sin(a/2)^26*y^1+-409209570*cos(a/2)^6*sin(a/2)^26*z^1+483611310*cos(a/2)^8*sin(a/2)^24*x^1+483611310*cos(a/2)^8*sin(a/2)^24*y^1+-483611310*cos(a/2)^8*sin(a/2)^24*z^1+354648294*cos(a/2)^10*sin(a/2)^22*x^1+354648294*cos(a/2)^10*sin(a/2)^22*y^1+-419129802*cos(a/2)^10*sin(a/2)^22*z^1+197026830*cos(a/2)^12*sin(a/2)^20*x^1+197026830*cos(a/2)^12*sin(a/2)^20*y^1+-275837562*cos(a/2)^12*sin(a/2)^20*z^1+84440070*cos(a/2)^14*sin(a/2)^18*x^1+84440070*cos(a/2)^14*sin(a/2)^18*y^1+-140733450*cos(a/2)^14*sin(a/2)^18*z^1+28146690*cos(a/2)^16*sin(a/2)^16*x^1+28146690*cos(a/2)^16*sin(a/2)^16*y^1+-56293380*cos(a/2)^16*sin(a/2)^16*z^1+7297290*cos(a/2)^18*sin(a/2)^14*x^1+7297290*cos(a/2)^18*sin(a/2)^14*y^1+-17721990*cos(a/2)^18*sin(a/2)^14*z^1+1459458*cos(a/2)^20*sin(a/2)^12*x^1+1459458*cos(a/2)^20*sin(a/2)^12*y^1+-4378374*cos(a/2)^20*sin(a/2)^12*z^1+221130*cos(a/2)^22*sin(a/2)^10*x^1+221130*cos(a/2)^22*sin(a/2)^10*y^1+-840294*cos(a/2)^22*sin(a/2)^10*z^1+24570*cos(a/2)^24*sin(a/2)^8*x^1+24570*cos(a/2)^24*sin(a/2)^8*y^1+-122850*cos(a/2)^24*sin(a/2)^8*z^1+1890*cos(a/2)^26*sin(a/2)^6*x^1+1890*cos(a/2)^26*sin(a/2)^6*y^1+-13230*cos(a/2)^26*sin(a/2)^6*z^1+90*cos(a/2)^28*sin(a/2)^4*x^1+90*cos(a/2)^28*sin(a/2)^4*y^1+-990*cos(a/2)^28*sin(a/2)^4*z^1+2*cos(a/2)^30*sin(a/2)^2*x^1+2*cos(a/2)^30*sin(a/2)^2*y^1+-46*cos(a/2)^30*sin(a/2)^2*z^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
{{(-cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6-6*cos(a/2)^6*sin(a/2)^2)/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(28697814*cos(a/2)*sin(a/2)^31*x+28697814*cos(a/2)*sin(a/2)^31*y+28697814*cos(a/2)*sin(a/2)^31*z+143489070*cos(a/2)^3*sin(a/2)^29*x+143489070*cos(a/2)^3*sin(a/2)^29*y+143489070*cos(a/2)^3*sin(a/2)^29*z+334807830*cos(a/2)^5*sin(a/2)^27*x+334807830*cos(a/2)^5*sin(a/2)^27*y+334807830*cos(a/2)^5*sin(a/2)^27*z+483611310*cos(a/2)^7*sin(a/2)^25*x+483611310*cos(a/2)^7*sin(a/2)^25*y+483611310*cos(a/2)^7*sin(a/2)^25*z+483611310*cos(a/2)^9*sin(a/2)^23*x+483611310*cos(a/2)^9*sin(a/2)^23*y+483611310*cos(a/2)^9*sin(a/2)^23*z+354648294*cos(a/2)^11*sin(a/2)^21*x+354648294*cos(a/2)^11*sin(a/2)^21*y+354648294*cos(a/2)^11*sin(a/2)^21*z+197026830*cos(a/2)^13*sin(a/2)^19*x+197026830*cos(a/2)^13*sin(a/2)^19*y+197026830*cos(a/2)^13*sin(a/2)^19*z+84440070*cos(a/2)^15*sin(a/2)^17*x+84440070*cos(a/2)^15*sin(a/2)^17*y+84440070*cos(a/2)^15*sin(a/2)^17*z+28146690*cos(a/2)^17*sin(a/2)^15*x+28146690*cos(a/2)^17*sin(a/2)^15*y+28146690*cos(a/2)^17*sin(a/2)^15*z+7297290*cos(a/2)^19*sin(a/2)^13*x+7297290*cos(a/2)^19*sin(a/2)^13*y+7297290*cos(a/2)^19*sin(a/2)^13*z+1459458*cos(a/2)^21*sin(a/2)^11*x+1459458*cos(a/2)^21*sin(a/2)^11*y+1459458*cos(a/2)^21*sin(a/2)^11*z+221130*cos(a/2)^23*sin(a/2)^9*x+221130*cos(a/2)^23*sin(a/2)^9*y+221130*cos(a/2)^23*sin(a/2)^9*z+24570*cos(a/2)^25*sin(a/2)^7*x+24570*cos(a/2)^25*sin(a/2)^7*y+24570*cos(a/2)^25*sin(a/2)^7*z+1890*cos(a/2)^27*sin(a/2)^5*x+1890*cos(a/2)^27*sin(a/2)^5*y+1890*cos(a/2)^27*sin(a/2)^5*z+90*cos(a/2)^29*sin(a/2)^3*x+90*cos(a/2)^29*sin(a/2)^3*y+90*cos(a/2)^29*sin(a/2)^3*z+2*cos(a/2)^31*sin(a/2)*x+2*cos(a/2)^31*sin(a/2)*y+2*cos(a/2)^31*sin(a/2)*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*x-14348907*sin(a/2)^32*x+28697814*sin(a/2)^32*y+28697814*sin(a/2)^32*z-86093442*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z-239148450*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z-409209570*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z-483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z-419129802*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z-275837562*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z-140733450*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z-56293380*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z-17721990*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z-4378374*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z-840294*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z-122850*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z-13230*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z-990*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z-46*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*y+28697814*sin(a/2)^32*x-14348907*sin(a/2)^32*y+28697814*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x-86093442*cos(a/2)^2*sin(a/2)^30*y+143489070*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x-239148450*cos(a/2)^4*sin(a/2)^28*y+334807830*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x-409209570*cos(a/2)^6*sin(a/2)^26*y+483611310*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x-483611310*cos(a/2)^8*sin(a/2)^24*y+483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x-419129802*cos(a/2)^10*sin(a/2)^22*y+354648294*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x-275837562*cos(a/2)^12*sin(a/2)^20*y+197026830*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x-140733450*cos(a/2)^14*sin(a/2)^18*y+84440070*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x-56293380*cos(a/2)^16*sin(a/2)^16*y+28146690*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x-17721990*cos(a/2)^18*sin(a/2)^14*y+7297290*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x-4378374*cos(a/2)^20*sin(a/2)^12*y+1459458*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x-840294*cos(a/2)^22*sin(a/2)^10*y+221130*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x-122850*cos(a/2)^24*sin(a/2)^8*y+24570*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x-13230*cos(a/2)^26*sin(a/2)^6*y+1890*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x-990*cos(a/2)^28*sin(a/2)^4*y+90*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x-46*cos(a/2)^30*sin(a/2)^2*y+2*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*z+28697814*sin(a/2)^32*x+28697814*sin(a/2)^32*y-14348907*sin(a/2)^32*z+143489070*cos(a/2)^2*sin(a/2)^30*x+143489070*cos(a/2)^2*sin(a/2)^30*y-86093442*cos(a/2)^2*sin(a/2)^30*z+334807830*cos(a/2)^4*sin(a/2)^28*x+334807830*cos(a/2)^4*sin(a/2)^28*y-239148450*cos(a/2)^4*sin(a/2)^28*z+483611310*cos(a/2)^6*sin(a/2)^26*x+483611310*cos(a/2)^6*sin(a/2)^26*y-409209570*cos(a/2)^6*sin(a/2)^26*z+483611310*cos(a/2)^8*sin(a/2)^24*x+483611310*cos(a/2)^8*sin(a/2)^24*y-483611310*cos(a/2)^8*sin(a/2)^24*z+354648294*cos(a/2)^10*sin(a/2)^22*x+354648294*cos(a/2)^10*sin(a/2)^22*y-419129802*cos(a/2)^10*sin(a/2)^22*z+197026830*cos(a/2)^12*sin(a/2)^20*x+197026830*cos(a/2)^12*sin(a/2)^20*y-275837562*cos(a/2)^12*sin(a/2)^20*z+84440070*cos(a/2)^14*sin(a/2)^18*x+84440070*cos(a/2)^14*sin(a/2)^18*y-140733450*cos(a/2)^14*sin(a/2)^18*z+28146690*cos(a/2)^16*sin(a/2)^16*x+28146690*cos(a/2)^16*sin(a/2)^16*y-56293380*cos(a/2)^16*sin(a/2)^16*z+7297290*cos(a/2)^18*sin(a/2)^14*x+7297290*cos(a/2)^18*sin(a/2)^14*y-17721990*cos(a/2)^18*sin(a/2)^14*z+1459458*cos(a/2)^20*sin(a/2)^12*x+1459458*cos(a/2)^20*sin(a/2)^12*y-4378374*cos(a/2)^20*sin(a/2)^12*z+221130*cos(a/2)^22*sin(a/2)^10*x+221130*cos(a/2)^22*sin(a/2)^10*y-840294*cos(a/2)^22*sin(a/2)^10*z+24570*cos(a/2)^24*sin(a/2)^8*x+24570*cos(a/2)^24*sin(a/2)^8*y-122850*cos(a/2)^24*sin(a/2)^8*z+1890*cos(a/2)^26*sin(a/2)^6*x+1890*cos(a/2)^26*sin(a/2)^6*y-13230*cos(a/2)^26*sin(a/2)^6*z+90*cos(a/2)^28*sin(a/2)^4*x+90*cos(a/2)^28*sin(a/2)^4*y-990*cos(a/2)^28*sin(a/2)^4*z+2*cos(a/2)^30*sin(a/2)^2*x+2*cos(a/2)^30*sin(a/2)^2*y-46*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T12:46:40</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00077] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:26 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(cos(a/2)),(0)},{(sin(a/2)),(0)},{(sin(a/2)),(0)},{(sin(a/2)),(0)}}
{{(-cos(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0},{(-sin(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0},{(-sin(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0},{(-sin(a/2))/(cos(a/2)^2+3*sin(a/2)^2),0}}

{{(+-1*cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6+-6*cos(a/2)^6*sin(a/2)^2)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+28697814*cos(a/2)^1*sin(a/2)^31+143489070*cos(a/2)^3*sin(a/2)^29+334807830*cos(a/2)^5*sin(a/2)^27+483611310*cos(a/2)^7*sin(a/2)^25+483611310*cos(a/2)^9*sin(a/2)^23+354648294*cos(a/2)^11*sin(a/2)^21+197026830*cos(a/2)^13*sin(a/2)^19+84440070*cos(a/2)^15*sin(a/2)^17+28146690*cos(a/2)^17*sin(a/2)^15+7297290*cos(a/2)^19*sin(a/2)^13+1459458*cos(a/2)^21*sin(a/2)^11+221130*cos(a/2)^23*sin(a/2)^9+24570*cos(a/2)^25*sin(a/2)^7+1890*cos(a/2)^27*sin(a/2)^5+90*cos(a/2)^29*sin(a/2)^3+2*cos(a/2)^31*sin(a/2)^1)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+-1*cos(a/2)^32+-14348907*sin(a/2)^32+-86093442*cos(a/2)^2*sin(a/2)^30+-239148450*cos(a/2)^4*sin(a/2)^28+-409209570*cos(a/2)^6*sin(a/2)^26+-483611310*cos(a/2)^8*sin(a/2)^24+-419129802*cos(a/2)^10*sin(a/2)^22+-275837562*cos(a/2)^12*sin(a/2)^20+-140733450*cos(a/2)^14*sin(a/2)^18+-56293380*cos(a/2)^16*sin(a/2)^16+-17721990*cos(a/2)^18*sin(a/2)^14+-4378374*cos(a/2)^20*sin(a/2)^12+-840294*cos(a/2)^22*sin(a/2)^10+-122850*cos(a/2)^24*sin(a/2)^8+-13230*cos(a/2)^26*sin(a/2)^6+-990*cos(a/2)^28*sin(a/2)^4+-46*cos(a/2)^30*sin(a/2)^2)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+28697814*sin(a/2)^32+143489070*cos(a/2)^2*sin(a/2)^30+334807830*cos(a/2)^4*sin(a/2)^28+483611310*cos(a/2)^6*sin(a/2)^26+483611310*cos(a/2)^8*sin(a/2)^24+354648294*cos(a/2)^10*sin(a/2)^22+197026830*cos(a/2)^12*sin(a/2)^20+84440070*cos(a/2)^14*sin(a/2)^18+28146690*cos(a/2)^16*sin(a/2)^16+7297290*cos(a/2)^18*sin(a/2)^14+1459458*cos(a/2)^20*sin(a/2)^12+221130*cos(a/2)^22*sin(a/2)^10+24570*cos(a/2)^24*sin(a/2)^8+1890*cos(a/2)^26*sin(a/2)^6+90*cos(a/2)^28*sin(a/2)^4+2*cos(a/2)^30*sin(a/2)^2)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(+-54*cos(a/2)^1*sin(a/2)^7+-54*cos(a/2)^3*sin(a/2)^5+-18*cos(a/2)^5*sin(a/2)^3+-2*cos(a/2)^7*sin(a/2)^1)/(+1*cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(+28697814*sin(a/2)^32+143489070*cos(a/2)^2*sin(a/2)^30+334807830*cos(a/2)^4*sin(a/2)^28+483611310*cos(a/2)^6*sin(a/2)^26+483611310*cos(a/2)^8*sin(a/2)^24+354648294*cos(a/2)^10*sin(a/2)^22+197026830*cos(a/2)^12*sin(a/2)^20+84440070*cos(a/2)^14*sin(a/2)^18+28146690*cos(a/2)^16*sin(a/2)^16+7297290*cos(a/2)^18*sin(a/2)^14+1459458*cos(a/2)^20*sin(a/2)^12+221130*cos(a/2)^22*sin(a/2)^10+24570*cos(a/2)^24*sin(a/2)^8+1890*cos(a/2)^26*sin(a/2)^6+90*cos(a/2)^28*sin(a/2)^4+2*cos(a/2)^30*sin(a/2)^2)/(+1*cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
{{(-cos(a/2)^8+81*sin(a/2)^8+54*cos(a/2)^2*sin(a/2)^6-6*cos(a/2)^6*sin(a/2)^2)/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(28697814*cos(a/2)*sin(a/2)^31+143489070*cos(a/2)^3*sin(a/2)^29+334807830*cos(a/2)^5*sin(a/2)^27+483611310*cos(a/2)^7*sin(a/2)^25+483611310*cos(a/2)^9*sin(a/2)^23+354648294*cos(a/2)^11*sin(a/2)^21+197026830*cos(a/2)^13*sin(a/2)^19+84440070*cos(a/2)^15*sin(a/2)^17+28146690*cos(a/2)^17*sin(a/2)^15+7297290*cos(a/2)^19*sin(a/2)^13+1459458*cos(a/2)^21*sin(a/2)^11+221130*cos(a/2)^23*sin(a/2)^9+24570*cos(a/2)^25*sin(a/2)^7+1890*cos(a/2)^27*sin(a/2)^5+90*cos(a/2)^29*sin(a/2)^3+2*cos(a/2)^31*sin(a/2))/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32-14348907*sin(a/2)^32-86093442*cos(a/2)^2*sin(a/2)^30-239148450*cos(a/2)^4*sin(a/2)^28-409209570*cos(a/2)^6*sin(a/2)^26-483611310*cos(a/2)^8*sin(a/2)^24-419129802*cos(a/2)^10*sin(a/2)^22-275837562*cos(a/2)^12*sin(a/2)^20-140733450*cos(a/2)^14*sin(a/2)^18-56293380*cos(a/2)^16*sin(a/2)^16-17721990*cos(a/2)^18*sin(a/2)^14-4378374*cos(a/2)^20*sin(a/2)^12-840294*cos(a/2)^22*sin(a/2)^10-122850*cos(a/2)^24*sin(a/2)^8-13230*cos(a/2)^26*sin(a/2)^6-990*cos(a/2)^28*sin(a/2)^4-46*cos(a/2)^30*sin(a/2)^2)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(28697814*sin(a/2)^32+143489070*cos(a/2)^2*sin(a/2)^30+334807830*cos(a/2)^4*sin(a/2)^28+483611310*cos(a/2)^6*sin(a/2)^26+483611310*cos(a/2)^8*sin(a/2)^24+354648294*cos(a/2)^10*sin(a/2)^22+197026830*cos(a/2)^12*sin(a/2)^20+84440070*cos(a/2)^14*sin(a/2)^18+28146690*cos(a/2)^16*sin(a/2)^16+7297290*cos(a/2)^18*sin(a/2)^14+1459458*cos(a/2)^20*sin(a/2)^12+221130*cos(a/2)^22*sin(a/2)^10+24570*cos(a/2)^24*sin(a/2)^8+1890*cos(a/2)^26*sin(a/2)^6+90*cos(a/2)^28*sin(a/2)^4+2*cos(a/2)^30*sin(a/2)^2)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)},{(-54*cos(a/2)*sin(a/2)^7-54*cos(a/2)^3*sin(a/2)^5-18*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+81*sin(a/2)^8+108*cos(a/2)^2*sin(a/2)^6+54*cos(a/2)^4*sin(a/2)^4+12*cos(a/2)^6*sin(a/2)^2),(28697814*sin(a/2)^32+143489070*cos(a/2)^2*sin(a/2)^30+334807830*cos(a/2)^4*sin(a/2)^28+483611310*cos(a/2)^6*sin(a/2)^26+483611310*cos(a/2)^8*sin(a/2)^24+354648294*cos(a/2)^10*sin(a/2)^22+197026830*cos(a/2)^12*sin(a/2)^20+84440070*cos(a/2)^14*sin(a/2)^18+28146690*cos(a/2)^16*sin(a/2)^16+7297290*cos(a/2)^18*sin(a/2)^14+1459458*cos(a/2)^20*sin(a/2)^12+221130*cos(a/2)^22*sin(a/2)^10+24570*cos(a/2)^24*sin(a/2)^8+1890*cos(a/2)^26*sin(a/2)^6+90*cos(a/2)^28*sin(a/2)^4+2*cos(a/2)^30*sin(a/2)^2)/(cos(a/2)^32+43046721*sin(a/2)^32+229582512*cos(a/2)^2*sin(a/2)^30+573956280*cos(a/2)^4*sin(a/2)^28+892820880*cos(a/2)^6*sin(a/2)^26+967222620*cos(a/2)^8*sin(a/2)^24+773778096*cos(a/2)^10*sin(a/2)^22+472864392*cos(a/2)^12*sin(a/2)^20+225173520*cos(a/2)^14*sin(a/2)^18+84440070*cos(a/2)^16*sin(a/2)^16+25019280*cos(a/2)^18*sin(a/2)^14+5837832*cos(a/2)^20*sin(a/2)^12+1061424*cos(a/2)^22*sin(a/2)^10+147420*cos(a/2)^24*sin(a/2)^8+15120*cos(a/2)^26*sin(a/2)^6+1080*cos(a/2)^28*sin(a/2)^4+48*cos(a/2)^30*sin(a/2)^2)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T12:54:43</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:18 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T12:54:55</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00035] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:19 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(cos(a/2)),(0)},{(ax*sin(a/2)),(0)},{(ay*sin(a/2)),(0)},{(az*sin(a/2)),(0)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T12:55:51</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00059] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:24 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{1,(0)},{(0),(x)},{(0),(y)},{(0),(z)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T12:58:51</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Multiply (MathildaLib.Quaternion`1 b) [0x0000a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:27 
  at MathildaLib.Algebra`1[MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Quaternion`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>start multiply
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T12:59:58</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00012] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:80 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>transform * position
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:00:39</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x0000f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:80 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:01:12</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x0001b] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:82 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(+1*cos(a/2)^1)/(+1),(+-1*ax^1*sin(a/2)^1*x^1+-1*ay^1*sin(a/2)^1*y^1+-1*az^1*sin(a/2)^1*z^1)/(+1)},{(+1*ax^1*sin(a/2)^1)/(+1),(+1*cos(a/2)^1*x^1+1*ay^1*sin(a/2)^1*z^1+-1*az^1*sin(a/2)^1*y^1)/(+1)},{(+1*ay^1*sin(a/2)^1)/(+1),(+1*cos(a/2)^1*y^1+-1*ax^1*sin(a/2)^1*z^1+1*az^1*sin(a/2)^1*x^1)/(+1)},{(+1*az^1*sin(a/2)^1)/(+1),(+1*cos(a/2)^1*z^1+1*ax^1*sin(a/2)^1*y^1+-1*ay^1*sin(a/2)^1*x^1)/(+1)}}
{{(+-1*cos(a/2)^1)/(+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2),()/(+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4)},{(+-1*ax^1*sin(a/2)^1)/(+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2),()/(+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4)},{(+-1*ay^1*sin(a/2)^1)/(+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2),()/(+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4)},{(+-1*az^1*sin(a/2)^1)/(+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2),()/(+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:08:11</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Real.Add (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x00181] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:411 
  at MathildaLib.Real.Multiply (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x00041] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:431 
  at MathildaLib.Real.Multiply (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:440 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.Dual`1[MathildaLib.Real].Multiply (MathildaLib.Dual`1 b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Dual.cs:40 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Dual`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Multiply (MathildaLib.Quaternion`1 b) [0x0003f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:34 
  at MathildaLib.Algebra`1[MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Quaternion`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:08:29</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Real.Add (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x00181] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:411 
  at MathildaLib.Real.Add (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:415 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Dual`1[MathildaLib.Real].Add (MathildaLib.Dual`1 b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Dual.cs:13 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Dual`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Multiply (MathildaLib.Quaternion`1 b) [0x0003f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:34 
  at MathildaLib.Algebra`1[MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Quaternion`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
1 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
1 0
0 0
0 0
1 0
2 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
0 0
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:09:08</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Real.Add (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x0018c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:411 
  at MathildaLib.Real.Add (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:415 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Dual`1[MathildaLib.Real].Add (MathildaLib.Dual`1 b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Dual.cs:13 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Dual`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Multiply (MathildaLib.Quaternion`1 b) [0x0003f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:34 
  at MathildaLib.Algebra`1[MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Quaternion`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
1 0 1
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
1 0 1
0 0 0
0 0 0
1 0 1
2 0 2
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:09:42</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.FormatException : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.</Message>
                  <StackTrace>  at System.String.FormatHelper (System.Text.StringBuilder result, IFormatProvider provider, System.String format, System.Object[] args) [0x00256] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System/String.cs:1925 
  at System.String.Format (IFormatProvider provider, System.String format, System.Object[] args) [0x00000] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System/String.cs:1820 
  at System.String.Format (System.String format, System.Object[] args) [0x00000] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System/String.cs:1815 
  at System.IO.TextWriter.Write (System.String format, System.Object[] arg) [0x00000] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.IO/TextWriter.cs:196 
  at System.IO.TextWriter.WriteLine (System.String format, System.Object[] arg) [0x00000] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.IO/TextWriter.cs:311 
  at System.Console.WriteLine (System.String format, System.Object[] arg) [0x00016] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System/Console.cs:458 
  at MathildaLib.Real.Add (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x0001e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:376 
  at MathildaLib.Real.Multiply (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x00041] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:431 
  at MathildaLib.Real.Multiply (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:440 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.CreateFromAngleAndAxis (System.String angle, MathildaLib.Real x, MathildaLib.Real y, MathildaLib.Real z) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:32 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:12 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:10:03</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Real.Add (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x001ad] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:411 
  at MathildaLib.Real.Add (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:415 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Dual`1[MathildaLib.Real].Add (MathildaLib.Dual`1 b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Dual.cs:13 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Dual`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Multiply (MathildaLib.Quaternion`1 b) [0x0003f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:34 
  at MathildaLib.Algebra`1[MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Quaternion`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:10:32</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Real.Add (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x001b0] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:411 
  at MathildaLib.Real.Multiply (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x00041] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:431 
  at MathildaLib.Real.Add (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:415 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Dual`1[MathildaLib.Real].Multiply (MathildaLib.Dual`1 b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Dual.cs:40 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].Divide (MathildaLib.Dual`1 b) [0x0000e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:25 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].op_Division (MathildaLib.Algebra`1 a, MathildaLib.Dual`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:41 
  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Inverted () [0x00079] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:46 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 0
1 0 1 2 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 3 0
1 0 1 3 0
2 0 2 3 0
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 0 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 0 1
0 0 0 3 1
0 1 1 3 1
1 1 2 3 1
2 1 3 3 1
0 0 0 0 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 3 1
1 0 1 3 1
2 0 2 3 1
3 0 3 3 1
0 0 0 4 1
1 0 1 4 1
2 1 2 4 1
3 1 3 4 1
0 0 0 4 1
1 0 1 4 1
1 1 2 4 1
2 1 3 4 1
3 1 4 4 1
0 0 0 5 1
1 0 1 5 1
2 0 2 5 1
2 1 3 5 1
3 1 4 5 1
4 1 5 5 1
0 0 0 6 1
1 0 1 6 1
2 0 2 6 1
3 0 3 6 1
3 1 4 6 1
4 1 5 6 1
5 1 6 6 1
0 0 0 7 1
1 0 1 7 1
2 0 2 7 1
3 0 3 7 1
4 0 4 7 1
5 0 5 7 1
6 1 6 7 1
0 0 0 7 1
1 0 1 7 1
2 0 2 7 1
3 1 3 7 1
4 1 4 7 1
5 1 5 7 1
6 1 6 7 1
0 0 0 7 1
1 0 1 7 1
2 0 2 7 1
2 1 3 7 1
3 1 4 7 1
4 1 5 7 1
5 1 6 7 1
6 1 7 7 1
0 0 0 8 1
1 0 1 8 1
2 0 2 8 1
3 0 3 8 1
4 0 4 8 1
5 0 5 8 1
6 0 6 8 1
6 1 7 8 1
7 1 8 8 1
0 0 0 9 1
1 0 1 9 1
2 0 2 9 1
3 0 3 9 1
4 0 4 9 1
5 0 5 9 1
6 0 6 9 1
7 0 7 9 1
8 0 8 9 1
0 0 0 9 1
1 0 1 9 1
2 0 2 9 1
3 0 3 9 1
4 0 4 9 1
5 1 5 9 1
6 1 6 9 1
7 1 7 9 1
8 1 8 9 1
0 0 0 9 1
1 0 1 9 1
2 0 2 9 1
3 0 3 9 1
4 0 4 9 1
5 0 5 9 1
6 0 6 9 1
7 1 7 9 1
8 1 8 9 1
0 0 0 9 1
1 0 1 9 1
2 0 2 9 1
3 0 3 9 1
3 1 4 9 1
4 1 5 9 1
5 1 6 9 1
6 1 7 9 1
7 1 8 9 1
8 1 9 9 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 3 1
1 0 1 3 1
2 0 2 3 1
3 0 3 3 1
0 0 0 4 1
1 0 1 4 1
2 0 2 4 1
3 0 3 4 1
4 0 4 4 1
0 0 0 5 1
1 0 1 5 1
2 0 2 5 1
3 0 3 5 1
4 0 4 5 1
5 0 5 5 1
0 0 0 6 1
1 0 1 6 1
2 0 2 6 1
3 0 3 6 1
4 0 4 6 1
5 0 5 6 1
6 0 6 6 1
0 0 0 7 1
1 0 1 7 1
2 0 2 7 1
3 0 3 7 1
4 0 4 7 1
5 0 5 7 1
6 0 6 7 1
7 0 7 7 1
0 0 0 8 1
1 0 1 8 1
2 0 2 8 1
3 0 3 8 1
4 0 4 8 1
5 0 5 8 1
6 0 6 8 1
7 0 7 8 1
8 0 8 8 1
0 0 0 9 1
1 0 1 9 1
2 0 2 9 1
3 0 3 9 1
4 0 4 9 1
5 0 5 9 1
6 0 6 9 1
7 0 7 9 1
8 0 8 9 1
9 0 9 9 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 3 1
1 0 1 3 1
2 0 2 3 1
3 0 3 3 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 3 1
1 0 1 3 1
2 0 2 3 1
3 0 3 3 1
0 0 0 4 1
1 0 1 4 1
2 0 2 4 1
3 0 3 4 1
4 0 4 4 1
0 0 0 5 1
1 0 1 5 1
2 0 2 5 1
3 0 3 5 1
4 0 4 5 1
5 0 5 5 1
0 0 0 6 1
1 0 1 6 1
2 0 2 6 1
3 0 3 6 1
4 0 4 6 1
5 0 5 6 1
6 0 6 6 1
0 0 0 7 1
1 0 1 7 1
2 0 2 7 1
3 0 3 7 1
4 0 4 7 1
5 0 5 7 1
6 0 6 7 1
7 0 7 7 1
0 0 0 8 1
1 0 1 8 1
2 0 2 8 1
3 0 3 8 1
4 0 4 8 1
5 0 5 8 1
6 0 6 8 1
7 0 7 8 1
8 0 8 8 1
0 0 0 9 1
1 0 1 9 1
2 0 2 9 1
3 0 3 9 1
4 0 4 9 1
5 0 5 9 1
6 0 6 9 1
7 0 7 9 1
8 0 8 9 1
9 0 9 9 1
0 0 0 0 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 3 1
1 0 1 3 1
2 0 2 3 1
3 0 3 3 1
0 0 0 0 1
0 0 0 1 1
1 0 1 1 1
0 0 0 2 1
1 0 1 2 1
2 0 2 2 1
0 0 0 3 1
1 0 1 3 1
2 0 2 3 1
3 0 3 3 1
0 0 0 4 1
1 0 1 4 1
2 0 2 4 1
2 1 3 4 1
3 1 4 4 1
0 0 0 5 1
1 0 1 5 1
1 1 2 5 1
2 1 3 5 1
3 1 4 5 1
4 1 5 5 1
0 0 0 6 1
1 0 1 6 1
2 0 2 6 1
3 0 3 6 1
3 1 4 6 1
4 1 5 6 1
5 1 6 6 1
0 0 0 7 1
1 0 1 7 1
2 0 2 7 1
3 0 3 7 1
4 0 4 7 1
4 1 5 7 1
5 1 6 7 1
6 1 7 7 1
0 0 0 8 1
1 0 1 8 1
2 0 2 8 1
3 0 3 8 1
4 0 4 8 1
5 0 5 8 1
6 0 6 8 1
7 0 7 8 1
7 1 8 8 1
0 0 0 9 1
1 0 1 9 1
2 0 2 9 1
2 1 3 9 1
3 1 4 9 1
4 1 5 9 1
5 1 6 9 1
6 1 7 9 1
7 1 8 9 1
8 1 9 9 1
0 0 0 10 1
1 0 1 10 1
2 0 2 10 1
2 1 3 10 1
3 1 4 10 1
4 1 5 10 1
5 1 6 10 1
6 1 7 10 1
7 1 8 10 1
8 1 9 10 1
9 1 10 10 1
0 0 0 11 1
1 0 1 11 1
2 0 2 11 1
3 0 3 11 1
4 0 4 11 1
5 0 5 11 1
6 0 6 11 1
7 0 7 11 1
8 0 8 11 1
9 0 9 11 1
9 1 10 11 1
10 1 11 11 1
0 0 0 12 1
1 0 1 12 1
2 0 2 12 1
3 0 3 12 1
4 0 4 12 1
5 0 5 12 1
6 0 6 12 1
7 0 7 12 1
8 0 8 12 1
9 0 9 12 1
10 0 10 12 1
11 0 11 12 1
12 0 12 12 1
0 0 0 13 1
1 0 1 13 1
2 0 2 13 1
3 0 3 13 1
4 0 4 13 1
4 1 5 13 1
5 1 6 13 1
6 1 7 13 1
7 1 8 13 1
8 1 9 13 1
9 1 10 13 1
10 1 11 13 1
11 1 12 13 1
12 1 13 13 1
0 0 0 14 1
1 0 1 14 1
2 0 2 14 1
3 0 3 14 1
4 0 4 14 1
5 0 5 14 1
6 0 6 14 1
7 0 7 14 1
8 0 8 14 1
9 0 9 14 1
9 1 10 14 1
10 1 11 14 1
11 1 12 14 1
12 1 13 14 1
13 1 14 14 1
0 0 0 15 1
1 0 1 15 1
2 0 2 15 1
3 0 3 15 1
3 1 4 15 1
4 1 5 15 1
5 1 6 15 1
6 1 7 15 1
7 1 8 15 1
8 1 9 15 1
9 1 10 15 1
10 1 11 15 1
11 1 12 15 1
12 1 13 15 1
13 1 14 15 1
14 1 15 15 1
0 0 0 16 1
1 0 1 16 1
2 0 2 16 1
3 0 3 16 1
4 0 4 16 1
5 0 5 16 1
6 0 6 16 1
7 0 7 16 1
8 0 8 16 1
9 0 9 16 1
10 0 10 16 1
11 0 11 16 1
12 0 12 16 1
13 0 13 16 1
14 0 14 16 1
15 0 15 16 1
16 0 16 16 1
0 0 0 17 1
1 0 1 17 1
2 0 2 17 1
3 0 3 17 1
4 0 4 17 1
5 0 5 17 1
6 0 6 17 1
7 0 7 17 1
8 1 8 17 1
9 1 9 17 1
10 1 10 17 1
11 1 11 17 1
12 1 12 17 1
13 1 13 17 1
14 1 14 17 1
15 1 15 17 1
16 1 16 17 1
0 0 0 17 1
1 0 1 17 1
2 0 2 17 1
3 0 3 17 1
4 0 4 17 1
5 1 5 17 1
6 1 6 17 1
7 1 7 17 1
8 1 8 17 1
9 1 9 17 1
10 1 10 17 1
11 1 11 17 1
12 1 12 17 1
13 1 13 17 1
14 1 14 17 1
15 1 15 17 1
16 1 16 17 1
0 0 0 17 1
1 0 1 17 1
2 0 2 17 1
3 0 3 17 1
4 0 4 17 1
5 0 5 17 1
6 0 6 17 1
7 0 7 17 1
8 0 8 17 1
9 0 9 17 1
10 0 10 17 1
11 0 11 17 1
12 0 12 17 1
13 0 13 17 1
14 0 14 17 1
15 0 15 17 1
16 0 16 17 1
16 1 17 17 1
0 0 0 18 1
1 0 1 18 1
2 0 2 18 1
3 0 3 18 1
4 0 4 18 1
5 0 5 18 1
6 0 6 18 1
7 0 7 18 1
8 0 8 18 1
9 0 9 18 1
10 0 10 18 1
11 0 11 18 1
12 0 12 18 1
13 0 13 18 1
14 0 14 18 1
15 0 15 18 1
16 0 16 18 1
17 0 17 18 1
18 0 18 18 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 0 6 19 1
7 0 7 19 1
8 0 8 19 1
9 1 9 19 1
10 1 10 19 1
11 1 11 19 1
12 1 12 19 1
13 1 13 19 1
14 1 14 19 1
15 1 15 19 1
16 1 16 19 1
17 1 17 19 1
18 1 18 19 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 0 6 19 1
7 0 7 19 1
8 0 8 19 1
9 0 9 19 1
10 0 10 19 1
11 0 11 19 1
12 0 12 19 1
13 0 13 19 1
14 0 14 19 1
15 0 15 19 1
16 0 16 19 1
17 1 17 19 1
18 1 18 19 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 1 6 19 1
7 1 7 19 1
8 1 8 19 1
9 1 9 19 1
10 1 10 19 1
11 1 11 19 1
12 1 12 19 1
13 1 13 19 1
14 1 14 19 1
15 1 15 19 1
16 1 16 19 1
17 1 17 19 1
18 1 18 19 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 0 6 19 1
7 1 7 19 1
8 1 8 19 1
9 1 9 19 1
10 1 10 19 1
11 1 11 19 1
12 1 12 19 1
13 1 13 19 1
14 1 14 19 1
15 1 15 19 1
16 1 16 19 1
17 1 17 19 1
18 1 18 19 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 0 6 19 1
7 0 7 19 1
8 0 8 19 1
9 0 9 19 1
10 1 10 19 1
11 1 11 19 1
12 1 12 19 1
13 1 13 19 1
14 1 14 19 1
15 1 15 19 1
16 1 16 19 1
17 1 17 19 1
18 1 18 19 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 0 6 19 1
7 0 7 19 1
8 0 8 19 1
9 0 9 19 1
10 0 10 19 1
11 0 11 19 1
12 0 12 19 1
13 0 13 19 1
14 0 14 19 1
15 0 15 19 1
16 0 16 19 1
17 0 17 19 1
18 1 18 19 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 0 6 19 1
7 0 7 19 1
8 0 8 19 1
9 0 9 19 1
10 0 10 19 1
11 0 11 19 1
12 0 12 19 1
13 0 13 19 1
14 0 14 19 1
15 0 15 19 1
16 0 16 19 1
17 0 17 19 1
18 0 18 19 1
0 0 0 19 1
1 0 1 19 1
2 0 2 19 1
3 0 3 19 1
4 0 4 19 1
5 0 5 19 1
6 0 6 19 1
7 0 7 19 1
8 0 8 19 1
9 0 9 19 1
10 0 10 19 1
11 0 11 19 1
12 0 12 19 1
13 0 13 19 1
14 0 14 19 1
15 0 15 19 1
16 0 16 19 1
17 0 17 19 1
18 0 18 19 1
19 0 19 19 1
0 0 0 20 1
1 0 1 20 1
2 0 2 20 1
3 0 3 20 1
4 0 4 20 1
5 0 5 20 1
6 0 6 20 1
7 0 7 20 1
8 0 8 20 1
9 0 9 20 1
10 0 10 20 1
11 0 11 20 1
12 0 12 20 1
13 0 13 20 1
14 0 14 20 1
15 0 15 20 1
16 0 16 20 1
17 1 17 20 1
18 1 18 20 1
19 1 19 20 1
0 0 0 20 1
1 0 1 20 1
2 0 2 20 1
3 0 3 20 1
4 0 4 20 1
5 0 5 20 1
6 0 6 20 1
7 0 7 20 1
8 0 8 20 1
9 0 9 20 1
10 0 10 20 1
11 0 11 20 1
12 0 12 20 1
13 1 13 20 1
14 1 14 20 1
15 1 15 20 1
16 1 16 20 1
17 1 17 20 1
18 1 18 20 1
19 1 19 20 1
0 0 0 20 1
1 0 1 20 1
2 0 2 20 1
3 0 3 20 1
4 0 4 20 1
5 0 5 20 1
6 0 6 20 1
7 0 7 20 1
8 0 8 20 1
9 0 9 20 1
10 0 10 20 1
11 1 11 20 1
12 1 12 20 1
13 1 13 20 1
14 1 14 20 1
15 1 15 20 1
16 1 16 20 1
17 1 17 20 1
18 1 18 20 1
19 1 19 20 1
0 0 0 20 1
1 0 1 20 1
2 0 2 20 1
3 0 3 20 1
4 0 4 20 1
5 0 5 20 1
6 0 6 20 1
7 0 7 20 1
8 0 8 20 1
9 0 9 20 1
10 0 10 20 1
11 0 11 20 1
12 1 12 20 1
13 1 13 20 1
14 1 14 20 1
15 1 15 20 1
16 1 16 20 1
17 1 17 20 1
18 1 18 20 1
19 1 19 20 1
0 0 0 20 1
1 0 1 20 1
2 0 2 20 1
3 0 3 20 1
4 0 4 20 1
5 0 5 20 1
6 0 6 20 1
7 0 7 20 1
8 0 8 20 1
9 0 9 20 1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:11:38</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Real.Multiply (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x0009a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:436 
  at MathildaLib.Real.Multiply (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:440 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.Dual`1[MathildaLib.Real].Multiply (MathildaLib.Dual`1 b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Dual.cs:40 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Dual`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Multiply (MathildaLib.Quaternion`1 b) [0x0003f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:34 
  at MathildaLib.Algebra`1[MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Quaternion`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>+1*ax^1*sin(a/2)^1
+1
+1*ay^1*sin(a/2)^1
+1
+1*az^1*sin(a/2)^1
+1
+1*cos(a/2)^1
+1

+1

+1
+1

+1
+1*ax^1*sin(a/2)^1*x^1
+1

+1
+1*ax^1*sin(a/2)^1*x^1
+1
+1*cos(a/2)^1
+1
+-1*ax^1*sin(a/2)^1*x^1
+1

+1
+1*ay^1*sin(a/2)^1*y^1
+1

+1
+1*ay^1*sin(a/2)^1*y^1
+1
+1*cos(a/2)^1
+1
+-1*ax^1*sin(a/2)^1*x^1
+-1*ay^1*sin(a/2)^1*y^1
+1

+1
+1*az^1*sin(a/2)^1*z^1
+1

+1
+1*az^1*sin(a/2)^1*z^1
+1
+1*cos(a/2)^1
+1
+-1*ax^1*sin(a/2)^1*x^1
+-1*ax^1*sin(a/2)^1*x^1+-1*ay^1*sin(a/2)^1*y^1
+-1*az^1*sin(a/2)^1*z^1
+1

+1
+1*cos(a/2)^1*x^1
+1

+1
+1*cos(a/2)^1*x^1
+1
+1*ax^1*sin(a/2)^1
+1

+1

+1
+1
+1*ax^1*sin(a/2)^1
+1
+1*cos(a/2)^1*x^1
+1

+1
+1*ay^1*sin(a/2)^1*z^1
+1

+1
+1*ay^1*sin(a/2)^1*z^1
+1
+1*ax^1*sin(a/2)^1
+1
+1*cos(a/2)^1*x^1
+1*ay^1*sin(a/2)^1*z^1
+1

+1
+1*az^1*sin(a/2)^1*y^1
+1

+1
+1*az^1*sin(a/2)^1*y^1
+1
+1*ax^1*sin(a/2)^1
+1
+1*cos(a/2)^1*x^1
+1*cos(a/2)^1*x^1+1*ay^1*sin(a/2)^1*z^1
+-1*az^1*sin(a/2)^1*y^1
+1

+1
+1*cos(a/2)^1*y^1
+1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:11:53</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Exception of type 'System.Exception' was thrown.</Message>
                  <StackTrace>  at MathildaLib.Real.Multiply (System.Collections.Generic.List`1 a, System.Collections.Generic.List`1 b) [0x0009d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:436 
  at MathildaLib.Real.Add (MathildaLib.Real b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Real.cs:411 
  at MathildaLib.Algebra`1[MathildaLib.Real].op_Addition (MathildaLib.Algebra`1 a, MathildaLib.Real b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:29 
  at MathildaLib.Dual`1[MathildaLib.Real].Add (MathildaLib.Dual`1 b) [0x00002] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Dual.cs:13 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].Subtract (MathildaLib.Dual`1 b) [0x0000e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:20 
  at MathildaLib.Algebra`1[MathildaLib.Dual`1[MathildaLib.Real]].op_Subtraction (MathildaLib.Algebra`1 a, MathildaLib.Dual`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:33 
  at MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]].Multiply (MathildaLib.Quaternion`1 b) [0x0003f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Quaternion.cs:34 
  at MathildaLib.Algebra`1[MathildaLib.Quaternion`1[MathildaLib.Dual`1[MathildaLib.Real]]].op_Multiply (MathildaLib.Algebra`1 a, MathildaLib.Quaternion`1 b) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Objects/Algebra.cs:37 
  at MathildaLib.DualQuaternionModule.Transform (MathildaLib.Quaternion`1 transform, MathildaLib.Quaternion`1 position) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Modules/DualQuaternionModule.cs:75 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:23 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>+1*ax^1*sin(a/2)^1
+1
+1*ay^1*sin(a/2)^1
+1
+1*az^1*sin(a/2)^1
+1
+1*cos(a/2)^1
+1

+1

+1
+1

+1
+1*ax^1*sin(a/2)^1*x^1
+1

+1
+1*ax^1*sin(a/2)^1*x^1
+1
+1*cos(a/2)^1
+1
+-1*ax^1*sin(a/2)^1*x^1
+1

+1
+1*ay^1*sin(a/2)^1*y^1
+1

+1
+1*ay^1*sin(a/2)^1*y^1
+1
+1*cos(a/2)^1
+1
+-1*ax^1*sin(a/2)^1*x^1
+-1*ay^1*sin(a/2)^1*y^1
+1

+1
+1*az^1*sin(a/2)^1*z^1
+1

+1
+1*az^1*sin(a/2)^1*z^1
+1
+1*cos(a/2)^1
+1
+-1*ax^1*sin(a/2)^1*x^1
+-1*ax^1*sin(a/2)^1*x^1+-1*ay^1*sin(a/2)^1*y^1
+-1*az^1*sin(a/2)^1*z^1
+1

+1
+1*cos(a/2)^1*x^1
+1

+1
+1*cos(a/2)^1*x^1
+1
+1*ax^1*sin(a/2)^1
+1

+1

+1
+1
+1*ax^1*sin(a/2)^1
+1
+1*cos(a/2)^1*x^1
+1

+1
+1*ay^1*sin(a/2)^1*z^1
+1

+1
+1*ay^1*sin(a/2)^1*z^1
+1
+1*ax^1*sin(a/2)^1
+1
+1*cos(a/2)^1*x^1
+1*ay^1*sin(a/2)^1*z^1
+1

+1
+1*az^1*sin(a/2)^1*y^1
+1

+1
+1*az^1*sin(a/2)^1*y^1
+1
+1*ax^1*sin(a/2)^1
+1
+1*cos(a/2)^1*x^1
+1*cos(a/2)^1*x^1+1*ay^1*sin(a/2)^1*z^1
+-1*az^1*sin(a/2)^1*y^1
+1

+1
+1*cos(a/2)^1*y^1
+1

+1
+1*cos(a/2)^1*y^1
+1

+1
+1*ax^1*sin(a/2)^1*z^1
+1

+1
+1*ax^1*sin(a/2)^1*z^1
+1
+1
+1*cos(a/2)^1*y^1
+-1*ax^1*sin(a/2)^1*z^1
+1
+1*ay^1*sin(a/2)^1
+1

+1

+1
+1
+1*ay^1*sin(a/2)^1
+1
+1*cos(a/2)^1*y^1
+1*cos(a/2)^1*y^1+-1*ax^1*sin(a/2)^1*z^1
+1

+1
+1*az^1*sin(a/2)^1*x^1
+1

+1
+1*az^1*sin(a/2)^1*x^1
+1
+1*ay^1*sin(a/2)^1
+1
+1*cos(a/2)^1*y^1
+1*cos(a/2)^1*y^1+-1*ax^1*sin(a/2)^1*z^1
+1*az^1*sin(a/2)^1*x^1
+1

+1
+1*cos(a/2)^1*z^1
+1

+1
+1*cos(a/2)^1*z^1
+1

+1
+1*ax^1*sin(a/2)^1*y^1
+1

+1
+1*ax^1*sin(a/2)^1*y^1
+1
+1
+1*cos(a/2)^1*z^1
+1*ax^1*sin(a/2)^1*y^1
+1

+1
+1*ay^1*sin(a/2)^1*x^1
+1

+1
+1*ay^1*sin(a/2)^1*x^1
+1
+1
+1*cos(a/2)^1*z^1
+1*cos(a/2)^1*z^1+1*ax^1*sin(a/2)^1*y^1
+-1*ay^1*sin(a/2)^1*x^1
+1
+1*az^1*sin(a/2)^1
+1

+1

+1
+1
+1*az^1*sin(a/2)^1
+1
+1*cos(a/2)^1*z^1
+1*cos(a/2)^1*z^1+1*ax^1*sin(a/2)^1*y^1
+1*cos(a/2)^1*z^1+1*ax^1*sin(a/2)^1*y^1+-1*ay^1*sin(a/2)^1*x^1
+1
+1*ax^2*sin(a/2)^2
+1

+1

+1
+1
+1*ay^2*sin(a/2)^2
+1

+1

+1
+1
+1*ax^2*sin(a/2)^2
+1*ay^2*sin(a/2)^2
+1
+1
+1*az^2*sin(a/2)^2
+1

+1

+1
+1
+1*ax^2*sin(a/2)^2
+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*az^2*sin(a/2)^2
+1
+1
+1*cos(a/2)^2
+1

+1

+1
+1
+1*ax^2*sin(a/2)^2
+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^2
+1
+1
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+-1*ax^1*sin(a/2)^1
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2

+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^6
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+-1*ay^1*sin(a/2)^1
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2

+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^6
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+-1*az^1*sin(a/2)^1
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2

+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^6
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+-1*cos(a/2)^1
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2

+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^6
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+1*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+1*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+1*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+2*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+1*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+1*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+1*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+2*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+2*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+4*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+1*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+1*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+1*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+4*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+1*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+2*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+1*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+4*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+4*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+1*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+-1*cos(a/2)^2
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*ax^1*cos(a/2)^1*sin(a/2)^1*x^1
+1*ax^1*cos(a/2)^1*sin(a/2)^1*x^1+1*ay^1*cos(a/2)^1*sin(a/2)^1*y^1
+1*ax^1*cos(a/2)^1*sin(a/2)^1*x^1+1*ay^1*cos(a/2)^1*sin(a/2)^1*y^1+1*az^1*cos(a/2)^1*sin(a/2)^1*z^1
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^1*cos(a/2)^3*sin(a/2)^5*z^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^1*cos(a/2)^3*sin(a/2)^5*z^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^2*ay^1*az^2*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^1*cos(a/2)^3*sin(a/2)^5*z^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+6*ax^2*az^3*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^2*ay^1*az^2*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^1*cos(a/2)^3*sin(a/2)^5*z^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+6*ax^2*az^3*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^1*ay^2*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^2*ay^1*az^2*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^1*cos(a/2)^3*sin(a/2)^5*z^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+6*ax^2*az^3*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ay^3*az^2*cos(a/2)^3*sin(a/2)^5*y^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^1*ay^2*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^2*ay^1*az^2*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^1*cos(a/2)^3*sin(a/2)^5*z^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+1*ay^1*cos(a/2)^7*sin(a/2)^1*y^1+3*ay^3*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^5*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^7*cos(a/2)^1*sin(a/2)^7*y^1+1*az^1*cos(a/2)^7*sin(a/2)^1*z^1+3*az^3*cos(a/2)^5*sin(a/2)^3*z^1+3*az^5*cos(a/2)^3*sin(a/2)^5*z^1+1*az^7*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^2*ay^1*cos(a/2)^5*sin(a/2)^3*y^1+6*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^5*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+6*ax^2*az^3*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^4*ay^3*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ax^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^6*ay^1*cos(a/2)^1*sin(a/2)^7*y^1+1*ax^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^1*az^2*cos(a/2)^5*sin(a/2)^3*y^1+3*ay^1*az^4*cos(a/2)^3*sin(a/2)^5*y^1+1*ay^1*az^6*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^2*az^1*cos(a/2)^5*sin(a/2)^3*z^1+6*ay^2*az^3*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^2*az^5*cos(a/2)^1*sin(a/2)^7*z^1+6*ay^3*az^2*cos(a/2)^3*sin(a/2)^5*y^1+3*ay^3*az^4*cos(a/2)^1*sin(a/2)^7*y^1+3*ay^4*az^1*cos(a/2)^3*sin(a/2)^5*z^1+3*ay^4*az^3*cos(a/2)^1*sin(a/2)^7*z^1+3*ay^5*az^2*cos(a/2)^1*sin(a/2)^7*y^1+1*ay^6*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^1*ay^2*az^2*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^2*ay^1*az^2*cos(a/2)^3*sin(a/2)^5*y^1+3*ax^2*ay^1*az^4*cos(a/2)^1*sin(a/2)^7*y^1+6*ax^2*ay^2*az^1*cos(a/2)^3*sin(a/2)^5*z^1+6*ax^2*ay^2*az^3*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^2*ay^3*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^2*ay^4*az^1*cos(a/2)^1*sin(a/2)^7*z^1+6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^4*ay^1*az^2*cos(a/2)^1*sin(a/2)^7*y^1+3*ax^4*ay^2*az^1*cos(a/2)^1*sin(a/2)^7*z^1
+1*cos(a/2)^8
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ay^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+3*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+18*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+18*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+18*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+-1*ax^2*sin(a/2)^2
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+1*cos(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4
+1*cos(a/2)^6+1*ax^6*sin(a/2)^6+1*ay^6*sin(a/2)^6+1*az^6*sin(a/2)^6+3*ax^2*ay^4*sin(a/2)^6+3*ax^2*az^4*sin(a/2)^6+3*ax^2*cos(a/2)^4*sin(a/2)^2+3*ax^4*ay^2*sin(a/2)^6+3*ax^4*az^2*sin(a/2)^6+3*ax^4*cos(a/2)^2*sin(a/2)^4+3*ay^2*az^4*sin(a/2)^6+3*ay^2*cos(a/2)^4*sin(a/2)^2+3*ay^4*az^2*sin(a/2)^6+3*ay^4*cos(a/2)^2*sin(a/2)^4+3*az^2*cos(a/2)^4*sin(a/2)^2+3*az^4*cos(a/2)^2*sin(a/2)^4+6*ax^2*ay^2*az^2*sin(a/2)^6+6*ax^2*ay^2*cos(a/2)^2*sin(a/2)^4+6*ax^2*az^2*cos(a/2)^2*sin(a/2)^4+6*ay^2*az^2*cos(a/2)^2*sin(a/2)^4
+-1*ax^1*cos(a/2)^1*sin(a/2)^1*x^1
+-1*ax^1*ay^1*sin(a/2)^2*z^1+-1*ax^1*cos(a/2)^1*sin(a/2)^1*x^1
+-1*ax^1*ay^1*sin(a/2)^2*z^1+1*ax^1*az^1*sin(a/2)^2*y^1+-1*ax^1*cos(a/2)^1*sin(a/2)^1*x^1
+1*cos(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2
+1*cos(a/2)^2+1*ax^2*sin(a/2)^2+1*ay^2*sin(a/2)^2+1*az^2*sin(a/2)^2
+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1
+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^1*az^2*cos(a/2)^2*sin(a/2)^6*z^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+6*ax^3*az^3*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^1*az^2*cos(a/2)^2*sin(a/2)^6*z^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+6*ax^3*az^3*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^1*az^2*cos(a/2)^2*sin(a/2)^6*z^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+6*ax^3*az^3*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^1*ay^3*az^2*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^1*az^2*cos(a/2)^2*sin(a/2)^6*z^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+6*ax^3*az^3*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+6*ax^1*ay^2*az^3*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^1*ay^3*az^2*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^1*az^2*cos(a/2)^2*sin(a/2)^6*z^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+-1*ax^1*ay^7*sin(a/2)^8*z^1+1*ax^1*az^7*sin(a/2)^8*y^1+-1*ax^1*cos(a/2)^7*sin(a/2)^1*x^1+-3*ax^3*ay^5*sin(a/2)^8*z^1+3*ax^3*az^5*sin(a/2)^8*y^1+-3*ax^3*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^5*ay^3*sin(a/2)^8*z^1+3*ax^5*az^3*sin(a/2)^8*y^1+-3*ax^5*cos(a/2)^3*sin(a/2)^5*x^1+-1*ax^7*ay^1*sin(a/2)^8*z^1+1*ax^7*az^1*sin(a/2)^8*y^1+-1*ax^7*cos(a/2)^1*sin(a/2)^7*x^1+-1*ax^1*ay^1*az^6*sin(a/2)^8*z^1+-1*ax^1*ay^1*cos(a/2)^6*sin(a/2)^2*z^1+3*ax^1*ay^2*az^5*sin(a/2)^8*y^1+-3*ax^1*ay^2*cos(a/2)^5*sin(a/2)^3*x^1+-3*ax^1*ay^3*az^4*sin(a/2)^8*z^1+-3*ax^1*ay^3*cos(a/2)^4*sin(a/2)^4*z^1+3*ax^1*ay^4*az^3*sin(a/2)^8*y^1+-3*ax^1*ay^4*cos(a/2)^3*sin(a/2)^5*x^1+-3*ax^1*ay^5*az^2*sin(a/2)^8*z^1+-3*ax^1*ay^5*cos(a/2)^2*sin(a/2)^6*z^1+1*ax^1*ay^6*az^1*sin(a/2)^8*y^1+-1*ax^1*ay^6*cos(a/2)^1*sin(a/2)^7*x^1+1*ax^1*az^1*cos(a/2)^6*sin(a/2)^2*y^1+-3*ax^1*az^2*cos(a/2)^5*sin(a/2)^3*x^1+3*ax^1*az^3*cos(a/2)^4*sin(a/2)^4*y^1+-3*ax^1*az^4*cos(a/2)^3*sin(a/2)^5*x^1+3*ax^1*az^5*cos(a/2)^2*sin(a/2)^6*y^1+-1*ax^1*az^6*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^3*ay^1*az^4*sin(a/2)^8*z^1+-3*ax^3*ay^1*cos(a/2)^4*sin(a/2)^4*z^1+6*ax^3*ay^2*az^3*sin(a/2)^8*y^1+-6*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5*x^1+-6*ax^3*ay^3*az^2*sin(a/2)^8*z^1+-6*ax^3*ay^3*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^3*ay^4*az^1*sin(a/2)^8*y^1+-3*ax^3*ay^4*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^3*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-6*ax^3*az^2*cos(a/2)^3*sin(a/2)^5*x^1+6*ax^3*az^3*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^3*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^5*ay^1*az^2*sin(a/2)^8*z^1+-3*ax^5*ay^1*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^5*ay^2*az^1*sin(a/2)^8*y^1+-3*ax^5*ay^2*cos(a/2)^1*sin(a/2)^7*x^1+3*ax^5*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^5*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-3*ax^1*ay^1*az^2*cos(a/2)^4*sin(a/2)^4*z^1+-3*ax^1*ay^1*az^4*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^2*az^1*cos(a/2)^4*sin(a/2)^4*y^1+-6*ax^1*ay^2*az^2*cos(a/2)^3*sin(a/2)^5*x^1+6*ax^1*ay^2*az^3*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^2*az^4*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^1*ay^3*az^2*cos(a/2)^2*sin(a/2)^6*z^1+3*ax^1*ay^4*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-3*ax^1*ay^4*az^2*cos(a/2)^1*sin(a/2)^7*x^1+-6*ax^3*ay^1*az^2*cos(a/2)^2*sin(a/2)^6*z^1+6*ax^3*ay^2*az^1*cos(a/2)^2*sin(a/2)^6*y^1+-6*ax^3*ay^2*az^2*cos(a/2)^1*sin(a/2)^7*x^1
+1*cos(a/2)^8
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ay^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+1*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+1*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+1*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+1*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+3*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+1*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+3*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+3*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+1*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+3*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+3*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+3*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+1*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+1*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+3*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+1*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+3*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+3*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+3*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+1*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+3*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+1*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+3*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+3*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+3*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+3*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+1*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+6*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+18*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+18*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+18*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+1*cos(a/2)^8+1*ax^8*sin(a/2)^8+1*ay^8*sin(a/2)^8+1*az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6
+-1*cos(a/2)^4
+-1*cos(a/2)^4+-1*ax^2*cos(a/2)^2*sin(a/2)^2
+-1*cos(a/2)^4+-1*ax^2*cos(a/2)^2*sin(a/2)^2+-1*ay^2*cos(a/2)^2*sin(a/2)^2
+-1*cos(a/2)^4+-1*ax^2*cos(a/2)^2*sin(a/2)^2+-1*ay^2*cos(a/2)^2*sin(a/2)^2+-1*az^2*cos(a/2)^2*sin(a/2)^2
+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*ax^4*sin(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+1*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+1*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+1*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*cos(a/2)^4+1*ax^4*sin(a/2)^4+1*ay^4*sin(a/2)^4+1*az^4*sin(a/2)^4+2*ax^2*ay^2*sin(a/2)^4+2*ax^2*az^2*sin(a/2)^4+2*ax^2*cos(a/2)^2*sin(a/2)^2+2*ay^2*az^2*sin(a/2)^4+2*ay^2*cos(a/2)^2*sin(a/2)^2+2*az^2*cos(a/2)^2*sin(a/2)^2
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+4*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+13*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+13*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+13*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+13*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^3*ay^4*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+13*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+30*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^3*ay^4*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
+1*ax^1*cos(a/2)^15*sin(a/2)^1*x^1+7*ax^3*cos(a/2)^13*sin(a/2)^3*x^1+18*ax^5*cos(a/2)^11*sin(a/2)^5*x^1+22*ax^7*cos(a/2)^9*sin(a/2)^7*x^1+13*ax^9*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^11*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^1*ay^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*ay^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*ay^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*ay^8*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*az^2*cos(a/2)^13*sin(a/2)^3*x^1+6*ax^1*az^4*cos(a/2)^11*sin(a/2)^5*x^1+4*ax^1*az^6*cos(a/2)^9*sin(a/2)^7*x^1+1*ax^1*az^8*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*cos(a/2)^11*sin(a/2)^5*x^1+30*ax^3*ay^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*ay^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*ay^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^3*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^3*az^6*cos(a/2)^7*sin(a/2)^9*x^1+3*ax^3*az^8*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*ay^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*ay^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^5*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^5*az^6*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*ay^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*ay^4*cos(a/2)^5*sin(a/2)^11*x^1+4*ax^7*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^7*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*ay^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^9*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^1*ay^2*az^2*cos(a/2)^11*sin(a/2)^5*x^1+12*ax^1*ay^2*az^4*cos(a/2)^9*sin(a/2)^7*x^1+4*ax^1*ay^2*az^6*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^1*ay^4*az^2*cos(a/2)^9*sin(a/2)^7*x^1+6*ax^1*ay^4*az^4*cos(a/2)^7*sin(a/2)^9*x^1+4*ax^1*ay^6*az^2*cos(a/2)^7*sin(a/2)^9*x^1+24*ax^3*ay^2*az^2*cos(a/2)^9*sin(a/2)^7*x^1+12*ax^3*ay^2*az^4*cos(a/2)^7*sin(a/2)^9*x^1+12*ax^3*ay^2*az^6*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*ay^4*az^2*cos(a/2)^7*sin(a/2)^9*x^1+18*ax^3*ay^4*az^4*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^3*ay^6*az^2*cos(a/2)^5*sin(a/2)^11*x^1+12*ax^5*ay^2*az^2*cos(a/2)^7*sin(a/2)^9*x^1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:13:02</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x0006d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:27 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(-cos(a/2)^8+sin(a/2)^8+2*cos(a/2)^2*sin(a/2)^6-2*cos(a/2)^6*sin(a/2)^2)/(cos(a/2)^8+sin(a/2)^8+4*cos(a/2)^2*sin(a/2)^6+6*cos(a/2)^4*sin(a/2)^4+4*cos(a/2)^6*sin(a/2)^2),(2*cos(a/2)*sin(a/2)^31*x+30*cos(a/2)^3*sin(a/2)^29*x+210*cos(a/2)^5*sin(a/2)^27*x+910*cos(a/2)^7*sin(a/2)^25*x+2730*cos(a/2)^9*sin(a/2)^23*x+6006*cos(a/2)^11*sin(a/2)^21*x+10010*cos(a/2)^13*sin(a/2)^19*x+12870*cos(a/2)^15*sin(a/2)^17*x+12870*cos(a/2)^17*sin(a/2)^15*x+10010*cos(a/2)^19*sin(a/2)^13*x+6006*cos(a/2)^21*sin(a/2)^11*x+2730*cos(a/2)^23*sin(a/2)^9*x+910*cos(a/2)^25*sin(a/2)^7*x+210*cos(a/2)^27*sin(a/2)^5*x+30*cos(a/2)^29*sin(a/2)^3*x+2*cos(a/2)^31*sin(a/2)*x)/(cos(a/2)^32+sin(a/2)^32+16*cos(a/2)^2*sin(a/2)^30+120*cos(a/2)^4*sin(a/2)^28+560*cos(a/2)^6*sin(a/2)^26+1820*cos(a/2)^8*sin(a/2)^24+4368*cos(a/2)^10*sin(a/2)^22+8008*cos(a/2)^12*sin(a/2)^20+11440*cos(a/2)^14*sin(a/2)^18+12870*cos(a/2)^16*sin(a/2)^16+11440*cos(a/2)^18*sin(a/2)^14+8008*cos(a/2)^20*sin(a/2)^12+4368*cos(a/2)^22*sin(a/2)^10+1820*cos(a/2)^24*sin(a/2)^8+560*cos(a/2)^26*sin(a/2)^6+120*cos(a/2)^28*sin(a/2)^4+16*cos(a/2)^30*sin(a/2)^2)},{(-2*cos(a/2)*sin(a/2)^7-6*cos(a/2)^3*sin(a/2)^5-6*cos(a/2)^5*sin(a/2)^3-2*cos(a/2)^7*sin(a/2))/(cos(a/2)^8+sin(a/2)^8+4*cos(a/2)^2*sin(a/2)^6+6*cos(a/2)^4*sin(a/2)^4+4*cos(a/2)^6*sin(a/2)^2),(-cos(a/2)^32*x+sin(a/2)^32*x+14*cos(a/2)^2*sin(a/2)^30*x+90*cos(a/2)^4*sin(a/2)^28*x+350*cos(a/2)^6*sin(a/2)^26*x+910*cos(a/2)^8*sin(a/2)^24*x+1638*cos(a/2)^10*sin(a/2)^22*x+2002*cos(a/2)^12*sin(a/2)^20*x+1430*cos(a/2)^14*sin(a/2)^18*x-1430*cos(a/2)^18*sin(a/2)^14*x-2002*cos(a/2)^20*sin(a/2)^12*x-1638*cos(a/2)^22*sin(a/2)^10*x-910*cos(a/2)^24*sin(a/2)^8*x-350*cos(a/2)^26*sin(a/2)^6*x-90*cos(a/2)^28*sin(a/2)^4*x-14*cos(a/2)^30*sin(a/2)^2*x)/(cos(a/2)^32+sin(a/2)^32+16*cos(a/2)^2*sin(a/2)^30+120*cos(a/2)^4*sin(a/2)^28+560*cos(a/2)^6*sin(a/2)^26+1820*cos(a/2)^8*sin(a/2)^24+4368*cos(a/2)^10*sin(a/2)^22+8008*cos(a/2)^12*sin(a/2)^20+11440*cos(a/2)^14*sin(a/2)^18+12870*cos(a/2)^16*sin(a/2)^16+11440*cos(a/2)^18*sin(a/2)^14+8008*cos(a/2)^20*sin(a/2)^12+4368*cos(a/2)^22*sin(a/2)^10+1820*cos(a/2)^24*sin(a/2)^8+560*cos(a/2)^26*sin(a/2)^6+120*cos(a/2)^28*sin(a/2)^4+16*cos(a/2)^30*sin(a/2)^2)},{0,(-cos(a/2)^32*y-sin(a/2)^32*y-16*cos(a/2)^2*sin(a/2)^30*y-120*cos(a/2)^4*sin(a/2)^28*y-560*cos(a/2)^6*sin(a/2)^26*y-1820*cos(a/2)^8*sin(a/2)^24*y-4368*cos(a/2)^10*sin(a/2)^22*y-8008*cos(a/2)^12*sin(a/2)^20*y-11440*cos(a/2)^14*sin(a/2)^18*y-12870*cos(a/2)^16*sin(a/2)^16*y-11440*cos(a/2)^18*sin(a/2)^14*y-8008*cos(a/2)^20*sin(a/2)^12*y-4368*cos(a/2)^22*sin(a/2)^10*y-1820*cos(a/2)^24*sin(a/2)^8*y-560*cos(a/2)^26*sin(a/2)^6*y-120*cos(a/2)^28*sin(a/2)^4*y-16*cos(a/2)^30*sin(a/2)^2*y)/(cos(a/2)^32+sin(a/2)^32+16*cos(a/2)^2*sin(a/2)^30+120*cos(a/2)^4*sin(a/2)^28+560*cos(a/2)^6*sin(a/2)^26+1820*cos(a/2)^8*sin(a/2)^24+4368*cos(a/2)^10*sin(a/2)^22+8008*cos(a/2)^12*sin(a/2)^20+11440*cos(a/2)^14*sin(a/2)^18+12870*cos(a/2)^16*sin(a/2)^16+11440*cos(a/2)^18*sin(a/2)^14+8008*cos(a/2)^20*sin(a/2)^12+4368*cos(a/2)^22*sin(a/2)^10+1820*cos(a/2)^24*sin(a/2)^8+560*cos(a/2)^26*sin(a/2)^6+120*cos(a/2)^28*sin(a/2)^4+16*cos(a/2)^30*sin(a/2)^2)},{0,(-cos(a/2)^32*z-sin(a/2)^32*z-16*cos(a/2)^2*sin(a/2)^30*z-120*cos(a/2)^4*sin(a/2)^28*z-560*cos(a/2)^6*sin(a/2)^26*z-1820*cos(a/2)^8*sin(a/2)^24*z-4368*cos(a/2)^10*sin(a/2)^22*z-8008*cos(a/2)^12*sin(a/2)^20*z-11440*cos(a/2)^14*sin(a/2)^18*z-12870*cos(a/2)^16*sin(a/2)^16*z-11440*cos(a/2)^18*sin(a/2)^14*z-8008*cos(a/2)^20*sin(a/2)^12*z-4368*cos(a/2)^22*sin(a/2)^10*z-1820*cos(a/2)^24*sin(a/2)^8*z-560*cos(a/2)^26*sin(a/2)^6*z-120*cos(a/2)^28*sin(a/2)^4*z-16*cos(a/2)^30*sin(a/2)^2*z)/(cos(a/2)^32+sin(a/2)^32+16*cos(a/2)^2*sin(a/2)^30+120*cos(a/2)^4*sin(a/2)^28+560*cos(a/2)^6*sin(a/2)^26+1820*cos(a/2)^8*sin(a/2)^24+4368*cos(a/2)^10*sin(a/2)^22+8008*cos(a/2)^12*sin(a/2)^20+11440*cos(a/2)^14*sin(a/2)^18+12870*cos(a/2)^16*sin(a/2)^16+11440*cos(a/2)^18*sin(a/2)^14+8008*cos(a/2)^20*sin(a/2)^12+4368*cos(a/2)^22*sin(a/2)^10+1820*cos(a/2)^24*sin(a/2)^8+560*cos(a/2)^26*sin(a/2)^6+120*cos(a/2)^28*sin(a/2)^4+16*cos(a/2)^30*sin(a/2)^2)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:13:42</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00069] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:27 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(-cos(a/2)^8+ax^8*sin(a/2)^8-2*ax^2*cos(a/2)^6*sin(a/2)^2+2*ax^6*cos(a/2)^2*sin(a/2)^6)/(cos(a/2)^8+ax^8*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*cos(a/2)^2*sin(a/2)^6),(2*ax*cos(a/2)^31*sin(a/2)*x+30*ax^3*cos(a/2)^29*sin(a/2)^3*x+210*ax^5*cos(a/2)^27*sin(a/2)^5*x+910*ax^7*cos(a/2)^25*sin(a/2)^7*x+2730*ax^9*cos(a/2)^23*sin(a/2)^9*x+6006*ax^11*cos(a/2)^21*sin(a/2)^11*x+10010*ax^13*cos(a/2)^19*sin(a/2)^13*x+12870*ax^15*cos(a/2)^17*sin(a/2)^15*x+12870*ax^17*cos(a/2)^15*sin(a/2)^17*x+10010*ax^19*cos(a/2)^13*sin(a/2)^19*x+6006*ax^21*cos(a/2)^11*sin(a/2)^21*x+2730*ax^23*cos(a/2)^9*sin(a/2)^23*x+910*ax^25*cos(a/2)^7*sin(a/2)^25*x+210*ax^27*cos(a/2)^5*sin(a/2)^27*x+30*ax^29*cos(a/2)^3*sin(a/2)^29*x+2*ax^31*cos(a/2)*sin(a/2)^31*x)/(cos(a/2)^32+ax^32*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*cos(a/2)^2*sin(a/2)^30)},{(-2*ax*cos(a/2)^7*sin(a/2)-6*ax^3*cos(a/2)^5*sin(a/2)^3-6*ax^5*cos(a/2)^3*sin(a/2)^5-2*ax^7*cos(a/2)*sin(a/2)^7)/(cos(a/2)^8+ax^8*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*cos(a/2)^2*sin(a/2)^6),(-cos(a/2)^32*x+ax^32*sin(a/2)^32*x-14*ax^2*cos(a/2)^30*sin(a/2)^2*x-90*ax^4*cos(a/2)^28*sin(a/2)^4*x-350*ax^6*cos(a/2)^26*sin(a/2)^6*x-910*ax^8*cos(a/2)^24*sin(a/2)^8*x-1638*ax^10*cos(a/2)^22*sin(a/2)^10*x-2002*ax^12*cos(a/2)^20*sin(a/2)^12*x-1430*ax^14*cos(a/2)^18*sin(a/2)^14*x+1430*ax^18*cos(a/2)^14*sin(a/2)^18*x+2002*ax^20*cos(a/2)^12*sin(a/2)^20*x+1638*ax^22*cos(a/2)^10*sin(a/2)^22*x+910*ax^24*cos(a/2)^8*sin(a/2)^24*x+350*ax^26*cos(a/2)^6*sin(a/2)^26*x+90*ax^28*cos(a/2)^4*sin(a/2)^28*x+14*ax^30*cos(a/2)^2*sin(a/2)^30*x)/(cos(a/2)^32+ax^32*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*cos(a/2)^2*sin(a/2)^30)},{0,(-cos(a/2)^32*y-ax^32*sin(a/2)^32*y-16*ax^2*cos(a/2)^30*sin(a/2)^2*y-120*ax^4*cos(a/2)^28*sin(a/2)^4*y-560*ax^6*cos(a/2)^26*sin(a/2)^6*y-1820*ax^8*cos(a/2)^24*sin(a/2)^8*y-4368*ax^10*cos(a/2)^22*sin(a/2)^10*y-8008*ax^12*cos(a/2)^20*sin(a/2)^12*y-11440*ax^14*cos(a/2)^18*sin(a/2)^14*y-12870*ax^16*cos(a/2)^16*sin(a/2)^16*y-11440*ax^18*cos(a/2)^14*sin(a/2)^18*y-8008*ax^20*cos(a/2)^12*sin(a/2)^20*y-4368*ax^22*cos(a/2)^10*sin(a/2)^22*y-1820*ax^24*cos(a/2)^8*sin(a/2)^24*y-560*ax^26*cos(a/2)^6*sin(a/2)^26*y-120*ax^28*cos(a/2)^4*sin(a/2)^28*y-16*ax^30*cos(a/2)^2*sin(a/2)^30*y)/(cos(a/2)^32+ax^32*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*cos(a/2)^2*sin(a/2)^30)},{0,(-cos(a/2)^32*z-ax^32*sin(a/2)^32*z-16*ax^2*cos(a/2)^30*sin(a/2)^2*z-120*ax^4*cos(a/2)^28*sin(a/2)^4*z-560*ax^6*cos(a/2)^26*sin(a/2)^6*z-1820*ax^8*cos(a/2)^24*sin(a/2)^8*z-4368*ax^10*cos(a/2)^22*sin(a/2)^10*z-8008*ax^12*cos(a/2)^20*sin(a/2)^12*z-11440*ax^14*cos(a/2)^18*sin(a/2)^14*z-12870*ax^16*cos(a/2)^16*sin(a/2)^16*z-11440*ax^18*cos(a/2)^14*sin(a/2)^18*z-8008*ax^20*cos(a/2)^12*sin(a/2)^20*z-4368*ax^22*cos(a/2)^10*sin(a/2)^22*z-1820*ax^24*cos(a/2)^8*sin(a/2)^24*z-560*ax^26*cos(a/2)^6*sin(a/2)^26*z-120*ax^28*cos(a/2)^4*sin(a/2)^28*z-16*ax^30*cos(a/2)^2*sin(a/2)^30*z)/(cos(a/2)^32+ax^32*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*cos(a/2)^2*sin(a/2)^30)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:13:56</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00065] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:27 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(-cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8-2*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+4*ax^6*ay^2*sin(a/2)^8+2*ax^6*cos(a/2)^2*sin(a/2)^6-2*ay^2*cos(a/2)^6*sin(a/2)^2+2*ay^6*cos(a/2)^2*sin(a/2)^6+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6)/(cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6),(2*ax*cos(a/2)^31*sin(a/2)*x+30*ax^3*cos(a/2)^29*sin(a/2)^3*x+210*ax^5*cos(a/2)^27*sin(a/2)^5*x+910*ax^7*cos(a/2)^25*sin(a/2)^7*x+2730*ax^9*cos(a/2)^23*sin(a/2)^9*x+6006*ax^11*cos(a/2)^21*sin(a/2)^11*x+10010*ax^13*cos(a/2)^19*sin(a/2)^13*x+12870*ax^15*cos(a/2)^17*sin(a/2)^15*x+12870*ax^17*cos(a/2)^15*sin(a/2)^17*x+10010*ax^19*cos(a/2)^13*sin(a/2)^19*x+6006*ax^21*cos(a/2)^11*sin(a/2)^21*x+2730*ax^23*cos(a/2)^9*sin(a/2)^23*x+910*ax^25*cos(a/2)^7*sin(a/2)^25*x+210*ax^27*cos(a/2)^5*sin(a/2)^27*x+30*ax^29*cos(a/2)^3*sin(a/2)^29*x+2*ax^31*cos(a/2)*sin(a/2)^31*x+2*ay*cos(a/2)^31*sin(a/2)*y+30*ay^3*cos(a/2)^29*sin(a/2)^3*y+210*ay^5*cos(a/2)^27*sin(a/2)^5*y+910*ay^7*cos(a/2)^25*sin(a/2)^7*y+2730*ay^9*cos(a/2)^23*sin(a/2)^9*y+6006*ay^11*cos(a/2)^21*sin(a/2)^11*y+10010*ay^13*cos(a/2)^19*sin(a/2)^13*y+12870*ay^15*cos(a/2)^17*sin(a/2)^15*y+12870*ay^17*cos(a/2)^15*sin(a/2)^17*y+10010*ay^19*cos(a/2)^13*sin(a/2)^19*y+6006*ay^21*cos(a/2)^11*sin(a/2)^21*y+2730*ay^23*cos(a/2)^9*sin(a/2)^23*y+910*ay^25*cos(a/2)^7*sin(a/2)^25*y+210*ay^27*cos(a/2)^5*sin(a/2)^27*y+30*ay^29*cos(a/2)^3*sin(a/2)^29*y+2*ay^31*cos(a/2)*sin(a/2)^31*y+30*ax*ay^2*cos(a/2)^29*sin(a/2)^3*x+210*ax*ay^4*cos(a/2)^27*sin(a/2)^5*x+910*ax*ay^6*cos(a/2)^25*sin(a/2)^7*x+2730*ax*ay^8*cos(a/2)^23*sin(a/2)^9*x+6006*ax*ay^10*cos(a/2)^21*sin(a/2)^11*x+10010*ax*ay^12*cos(a/2)^19*sin(a/2)^13*x+12870*ax*ay^14*cos(a/2)^17*sin(a/2)^15*x+12870*ax*ay^16*cos(a/2)^15*sin(a/2)^17*x+10010*ax*ay^18*cos(a/2)^13*sin(a/2)^19*x+6006*ax*ay^20*cos(a/2)^11*sin(a/2)^21*x+2730*ax*ay^22*cos(a/2)^9*sin(a/2)^23*x+910*ax*ay^24*cos(a/2)^7*sin(a/2)^25*x+210*ax*ay^26*cos(a/2)^5*sin(a/2)^27*x+30*ax*ay^28*cos(a/2)^3*sin(a/2)^29*x+2*ax*ay^30*cos(a/2)*sin(a/2)^31*x+30*ax^2*ay*cos(a/2)^29*sin(a/2)^3*y+420*ax^2*ay^3*cos(a/2)^27*sin(a/2)^5*y+2730*ax^2*ay^5*cos(a/2)^25*sin(a/2)^7*y+10920*ax^2*ay^7*cos(a/2)^23*sin(a/2)^9*y+30030*ax^2*ay^9*cos(a/2)^21*sin(a/2)^11*y+60060*ax^2*ay^11*cos(a/2)^19*sin(a/2)^13*y+90090*ax^2*ay^13*cos(a/2)^17*sin(a/2)^15*y+102960*ax^2*ay^15*cos(a/2)^15*sin(a/2)^17*y+90090*ax^2*ay^17*cos(a/2)^13*sin(a/2)^19*y+60060*ax^2*ay^19*cos(a/2)^11*sin(a/2)^21*y+30030*ax^2*ay^21*cos(a/2)^9*sin(a/2)^23*y+10920*ax^2*ay^23*cos(a/2)^7*sin(a/2)^25*y+2730*ax^2*ay^25*cos(a/2)^5*sin(a/2)^27*y+420*ax^2*ay^27*cos(a/2)^3*sin(a/2)^29*y+30*ax^2*ay^29*cos(a/2)*sin(a/2)^31*y+420*ax^3*ay^2*cos(a/2)^27*sin(a/2)^5*x+2730*ax^3*ay^4*cos(a/2)^25*sin(a/2)^7*x+10920*ax^3*ay^6*cos(a/2)^23*sin(a/2)^9*x+30030*ax^3*ay^8*cos(a/2)^21*sin(a/2)^11*x+60060*ax^3*ay^10*cos(a/2)^19*sin(a/2)^13*x+90090*ax^3*ay^12*cos(a/2)^17*sin(a/2)^15*x+102960*ax^3*ay^14*cos(a/2)^15*sin(a/2)^17*x+90090*ax^3*ay^16*cos(a/2)^13*sin(a/2)^19*x+60060*ax^3*ay^18*cos(a/2)^11*sin(a/2)^21*x+30030*ax^3*ay^20*cos(a/2)^9*sin(a/2)^23*x+10920*ax^3*ay^22*cos(a/2)^7*sin(a/2)^25*x+2730*ax^3*ay^24*cos(a/2)^5*sin(a/2)^27*x+420*ax^3*ay^26*cos(a/2)^3*sin(a/2)^29*x+30*ax^3*ay^28*cos(a/2)*sin(a/2)^31*x+210*ax^4*ay*cos(a/2)^27*sin(a/2)^5*y+2730*ax^4*ay^3*cos(a/2)^25*sin(a/2)^7*y+16380*ax^4*ay^5*cos(a/2)^23*sin(a/2)^9*y+60060*ax^4*ay^7*cos(a/2)^21*sin(a/2)^11*y+150150*ax^4*ay^9*cos(a/2)^19*sin(a/2)^13*y+270270*ax^4*ay^11*cos(a/2)^17*sin(a/2)^15*y+360360*ax^4*ay^13*cos(a/2)^15*sin(a/2)^17*y+360360*ax^4*ay^15*cos(a/2)^13*sin(a/2)^19*y+270270*ax^4*ay^17*cos(a/2)^11*sin(a/2)^21*y+150150*ax^4*ay^19*cos(a/2)^9*sin(a/2)^23*y+60060*ax^4*ay^21*cos(a/2)^7*sin(a/2)^25*y+16380*ax^4*ay^23*cos(a/2)^5*sin(a/2)^27*y+2730*ax^4*ay^25*cos(a/2)^3*sin(a/2)^29*y+210*ax^4*ay^27*cos(a/2)*sin(a/2)^31*y+2730*ax^5*ay^2*cos(a/2)^25*sin(a/2)^7*x+16380*ax^5*ay^4*cos(a/2)^23*sin(a/2)^9*x+60060*ax^5*ay^6*cos(a/2)^21*sin(a/2)^11*x+150150*ax^5*ay^8*cos(a/2)^19*sin(a/2)^13*x+270270*ax^5*ay^10*cos(a/2)^17*sin(a/2)^15*x+360360*ax^5*ay^12*cos(a/2)^15*sin(a/2)^17*x+360360*ax^5*ay^14*cos(a/2)^13*sin(a/2)^19*x+270270*ax^5*ay^16*cos(a/2)^11*sin(a/2)^21*x+150150*ax^5*ay^18*cos(a/2)^9*sin(a/2)^23*x+60060*ax^5*ay^20*cos(a/2)^7*sin(a/2)^25*x+16380*ax^5*ay^22*cos(a/2)^5*sin(a/2)^27*x+2730*ax^5*ay^24*cos(a/2)^3*sin(a/2)^29*x+210*ax^5*ay^26*cos(a/2)*sin(a/2)^31*x+910*ax^6*ay*cos(a/2)^25*sin(a/2)^7*y+10920*ax^6*ay^3*cos(a/2)^23*sin(a/2)^9*y+60060*ax^6*ay^5*cos(a/2)^21*sin(a/2)^11*y+200200*ax^6*ay^7*cos(a/2)^19*sin(a/2)^13*y+450450*ax^6*ay^9*cos(a/2)^17*sin(a/2)^15*y+720720*ax^6*ay^11*cos(a/2)^15*sin(a/2)^17*y+840840*ax^6*ay^13*cos(a/2)^13*sin(a/2)^19*y+720720*ax^6*ay^15*cos(a/2)^11*sin(a/2)^21*y+450450*ax^6*ay^17*cos(a/2)^9*sin(a/2)^23*y+200200*ax^6*ay^19*cos(a/2)^7*sin(a/2)^25*y+60060*ax^6*ay^21*cos(a/2)^5*sin(a/2)^27*y+10920*ax^6*ay^23*cos(a/2)^3*sin(a/2)^29*y+910*ax^6*ay^25*cos(a/2)*sin(a/2)^31*y+10920*ax^7*ay^2*cos(a/2)^23*sin(a/2)^9*x+60060*ax^7*ay^4*cos(a/2)^21*sin(a/2)^11*x+200200*ax^7*ay^6*cos(a/2)^19*sin(a/2)^13*x+450450*ax^7*ay^8*cos(a/2)^17*sin(a/2)^15*x+720720*ax^7*ay^10*cos(a/2)^15*sin(a/2)^17*x+840840*ax^7*ay^12*cos(a/2)^13*sin(a/2)^19*x+720720*ax^7*ay^14*cos(a/2)^11*sin(a/2)^21*x+450450*ax^7*ay^16*cos(a/2)^9*sin(a/2)^23*x+200200*ax^7*ay^18*cos(a/2)^7*sin(a/2)^25*x+60060*ax^7*ay^20*cos(a/2)^5*sin(a/2)^27*x+10920*ax^7*ay^22*cos(a/2)^3*sin(a/2)^29*x+910*ax^7*ay^24*cos(a/2)*sin(a/2)^31*x+2730*ax^8*ay*cos(a/2)^23*sin(a/2)^9*y+30030*ax^8*ay^3*cos(a/2)^21*sin(a/2)^11*y+150150*ax^8*ay^5*cos(a/2)^19*sin(a/2)^13*y+450450*ax^8*ay^7*cos(a/2)^17*sin(a/2)^15*y+900900*ax^8*ay^9*cos(a/2)^15*sin(a/2)^17*y+1261260*ax^8*ay^11*cos(a/2)^13*sin(a/2)^19*y+1261260*ax^8*ay^13*cos(a/2)^11*sin(a/2)^21*y+900900*ax^8*ay^15*cos(a/2)^9*sin(a/2)^23*y+450450*ax^8*ay^17*cos(a/2)^7*sin(a/2)^25*y+150150*ax^8*ay^19*cos(a/2)^5*sin(a/2)^27*y+30030*ax^8*ay^21*cos(a/2)^3*sin(a/2)^29*y+2730*ax^8*ay^23*cos(a/2)*sin(a/2)^31*y+30030*ax^9*ay^2*cos(a/2)^21*sin(a/2)^11*x+150150*ax^9*ay^4*cos(a/2)^19*sin(a/2)^13*x+450450*ax^9*ay^6*cos(a/2)^17*sin(a/2)^15*x+900900*ax^9*ay^8*cos(a/2)^15*sin(a/2)^17*x+1261260*ax^9*ay^10*cos(a/2)^13*sin(a/2)^19*x+1261260*ax^9*ay^12*cos(a/2)^11*sin(a/2)^21*x+900900*ax^9*ay^14*cos(a/2)^9*sin(a/2)^23*x+450450*ax^9*ay^16*cos(a/2)^7*sin(a/2)^25*x+150150*ax^9*ay^18*cos(a/2)^5*sin(a/2)^27*x+30030*ax^9*ay^20*cos(a/2)^3*sin(a/2)^29*x+2730*ax^9*ay^22*cos(a/2)*sin(a/2)^31*x+6006*ax^10*ay*cos(a/2)^21*sin(a/2)^11*y+60060*ax^10*ay^3*cos(a/2)^19*sin(a/2)^13*y+270270*ax^10*ay^5*cos(a/2)^17*sin(a/2)^15*y+720720*ax^10*ay^7*cos(a/2)^15*sin(a/2)^17*y+1261260*ax^10*ay^9*cos(a/2)^13*sin(a/2)^19*y+1513512*ax^10*ay^11*cos(a/2)^11*sin(a/2)^21*y+1261260*ax^10*ay^13*cos(a/2)^9*sin(a/2)^23*y+720720*ax^10*ay^15*cos(a/2)^7*sin(a/2)^25*y+270270*ax^10*ay^17*cos(a/2)^5*sin(a/2)^27*y+60060*ax^10*ay^19*cos(a/2)^3*sin(a/2)^29*y+6006*ax^10*ay^21*cos(a/2)*sin(a/2)^31*y+60060*ax^11*ay^2*cos(a/2)^19*sin(a/2)^13*x+270270*ax^11*ay^4*cos(a/2)^17*sin(a/2)^15*x+720720*ax^11*ay^6*cos(a/2)^15*sin(a/2)^17*x+1261260*ax^11*ay^8*cos(a/2)^13*sin(a/2)^19*x+1513512*ax^11*ay^10*cos(a/2)^11*sin(a/2)^21*x+1261260*ax^11*ay^12*cos(a/2)^9*sin(a/2)^23*x+720720*ax^11*ay^14*cos(a/2)^7*sin(a/2)^25*x+270270*ax^11*ay^16*cos(a/2)^5*sin(a/2)^27*x+60060*ax^11*ay^18*cos(a/2)^3*sin(a/2)^29*x+6006*ax^11*ay^20*cos(a/2)*sin(a/2)^31*x+10010*ax^12*ay*cos(a/2)^19*sin(a/2)^13*y+90090*ax^12*ay^3*cos(a/2)^17*sin(a/2)^15*y+360360*ax^12*ay^5*cos(a/2)^15*sin(a/2)^17*y+840840*ax^12*ay^7*cos(a/2)^13*sin(a/2)^19*y+1261260*ax^12*ay^9*cos(a/2)^11*sin(a/2)^21*y+1261260*ax^12*ay^11*cos(a/2)^9*sin(a/2)^23*y+840840*ax^12*ay^13*cos(a/2)^7*sin(a/2)^25*y+360360*ax^12*ay^15*cos(a/2)^5*sin(a/2)^27*y+90090*ax^12*ay^17*cos(a/2)^3*sin(a/2)^29*y+10010*ax^12*ay^19*cos(a/2)*sin(a/2)^31*y+90090*ax^13*ay^2*cos(a/2)^17*sin(a/2)^15*x+360360*ax^13*ay^4*cos(a/2)^15*sin(a/2)^17*x+840840*ax^13*ay^6*cos(a/2)^13*sin(a/2)^19*x+1261260*ax^13*ay^8*cos(a/2)^11*sin(a/2)^21*x+1261260*ax^13*ay^10*cos(a/2)^9*sin(a/2)^23*x+840840*ax^13*ay^12*cos(a/2)^7*sin(a/2)^25*x+360360*ax^13*ay^14*cos(a/2)^5*sin(a/2)^27*x+90090*ax^13*ay^16*cos(a/2)^3*sin(a/2)^29*x+10010*ax^13*ay^18*cos(a/2)*sin(a/2)^31*x+12870*ax^14*ay*cos(a/2)^17*sin(a/2)^15*y+102960*ax^14*ay^3*cos(a/2)^15*sin(a/2)^17*y+360360*ax^14*ay^5*cos(a/2)^13*sin(a/2)^19*y+720720*ax^14*ay^7*cos(a/2)^11*sin(a/2)^21*y+900900*ax^14*ay^9*cos(a/2)^9*sin(a/2)^23*y+720720*ax^14*ay^11*cos(a/2)^7*sin(a/2)^25*y+360360*ax^14*ay^13*cos(a/2)^5*sin(a/2)^27*y+102960*ax^14*ay^15*cos(a/2)^3*sin(a/2)^29*y+12870*ax^14*ay^17*cos(a/2)*sin(a/2)^31*y+102960*ax^15*ay^2*cos(a/2)^15*sin(a/2)^17*x+360360*ax^15*ay^4*cos(a/2)^13*sin(a/2)^19*x+720720*ax^15*ay^6*cos(a/2)^11*sin(a/2)^21*x+900900*ax^15*ay^8*cos(a/2)^9*sin(a/2)^23*x+720720*ax^15*ay^10*cos(a/2)^7*sin(a/2)^25*x+360360*ax^15*ay^12*cos(a/2)^5*sin(a/2)^27*x+102960*ax^15*ay^14*cos(a/2)^3*sin(a/2)^29*x+12870*ax^15*ay^16*cos(a/2)*sin(a/2)^31*x+12870*ax^16*ay*cos(a/2)^15*sin(a/2)^17*y+90090*ax^16*ay^3*cos(a/2)^13*sin(a/2)^19*y+270270*ax^16*ay^5*cos(a/2)^11*sin(a/2)^21*y+450450*ax^16*ay^7*cos(a/2)^9*sin(a/2)^23*y+450450*ax^16*ay^9*cos(a/2)^7*sin(a/2)^25*y+270270*ax^16*ay^11*cos(a/2)^5*sin(a/2)^27*y+90090*ax^16*ay^13*cos(a/2)^3*sin(a/2)^29*y+12870*ax^16*ay^15*cos(a/2)*sin(a/2)^31*y+90090*ax^17*ay^2*cos(a/2)^13*sin(a/2)^19*x+270270*ax^17*ay^4*cos(a/2)^11*sin(a/2)^21*x+450450*ax^17*ay^6*cos(a/2)^9*sin(a/2)^23*x+450450*ax^17*ay^8*cos(a/2)^7*sin(a/2)^25*x+270270*ax^17*ay^10*cos(a/2)^5*sin(a/2)^27*x+90090*ax^17*ay^12*cos(a/2)^3*sin(a/2)^29*x+12870*ax^17*ay^14*cos(a/2)*sin(a/2)^31*x+10010*ax^18*ay*cos(a/2)^13*sin(a/2)^19*y+60060*ax^18*ay^3*cos(a/2)^11*sin(a/2)^21*y+150150*ax^18*ay^5*cos(a/2)^9*sin(a/2)^23*y+200200*ax^18*ay^7*cos(a/2)^7*sin(a/2)^25*y+150150*ax^18*ay^9*cos(a/2)^5*sin(a/2)^27*y+60060*ax^18*ay^11*cos(a/2)^3*sin(a/2)^29*y+10010*ax^18*ay^13*cos(a/2)*sin(a/2)^31*y+60060*ax^19*ay^2*cos(a/2)^11*sin(a/2)^21*x+150150*ax^19*ay^4*cos(a/2)^9*sin(a/2)^23*x+200200*ax^19*ay^6*cos(a/2)^7*sin(a/2)^25*x+150150*ax^19*ay^8*cos(a/2)^5*sin(a/2)^27*x+60060*ax^19*ay^10*cos(a/2)^3*sin(a/2)^29*x+10010*ax^19*ay^12*cos(a/2)*sin(a/2)^31*x+6006*ax^20*ay*cos(a/2)^11*sin(a/2)^21*y+30030*ax^20*ay^3*cos(a/2)^9*sin(a/2)^23*y+60060*ax^20*ay^5*cos(a/2)^7*sin(a/2)^25*y+60060*ax^20*ay^7*cos(a/2)^5*sin(a/2)^27*y+30030*ax^20*ay^9*cos(a/2)^3*sin(a/2)^29*y+6006*ax^20*ay^11*cos(a/2)*sin(a/2)^31*y+30030*ax^21*ay^2*cos(a/2)^9*sin(a/2)^23*x+60060*ax^21*ay^4*cos(a/2)^7*sin(a/2)^25*x+60060*ax^21*ay^6*cos(a/2)^5*sin(a/2)^27*x+30030*ax^21*ay^8*cos(a/2)^3*sin(a/2)^29*x+6006*ax^21*ay^10*cos(a/2)*sin(a/2)^31*x+2730*ax^22*ay*cos(a/2)^9*sin(a/2)^23*y+10920*ax^22*ay^3*cos(a/2)^7*sin(a/2)^25*y+16380*ax^22*ay^5*cos(a/2)^5*sin(a/2)^27*y+10920*ax^22*ay^7*cos(a/2)^3*sin(a/2)^29*y+2730*ax^22*ay^9*cos(a/2)*sin(a/2)^31*y+10920*ax^23*ay^2*cos(a/2)^7*sin(a/2)^25*x+16380*ax^23*ay^4*cos(a/2)^5*sin(a/2)^27*x+10920*ax^23*ay^6*cos(a/2)^3*sin(a/2)^29*x+2730*ax^23*ay^8*cos(a/2)*sin(a/2)^31*x+910*ax^24*ay*cos(a/2)^7*sin(a/2)^25*y+2730*ax^24*ay^3*cos(a/2)^5*sin(a/2)^27*y+2730*ax^24*ay^5*cos(a/2)^3*sin(a/2)^29*y+910*ax^24*ay^7*cos(a/2)*sin(a/2)^31*y+2730*ax^25*ay^2*cos(a/2)^5*sin(a/2)^27*x+2730*ax^25*ay^4*cos(a/2)^3*sin(a/2)^29*x+910*ax^25*ay^6*cos(a/2)*sin(a/2)^31*x+210*ax^26*ay*cos(a/2)^5*sin(a/2)^27*y+420*ax^26*ay^3*cos(a/2)^3*sin(a/2)^29*y+210*ax^26*ay^5*cos(a/2)*sin(a/2)^31*y+420*ax^27*ay^2*cos(a/2)^3*sin(a/2)^29*x+210*ax^27*ay^4*cos(a/2)*sin(a/2)^31*x+30*ax^28*ay*cos(a/2)^3*sin(a/2)^29*y+30*ax^28*ay^3*cos(a/2)*sin(a/2)^31*y+30*ax^29*ay^2*cos(a/2)*sin(a/2)^31*x+2*ax^30*ay*cos(a/2)*sin(a/2)^31*y)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30)},{(-2*ax*cos(a/2)^7*sin(a/2)-6*ax^3*cos(a/2)^5*sin(a/2)^3-6*ax^5*cos(a/2)^3*sin(a/2)^5-2*ax^7*cos(a/2)*sin(a/2)^7-6*ax*ay^2*cos(a/2)^5*sin(a/2)^3-6*ax*ay^4*cos(a/2)^3*sin(a/2)^5-2*ax*ay^6*cos(a/2)*sin(a/2)^7-12*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5-6*ax^3*ay^4*cos(a/2)*sin(a/2)^7-6*ax^5*ay^2*cos(a/2)*sin(a/2)^7)/(cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6),(-cos(a/2)^32*x+ax^32*sin(a/2)^32*x-ay^32*sin(a/2)^32*x+2*ax*ay^31*sin(a/2)^32*y-14*ax^2*ay^30*sin(a/2)^32*x-14*ax^2*cos(a/2)^30*sin(a/2)^2*x+30*ax^3*ay^29*sin(a/2)^32*y-90*ax^4*ay^28*sin(a/2)^32*x-90*ax^4*cos(a/2)^28*sin(a/2)^4*x+210*ax^5*ay^27*sin(a/2)^32*y-350*ax^6*ay^26*sin(a/2)^32*x-350*ax^6*cos(a/2)^26*sin(a/2)^6*x+910*ax^7*ay^25*sin(a/2)^32*y-910*ax^8*ay^24*sin(a/2)^32*x-910*ax^8*cos(a/2)^24*sin(a/2)^8*x+2730*ax^9*ay^23*sin(a/2)^32*y-1638*ax^10*ay^22*sin(a/2)^32*x-1638*ax^10*cos(a/2)^22*sin(a/2)^10*x+6006*ax^11*ay^21*sin(a/2)^32*y-2002*ax^12*ay^20*sin(a/2)^32*x-2002*ax^12*cos(a/2)^20*sin(a/2)^12*x+10010*ax^13*ay^19*sin(a/2)^32*y-1430*ax^14*ay^18*sin(a/2)^32*x-1430*ax^14*cos(a/2)^18*sin(a/2)^14*x+12870*ax^15*ay^17*sin(a/2)^32*y+12870*ax^17*ay^15*sin(a/2)^32*y+1430*ax^18*ay^14*sin(a/2)^32*x+1430*ax^18*cos(a/2)^14*sin(a/2)^18*x+10010*ax^19*ay^13*sin(a/2)^32*y+2002*ax^20*ay^12*sin(a/2)^32*x+2002*ax^20*cos(a/2)^12*sin(a/2)^20*x+6006*ax^21*ay^11*sin(a/2)^32*y+1638*ax^22*ay^10*sin(a/2)^32*x+1638*ax^22*cos(a/2)^10*sin(a/2)^22*x+2730*ax^23*ay^9*sin(a/2)^32*y+910*ax^24*ay^8*sin(a/2)^32*x+910*ax^24*cos(a/2)^8*sin(a/2)^24*x+910*ax^25*ay^7*sin(a/2)^32*y+350*ax^26*ay^6*sin(a/2)^32*x+350*ax^26*cos(a/2)^6*sin(a/2)^26*x+210*ax^27*ay^5*sin(a/2)^32*y+90*ax^28*ay^4*sin(a/2)^32*x+90*ax^28*cos(a/2)^4*sin(a/2)^28*x+30*ax^29*ay^3*sin(a/2)^32*y+14*ax^30*ay^2*sin(a/2)^32*x+14*ax^30*cos(a/2)^2*sin(a/2)^30*x+2*ax^31*ay*sin(a/2)^32*y-16*ay^2*cos(a/2)^30*sin(a/2)^2*x-120*ay^4*cos(a/2)^28*sin(a/2)^4*x-560*ay^6*cos(a/2)^26*sin(a/2)^6*x-1820*ay^8*cos(a/2)^24*sin(a/2)^8*x-4368*ay^10*cos(a/2)^22*sin(a/2)^10*x-8008*ay^12*cos(a/2)^20*sin(a/2)^12*x-11440*ay^14*cos(a/2)^18*sin(a/2)^14*x-12870*ay^16*cos(a/2)^16*sin(a/2)^16*x-11440*ay^18*cos(a/2)^14*sin(a/2)^18*x-8008*ay^20*cos(a/2)^12*sin(a/2)^20*x-4368*ay^22*cos(a/2)^10*sin(a/2)^22*x-1820*ay^24*cos(a/2)^8*sin(a/2)^24*x-560*ay^26*cos(a/2)^6*sin(a/2)^26*x-120*ay^28*cos(a/2)^4*sin(a/2)^28*x-16*ay^30*cos(a/2)^2*sin(a/2)^30*x+2*ax*ay*cos(a/2)^30*sin(a/2)^2*y+30*ax*ay^3*cos(a/2)^28*sin(a/2)^4*y+210*ax*ay^5*cos(a/2)^26*sin(a/2)^6*y+910*ax*ay^7*cos(a/2)^24*sin(a/2)^8*y+2730*ax*ay^9*cos(a/2)^22*sin(a/2)^10*y+6006*ax*ay^11*cos(a/2)^20*sin(a/2)^12*y+10010*ax*ay^13*cos(a/2)^18*sin(a/2)^14*y+12870*ax*ay^15*cos(a/2)^16*sin(a/2)^16*y+12870*ax*ay^17*cos(a/2)^14*sin(a/2)^18*y+10010*ax*ay^19*cos(a/2)^12*sin(a/2)^20*y+6006*ax*ay^21*cos(a/2)^10*sin(a/2)^22*y+2730*ax*ay^23*cos(a/2)^8*sin(a/2)^24*y+910*ax*ay^25*cos(a/2)^6*sin(a/2)^26*y+210*ax*ay^27*cos(a/2)^4*sin(a/2)^28*y+30*ax*ay^29*cos(a/2)^2*sin(a/2)^30*y-210*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4*x-1470*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6*x-6370*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8*x-19110*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10*x-42042*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12*x-70070*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14*x-90090*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16*x-90090*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18*x-70070*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20*x-42042*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22*x-19110*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24*x-6370*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26*x-1470*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28*x-210*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30*x+30*ax^3*ay*cos(a/2)^28*sin(a/2)^4*y+420*ax^3*ay^3*cos(a/2)^26*sin(a/2)^6*y+2730*ax^3*ay^5*cos(a/2)^24*sin(a/2)^8*y+10920*ax^3*ay^7*cos(a/2)^22*sin(a/2)^10*y+30030*ax^3*ay^9*cos(a/2)^20*sin(a/2)^12*y+60060*ax^3*ay^11*cos(a/2)^18*sin(a/2)^14*y+90090*ax^3*ay^13*cos(a/2)^16*sin(a/2)^16*y+102960*ax^3*ay^15*cos(a/2)^14*sin(a/2)^18*y+90090*ax^3*ay^17*cos(a/2)^12*sin(a/2)^20*y+60060*ax^3*ay^19*cos(a/2)^10*sin(a/2)^22*y+30030*ax^3*ay^21*cos(a/2)^8*sin(a/2)^24*y+10920*ax^3*ay^23*cos(a/2)^6*sin(a/2)^26*y+2730*ax^3*ay^25*cos(a/2)^4*sin(a/2)^28*y+420*ax^3*ay^27*cos(a/2)^2*sin(a/2)^30*y-1260*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6*x-8190*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8*x-32760*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10*x-90090*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12*x-180180*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14*x-270270*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16*x-308880*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18*x-270270*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20*x-180180*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22*x-90090*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24*x-32760*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26*x-8190*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28*x-1260*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30*x+210*ax^5*ay*cos(a/2)^26*sin(a/2)^6*y+2730*ax^5*ay^3*cos(a/2)^24*sin(a/2)^8*y+16380*ax^5*ay^5*cos(a/2)^22*sin(a/2)^10*y+60060*ax^5*ay^7*cos(a/2)^20*sin(a/2)^12*y+150150*ax^5*ay^9*cos(a/2)^18*sin(a/2)^14*y+270270*ax^5*ay^11*cos(a/2)^16*sin(a/2)^16*y+360360*ax^5*ay^13*cos(a/2)^14*sin(a/2)^18*y+360360*ax^5*ay^15*cos(a/2)^12*sin(a/2)^20*y+270270*ax^5*ay^17*cos(a/2)^10*sin(a/2)^22*y+150150*ax^5*ay^19*cos(a/2)^8*sin(a/2)^24*y+60060*ax^5*ay^21*cos(a/2)^6*sin(a/2)^26*y+16380*ax^5*ay^23*cos(a/2)^4*sin(a/2)^28*y+2730*ax^5*ay^25*cos(a/2)^2*sin(a/2)^30*y-4550*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8*x-27300*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10*x-100100*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12*x-250250*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14*x-450450*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16*x-600600*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18*x-600600*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20*x-450450*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22*x-250250*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24*x-100100*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26*x-27300*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28*x-4550*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30*x+910*ax^7*ay*cos(a/2)^24*sin(a/2)^8*y+10920*ax^7*ay^3*cos(a/2)^22*sin(a/2)^10*y+60060*ax^7*ay^5*cos(a/2)^20*sin(a/2)^12*y+200200*ax^7*ay^7*cos(a/2)^18*sin(a/2)^14*y+450450*ax^7*ay^9*cos(a/2)^16*sin(a/2)^16*y+720720*ax^7*ay^11*cos(a/2)^14*sin(a/2)^18*y+840840*ax^7*ay^13*cos(a/2)^12*sin(a/2)^20*y+720720*ax^7*ay^15*cos(a/2)^10*sin(a/2)^22*y+450450*ax^7*ay^17*cos(a/2)^8*sin(a/2)^24*y+200200*ax^7*ay^19*cos(a/2)^6*sin(a/2)^26*y+60060*ax^7*ay^21*cos(a/2)^4*sin(a/2)^28*y+10920*ax^7*ay^23*cos(a/2)^2*sin(a/2)^30*y-10920*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10*x-60060*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12*x-200200*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14*x-450450*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16*x-720720*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18*x-840840*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20*x-720720*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22*x-450450*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24*x-200200*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26*x-60060*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28*x-10920*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30*x+2730*ax^9*ay*cos(a/2)^22*sin(a/2)^10*y+30030*ax^9*ay^3*cos(a/2)^20*sin(a/2)^12*y+150150*ax^9*ay^5*cos(a/2)^18*sin(a/2)^14*y+450450*ax^9*ay^7*cos(a/2)^16*sin(a/2)^16*y+900900*ax^9*ay^9*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^9*ay^11*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^9*ay^13*cos(a/2)^10*sin(a/2)^22*y+900900*ax^9*ay^15*cos(a/2)^8*sin(a/2)^24*y+450450*ax^9*ay^17*cos(a/2)^6*sin(a/2)^26*y+150150*ax^9*ay^19*cos(a/2)^4*sin(a/2)^28*y+30030*ax^9*ay^21*cos(a/2)^2*sin(a/2)^30*y-18018*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12*x-90090*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14*x-270270*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16*x-540540*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18*x-756756*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20*x-756756*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22*x-540540*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24*x-270270*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26*x-90090*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28*x-18018*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30*x+6006*ax^11*ay*cos(a/2)^20*sin(a/2)^12*y+60060*ax^11*ay^3*cos(a/2)^18*sin(a/2)^14*y+270270*ax^11*ay^5*cos(a/2)^16*sin(a/2)^16*y+720720*ax^11*ay^7*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^11*ay^9*cos(a/2)^12*sin(a/2)^20*y+1513512*ax^11*ay^11*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^11*ay^13*cos(a/2)^8*sin(a/2)^24*y+720720*ax^11*ay^15*cos(a/2)^6*sin(a/2)^26*y+270270*ax^11*ay^17*cos(a/2)^4*sin(a/2)^28*y+60060*ax^11*ay^19*cos(a/2)^2*sin(a/2)^30*y-20020*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14*x-90090*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16*x-240240*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18*x-420420*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20*x-504504*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22*x-420420*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24*x-240240*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26*x-90090*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28*x-20020*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30*x+10010*ax^13*ay*cos(a/2)^18*sin(a/2)^14*y+90090*ax^13*ay^3*cos(a/2)^16*sin(a/2)^16*y+360360*ax^13*ay^5*cos(a/2)^14*sin(a/2)^18*y+840840*ax^13*ay^7*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^13*ay^9*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^13*ay^11*cos(a/2)^8*sin(a/2)^24*y+840840*ax^13*ay^13*cos(a/2)^6*sin(a/2)^26*y+360360*ax^13*ay^15*cos(a/2)^4*sin(a/2)^28*y+90090*ax^13*ay^17*cos(a/2)^2*sin(a/2)^30*y-12870*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16*x-51480*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18*x-120120*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20*x-180180*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22*x-180180*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24*x-120120*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26*x-51480*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28*x-12870*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30*x+12870*ax^15*ay*cos(a/2)^16*sin(a/2)^16*y+102960*ax^15*ay^3*cos(a/2)^14*sin(a/2)^18*y+360360*ax^15*ay^5*cos(a/2)^12*sin(a/2)^20*y+720720*ax^15*ay^7*cos(a/2)^10*sin(a/2)^22*y+900900*ax^15*ay^9*cos(a/2)^8*sin(a/2)^24*y+720720*ax^15*ay^11*cos(a/2)^6*sin(a/2)^26*y+360360*ax^15*ay^13*cos(a/2)^4*sin(a/2)^28*y+102960*ax^15*ay^15*cos(a/2)^2*sin(a/2)^30*y+12870*ax^17*ay*cos(a/2)^14*sin(a/2)^18*y+90090*ax^17*ay^3*cos(a/2)^12*sin(a/2)^20*y+270270*ax^17*ay^5*cos(a/2)^10*sin(a/2)^22*y+450450*ax^17*ay^7*cos(a/2)^8*sin(a/2)^24*y+450450*ax^17*ay^9*cos(a/2)^6*sin(a/2)^26*y+270270*ax^17*ay^11*cos(a/2)^4*sin(a/2)^28*y+90090*ax^17*ay^13*cos(a/2)^2*sin(a/2)^30*y+10010*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20*x+30030*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22*x+50050*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24*x+50050*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26*x+30030*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28*x+10010*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30*x+10010*ax^19*ay*cos(a/2)^12*sin(a/2)^20*y+60060*ax^19*ay^3*cos(a/2)^10*sin(a/2)^22*y+150150*ax^19*ay^5*cos(a/2)^8*sin(a/2)^24*y+200200*ax^19*ay^7*cos(a/2)^6*sin(a/2)^26*y+150150*ax^19*ay^9*cos(a/2)^4*sin(a/2)^28*y+60060*ax^19*ay^11*cos(a/2)^2*sin(a/2)^30*y+12012*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22*x+30030*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24*x+40040*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26*x+30030*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28*x+12012*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30*x+6006*ax^21*ay*cos(a/2)^10*sin(a/2)^22*y+30030*ax^21*ay^3*cos(a/2)^8*sin(a/2)^24*y+60060*ax^21*ay^5*cos(a/2)^6*sin(a/2)^26*y+60060*ax^21*ay^7*cos(a/2)^4*sin(a/2)^28*y+30030*ax^21*ay^9*cos(a/2)^2*sin(a/2)^30*y+8190*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24*x+16380*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26*x+16380*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28*x+8190*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30*x+2730*ax^23*ay*cos(a/2)^8*sin(a/2)^24*y+10920*ax^23*ay^3*cos(a/2)^6*sin(a/2)^26*y+16380*ax^23*ay^5*cos(a/2)^4*sin(a/2)^28*y+10920*ax^23*ay^7*cos(a/2)^2*sin(a/2)^30*y+3640*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26*x+5460*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28*x+3640*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30*x+910*ax^25*ay*cos(a/2)^6*sin(a/2)^26*y+2730*ax^25*ay^3*cos(a/2)^4*sin(a/2)^28*y+2730*ax^25*ay^5*cos(a/2)^2*sin(a/2)^30*y+1050*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28*x+1050*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30*x+210*ax^27*ay*cos(a/2)^4*sin(a/2)^28*y+420*ax^27*ay^3*cos(a/2)^2*sin(a/2)^30*y+180*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30*x+30*ax^29*ay*cos(a/2)^2*sin(a/2)^30*y)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30)},{(-2*ay*cos(a/2)^7*sin(a/2)-6*ay^3*cos(a/2)^5*sin(a/2)^3-6*ay^5*cos(a/2)^3*sin(a/2)^5-2*ay^7*cos(a/2)*sin(a/2)^7-6*ax^2*ay*cos(a/2)^5*sin(a/2)^3-12*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5-6*ax^2*ay^5*cos(a/2)*sin(a/2)^7-6*ax^4*ay*cos(a/2)^3*sin(a/2)^5-6*ax^4*ay^3*cos(a/2)*sin(a/2)^7-2*ax^6*ay*cos(a/2)*sin(a/2)^7)/(cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6),(-cos(a/2)^32*y-ax^32*sin(a/2)^32*y+ay^32*sin(a/2)^32*y+2*ax*ay^31*sin(a/2)^32*x+14*ax^2*ay^30*sin(a/2)^32*y-16*ax^2*cos(a/2)^30*sin(a/2)^2*y+30*ax^3*ay^29*sin(a/2)^32*x+90*ax^4*ay^28*sin(a/2)^32*y-120*ax^4*cos(a/2)^28*sin(a/2)^4*y+210*ax^5*ay^27*sin(a/2)^32*x+350*ax^6*ay^26*sin(a/2)^32*y-560*ax^6*cos(a/2)^26*sin(a/2)^6*y+910*ax^7*ay^25*sin(a/2)^32*x+910*ax^8*ay^24*sin(a/2)^32*y-1820*ax^8*cos(a/2)^24*sin(a/2)^8*y+2730*ax^9*ay^23*sin(a/2)^32*x+1638*ax^10*ay^22*sin(a/2)^32*y-4368*ax^10*cos(a/2)^22*sin(a/2)^10*y+6006*ax^11*ay^21*sin(a/2)^32*x+2002*ax^12*ay^20*sin(a/2)^32*y-8008*ax^12*cos(a/2)^20*sin(a/2)^12*y+10010*ax^13*ay^19*sin(a/2)^32*x+1430*ax^14*ay^18*sin(a/2)^32*y-11440*ax^14*cos(a/2)^18*sin(a/2)^14*y+12870*ax^15*ay^17*sin(a/2)^32*x-12870*ax^16*cos(a/2)^16*sin(a/2)^16*y+12870*ax^17*ay^15*sin(a/2)^32*x-1430*ax^18*ay^14*sin(a/2)^32*y-11440*ax^18*cos(a/2)^14*sin(a/2)^18*y+10010*ax^19*ay^13*sin(a/2)^32*x-2002*ax^20*ay^12*sin(a/2)^32*y-8008*ax^20*cos(a/2)^12*sin(a/2)^20*y+6006*ax^21*ay^11*sin(a/2)^32*x-1638*ax^22*ay^10*sin(a/2)^32*y-4368*ax^22*cos(a/2)^10*sin(a/2)^22*y+2730*ax^23*ay^9*sin(a/2)^32*x-910*ax^24*ay^8*sin(a/2)^32*y-1820*ax^24*cos(a/2)^8*sin(a/2)^24*y+910*ax^25*ay^7*sin(a/2)^32*x-350*ax^26*ay^6*sin(a/2)^32*y-560*ax^26*cos(a/2)^6*sin(a/2)^26*y+210*ax^27*ay^5*sin(a/2)^32*x-90*ax^28*ay^4*sin(a/2)^32*y-120*ax^28*cos(a/2)^4*sin(a/2)^28*y+30*ax^29*ay^3*sin(a/2)^32*x-14*ax^30*ay^2*sin(a/2)^32*y-16*ax^30*cos(a/2)^2*sin(a/2)^30*y+2*ax^31*ay*sin(a/2)^32*x-14*ay^2*cos(a/2)^30*sin(a/2)^2*y-90*ay^4*cos(a/2)^28*sin(a/2)^4*y-350*ay^6*cos(a/2)^26*sin(a/2)^6*y-910*ay^8*cos(a/2)^24*sin(a/2)^8*y-1638*ay^10*cos(a/2)^22*sin(a/2)^10*y-2002*ay^12*cos(a/2)^20*sin(a/2)^12*y-1430*ay^14*cos(a/2)^18*sin(a/2)^14*y+1430*ay^18*cos(a/2)^14*sin(a/2)^18*y+2002*ay^20*cos(a/2)^12*sin(a/2)^20*y+1638*ay^22*cos(a/2)^10*sin(a/2)^22*y+910*ay^24*cos(a/2)^8*sin(a/2)^24*y+350*ay^26*cos(a/2)^6*sin(a/2)^26*y+90*ay^28*cos(a/2)^4*sin(a/2)^28*y+14*ay^30*cos(a/2)^2*sin(a/2)^30*y+2*ax*ay*cos(a/2)^30*sin(a/2)^2*x+30*ax*ay^3*cos(a/2)^28*sin(a/2)^4*x+210*ax*ay^5*cos(a/2)^26*sin(a/2)^6*x+910*ax*ay^7*cos(a/2)^24*sin(a/2)^8*x+2730*ax*ay^9*cos(a/2)^22*sin(a/2)^10*x+6006*ax*ay^11*cos(a/2)^20*sin(a/2)^12*x+10010*ax*ay^13*cos(a/2)^18*sin(a/2)^14*x+12870*ax*ay^15*cos(a/2)^16*sin(a/2)^16*x+12870*ax*ay^17*cos(a/2)^14*sin(a/2)^18*x+10010*ax*ay^19*cos(a/2)^12*sin(a/2)^20*x+6006*ax*ay^21*cos(a/2)^10*sin(a/2)^22*x+2730*ax*ay^23*cos(a/2)^8*sin(a/2)^24*x+910*ax*ay^25*cos(a/2)^6*sin(a/2)^26*x+210*ax*ay^27*cos(a/2)^4*sin(a/2)^28*x+30*ax*ay^29*cos(a/2)^2*sin(a/2)^30*x-210*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4*y-1260*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6*y-4550*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8*y-10920*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10*y-18018*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12*y-20020*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14*y-12870*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16*y+10010*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20*y+12012*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22*y+8190*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24*y+3640*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26*y+1050*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28*y+180*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30*y+30*ax^3*ay*cos(a/2)^28*sin(a/2)^4*x+420*ax^3*ay^3*cos(a/2)^26*sin(a/2)^6*x+2730*ax^3*ay^5*cos(a/2)^24*sin(a/2)^8*x+10920*ax^3*ay^7*cos(a/2)^22*sin(a/2)^10*x+30030*ax^3*ay^9*cos(a/2)^20*sin(a/2)^12*x+60060*ax^3*ay^11*cos(a/2)^18*sin(a/2)^14*x+90090*ax^3*ay^13*cos(a/2)^16*sin(a/2)^16*x+102960*ax^3*ay^15*cos(a/2)^14*sin(a/2)^18*x+90090*ax^3*ay^17*cos(a/2)^12*sin(a/2)^20*x+60060*ax^3*ay^19*cos(a/2)^10*sin(a/2)^22*x+30030*ax^3*ay^21*cos(a/2)^8*sin(a/2)^24*x+10920*ax^3*ay^23*cos(a/2)^6*sin(a/2)^26*x+2730*ax^3*ay^25*cos(a/2)^4*sin(a/2)^28*x+420*ax^3*ay^27*cos(a/2)^2*sin(a/2)^30*x-1470*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6*y-8190*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8*y-27300*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10*y-60060*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12*y-90090*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14*y-90090*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16*y-51480*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18*y+30030*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22*y+30030*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24*y+16380*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26*y+5460*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28*y+1050*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30*y+210*ax^5*ay*cos(a/2)^26*sin(a/2)^6*x+2730*ax^5*ay^3*cos(a/2)^24*sin(a/2)^8*x+16380*ax^5*ay^5*cos(a/2)^22*sin(a/2)^10*x+60060*ax^5*ay^7*cos(a/2)^20*sin(a/2)^12*x+150150*ax^5*ay^9*cos(a/2)^18*sin(a/2)^14*x+270270*ax^5*ay^11*cos(a/2)^16*sin(a/2)^16*x+360360*ax^5*ay^13*cos(a/2)^14*sin(a/2)^18*x+360360*ax^5*ay^15*cos(a/2)^12*sin(a/2)^20*x+270270*ax^5*ay^17*cos(a/2)^10*sin(a/2)^22*x+150150*ax^5*ay^19*cos(a/2)^8*sin(a/2)^24*x+60060*ax^5*ay^21*cos(a/2)^6*sin(a/2)^26*x+16380*ax^5*ay^23*cos(a/2)^4*sin(a/2)^28*x+2730*ax^5*ay^25*cos(a/2)^2*sin(a/2)^30*x-6370*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8*y-32760*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10*y-100100*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12*y-200200*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14*y-270270*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16*y-240240*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18*y-120120*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20*y+50050*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24*y+40040*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26*y+16380*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28*y+3640*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30*y+910*ax^7*ay*cos(a/2)^24*sin(a/2)^8*x+10920*ax^7*ay^3*cos(a/2)^22*sin(a/2)^10*x+60060*ax^7*ay^5*cos(a/2)^20*sin(a/2)^12*x+200200*ax^7*ay^7*cos(a/2)^18*sin(a/2)^14*x+450450*ax^7*ay^9*cos(a/2)^16*sin(a/2)^16*x+720720*ax^7*ay^11*cos(a/2)^14*sin(a/2)^18*x+840840*ax^7*ay^13*cos(a/2)^12*sin(a/2)^20*x+720720*ax^7*ay^15*cos(a/2)^10*sin(a/2)^22*x+450450*ax^7*ay^17*cos(a/2)^8*sin(a/2)^24*x+200200*ax^7*ay^19*cos(a/2)^6*sin(a/2)^26*x+60060*ax^7*ay^21*cos(a/2)^4*sin(a/2)^28*x+10920*ax^7*ay^23*cos(a/2)^2*sin(a/2)^30*x-19110*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10*y-90090*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12*y-250250*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14*y-450450*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16*y-540540*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18*y-420420*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20*y-180180*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22*y+50050*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26*y+30030*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28*y+8190*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30*y+2730*ax^9*ay*cos(a/2)^22*sin(a/2)^10*x+30030*ax^9*ay^3*cos(a/2)^20*sin(a/2)^12*x+150150*ax^9*ay^5*cos(a/2)^18*sin(a/2)^14*x+450450*ax^9*ay^7*cos(a/2)^16*sin(a/2)^16*x+900900*ax^9*ay^9*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^9*ay^11*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^9*ay^13*cos(a/2)^10*sin(a/2)^22*x+900900*ax^9*ay^15*cos(a/2)^8*sin(a/2)^24*x+450450*ax^9*ay^17*cos(a/2)^6*sin(a/2)^26*x+150150*ax^9*ay^19*cos(a/2)^4*sin(a/2)^28*x+30030*ax^9*ay^21*cos(a/2)^2*sin(a/2)^30*x-42042*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12*y-180180*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14*y-450450*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16*y-720720*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18*y-756756*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20*y-504504*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22*y-180180*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24*y+30030*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28*y+12012*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30*y+6006*ax^11*ay*cos(a/2)^20*sin(a/2)^12*x+60060*ax^11*ay^3*cos(a/2)^18*sin(a/2)^14*x+270270*ax^11*ay^5*cos(a/2)^16*sin(a/2)^16*x+720720*ax^11*ay^7*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^11*ay^9*cos(a/2)^12*sin(a/2)^20*x+1513512*ax^11*ay^11*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^11*ay^13*cos(a/2)^8*sin(a/2)^24*x+720720*ax^11*ay^15*cos(a/2)^6*sin(a/2)^26*x+270270*ax^11*ay^17*cos(a/2)^4*sin(a/2)^28*x+60060*ax^11*ay^19*cos(a/2)^2*sin(a/2)^30*x-70070*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14*y-270270*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16*y-600600*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18*y-840840*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20*y-756756*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22*y-420420*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24*y-120120*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26*y+10010*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30*y+10010*ax^13*ay*cos(a/2)^18*sin(a/2)^14*x+90090*ax^13*ay^3*cos(a/2)^16*sin(a/2)^16*x+360360*ax^13*ay^5*cos(a/2)^14*sin(a/2)^18*x+840840*ax^13*ay^7*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^13*ay^9*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^13*ay^11*cos(a/2)^8*sin(a/2)^24*x+840840*ax^13*ay^13*cos(a/2)^6*sin(a/2)^26*x+360360*ax^13*ay^15*cos(a/2)^4*sin(a/2)^28*x+90090*ax^13*ay^17*cos(a/2)^2*sin(a/2)^30*x-90090*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16*y-308880*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18*y-600600*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20*y-720720*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22*y-540540*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24*y-240240*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26*y-51480*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28*y+12870*ax^15*ay*cos(a/2)^16*sin(a/2)^16*x+102960*ax^15*ay^3*cos(a/2)^14*sin(a/2)^18*x+360360*ax^15*ay^5*cos(a/2)^12*sin(a/2)^20*x+720720*ax^15*ay^7*cos(a/2)^10*sin(a/2)^22*x+900900*ax^15*ay^9*cos(a/2)^8*sin(a/2)^24*x+720720*ax^15*ay^11*cos(a/2)^6*sin(a/2)^26*x+360360*ax^15*ay^13*cos(a/2)^4*sin(a/2)^28*x+102960*ax^15*ay^15*cos(a/2)^2*sin(a/2)^30*x-90090*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18*y-270270*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20*y-450450*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22*y-450450*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24*y-270270*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26*y-90090*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28*y-12870*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30*y+12870*ax^17*ay*cos(a/2)^14*sin(a/2)^18*x+90090*ax^17*ay^3*cos(a/2)^12*sin(a/2)^20*x+270270*ax^17*ay^5*cos(a/2)^10*sin(a/2)^22*x+450450*ax^17*ay^7*cos(a/2)^8*sin(a/2)^24*x+450450*ax^17*ay^9*cos(a/2)^6*sin(a/2)^26*x+270270*ax^17*ay^11*cos(a/2)^4*sin(a/2)^28*x+90090*ax^17*ay^13*cos(a/2)^2*sin(a/2)^30*x-70070*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20*y-180180*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22*y-250250*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24*y-200200*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26*y-90090*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28*y-20020*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30*y+10010*ax^19*ay*cos(a/2)^12*sin(a/2)^20*x+60060*ax^19*ay^3*cos(a/2)^10*sin(a/2)^22*x+150150*ax^19*ay^5*cos(a/2)^8*sin(a/2)^24*x+200200*ax^19*ay^7*cos(a/2)^6*sin(a/2)^26*x+150150*ax^19*ay^9*cos(a/2)^4*sin(a/2)^28*x+60060*ax^19*ay^11*cos(a/2)^2*sin(a/2)^30*x-42042*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22*y-90090*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24*y-100100*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26*y-60060*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28*y-18018*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30*y+6006*ax^21*ay*cos(a/2)^10*sin(a/2)^22*x+30030*ax^21*ay^3*cos(a/2)^8*sin(a/2)^24*x+60060*ax^21*ay^5*cos(a/2)^6*sin(a/2)^26*x+60060*ax^21*ay^7*cos(a/2)^4*sin(a/2)^28*x+30030*ax^21*ay^9*cos(a/2)^2*sin(a/2)^30*x-19110*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24*y-32760*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26*y-27300*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28*y-10920*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30*y+2730*ax^23*ay*cos(a/2)^8*sin(a/2)^24*x+10920*ax^23*ay^3*cos(a/2)^6*sin(a/2)^26*x+16380*ax^23*ay^5*cos(a/2)^4*sin(a/2)^28*x+10920*ax^23*ay^7*cos(a/2)^2*sin(a/2)^30*x-6370*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26*y-8190*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28*y-4550*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30*y+910*ax^25*ay*cos(a/2)^6*sin(a/2)^26*x+2730*ax^25*ay^3*cos(a/2)^4*sin(a/2)^28*x+2730*ax^25*ay^5*cos(a/2)^2*sin(a/2)^30*x-1470*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28*y-1260*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30*y+210*ax^27*ay*cos(a/2)^4*sin(a/2)^28*x+420*ax^27*ay^3*cos(a/2)^2*sin(a/2)^30*x-210*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30*y+30*ax^29*ay*cos(a/2)^2*sin(a/2)^30*x)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30)},{0,(-cos(a/2)^32*z-ax^32*sin(a/2)^32*z-ay^32*sin(a/2)^32*z-16*ax^2*ay^30*sin(a/2)^32*z-16*ax^2*cos(a/2)^30*sin(a/2)^2*z-120*ax^4*ay^28*sin(a/2)^32*z-120*ax^4*cos(a/2)^28*sin(a/2)^4*z-560*ax^6*ay^26*sin(a/2)^32*z-560*ax^6*cos(a/2)^26*sin(a/2)^6*z-1820*ax^8*ay^24*sin(a/2)^32*z-1820*ax^8*cos(a/2)^24*sin(a/2)^8*z-4368*ax^10*ay^22*sin(a/2)^32*z-4368*ax^10*cos(a/2)^22*sin(a/2)^10*z-8008*ax^12*ay^20*sin(a/2)^32*z-8008*ax^12*cos(a/2)^20*sin(a/2)^12*z-11440*ax^14*ay^18*sin(a/2)^32*z-11440*ax^14*cos(a/2)^18*sin(a/2)^14*z-12870*ax^16*ay^16*sin(a/2)^32*z-12870*ax^16*cos(a/2)^16*sin(a/2)^16*z-11440*ax^18*ay^14*sin(a/2)^32*z-11440*ax^18*cos(a/2)^14*sin(a/2)^18*z-8008*ax^20*ay^12*sin(a/2)^32*z-8008*ax^20*cos(a/2)^12*sin(a/2)^20*z-4368*ax^22*ay^10*sin(a/2)^32*z-4368*ax^22*cos(a/2)^10*sin(a/2)^22*z-1820*ax^24*ay^8*sin(a/2)^32*z-1820*ax^24*cos(a/2)^8*sin(a/2)^24*z-560*ax^26*ay^6*sin(a/2)^32*z-560*ax^26*cos(a/2)^6*sin(a/2)^26*z-120*ax^28*ay^4*sin(a/2)^32*z-120*ax^28*cos(a/2)^4*sin(a/2)^28*z-16*ax^30*ay^2*sin(a/2)^32*z-16*ax^30*cos(a/2)^2*sin(a/2)^30*z-16*ay^2*cos(a/2)^30*sin(a/2)^2*z-120*ay^4*cos(a/2)^28*sin(a/2)^4*z-560*ay^6*cos(a/2)^26*sin(a/2)^6*z-1820*ay^8*cos(a/2)^24*sin(a/2)^8*z-4368*ay^10*cos(a/2)^22*sin(a/2)^10*z-8008*ay^12*cos(a/2)^20*sin(a/2)^12*z-11440*ay^14*cos(a/2)^18*sin(a/2)^14*z-12870*ay^16*cos(a/2)^16*sin(a/2)^16*z-11440*ay^18*cos(a/2)^14*sin(a/2)^18*z-8008*ay^20*cos(a/2)^12*sin(a/2)^20*z-4368*ay^22*cos(a/2)^10*sin(a/2)^22*z-1820*ay^24*cos(a/2)^8*sin(a/2)^24*z-560*ay^26*cos(a/2)^6*sin(a/2)^26*z-120*ay^28*cos(a/2)^4*sin(a/2)^28*z-16*ay^30*cos(a/2)^2*sin(a/2)^30*z-240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4*z-1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6*z-7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8*z-21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10*z-48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12*z-80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14*z-102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16*z-102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18*z-80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20*z-48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22*z-21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24*z-7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26*z-1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28*z-240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30*z-1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6*z-10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8*z-43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10*z-120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12*z-240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14*z-360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16*z-411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18*z-360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20*z-240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22*z-120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24*z-43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26*z-10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28*z-1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30*z-7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8*z-43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10*z-160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12*z-400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14*z-720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16*z-960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18*z-960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20*z-720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22*z-400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24*z-160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26*z-43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28*z-7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30*z-21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10*z-120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12*z-400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14*z-900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16*z-1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18*z-1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20*z-1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22*z-900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24*z-400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26*z-120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28*z-21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30*z-48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12*z-240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14*z-720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16*z-1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18*z-2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20*z-2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22*z-1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24*z-720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26*z-240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28*z-48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30*z-80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14*z-360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16*z-960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18*z-1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20*z-2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22*z-1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24*z-960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26*z-360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28*z-80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30*z-102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16*z-411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18*z-960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20*z-1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22*z-1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24*z-960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26*z-411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28*z-102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30*z-102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18*z-360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20*z-720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22*z-900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24*z-720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26*z-360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28*z-102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30*z-80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20*z-240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22*z-400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24*z-400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26*z-240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28*z-80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30*z-48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22*z-120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24*z-160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26*z-120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28*z-48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30*z-21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24*z-43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26*z-43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28*z-21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30*z-7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26*z-10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28*z-7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30*z-1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28*z-1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30*z-240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30*z)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T13:15:05</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDualQuaternionModule.TestCase () [0x00061] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestDualQuaternionModule.cs:27 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>{{(-cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8-2*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+2*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8-2*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+4*ay^6*az^2*sin(a/2)^8+2*ay^6*cos(a/2)^2*sin(a/2)^6-2*az^2*cos(a/2)^6*sin(a/2)^2+2*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^4*az^2*sin(a/2)^8+6*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+6*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+6*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+6*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+6*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+6*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6)/(cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6),(2*ax*cos(a/2)^31*sin(a/2)*x+30*ax^3*cos(a/2)^29*sin(a/2)^3*x+210*ax^5*cos(a/2)^27*sin(a/2)^5*x+910*ax^7*cos(a/2)^25*sin(a/2)^7*x+2730*ax^9*cos(a/2)^23*sin(a/2)^9*x+6006*ax^11*cos(a/2)^21*sin(a/2)^11*x+10010*ax^13*cos(a/2)^19*sin(a/2)^13*x+12870*ax^15*cos(a/2)^17*sin(a/2)^15*x+12870*ax^17*cos(a/2)^15*sin(a/2)^17*x+10010*ax^19*cos(a/2)^13*sin(a/2)^19*x+6006*ax^21*cos(a/2)^11*sin(a/2)^21*x+2730*ax^23*cos(a/2)^9*sin(a/2)^23*x+910*ax^25*cos(a/2)^7*sin(a/2)^25*x+210*ax^27*cos(a/2)^5*sin(a/2)^27*x+30*ax^29*cos(a/2)^3*sin(a/2)^29*x+2*ax^31*cos(a/2)*sin(a/2)^31*x+2*ay*cos(a/2)^31*sin(a/2)*y+30*ay^3*cos(a/2)^29*sin(a/2)^3*y+210*ay^5*cos(a/2)^27*sin(a/2)^5*y+910*ay^7*cos(a/2)^25*sin(a/2)^7*y+2730*ay^9*cos(a/2)^23*sin(a/2)^9*y+6006*ay^11*cos(a/2)^21*sin(a/2)^11*y+10010*ay^13*cos(a/2)^19*sin(a/2)^13*y+12870*ay^15*cos(a/2)^17*sin(a/2)^15*y+12870*ay^17*cos(a/2)^15*sin(a/2)^17*y+10010*ay^19*cos(a/2)^13*sin(a/2)^19*y+6006*ay^21*cos(a/2)^11*sin(a/2)^21*y+2730*ay^23*cos(a/2)^9*sin(a/2)^23*y+910*ay^25*cos(a/2)^7*sin(a/2)^25*y+210*ay^27*cos(a/2)^5*sin(a/2)^27*y+30*ay^29*cos(a/2)^3*sin(a/2)^29*y+2*ay^31*cos(a/2)*sin(a/2)^31*y+2*az*cos(a/2)^31*sin(a/2)*z+30*az^3*cos(a/2)^29*sin(a/2)^3*z+210*az^5*cos(a/2)^27*sin(a/2)^5*z+910*az^7*cos(a/2)^25*sin(a/2)^7*z+2730*az^9*cos(a/2)^23*sin(a/2)^9*z+6006*az^11*cos(a/2)^21*sin(a/2)^11*z+10010*az^13*cos(a/2)^19*sin(a/2)^13*z+12870*az^15*cos(a/2)^17*sin(a/2)^15*z+12870*az^17*cos(a/2)^15*sin(a/2)^17*z+10010*az^19*cos(a/2)^13*sin(a/2)^19*z+6006*az^21*cos(a/2)^11*sin(a/2)^21*z+2730*az^23*cos(a/2)^9*sin(a/2)^23*z+910*az^25*cos(a/2)^7*sin(a/2)^25*z+210*az^27*cos(a/2)^5*sin(a/2)^27*z+30*az^29*cos(a/2)^3*sin(a/2)^29*z+2*az^31*cos(a/2)*sin(a/2)^31*z+30*ax*ay^2*cos(a/2)^29*sin(a/2)^3*x+210*ax*ay^4*cos(a/2)^27*sin(a/2)^5*x+910*ax*ay^6*cos(a/2)^25*sin(a/2)^7*x+2730*ax*ay^8*cos(a/2)^23*sin(a/2)^9*x+6006*ax*ay^10*cos(a/2)^21*sin(a/2)^11*x+10010*ax*ay^12*cos(a/2)^19*sin(a/2)^13*x+12870*ax*ay^14*cos(a/2)^17*sin(a/2)^15*x+12870*ax*ay^16*cos(a/2)^15*sin(a/2)^17*x+10010*ax*ay^18*cos(a/2)^13*sin(a/2)^19*x+6006*ax*ay^20*cos(a/2)^11*sin(a/2)^21*x+2730*ax*ay^22*cos(a/2)^9*sin(a/2)^23*x+910*ax*ay^24*cos(a/2)^7*sin(a/2)^25*x+210*ax*ay^26*cos(a/2)^5*sin(a/2)^27*x+30*ax*ay^28*cos(a/2)^3*sin(a/2)^29*x+2*ax*ay^30*cos(a/2)*sin(a/2)^31*x+30*ax*az^2*cos(a/2)^29*sin(a/2)^3*x+210*ax*az^4*cos(a/2)^27*sin(a/2)^5*x+910*ax*az^6*cos(a/2)^25*sin(a/2)^7*x+2730*ax*az^8*cos(a/2)^23*sin(a/2)^9*x+6006*ax*az^10*cos(a/2)^21*sin(a/2)^11*x+10010*ax*az^12*cos(a/2)^19*sin(a/2)^13*x+12870*ax*az^14*cos(a/2)^17*sin(a/2)^15*x+12870*ax*az^16*cos(a/2)^15*sin(a/2)^17*x+10010*ax*az^18*cos(a/2)^13*sin(a/2)^19*x+6006*ax*az^20*cos(a/2)^11*sin(a/2)^21*x+2730*ax*az^22*cos(a/2)^9*sin(a/2)^23*x+910*ax*az^24*cos(a/2)^7*sin(a/2)^25*x+210*ax*az^26*cos(a/2)^5*sin(a/2)^27*x+30*ax*az^28*cos(a/2)^3*sin(a/2)^29*x+2*ax*az^30*cos(a/2)*sin(a/2)^31*x+30*ax^2*ay*cos(a/2)^29*sin(a/2)^3*y+420*ax^2*ay^3*cos(a/2)^27*sin(a/2)^5*y+2730*ax^2*ay^5*cos(a/2)^25*sin(a/2)^7*y+10920*ax^2*ay^7*cos(a/2)^23*sin(a/2)^9*y+30030*ax^2*ay^9*cos(a/2)^21*sin(a/2)^11*y+60060*ax^2*ay^11*cos(a/2)^19*sin(a/2)^13*y+90090*ax^2*ay^13*cos(a/2)^17*sin(a/2)^15*y+102960*ax^2*ay^15*cos(a/2)^15*sin(a/2)^17*y+90090*ax^2*ay^17*cos(a/2)^13*sin(a/2)^19*y+60060*ax^2*ay^19*cos(a/2)^11*sin(a/2)^21*y+30030*ax^2*ay^21*cos(a/2)^9*sin(a/2)^23*y+10920*ax^2*ay^23*cos(a/2)^7*sin(a/2)^25*y+2730*ax^2*ay^25*cos(a/2)^5*sin(a/2)^27*y+420*ax^2*ay^27*cos(a/2)^3*sin(a/2)^29*y+30*ax^2*ay^29*cos(a/2)*sin(a/2)^31*y+30*ax^2*az*cos(a/2)^29*sin(a/2)^3*z+420*ax^2*az^3*cos(a/2)^27*sin(a/2)^5*z+2730*ax^2*az^5*cos(a/2)^25*sin(a/2)^7*z+10920*ax^2*az^7*cos(a/2)^23*sin(a/2)^9*z+30030*ax^2*az^9*cos(a/2)^21*sin(a/2)^11*z+60060*ax^2*az^11*cos(a/2)^19*sin(a/2)^13*z+90090*ax^2*az^13*cos(a/2)^17*sin(a/2)^15*z+102960*ax^2*az^15*cos(a/2)^15*sin(a/2)^17*z+90090*ax^2*az^17*cos(a/2)^13*sin(a/2)^19*z+60060*ax^2*az^19*cos(a/2)^11*sin(a/2)^21*z+30030*ax^2*az^21*cos(a/2)^9*sin(a/2)^23*z+10920*ax^2*az^23*cos(a/2)^7*sin(a/2)^25*z+2730*ax^2*az^25*cos(a/2)^5*sin(a/2)^27*z+420*ax^2*az^27*cos(a/2)^3*sin(a/2)^29*z+30*ax^2*az^29*cos(a/2)*sin(a/2)^31*z+420*ax^3*ay^2*cos(a/2)^27*sin(a/2)^5*x+2730*ax^3*ay^4*cos(a/2)^25*sin(a/2)^7*x+10920*ax^3*ay^6*cos(a/2)^23*sin(a/2)^9*x+30030*ax^3*ay^8*cos(a/2)^21*sin(a/2)^11*x+60060*ax^3*ay^10*cos(a/2)^19*sin(a/2)^13*x+90090*ax^3*ay^12*cos(a/2)^17*sin(a/2)^15*x+102960*ax^3*ay^14*cos(a/2)^15*sin(a/2)^17*x+90090*ax^3*ay^16*cos(a/2)^13*sin(a/2)^19*x+60060*ax^3*ay^18*cos(a/2)^11*sin(a/2)^21*x+30030*ax^3*ay^20*cos(a/2)^9*sin(a/2)^23*x+10920*ax^3*ay^22*cos(a/2)^7*sin(a/2)^25*x+2730*ax^3*ay^24*cos(a/2)^5*sin(a/2)^27*x+420*ax^3*ay^26*cos(a/2)^3*sin(a/2)^29*x+30*ax^3*ay^28*cos(a/2)*sin(a/2)^31*x+420*ax^3*az^2*cos(a/2)^27*sin(a/2)^5*x+2730*ax^3*az^4*cos(a/2)^25*sin(a/2)^7*x+10920*ax^3*az^6*cos(a/2)^23*sin(a/2)^9*x+30030*ax^3*az^8*cos(a/2)^21*sin(a/2)^11*x+60060*ax^3*az^10*cos(a/2)^19*sin(a/2)^13*x+90090*ax^3*az^12*cos(a/2)^17*sin(a/2)^15*x+102960*ax^3*az^14*cos(a/2)^15*sin(a/2)^17*x+90090*ax^3*az^16*cos(a/2)^13*sin(a/2)^19*x+60060*ax^3*az^18*cos(a/2)^11*sin(a/2)^21*x+30030*ax^3*az^20*cos(a/2)^9*sin(a/2)^23*x+10920*ax^3*az^22*cos(a/2)^7*sin(a/2)^25*x+2730*ax^3*az^24*cos(a/2)^5*sin(a/2)^27*x+420*ax^3*az^26*cos(a/2)^3*sin(a/2)^29*x+30*ax^3*az^28*cos(a/2)*sin(a/2)^31*x+210*ax^4*ay*cos(a/2)^27*sin(a/2)^5*y+2730*ax^4*ay^3*cos(a/2)^25*sin(a/2)^7*y+16380*ax^4*ay^5*cos(a/2)^23*sin(a/2)^9*y+60060*ax^4*ay^7*cos(a/2)^21*sin(a/2)^11*y+150150*ax^4*ay^9*cos(a/2)^19*sin(a/2)^13*y+270270*ax^4*ay^11*cos(a/2)^17*sin(a/2)^15*y+360360*ax^4*ay^13*cos(a/2)^15*sin(a/2)^17*y+360360*ax^4*ay^15*cos(a/2)^13*sin(a/2)^19*y+270270*ax^4*ay^17*cos(a/2)^11*sin(a/2)^21*y+150150*ax^4*ay^19*cos(a/2)^9*sin(a/2)^23*y+60060*ax^4*ay^21*cos(a/2)^7*sin(a/2)^25*y+16380*ax^4*ay^23*cos(a/2)^5*sin(a/2)^27*y+2730*ax^4*ay^25*cos(a/2)^3*sin(a/2)^29*y+210*ax^4*ay^27*cos(a/2)*sin(a/2)^31*y+210*ax^4*az*cos(a/2)^27*sin(a/2)^5*z+2730*ax^4*az^3*cos(a/2)^25*sin(a/2)^7*z+16380*ax^4*az^5*cos(a/2)^23*sin(a/2)^9*z+60060*ax^4*az^7*cos(a/2)^21*sin(a/2)^11*z+150150*ax^4*az^9*cos(a/2)^19*sin(a/2)^13*z+270270*ax^4*az^11*cos(a/2)^17*sin(a/2)^15*z+360360*ax^4*az^13*cos(a/2)^15*sin(a/2)^17*z+360360*ax^4*az^15*cos(a/2)^13*sin(a/2)^19*z+270270*ax^4*az^17*cos(a/2)^11*sin(a/2)^21*z+150150*ax^4*az^19*cos(a/2)^9*sin(a/2)^23*z+60060*ax^4*az^21*cos(a/2)^7*sin(a/2)^25*z+16380*ax^4*az^23*cos(a/2)^5*sin(a/2)^27*z+2730*ax^4*az^25*cos(a/2)^3*sin(a/2)^29*z+210*ax^4*az^27*cos(a/2)*sin(a/2)^31*z+2730*ax^5*ay^2*cos(a/2)^25*sin(a/2)^7*x+16380*ax^5*ay^4*cos(a/2)^23*sin(a/2)^9*x+60060*ax^5*ay^6*cos(a/2)^21*sin(a/2)^11*x+150150*ax^5*ay^8*cos(a/2)^19*sin(a/2)^13*x+270270*ax^5*ay^10*cos(a/2)^17*sin(a/2)^15*x+360360*ax^5*ay^12*cos(a/2)^15*sin(a/2)^17*x+360360*ax^5*ay^14*cos(a/2)^13*sin(a/2)^19*x+270270*ax^5*ay^16*cos(a/2)^11*sin(a/2)^21*x+150150*ax^5*ay^18*cos(a/2)^9*sin(a/2)^23*x+60060*ax^5*ay^20*cos(a/2)^7*sin(a/2)^25*x+16380*ax^5*ay^22*cos(a/2)^5*sin(a/2)^27*x+2730*ax^5*ay^24*cos(a/2)^3*sin(a/2)^29*x+210*ax^5*ay^26*cos(a/2)*sin(a/2)^31*x+2730*ax^5*az^2*cos(a/2)^25*sin(a/2)^7*x+16380*ax^5*az^4*cos(a/2)^23*sin(a/2)^9*x+60060*ax^5*az^6*cos(a/2)^21*sin(a/2)^11*x+150150*ax^5*az^8*cos(a/2)^19*sin(a/2)^13*x+270270*ax^5*az^10*cos(a/2)^17*sin(a/2)^15*x+360360*ax^5*az^12*cos(a/2)^15*sin(a/2)^17*x+360360*ax^5*az^14*cos(a/2)^13*sin(a/2)^19*x+270270*ax^5*az^16*cos(a/2)^11*sin(a/2)^21*x+150150*ax^5*az^18*cos(a/2)^9*sin(a/2)^23*x+60060*ax^5*az^20*cos(a/2)^7*sin(a/2)^25*x+16380*ax^5*az^22*cos(a/2)^5*sin(a/2)^27*x+2730*ax^5*az^24*cos(a/2)^3*sin(a/2)^29*x+210*ax^5*az^26*cos(a/2)*sin(a/2)^31*x+910*ax^6*ay*cos(a/2)^25*sin(a/2)^7*y+10920*ax^6*ay^3*cos(a/2)^23*sin(a/2)^9*y+60060*ax^6*ay^5*cos(a/2)^21*sin(a/2)^11*y+200200*ax^6*ay^7*cos(a/2)^19*sin(a/2)^13*y+450450*ax^6*ay^9*cos(a/2)^17*sin(a/2)^15*y+720720*ax^6*ay^11*cos(a/2)^15*sin(a/2)^17*y+840840*ax^6*ay^13*cos(a/2)^13*sin(a/2)^19*y+720720*ax^6*ay^15*cos(a/2)^11*sin(a/2)^21*y+450450*ax^6*ay^17*cos(a/2)^9*sin(a/2)^23*y+200200*ax^6*ay^19*cos(a/2)^7*sin(a/2)^25*y+60060*ax^6*ay^21*cos(a/2)^5*sin(a/2)^27*y+10920*ax^6*ay^23*cos(a/2)^3*sin(a/2)^29*y+910*ax^6*ay^25*cos(a/2)*sin(a/2)^31*y+910*ax^6*az*cos(a/2)^25*sin(a/2)^7*z+10920*ax^6*az^3*cos(a/2)^23*sin(a/2)^9*z+60060*ax^6*az^5*cos(a/2)^21*sin(a/2)^11*z+200200*ax^6*az^7*cos(a/2)^19*sin(a/2)^13*z+450450*ax^6*az^9*cos(a/2)^17*sin(a/2)^15*z+720720*ax^6*az^11*cos(a/2)^15*sin(a/2)^17*z+840840*ax^6*az^13*cos(a/2)^13*sin(a/2)^19*z+720720*ax^6*az^15*cos(a/2)^11*sin(a/2)^21*z+450450*ax^6*az^17*cos(a/2)^9*sin(a/2)^23*z+200200*ax^6*az^19*cos(a/2)^7*sin(a/2)^25*z+60060*ax^6*az^21*cos(a/2)^5*sin(a/2)^27*z+10920*ax^6*az^23*cos(a/2)^3*sin(a/2)^29*z+910*ax^6*az^25*cos(a/2)*sin(a/2)^31*z+10920*ax^7*ay^2*cos(a/2)^23*sin(a/2)^9*x+60060*ax^7*ay^4*cos(a/2)^21*sin(a/2)^11*x+200200*ax^7*ay^6*cos(a/2)^19*sin(a/2)^13*x+450450*ax^7*ay^8*cos(a/2)^17*sin(a/2)^15*x+720720*ax^7*ay^10*cos(a/2)^15*sin(a/2)^17*x+840840*ax^7*ay^12*cos(a/2)^13*sin(a/2)^19*x+720720*ax^7*ay^14*cos(a/2)^11*sin(a/2)^21*x+450450*ax^7*ay^16*cos(a/2)^9*sin(a/2)^23*x+200200*ax^7*ay^18*cos(a/2)^7*sin(a/2)^25*x+60060*ax^7*ay^20*cos(a/2)^5*sin(a/2)^27*x+10920*ax^7*ay^22*cos(a/2)^3*sin(a/2)^29*x+910*ax^7*ay^24*cos(a/2)*sin(a/2)^31*x+10920*ax^7*az^2*cos(a/2)^23*sin(a/2)^9*x+60060*ax^7*az^4*cos(a/2)^21*sin(a/2)^11*x+200200*ax^7*az^6*cos(a/2)^19*sin(a/2)^13*x+450450*ax^7*az^8*cos(a/2)^17*sin(a/2)^15*x+720720*ax^7*az^10*cos(a/2)^15*sin(a/2)^17*x+840840*ax^7*az^12*cos(a/2)^13*sin(a/2)^19*x+720720*ax^7*az^14*cos(a/2)^11*sin(a/2)^21*x+450450*ax^7*az^16*cos(a/2)^9*sin(a/2)^23*x+200200*ax^7*az^18*cos(a/2)^7*sin(a/2)^25*x+60060*ax^7*az^20*cos(a/2)^5*sin(a/2)^27*x+10920*ax^7*az^22*cos(a/2)^3*sin(a/2)^29*x+910*ax^7*az^24*cos(a/2)*sin(a/2)^31*x+2730*ax^8*ay*cos(a/2)^23*sin(a/2)^9*y+30030*ax^8*ay^3*cos(a/2)^21*sin(a/2)^11*y+150150*ax^8*ay^5*cos(a/2)^19*sin(a/2)^13*y+450450*ax^8*ay^7*cos(a/2)^17*sin(a/2)^15*y+900900*ax^8*ay^9*cos(a/2)^15*sin(a/2)^17*y+1261260*ax^8*ay^11*cos(a/2)^13*sin(a/2)^19*y+1261260*ax^8*ay^13*cos(a/2)^11*sin(a/2)^21*y+900900*ax^8*ay^15*cos(a/2)^9*sin(a/2)^23*y+450450*ax^8*ay^17*cos(a/2)^7*sin(a/2)^25*y+150150*ax^8*ay^19*cos(a/2)^5*sin(a/2)^27*y+30030*ax^8*ay^21*cos(a/2)^3*sin(a/2)^29*y+2730*ax^8*ay^23*cos(a/2)*sin(a/2)^31*y+2730*ax^8*az*cos(a/2)^23*sin(a/2)^9*z+30030*ax^8*az^3*cos(a/2)^21*sin(a/2)^11*z+150150*ax^8*az^5*cos(a/2)^19*sin(a/2)^13*z+450450*ax^8*az^7*cos(a/2)^17*sin(a/2)^15*z+900900*ax^8*az^9*cos(a/2)^15*sin(a/2)^17*z+1261260*ax^8*az^11*cos(a/2)^13*sin(a/2)^19*z+1261260*ax^8*az^13*cos(a/2)^11*sin(a/2)^21*z+900900*ax^8*az^15*cos(a/2)^9*sin(a/2)^23*z+450450*ax^8*az^17*cos(a/2)^7*sin(a/2)^25*z+150150*ax^8*az^19*cos(a/2)^5*sin(a/2)^27*z+30030*ax^8*az^21*cos(a/2)^3*sin(a/2)^29*z+2730*ax^8*az^23*cos(a/2)*sin(a/2)^31*z+30030*ax^9*ay^2*cos(a/2)^21*sin(a/2)^11*x+150150*ax^9*ay^4*cos(a/2)^19*sin(a/2)^13*x+450450*ax^9*ay^6*cos(a/2)^17*sin(a/2)^15*x+900900*ax^9*ay^8*cos(a/2)^15*sin(a/2)^17*x+1261260*ax^9*ay^10*cos(a/2)^13*sin(a/2)^19*x+1261260*ax^9*ay^12*cos(a/2)^11*sin(a/2)^21*x+900900*ax^9*ay^14*cos(a/2)^9*sin(a/2)^23*x+450450*ax^9*ay^16*cos(a/2)^7*sin(a/2)^25*x+150150*ax^9*ay^18*cos(a/2)^5*sin(a/2)^27*x+30030*ax^9*ay^20*cos(a/2)^3*sin(a/2)^29*x+2730*ax^9*ay^22*cos(a/2)*sin(a/2)^31*x+30030*ax^9*az^2*cos(a/2)^21*sin(a/2)^11*x+150150*ax^9*az^4*cos(a/2)^19*sin(a/2)^13*x+450450*ax^9*az^6*cos(a/2)^17*sin(a/2)^15*x+900900*ax^9*az^8*cos(a/2)^15*sin(a/2)^17*x+1261260*ax^9*az^10*cos(a/2)^13*sin(a/2)^19*x+1261260*ax^9*az^12*cos(a/2)^11*sin(a/2)^21*x+900900*ax^9*az^14*cos(a/2)^9*sin(a/2)^23*x+450450*ax^9*az^16*cos(a/2)^7*sin(a/2)^25*x+150150*ax^9*az^18*cos(a/2)^5*sin(a/2)^27*x+30030*ax^9*az^20*cos(a/2)^3*sin(a/2)^29*x+2730*ax^9*az^22*cos(a/2)*sin(a/2)^31*x+6006*ax^10*ay*cos(a/2)^21*sin(a/2)^11*y+60060*ax^10*ay^3*cos(a/2)^19*sin(a/2)^13*y+270270*ax^10*ay^5*cos(a/2)^17*sin(a/2)^15*y+720720*ax^10*ay^7*cos(a/2)^15*sin(a/2)^17*y+1261260*ax^10*ay^9*cos(a/2)^13*sin(a/2)^19*y+1513512*ax^10*ay^11*cos(a/2)^11*sin(a/2)^21*y+1261260*ax^10*ay^13*cos(a/2)^9*sin(a/2)^23*y+720720*ax^10*ay^15*cos(a/2)^7*sin(a/2)^25*y+270270*ax^10*ay^17*cos(a/2)^5*sin(a/2)^27*y+60060*ax^10*ay^19*cos(a/2)^3*sin(a/2)^29*y+6006*ax^10*ay^21*cos(a/2)*sin(a/2)^31*y+6006*ax^10*az*cos(a/2)^21*sin(a/2)^11*z+60060*ax^10*az^3*cos(a/2)^19*sin(a/2)^13*z+270270*ax^10*az^5*cos(a/2)^17*sin(a/2)^15*z+720720*ax^10*az^7*cos(a/2)^15*sin(a/2)^17*z+1261260*ax^10*az^9*cos(a/2)^13*sin(a/2)^19*z+1513512*ax^10*az^11*cos(a/2)^11*sin(a/2)^21*z+1261260*ax^10*az^13*cos(a/2)^9*sin(a/2)^23*z+720720*ax^10*az^15*cos(a/2)^7*sin(a/2)^25*z+270270*ax^10*az^17*cos(a/2)^5*sin(a/2)^27*z+60060*ax^10*az^19*cos(a/2)^3*sin(a/2)^29*z+6006*ax^10*az^21*cos(a/2)*sin(a/2)^31*z+60060*ax^11*ay^2*cos(a/2)^19*sin(a/2)^13*x+270270*ax^11*ay^4*cos(a/2)^17*sin(a/2)^15*x+720720*ax^11*ay^6*cos(a/2)^15*sin(a/2)^17*x+1261260*ax^11*ay^8*cos(a/2)^13*sin(a/2)^19*x+1513512*ax^11*ay^10*cos(a/2)^11*sin(a/2)^21*x+1261260*ax^11*ay^12*cos(a/2)^9*sin(a/2)^23*x+720720*ax^11*ay^14*cos(a/2)^7*sin(a/2)^25*x+270270*ax^11*ay^16*cos(a/2)^5*sin(a/2)^27*x+60060*ax^11*ay^18*cos(a/2)^3*sin(a/2)^29*x+6006*ax^11*ay^20*cos(a/2)*sin(a/2)^31*x+60060*ax^11*az^2*cos(a/2)^19*sin(a/2)^13*x+270270*ax^11*az^4*cos(a/2)^17*sin(a/2)^15*x+720720*ax^11*az^6*cos(a/2)^15*sin(a/2)^17*x+1261260*ax^11*az^8*cos(a/2)^13*sin(a/2)^19*x+1513512*ax^11*az^10*cos(a/2)^11*sin(a/2)^21*x+1261260*ax^11*az^12*cos(a/2)^9*sin(a/2)^23*x+720720*ax^11*az^14*cos(a/2)^7*sin(a/2)^25*x+270270*ax^11*az^16*cos(a/2)^5*sin(a/2)^27*x+60060*ax^11*az^18*cos(a/2)^3*sin(a/2)^29*x+6006*ax^11*az^20*cos(a/2)*sin(a/2)^31*x+10010*ax^12*ay*cos(a/2)^19*sin(a/2)^13*y+90090*ax^12*ay^3*cos(a/2)^17*sin(a/2)^15*y+360360*ax^12*ay^5*cos(a/2)^15*sin(a/2)^17*y+840840*ax^12*ay^7*cos(a/2)^13*sin(a/2)^19*y+1261260*ax^12*ay^9*cos(a/2)^11*sin(a/2)^21*y+1261260*ax^12*ay^11*cos(a/2)^9*sin(a/2)^23*y+840840*ax^12*ay^13*cos(a/2)^7*sin(a/2)^25*y+360360*ax^12*ay^15*cos(a/2)^5*sin(a/2)^27*y+90090*ax^12*ay^17*cos(a/2)^3*sin(a/2)^29*y+10010*ax^12*ay^19*cos(a/2)*sin(a/2)^31*y+10010*ax^12*az*cos(a/2)^19*sin(a/2)^13*z+90090*ax^12*az^3*cos(a/2)^17*sin(a/2)^15*z+360360*ax^12*az^5*cos(a/2)^15*sin(a/2)^17*z+840840*ax^12*az^7*cos(a/2)^13*sin(a/2)^19*z+1261260*ax^12*az^9*cos(a/2)^11*sin(a/2)^21*z+1261260*ax^12*az^11*cos(a/2)^9*sin(a/2)^23*z+840840*ax^12*az^13*cos(a/2)^7*sin(a/2)^25*z+360360*ax^12*az^15*cos(a/2)^5*sin(a/2)^27*z+90090*ax^12*az^17*cos(a/2)^3*sin(a/2)^29*z+10010*ax^12*az^19*cos(a/2)*sin(a/2)^31*z+90090*ax^13*ay^2*cos(a/2)^17*sin(a/2)^15*x+360360*ax^13*ay^4*cos(a/2)^15*sin(a/2)^17*x+840840*ax^13*ay^6*cos(a/2)^13*sin(a/2)^19*x+1261260*ax^13*ay^8*cos(a/2)^11*sin(a/2)^21*x+1261260*ax^13*ay^10*cos(a/2)^9*sin(a/2)^23*x+840840*ax^13*ay^12*cos(a/2)^7*sin(a/2)^25*x+360360*ax^13*ay^14*cos(a/2)^5*sin(a/2)^27*x+90090*ax^13*ay^16*cos(a/2)^3*sin(a/2)^29*x+10010*ax^13*ay^18*cos(a/2)*sin(a/2)^31*x+90090*ax^13*az^2*cos(a/2)^17*sin(a/2)^15*x+360360*ax^13*az^4*cos(a/2)^15*sin(a/2)^17*x+840840*ax^13*az^6*cos(a/2)^13*sin(a/2)^19*x+1261260*ax^13*az^8*cos(a/2)^11*sin(a/2)^21*x+1261260*ax^13*az^10*cos(a/2)^9*sin(a/2)^23*x+840840*ax^13*az^12*cos(a/2)^7*sin(a/2)^25*x+360360*ax^13*az^14*cos(a/2)^5*sin(a/2)^27*x+90090*ax^13*az^16*cos(a/2)^3*sin(a/2)^29*x+10010*ax^13*az^18*cos(a/2)*sin(a/2)^31*x+12870*ax^14*ay*cos(a/2)^17*sin(a/2)^15*y+102960*ax^14*ay^3*cos(a/2)^15*sin(a/2)^17*y+360360*ax^14*ay^5*cos(a/2)^13*sin(a/2)^19*y+720720*ax^14*ay^7*cos(a/2)^11*sin(a/2)^21*y+900900*ax^14*ay^9*cos(a/2)^9*sin(a/2)^23*y+720720*ax^14*ay^11*cos(a/2)^7*sin(a/2)^25*y+360360*ax^14*ay^13*cos(a/2)^5*sin(a/2)^27*y+102960*ax^14*ay^15*cos(a/2)^3*sin(a/2)^29*y+12870*ax^14*ay^17*cos(a/2)*sin(a/2)^31*y+12870*ax^14*az*cos(a/2)^17*sin(a/2)^15*z+102960*ax^14*az^3*cos(a/2)^15*sin(a/2)^17*z+360360*ax^14*az^5*cos(a/2)^13*sin(a/2)^19*z+720720*ax^14*az^7*cos(a/2)^11*sin(a/2)^21*z+900900*ax^14*az^9*cos(a/2)^9*sin(a/2)^23*z+720720*ax^14*az^11*cos(a/2)^7*sin(a/2)^25*z+360360*ax^14*az^13*cos(a/2)^5*sin(a/2)^27*z+102960*ax^14*az^15*cos(a/2)^3*sin(a/2)^29*z+12870*ax^14*az^17*cos(a/2)*sin(a/2)^31*z+102960*ax^15*ay^2*cos(a/2)^15*sin(a/2)^17*x+360360*ax^15*ay^4*cos(a/2)^13*sin(a/2)^19*x+720720*ax^15*ay^6*cos(a/2)^11*sin(a/2)^21*x+900900*ax^15*ay^8*cos(a/2)^9*sin(a/2)^23*x+720720*ax^15*ay^10*cos(a/2)^7*sin(a/2)^25*x+360360*ax^15*ay^12*cos(a/2)^5*sin(a/2)^27*x+102960*ax^15*ay^14*cos(a/2)^3*sin(a/2)^29*x+12870*ax^15*ay^16*cos(a/2)*sin(a/2)^31*x+102960*ax^15*az^2*cos(a/2)^15*sin(a/2)^17*x+360360*ax^15*az^4*cos(a/2)^13*sin(a/2)^19*x+720720*ax^15*az^6*cos(a/2)^11*sin(a/2)^21*x+900900*ax^15*az^8*cos(a/2)^9*sin(a/2)^23*x+720720*ax^15*az^10*cos(a/2)^7*sin(a/2)^25*x+360360*ax^15*az^12*cos(a/2)^5*sin(a/2)^27*x+102960*ax^15*az^14*cos(a/2)^3*sin(a/2)^29*x+12870*ax^15*az^16*cos(a/2)*sin(a/2)^31*x+12870*ax^16*ay*cos(a/2)^15*sin(a/2)^17*y+90090*ax^16*ay^3*cos(a/2)^13*sin(a/2)^19*y+270270*ax^16*ay^5*cos(a/2)^11*sin(a/2)^21*y+450450*ax^16*ay^7*cos(a/2)^9*sin(a/2)^23*y+450450*ax^16*ay^9*cos(a/2)^7*sin(a/2)^25*y+270270*ax^16*ay^11*cos(a/2)^5*sin(a/2)^27*y+90090*ax^16*ay^13*cos(a/2)^3*sin(a/2)^29*y+12870*ax^16*ay^15*cos(a/2)*sin(a/2)^31*y+12870*ax^16*az*cos(a/2)^15*sin(a/2)^17*z+90090*ax^16*az^3*cos(a/2)^13*sin(a/2)^19*z+270270*ax^16*az^5*cos(a/2)^11*sin(a/2)^21*z+450450*ax^16*az^7*cos(a/2)^9*sin(a/2)^23*z+450450*ax^16*az^9*cos(a/2)^7*sin(a/2)^25*z+270270*ax^16*az^11*cos(a/2)^5*sin(a/2)^27*z+90090*ax^16*az^13*cos(a/2)^3*sin(a/2)^29*z+12870*ax^16*az^15*cos(a/2)*sin(a/2)^31*z+90090*ax^17*ay^2*cos(a/2)^13*sin(a/2)^19*x+270270*ax^17*ay^4*cos(a/2)^11*sin(a/2)^21*x+450450*ax^17*ay^6*cos(a/2)^9*sin(a/2)^23*x+450450*ax^17*ay^8*cos(a/2)^7*sin(a/2)^25*x+270270*ax^17*ay^10*cos(a/2)^5*sin(a/2)^27*x+90090*ax^17*ay^12*cos(a/2)^3*sin(a/2)^29*x+12870*ax^17*ay^14*cos(a/2)*sin(a/2)^31*x+90090*ax^17*az^2*cos(a/2)^13*sin(a/2)^19*x+270270*ax^17*az^4*cos(a/2)^11*sin(a/2)^21*x+450450*ax^17*az^6*cos(a/2)^9*sin(a/2)^23*x+450450*ax^17*az^8*cos(a/2)^7*sin(a/2)^25*x+270270*ax^17*az^10*cos(a/2)^5*sin(a/2)^27*x+90090*ax^17*az^12*cos(a/2)^3*sin(a/2)^29*x+12870*ax^17*az^14*cos(a/2)*sin(a/2)^31*x+10010*ax^18*ay*cos(a/2)^13*sin(a/2)^19*y+60060*ax^18*ay^3*cos(a/2)^11*sin(a/2)^21*y+150150*ax^18*ay^5*cos(a/2)^9*sin(a/2)^23*y+200200*ax^18*ay^7*cos(a/2)^7*sin(a/2)^25*y+150150*ax^18*ay^9*cos(a/2)^5*sin(a/2)^27*y+60060*ax^18*ay^11*cos(a/2)^3*sin(a/2)^29*y+10010*ax^18*ay^13*cos(a/2)*sin(a/2)^31*y+10010*ax^18*az*cos(a/2)^13*sin(a/2)^19*z+60060*ax^18*az^3*cos(a/2)^11*sin(a/2)^21*z+150150*ax^18*az^5*cos(a/2)^9*sin(a/2)^23*z+200200*ax^18*az^7*cos(a/2)^7*sin(a/2)^25*z+150150*ax^18*az^9*cos(a/2)^5*sin(a/2)^27*z+60060*ax^18*az^11*cos(a/2)^3*sin(a/2)^29*z+10010*ax^18*az^13*cos(a/2)*sin(a/2)^31*z+60060*ax^19*ay^2*cos(a/2)^11*sin(a/2)^21*x+150150*ax^19*ay^4*cos(a/2)^9*sin(a/2)^23*x+200200*ax^19*ay^6*cos(a/2)^7*sin(a/2)^25*x+150150*ax^19*ay^8*cos(a/2)^5*sin(a/2)^27*x+60060*ax^19*ay^10*cos(a/2)^3*sin(a/2)^29*x+10010*ax^19*ay^12*cos(a/2)*sin(a/2)^31*x+60060*ax^19*az^2*cos(a/2)^11*sin(a/2)^21*x+150150*ax^19*az^4*cos(a/2)^9*sin(a/2)^23*x+200200*ax^19*az^6*cos(a/2)^7*sin(a/2)^25*x+150150*ax^19*az^8*cos(a/2)^5*sin(a/2)^27*x+60060*ax^19*az^10*cos(a/2)^3*sin(a/2)^29*x+10010*ax^19*az^12*cos(a/2)*sin(a/2)^31*x+6006*ax^20*ay*cos(a/2)^11*sin(a/2)^21*y+30030*ax^20*ay^3*cos(a/2)^9*sin(a/2)^23*y+60060*ax^20*ay^5*cos(a/2)^7*sin(a/2)^25*y+60060*ax^20*ay^7*cos(a/2)^5*sin(a/2)^27*y+30030*ax^20*ay^9*cos(a/2)^3*sin(a/2)^29*y+6006*ax^20*ay^11*cos(a/2)*sin(a/2)^31*y+6006*ax^20*az*cos(a/2)^11*sin(a/2)^21*z+30030*ax^20*az^3*cos(a/2)^9*sin(a/2)^23*z+60060*ax^20*az^5*cos(a/2)^7*sin(a/2)^25*z+60060*ax^20*az^7*cos(a/2)^5*sin(a/2)^27*z+30030*ax^20*az^9*cos(a/2)^3*sin(a/2)^29*z+6006*ax^20*az^11*cos(a/2)*sin(a/2)^31*z+30030*ax^21*ay^2*cos(a/2)^9*sin(a/2)^23*x+60060*ax^21*ay^4*cos(a/2)^7*sin(a/2)^25*x+60060*ax^21*ay^6*cos(a/2)^5*sin(a/2)^27*x+30030*ax^21*ay^8*cos(a/2)^3*sin(a/2)^29*x+6006*ax^21*ay^10*cos(a/2)*sin(a/2)^31*x+30030*ax^21*az^2*cos(a/2)^9*sin(a/2)^23*x+60060*ax^21*az^4*cos(a/2)^7*sin(a/2)^25*x+60060*ax^21*az^6*cos(a/2)^5*sin(a/2)^27*x+30030*ax^21*az^8*cos(a/2)^3*sin(a/2)^29*x+6006*ax^21*az^10*cos(a/2)*sin(a/2)^31*x+2730*ax^22*ay*cos(a/2)^9*sin(a/2)^23*y+10920*ax^22*ay^3*cos(a/2)^7*sin(a/2)^25*y+16380*ax^22*ay^5*cos(a/2)^5*sin(a/2)^27*y+10920*ax^22*ay^7*cos(a/2)^3*sin(a/2)^29*y+2730*ax^22*ay^9*cos(a/2)*sin(a/2)^31*y+2730*ax^22*az*cos(a/2)^9*sin(a/2)^23*z+10920*ax^22*az^3*cos(a/2)^7*sin(a/2)^25*z+16380*ax^22*az^5*cos(a/2)^5*sin(a/2)^27*z+10920*ax^22*az^7*cos(a/2)^3*sin(a/2)^29*z+2730*ax^22*az^9*cos(a/2)*sin(a/2)^31*z+10920*ax^23*ay^2*cos(a/2)^7*sin(a/2)^25*x+16380*ax^23*ay^4*cos(a/2)^5*sin(a/2)^27*x+10920*ax^23*ay^6*cos(a/2)^3*sin(a/2)^29*x+2730*ax^23*ay^8*cos(a/2)*sin(a/2)^31*x+10920*ax^23*az^2*cos(a/2)^7*sin(a/2)^25*x+16380*ax^23*az^4*cos(a/2)^5*sin(a/2)^27*x+10920*ax^23*az^6*cos(a/2)^3*sin(a/2)^29*x+2730*ax^23*az^8*cos(a/2)*sin(a/2)^31*x+910*ax^24*ay*cos(a/2)^7*sin(a/2)^25*y+2730*ax^24*ay^3*cos(a/2)^5*sin(a/2)^27*y+2730*ax^24*ay^5*cos(a/2)^3*sin(a/2)^29*y+910*ax^24*ay^7*cos(a/2)*sin(a/2)^31*y+910*ax^24*az*cos(a/2)^7*sin(a/2)^25*z+2730*ax^24*az^3*cos(a/2)^5*sin(a/2)^27*z+2730*ax^24*az^5*cos(a/2)^3*sin(a/2)^29*z+910*ax^24*az^7*cos(a/2)*sin(a/2)^31*z+2730*ax^25*ay^2*cos(a/2)^5*sin(a/2)^27*x+2730*ax^25*ay^4*cos(a/2)^3*sin(a/2)^29*x+910*ax^25*ay^6*cos(a/2)*sin(a/2)^31*x+2730*ax^25*az^2*cos(a/2)^5*sin(a/2)^27*x+2730*ax^25*az^4*cos(a/2)^3*sin(a/2)^29*x+910*ax^25*az^6*cos(a/2)*sin(a/2)^31*x+210*ax^26*ay*cos(a/2)^5*sin(a/2)^27*y+420*ax^26*ay^3*cos(a/2)^3*sin(a/2)^29*y+210*ax^26*ay^5*cos(a/2)*sin(a/2)^31*y+210*ax^26*az*cos(a/2)^5*sin(a/2)^27*z+420*ax^26*az^3*cos(a/2)^3*sin(a/2)^29*z+210*ax^26*az^5*cos(a/2)*sin(a/2)^31*z+420*ax^27*ay^2*cos(a/2)^3*sin(a/2)^29*x+210*ax^27*ay^4*cos(a/2)*sin(a/2)^31*x+420*ax^27*az^2*cos(a/2)^3*sin(a/2)^29*x+210*ax^27*az^4*cos(a/2)*sin(a/2)^31*x+30*ax^28*ay*cos(a/2)^3*sin(a/2)^29*y+30*ax^28*ay^3*cos(a/2)*sin(a/2)^31*y+30*ax^28*az*cos(a/2)^3*sin(a/2)^29*z+30*ax^28*az^3*cos(a/2)*sin(a/2)^31*z+30*ax^29*ay^2*cos(a/2)*sin(a/2)^31*x+30*ax^29*az^2*cos(a/2)*sin(a/2)^31*x+2*ax^30*ay*cos(a/2)*sin(a/2)^31*y+2*ax^30*az*cos(a/2)*sin(a/2)^31*z+30*ay*az^2*cos(a/2)^29*sin(a/2)^3*y+210*ay*az^4*cos(a/2)^27*sin(a/2)^5*y+910*ay*az^6*cos(a/2)^25*sin(a/2)^7*y+2730*ay*az^8*cos(a/2)^23*sin(a/2)^9*y+6006*ay*az^10*cos(a/2)^21*sin(a/2)^11*y+10010*ay*az^12*cos(a/2)^19*sin(a/2)^13*y+12870*ay*az^14*cos(a/2)^17*sin(a/2)^15*y+12870*ay*az^16*cos(a/2)^15*sin(a/2)^17*y+10010*ay*az^18*cos(a/2)^13*sin(a/2)^19*y+6006*ay*az^20*cos(a/2)^11*sin(a/2)^21*y+2730*ay*az^22*cos(a/2)^9*sin(a/2)^23*y+910*ay*az^24*cos(a/2)^7*sin(a/2)^25*y+210*ay*az^26*cos(a/2)^5*sin(a/2)^27*y+30*ay*az^28*cos(a/2)^3*sin(a/2)^29*y+2*ay*az^30*cos(a/2)*sin(a/2)^31*y+30*ay^2*az*cos(a/2)^29*sin(a/2)^3*z+420*ay^2*az^3*cos(a/2)^27*sin(a/2)^5*z+2730*ay^2*az^5*cos(a/2)^25*sin(a/2)^7*z+10920*ay^2*az^7*cos(a/2)^23*sin(a/2)^9*z+30030*ay^2*az^9*cos(a/2)^21*sin(a/2)^11*z+60060*ay^2*az^11*cos(a/2)^19*sin(a/2)^13*z+90090*ay^2*az^13*cos(a/2)^17*sin(a/2)^15*z+102960*ay^2*az^15*cos(a/2)^15*sin(a/2)^17*z+90090*ay^2*az^17*cos(a/2)^13*sin(a/2)^19*z+60060*ay^2*az^19*cos(a/2)^11*sin(a/2)^21*z+30030*ay^2*az^21*cos(a/2)^9*sin(a/2)^23*z+10920*ay^2*az^23*cos(a/2)^7*sin(a/2)^25*z+2730*ay^2*az^25*cos(a/2)^5*sin(a/2)^27*z+420*ay^2*az^27*cos(a/2)^3*sin(a/2)^29*z+30*ay^2*az^29*cos(a/2)*sin(a/2)^31*z+420*ay^3*az^2*cos(a/2)^27*sin(a/2)^5*y+2730*ay^3*az^4*cos(a/2)^25*sin(a/2)^7*y+10920*ay^3*az^6*cos(a/2)^23*sin(a/2)^9*y+30030*ay^3*az^8*cos(a/2)^21*sin(a/2)^11*y+60060*ay^3*az^10*cos(a/2)^19*sin(a/2)^13*y+90090*ay^3*az^12*cos(a/2)^17*sin(a/2)^15*y+102960*ay^3*az^14*cos(a/2)^15*sin(a/2)^17*y+90090*ay^3*az^16*cos(a/2)^13*sin(a/2)^19*y+60060*ay^3*az^18*cos(a/2)^11*sin(a/2)^21*y+30030*ay^3*az^20*cos(a/2)^9*sin(a/2)^23*y+10920*ay^3*az^22*cos(a/2)^7*sin(a/2)^25*y+2730*ay^3*az^24*cos(a/2)^5*sin(a/2)^27*y+420*ay^3*az^26*cos(a/2)^3*sin(a/2)^29*y+30*ay^3*az^28*cos(a/2)*sin(a/2)^31*y+210*ay^4*az*cos(a/2)^27*sin(a/2)^5*z+2730*ay^4*az^3*cos(a/2)^25*sin(a/2)^7*z+16380*ay^4*az^5*cos(a/2)^23*sin(a/2)^9*z+60060*ay^4*az^7*cos(a/2)^21*sin(a/2)^11*z+150150*ay^4*az^9*cos(a/2)^19*sin(a/2)^13*z+270270*ay^4*az^11*cos(a/2)^17*sin(a/2)^15*z+360360*ay^4*az^13*cos(a/2)^15*sin(a/2)^17*z+360360*ay^4*az^15*cos(a/2)^13*sin(a/2)^19*z+270270*ay^4*az^17*cos(a/2)^11*sin(a/2)^21*z+150150*ay^4*az^19*cos(a/2)^9*sin(a/2)^23*z+60060*ay^4*az^21*cos(a/2)^7*sin(a/2)^25*z+16380*ay^4*az^23*cos(a/2)^5*sin(a/2)^27*z+2730*ay^4*az^25*cos(a/2)^3*sin(a/2)^29*z+210*ay^4*az^27*cos(a/2)*sin(a/2)^31*z+2730*ay^5*az^2*cos(a/2)^25*sin(a/2)^7*y+16380*ay^5*az^4*cos(a/2)^23*sin(a/2)^9*y+60060*ay^5*az^6*cos(a/2)^21*sin(a/2)^11*y+150150*ay^5*az^8*cos(a/2)^19*sin(a/2)^13*y+270270*ay^5*az^10*cos(a/2)^17*sin(a/2)^15*y+360360*ay^5*az^12*cos(a/2)^15*sin(a/2)^17*y+360360*ay^5*az^14*cos(a/2)^13*sin(a/2)^19*y+270270*ay^5*az^16*cos(a/2)^11*sin(a/2)^21*y+150150*ay^5*az^18*cos(a/2)^9*sin(a/2)^23*y+60060*ay^5*az^20*cos(a/2)^7*sin(a/2)^25*y+16380*ay^5*az^22*cos(a/2)^5*sin(a/2)^27*y+2730*ay^5*az^24*cos(a/2)^3*sin(a/2)^29*y+210*ay^5*az^26*cos(a/2)*sin(a/2)^31*y+910*ay^6*az*cos(a/2)^25*sin(a/2)^7*z+10920*ay^6*az^3*cos(a/2)^23*sin(a/2)^9*z+60060*ay^6*az^5*cos(a/2)^21*sin(a/2)^11*z+200200*ay^6*az^7*cos(a/2)^19*sin(a/2)^13*z+450450*ay^6*az^9*cos(a/2)^17*sin(a/2)^15*z+720720*ay^6*az^11*cos(a/2)^15*sin(a/2)^17*z+840840*ay^6*az^13*cos(a/2)^13*sin(a/2)^19*z+720720*ay^6*az^15*cos(a/2)^11*sin(a/2)^21*z+450450*ay^6*az^17*cos(a/2)^9*sin(a/2)^23*z+200200*ay^6*az^19*cos(a/2)^7*sin(a/2)^25*z+60060*ay^6*az^21*cos(a/2)^5*sin(a/2)^27*z+10920*ay^6*az^23*cos(a/2)^3*sin(a/2)^29*z+910*ay^6*az^25*cos(a/2)*sin(a/2)^31*z+10920*ay^7*az^2*cos(a/2)^23*sin(a/2)^9*y+60060*ay^7*az^4*cos(a/2)^21*sin(a/2)^11*y+200200*ay^7*az^6*cos(a/2)^19*sin(a/2)^13*y+450450*ay^7*az^8*cos(a/2)^17*sin(a/2)^15*y+720720*ay^7*az^10*cos(a/2)^15*sin(a/2)^17*y+840840*ay^7*az^12*cos(a/2)^13*sin(a/2)^19*y+720720*ay^7*az^14*cos(a/2)^11*sin(a/2)^21*y+450450*ay^7*az^16*cos(a/2)^9*sin(a/2)^23*y+200200*ay^7*az^18*cos(a/2)^7*sin(a/2)^25*y+60060*ay^7*az^20*cos(a/2)^5*sin(a/2)^27*y+10920*ay^7*az^22*cos(a/2)^3*sin(a/2)^29*y+910*ay^7*az^24*cos(a/2)*sin(a/2)^31*y+2730*ay^8*az*cos(a/2)^23*sin(a/2)^9*z+30030*ay^8*az^3*cos(a/2)^21*sin(a/2)^11*z+150150*ay^8*az^5*cos(a/2)^19*sin(a/2)^13*z+450450*ay^8*az^7*cos(a/2)^17*sin(a/2)^15*z+900900*ay^8*az^9*cos(a/2)^15*sin(a/2)^17*z+1261260*ay^8*az^11*cos(a/2)^13*sin(a/2)^19*z+1261260*ay^8*az^13*cos(a/2)^11*sin(a/2)^21*z+900900*ay^8*az^15*cos(a/2)^9*sin(a/2)^23*z+450450*ay^8*az^17*cos(a/2)^7*sin(a/2)^25*z+150150*ay^8*az^19*cos(a/2)^5*sin(a/2)^27*z+30030*ay^8*az^21*cos(a/2)^3*sin(a/2)^29*z+2730*ay^8*az^23*cos(a/2)*sin(a/2)^31*z+30030*ay^9*az^2*cos(a/2)^21*sin(a/2)^11*y+150150*ay^9*az^4*cos(a/2)^19*sin(a/2)^13*y+450450*ay^9*az^6*cos(a/2)^17*sin(a/2)^15*y+900900*ay^9*az^8*cos(a/2)^15*sin(a/2)^17*y+1261260*ay^9*az^10*cos(a/2)^13*sin(a/2)^19*y+1261260*ay^9*az^12*cos(a/2)^11*sin(a/2)^21*y+900900*ay^9*az^14*cos(a/2)^9*sin(a/2)^23*y+450450*ay^9*az^16*cos(a/2)^7*sin(a/2)^25*y+150150*ay^9*az^18*cos(a/2)^5*sin(a/2)^27*y+30030*ay^9*az^20*cos(a/2)^3*sin(a/2)^29*y+2730*ay^9*az^22*cos(a/2)*sin(a/2)^31*y+6006*ay^10*az*cos(a/2)^21*sin(a/2)^11*z+60060*ay^10*az^3*cos(a/2)^19*sin(a/2)^13*z+270270*ay^10*az^5*cos(a/2)^17*sin(a/2)^15*z+720720*ay^10*az^7*cos(a/2)^15*sin(a/2)^17*z+1261260*ay^10*az^9*cos(a/2)^13*sin(a/2)^19*z+1513512*ay^10*az^11*cos(a/2)^11*sin(a/2)^21*z+1261260*ay^10*az^13*cos(a/2)^9*sin(a/2)^23*z+720720*ay^10*az^15*cos(a/2)^7*sin(a/2)^25*z+270270*ay^10*az^17*cos(a/2)^5*sin(a/2)^27*z+60060*ay^10*az^19*cos(a/2)^3*sin(a/2)^29*z+6006*ay^10*az^21*cos(a/2)*sin(a/2)^31*z+60060*ay^11*az^2*cos(a/2)^19*sin(a/2)^13*y+270270*ay^11*az^4*cos(a/2)^17*sin(a/2)^15*y+720720*ay^11*az^6*cos(a/2)^15*sin(a/2)^17*y+1261260*ay^11*az^8*cos(a/2)^13*sin(a/2)^19*y+1513512*ay^11*az^10*cos(a/2)^11*sin(a/2)^21*y+1261260*ay^11*az^12*cos(a/2)^9*sin(a/2)^23*y+720720*ay^11*az^14*cos(a/2)^7*sin(a/2)^25*y+270270*ay^11*az^16*cos(a/2)^5*sin(a/2)^27*y+60060*ay^11*az^18*cos(a/2)^3*sin(a/2)^29*y+6006*ay^11*az^20*cos(a/2)*sin(a/2)^31*y+10010*ay^12*az*cos(a/2)^19*sin(a/2)^13*z+90090*ay^12*az^3*cos(a/2)^17*sin(a/2)^15*z+360360*ay^12*az^5*cos(a/2)^15*sin(a/2)^17*z+840840*ay^12*az^7*cos(a/2)^13*sin(a/2)^19*z+1261260*ay^12*az^9*cos(a/2)^11*sin(a/2)^21*z+1261260*ay^12*az^11*cos(a/2)^9*sin(a/2)^23*z+840840*ay^12*az^13*cos(a/2)^7*sin(a/2)^25*z+360360*ay^12*az^15*cos(a/2)^5*sin(a/2)^27*z+90090*ay^12*az^17*cos(a/2)^3*sin(a/2)^29*z+10010*ay^12*az^19*cos(a/2)*sin(a/2)^31*z+90090*ay^13*az^2*cos(a/2)^17*sin(a/2)^15*y+360360*ay^13*az^4*cos(a/2)^15*sin(a/2)^17*y+840840*ay^13*az^6*cos(a/2)^13*sin(a/2)^19*y+1261260*ay^13*az^8*cos(a/2)^11*sin(a/2)^21*y+1261260*ay^13*az^10*cos(a/2)^9*sin(a/2)^23*y+840840*ay^13*az^12*cos(a/2)^7*sin(a/2)^25*y+360360*ay^13*az^14*cos(a/2)^5*sin(a/2)^27*y+90090*ay^13*az^16*cos(a/2)^3*sin(a/2)^29*y+10010*ay^13*az^18*cos(a/2)*sin(a/2)^31*y+12870*ay^14*az*cos(a/2)^17*sin(a/2)^15*z+102960*ay^14*az^3*cos(a/2)^15*sin(a/2)^17*z+360360*ay^14*az^5*cos(a/2)^13*sin(a/2)^19*z+720720*ay^14*az^7*cos(a/2)^11*sin(a/2)^21*z+900900*ay^14*az^9*cos(a/2)^9*sin(a/2)^23*z+720720*ay^14*az^11*cos(a/2)^7*sin(a/2)^25*z+360360*ay^14*az^13*cos(a/2)^5*sin(a/2)^27*z+102960*ay^14*az^15*cos(a/2)^3*sin(a/2)^29*z+12870*ay^14*az^17*cos(a/2)*sin(a/2)^31*z+102960*ay^15*az^2*cos(a/2)^15*sin(a/2)^17*y+360360*ay^15*az^4*cos(a/2)^13*sin(a/2)^19*y+720720*ay^15*az^6*cos(a/2)^11*sin(a/2)^21*y+900900*ay^15*az^8*cos(a/2)^9*sin(a/2)^23*y+720720*ay^15*az^10*cos(a/2)^7*sin(a/2)^25*y+360360*ay^15*az^12*cos(a/2)^5*sin(a/2)^27*y+102960*ay^15*az^14*cos(a/2)^3*sin(a/2)^29*y+12870*ay^15*az^16*cos(a/2)*sin(a/2)^31*y+12870*ay^16*az*cos(a/2)^15*sin(a/2)^17*z+90090*ay^16*az^3*cos(a/2)^13*sin(a/2)^19*z+270270*ay^16*az^5*cos(a/2)^11*sin(a/2)^21*z+450450*ay^16*az^7*cos(a/2)^9*sin(a/2)^23*z+450450*ay^16*az^9*cos(a/2)^7*sin(a/2)^25*z+270270*ay^16*az^11*cos(a/2)^5*sin(a/2)^27*z+90090*ay^16*az^13*cos(a/2)^3*sin(a/2)^29*z+12870*ay^16*az^15*cos(a/2)*sin(a/2)^31*z+90090*ay^17*az^2*cos(a/2)^13*sin(a/2)^19*y+270270*ay^17*az^4*cos(a/2)^11*sin(a/2)^21*y+450450*ay^17*az^6*cos(a/2)^9*sin(a/2)^23*y+450450*ay^17*az^8*cos(a/2)^7*sin(a/2)^25*y+270270*ay^17*az^10*cos(a/2)^5*sin(a/2)^27*y+90090*ay^17*az^12*cos(a/2)^3*sin(a/2)^29*y+12870*ay^17*az^14*cos(a/2)*sin(a/2)^31*y+10010*ay^18*az*cos(a/2)^13*sin(a/2)^19*z+60060*ay^18*az^3*cos(a/2)^11*sin(a/2)^21*z+150150*ay^18*az^5*cos(a/2)^9*sin(a/2)^23*z+200200*ay^18*az^7*cos(a/2)^7*sin(a/2)^25*z+150150*ay^18*az^9*cos(a/2)^5*sin(a/2)^27*z+60060*ay^18*az^11*cos(a/2)^3*sin(a/2)^29*z+10010*ay^18*az^13*cos(a/2)*sin(a/2)^31*z+60060*ay^19*az^2*cos(a/2)^11*sin(a/2)^21*y+150150*ay^19*az^4*cos(a/2)^9*sin(a/2)^23*y+200200*ay^19*az^6*cos(a/2)^7*sin(a/2)^25*y+150150*ay^19*az^8*cos(a/2)^5*sin(a/2)^27*y+60060*ay^19*az^10*cos(a/2)^3*sin(a/2)^29*y+10010*ay^19*az^12*cos(a/2)*sin(a/2)^31*y+6006*ay^20*az*cos(a/2)^11*sin(a/2)^21*z+30030*ay^20*az^3*cos(a/2)^9*sin(a/2)^23*z+60060*ay^20*az^5*cos(a/2)^7*sin(a/2)^25*z+60060*ay^20*az^7*cos(a/2)^5*sin(a/2)^27*z+30030*ay^20*az^9*cos(a/2)^3*sin(a/2)^29*z+6006*ay^20*az^11*cos(a/2)*sin(a/2)^31*z+30030*ay^21*az^2*cos(a/2)^9*sin(a/2)^23*y+60060*ay^21*az^4*cos(a/2)^7*sin(a/2)^25*y+60060*ay^21*az^6*cos(a/2)^5*sin(a/2)^27*y+30030*ay^21*az^8*cos(a/2)^3*sin(a/2)^29*y+6006*ay^21*az^10*cos(a/2)*sin(a/2)^31*y+2730*ay^22*az*cos(a/2)^9*sin(a/2)^23*z+10920*ay^22*az^3*cos(a/2)^7*sin(a/2)^25*z+16380*ay^22*az^5*cos(a/2)^5*sin(a/2)^27*z+10920*ay^22*az^7*cos(a/2)^3*sin(a/2)^29*z+2730*ay^22*az^9*cos(a/2)*sin(a/2)^31*z+10920*ay^23*az^2*cos(a/2)^7*sin(a/2)^25*y+16380*ay^23*az^4*cos(a/2)^5*sin(a/2)^27*y+10920*ay^23*az^6*cos(a/2)^3*sin(a/2)^29*y+2730*ay^23*az^8*cos(a/2)*sin(a/2)^31*y+910*ay^24*az*cos(a/2)^7*sin(a/2)^25*z+2730*ay^24*az^3*cos(a/2)^5*sin(a/2)^27*z+2730*ay^24*az^5*cos(a/2)^3*sin(a/2)^29*z+910*ay^24*az^7*cos(a/2)*sin(a/2)^31*z+2730*ay^25*az^2*cos(a/2)^5*sin(a/2)^27*y+2730*ay^25*az^4*cos(a/2)^3*sin(a/2)^29*y+910*ay^25*az^6*cos(a/2)*sin(a/2)^31*y+210*ay^26*az*cos(a/2)^5*sin(a/2)^27*z+420*ay^26*az^3*cos(a/2)^3*sin(a/2)^29*z+210*ay^26*az^5*cos(a/2)*sin(a/2)^31*z+420*ay^27*az^2*cos(a/2)^3*sin(a/2)^29*y+210*ay^27*az^4*cos(a/2)*sin(a/2)^31*y+30*ay^28*az*cos(a/2)^3*sin(a/2)^29*z+30*ay^28*az^3*cos(a/2)*sin(a/2)^31*z+30*ay^29*az^2*cos(a/2)*sin(a/2)^31*y+2*ay^30*az*cos(a/2)*sin(a/2)^31*z+420*ax*ay^2*az^2*cos(a/2)^27*sin(a/2)^5*x+2730*ax*ay^2*az^4*cos(a/2)^25*sin(a/2)^7*x+10920*ax*ay^2*az^6*cos(a/2)^23*sin(a/2)^9*x+30030*ax*ay^2*az^8*cos(a/2)^21*sin(a/2)^11*x+60060*ax*ay^2*az^10*cos(a/2)^19*sin(a/2)^13*x+90090*ax*ay^2*az^12*cos(a/2)^17*sin(a/2)^15*x+102960*ax*ay^2*az^14*cos(a/2)^15*sin(a/2)^17*x+90090*ax*ay^2*az^16*cos(a/2)^13*sin(a/2)^19*x+60060*ax*ay^2*az^18*cos(a/2)^11*sin(a/2)^21*x+30030*ax*ay^2*az^20*cos(a/2)^9*sin(a/2)^23*x+10920*ax*ay^2*az^22*cos(a/2)^7*sin(a/2)^25*x+2730*ax*ay^2*az^24*cos(a/2)^5*sin(a/2)^27*x+420*ax*ay^2*az^26*cos(a/2)^3*sin(a/2)^29*x+30*ax*ay^2*az^28*cos(a/2)*sin(a/2)^31*x+2730*ax*ay^4*az^2*cos(a/2)^25*sin(a/2)^7*x+16380*ax*ay^4*az^4*cos(a/2)^23*sin(a/2)^9*x+60060*ax*ay^4*az^6*cos(a/2)^21*sin(a/2)^11*x+150150*ax*ay^4*az^8*cos(a/2)^19*sin(a/2)^13*x+270270*ax*ay^4*az^10*cos(a/2)^17*sin(a/2)^15*x+360360*ax*ay^4*az^12*cos(a/2)^15*sin(a/2)^17*x+360360*ax*ay^4*az^14*cos(a/2)^13*sin(a/2)^19*x+270270*ax*ay^4*az^16*cos(a/2)^11*sin(a/2)^21*x+150150*ax*ay^4*az^18*cos(a/2)^9*sin(a/2)^23*x+60060*ax*ay^4*az^20*cos(a/2)^7*sin(a/2)^25*x+16380*ax*ay^4*az^22*cos(a/2)^5*sin(a/2)^27*x+2730*ax*ay^4*az^24*cos(a/2)^3*sin(a/2)^29*x+210*ax*ay^4*az^26*cos(a/2)*sin(a/2)^31*x+10920*ax*ay^6*az^2*cos(a/2)^23*sin(a/2)^9*x+60060*ax*ay^6*az^4*cos(a/2)^21*sin(a/2)^11*x+200200*ax*ay^6*az^6*cos(a/2)^19*sin(a/2)^13*x+450450*ax*ay^6*az^8*cos(a/2)^17*sin(a/2)^15*x+720720*ax*ay^6*az^10*cos(a/2)^15*sin(a/2)^17*x+840840*ax*ay^6*az^12*cos(a/2)^13*sin(a/2)^19*x+720720*ax*ay^6*az^14*cos(a/2)^11*sin(a/2)^21*x+450450*ax*ay^6*az^16*cos(a/2)^9*sin(a/2)^23*x+200200*ax*ay^6*az^18*cos(a/2)^7*sin(a/2)^25*x+60060*ax*ay^6*az^20*cos(a/2)^5*sin(a/2)^27*x+10920*ax*ay^6*az^22*cos(a/2)^3*sin(a/2)^29*x+910*ax*ay^6*az^24*cos(a/2)*sin(a/2)^31*x+30030*ax*ay^8*az^2*cos(a/2)^21*sin(a/2)^11*x+150150*ax*ay^8*az^4*cos(a/2)^19*sin(a/2)^13*x+450450*ax*ay^8*az^6*cos(a/2)^17*sin(a/2)^15*x+900900*ax*ay^8*az^8*cos(a/2)^15*sin(a/2)^17*x+1261260*ax*ay^8*az^10*cos(a/2)^13*sin(a/2)^19*x+1261260*ax*ay^8*az^12*cos(a/2)^11*sin(a/2)^21*x+900900*ax*ay^8*az^14*cos(a/2)^9*sin(a/2)^23*x+450450*ax*ay^8*az^16*cos(a/2)^7*sin(a/2)^25*x+150150*ax*ay^8*az^18*cos(a/2)^5*sin(a/2)^27*x+30030*ax*ay^8*az^20*cos(a/2)^3*sin(a/2)^29*x+2730*ax*ay^8*az^22*cos(a/2)*sin(a/2)^31*x+60060*ax*ay^10*az^2*cos(a/2)^19*sin(a/2)^13*x+270270*ax*ay^10*az^4*cos(a/2)^17*sin(a/2)^15*x+720720*ax*ay^10*az^6*cos(a/2)^15*sin(a/2)^17*x+1261260*ax*ay^10*az^8*cos(a/2)^13*sin(a/2)^19*x+1513512*ax*ay^10*az^10*cos(a/2)^11*sin(a/2)^21*x+1261260*ax*ay^10*az^12*cos(a/2)^9*sin(a/2)^23*x+720720*ax*ay^10*az^14*cos(a/2)^7*sin(a/2)^25*x+270270*ax*ay^10*az^16*cos(a/2)^5*sin(a/2)^27*x+60060*ax*ay^10*az^18*cos(a/2)^3*sin(a/2)^29*x+6006*ax*ay^10*az^20*cos(a/2)*sin(a/2)^31*x+90090*ax*ay^12*az^2*cos(a/2)^17*sin(a/2)^15*x+360360*ax*ay^12*az^4*cos(a/2)^15*sin(a/2)^17*x+840840*ax*ay^12*az^6*cos(a/2)^13*sin(a/2)^19*x+1261260*ax*ay^12*az^8*cos(a/2)^11*sin(a/2)^21*x+1261260*ax*ay^12*az^10*cos(a/2)^9*sin(a/2)^23*x+840840*ax*ay^12*az^12*cos(a/2)^7*sin(a/2)^25*x+360360*ax*ay^12*az^14*cos(a/2)^5*sin(a/2)^27*x+90090*ax*ay^12*az^16*cos(a/2)^3*sin(a/2)^29*x+10010*ax*ay^12*az^18*cos(a/2)*sin(a/2)^31*x+102960*ax*ay^14*az^2*cos(a/2)^15*sin(a/2)^17*x+360360*ax*ay^14*az^4*cos(a/2)^13*sin(a/2)^19*x+720720*ax*ay^14*az^6*cos(a/2)^11*sin(a/2)^21*x+900900*ax*ay^14*az^8*cos(a/2)^9*sin(a/2)^23*x+720720*ax*ay^14*az^10*cos(a/2)^7*sin(a/2)^25*x+360360*ax*ay^14*az^12*cos(a/2)^5*sin(a/2)^27*x+102960*ax*ay^14*az^14*cos(a/2)^3*sin(a/2)^29*x+12870*ax*ay^14*az^16*cos(a/2)*sin(a/2)^31*x+90090*ax*ay^16*az^2*cos(a/2)^13*sin(a/2)^19*x+270270*ax*ay^16*az^4*cos(a/2)^11*sin(a/2)^21*x+450450*ax*ay^16*az^6*cos(a/2)^9*sin(a/2)^23*x+450450*ax*ay^16*az^8*cos(a/2)^7*sin(a/2)^25*x+270270*ax*ay^16*az^10*cos(a/2)^5*sin(a/2)^27*x+90090*ax*ay^16*az^12*cos(a/2)^3*sin(a/2)^29*x+12870*ax*ay^16*az^14*cos(a/2)*sin(a/2)^31*x+60060*ax*ay^18*az^2*cos(a/2)^11*sin(a/2)^21*x+150150*ax*ay^18*az^4*cos(a/2)^9*sin(a/2)^23*x+200200*ax*ay^18*az^6*cos(a/2)^7*sin(a/2)^25*x+150150*ax*ay^18*az^8*cos(a/2)^5*sin(a/2)^27*x+60060*ax*ay^18*az^10*cos(a/2)^3*sin(a/2)^29*x+10010*ax*ay^18*az^12*cos(a/2)*sin(a/2)^31*x+30030*ax*ay^20*az^2*cos(a/2)^9*sin(a/2)^23*x+60060*ax*ay^20*az^4*cos(a/2)^7*sin(a/2)^25*x+60060*ax*ay^20*az^6*cos(a/2)^5*sin(a/2)^27*x+30030*ax*ay^20*az^8*cos(a/2)^3*sin(a/2)^29*x+6006*ax*ay^20*az^10*cos(a/2)*sin(a/2)^31*x+10920*ax*ay^22*az^2*cos(a/2)^7*sin(a/2)^25*x+16380*ax*ay^22*az^4*cos(a/2)^5*sin(a/2)^27*x+10920*ax*ay^22*az^6*cos(a/2)^3*sin(a/2)^29*x+2730*ax*ay^22*az^8*cos(a/2)*sin(a/2)^31*x+2730*ax*ay^24*az^2*cos(a/2)^5*sin(a/2)^27*x+2730*ax*ay^24*az^4*cos(a/2)^3*sin(a/2)^29*x+910*ax*ay^24*az^6*cos(a/2)*sin(a/2)^31*x+420*ax*ay^26*az^2*cos(a/2)^3*sin(a/2)^29*x+210*ax*ay^26*az^4*cos(a/2)*sin(a/2)^31*x+30*ax*ay^28*az^2*cos(a/2)*sin(a/2)^31*x+420*ax^2*ay*az^2*cos(a/2)^27*sin(a/2)^5*y+2730*ax^2*ay*az^4*cos(a/2)^25*sin(a/2)^7*y+10920*ax^2*ay*az^6*cos(a/2)^23*sin(a/2)^9*y+30030*ax^2*ay*az^8*cos(a/2)^21*sin(a/2)^11*y+60060*ax^2*ay*az^10*cos(a/2)^19*sin(a/2)^13*y+90090*ax^2*ay*az^12*cos(a/2)^17*sin(a/2)^15*y+102960*ax^2*ay*az^14*cos(a/2)^15*sin(a/2)^17*y+90090*ax^2*ay*az^16*cos(a/2)^13*sin(a/2)^19*y+60060*ax^2*ay*az^18*cos(a/2)^11*sin(a/2)^21*y+30030*ax^2*ay*az^20*cos(a/2)^9*sin(a/2)^23*y+10920*ax^2*ay*az^22*cos(a/2)^7*sin(a/2)^25*y+2730*ax^2*ay*az^24*cos(a/2)^5*sin(a/2)^27*y+420*ax^2*ay*az^26*cos(a/2)^3*sin(a/2)^29*y+30*ax^2*ay*az^28*cos(a/2)*sin(a/2)^31*y+420*ax^2*ay^2*az*cos(a/2)^27*sin(a/2)^5*z+5460*ax^2*ay^2*az^3*cos(a/2)^25*sin(a/2)^7*z+32760*ax^2*ay^2*az^5*cos(a/2)^23*sin(a/2)^9*z+120120*ax^2*ay^2*az^7*cos(a/2)^21*sin(a/2)^11*z+300300*ax^2*ay^2*az^9*cos(a/2)^19*sin(a/2)^13*z+540540*ax^2*ay^2*az^11*cos(a/2)^17*sin(a/2)^15*z+720720*ax^2*ay^2*az^13*cos(a/2)^15*sin(a/2)^17*z+720720*ax^2*ay^2*az^15*cos(a/2)^13*sin(a/2)^19*z+540540*ax^2*ay^2*az^17*cos(a/2)^11*sin(a/2)^21*z+300300*ax^2*ay^2*az^19*cos(a/2)^9*sin(a/2)^23*z+120120*ax^2*ay^2*az^21*cos(a/2)^7*sin(a/2)^25*z+32760*ax^2*ay^2*az^23*cos(a/2)^5*sin(a/2)^27*z+5460*ax^2*ay^2*az^25*cos(a/2)^3*sin(a/2)^29*z+420*ax^2*ay^2*az^27*cos(a/2)*sin(a/2)^31*z+5460*ax^2*ay^3*az^2*cos(a/2)^25*sin(a/2)^7*y+32760*ax^2*ay^3*az^4*cos(a/2)^23*sin(a/2)^9*y+120120*ax^2*ay^3*az^6*cos(a/2)^21*sin(a/2)^11*y+300300*ax^2*ay^3*az^8*cos(a/2)^19*sin(a/2)^13*y+540540*ax^2*ay^3*az^10*cos(a/2)^17*sin(a/2)^15*y+720720*ax^2*ay^3*az^12*cos(a/2)^15*sin(a/2)^17*y+720720*ax^2*ay^3*az^14*cos(a/2)^13*sin(a/2)^19*y+540540*ax^2*ay^3*az^16*cos(a/2)^11*sin(a/2)^21*y+300300*ax^2*ay^3*az^18*cos(a/2)^9*sin(a/2)^23*y+120120*ax^2*ay^3*az^20*cos(a/2)^7*sin(a/2)^25*y+32760*ax^2*ay^3*az^22*cos(a/2)^5*sin(a/2)^27*y+5460*ax^2*ay^3*az^24*cos(a/2)^3*sin(a/2)^29*y+420*ax^2*ay^3*az^26*cos(a/2)*sin(a/2)^31*y+2730*ax^2*ay^4*az*cos(a/2)^25*sin(a/2)^7*z+32760*ax^2*ay^4*az^3*cos(a/2)^23*sin(a/2)^9*z+180180*ax^2*ay^4*az^5*cos(a/2)^21*sin(a/2)^11*z+600600*ax^2*ay^4*az^7*cos(a/2)^19*sin(a/2)^13*z+1351350*ax^2*ay^4*az^9*cos(a/2)^17*sin(a/2)^15*z+2162160*ax^2*ay^4*az^11*cos(a/2)^15*sin(a/2)^17*z+2522520*ax^2*ay^4*az^13*cos(a/2)^13*sin(a/2)^19*z+2162160*ax^2*ay^4*az^15*cos(a/2)^11*sin(a/2)^21*z+1351350*ax^2*ay^4*az^17*cos(a/2)^9*sin(a/2)^23*z+600600*ax^2*ay^4*az^19*cos(a/2)^7*sin(a/2)^25*z+180180*ax^2*ay^4*az^21*cos(a/2)^5*sin(a/2)^27*z+32760*ax^2*ay^4*az^23*cos(a/2)^3*sin(a/2)^29*z+2730*ax^2*ay^4*az^25*cos(a/2)*sin(a/2)^31*z+32760*ax^2*ay^5*az^2*cos(a/2)^23*sin(a/2)^9*y+180180*ax^2*ay^5*az^4*cos(a/2)^21*sin(a/2)^11*y+600600*ax^2*ay^5*az^6*cos(a/2)^19*sin(a/2)^13*y+1351350*ax^2*ay^5*az^8*cos(a/2)^17*sin(a/2)^15*y+2162160*ax^2*ay^5*az^10*cos(a/2)^15*sin(a/2)^17*y+2522520*ax^2*ay^5*az^12*cos(a/2)^13*sin(a/2)^19*y+2162160*ax^2*ay^5*az^14*cos(a/2)^11*sin(a/2)^21*y+1351350*ax^2*ay^5*az^16*cos(a/2)^9*sin(a/2)^23*y+600600*ax^2*ay^5*az^18*cos(a/2)^7*sin(a/2)^25*y+180180*ax^2*ay^5*az^20*cos(a/2)^5*sin(a/2)^27*y+32760*ax^2*ay^5*az^22*cos(a/2)^3*sin(a/2)^29*y+2730*ax^2*ay^5*az^24*cos(a/2)*sin(a/2)^31*y+10920*ax^2*ay^6*az*cos(a/2)^23*sin(a/2)^9*z+120120*ax^2*ay^6*az^3*cos(a/2)^21*sin(a/2)^11*z+600600*ax^2*ay^6*az^5*cos(a/2)^19*sin(a/2)^13*z+1801800*ax^2*ay^6*az^7*cos(a/2)^17*sin(a/2)^15*z+3603600*ax^2*ay^6*az^9*cos(a/2)^15*sin(a/2)^17*z+5045040*ax^2*ay^6*az^11*cos(a/2)^13*sin(a/2)^19*z+5045040*ax^2*ay^6*az^13*cos(a/2)^11*sin(a/2)^21*z+3603600*ax^2*ay^6*az^15*cos(a/2)^9*sin(a/2)^23*z+1801800*ax^2*ay^6*az^17*cos(a/2)^7*sin(a/2)^25*z+600600*ax^2*ay^6*az^19*cos(a/2)^5*sin(a/2)^27*z+120120*ax^2*ay^6*az^21*cos(a/2)^3*sin(a/2)^29*z+10920*ax^2*ay^6*az^23*cos(a/2)*sin(a/2)^31*z+120120*ax^2*ay^7*az^2*cos(a/2)^21*sin(a/2)^11*y+600600*ax^2*ay^7*az^4*cos(a/2)^19*sin(a/2)^13*y+1801800*ax^2*ay^7*az^6*cos(a/2)^17*sin(a/2)^15*y+3603600*ax^2*ay^7*az^8*cos(a/2)^15*sin(a/2)^17*y+5045040*ax^2*ay^7*az^10*cos(a/2)^13*sin(a/2)^19*y+5045040*ax^2*ay^7*az^12*cos(a/2)^11*sin(a/2)^21*y+3603600*ax^2*ay^7*az^14*cos(a/2)^9*sin(a/2)^23*y+1801800*ax^2*ay^7*az^16*cos(a/2)^7*sin(a/2)^25*y+600600*ax^2*ay^7*az^18*cos(a/2)^5*sin(a/2)^27*y+120120*ax^2*ay^7*az^20*cos(a/2)^3*sin(a/2)^29*y+10920*ax^2*ay^7*az^22*cos(a/2)*sin(a/2)^31*y+30030*ax^2*ay^8*az*cos(a/2)^21*sin(a/2)^11*z+300300*ax^2*ay^8*az^3*cos(a/2)^19*sin(a/2)^13*z+1351350*ax^2*ay^8*az^5*cos(a/2)^17*sin(a/2)^15*z+3603600*ax^2*ay^8*az^7*cos(a/2)^15*sin(a/2)^17*z+6306300*ax^2*ay^8*az^9*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^2*ay^8*az^11*cos(a/2)^11*sin(a/2)^21*z+6306300*ax^2*ay^8*az^13*cos(a/2)^9*sin(a/2)^23*z+3603600*ax^2*ay^8*az^15*cos(a/2)^7*sin(a/2)^25*z+1351350*ax^2*ay^8*az^17*cos(a/2)^5*sin(a/2)^27*z+300300*ax^2*ay^8*az^19*cos(a/2)^3*sin(a/2)^29*z+30030*ax^2*ay^8*az^21*cos(a/2)*sin(a/2)^31*z+300300*ax^2*ay^9*az^2*cos(a/2)^19*sin(a/2)^13*y+1351350*ax^2*ay^9*az^4*cos(a/2)^17*sin(a/2)^15*y+3603600*ax^2*ay^9*az^6*cos(a/2)^15*sin(a/2)^17*y+6306300*ax^2*ay^9*az^8*cos(a/2)^13*sin(a/2)^19*y+7567560*ax^2*ay^9*az^10*cos(a/2)^11*sin(a/2)^21*y+6306300*ax^2*ay^9*az^12*cos(a/2)^9*sin(a/2)^23*y+3603600*ax^2*ay^9*az^14*cos(a/2)^7*sin(a/2)^25*y+1351350*ax^2*ay^9*az^16*cos(a/2)^5*sin(a/2)^27*y+300300*ax^2*ay^9*az^18*cos(a/2)^3*sin(a/2)^29*y+30030*ax^2*ay^9*az^20*cos(a/2)*sin(a/2)^31*y+60060*ax^2*ay^10*az*cos(a/2)^19*sin(a/2)^13*z+540540*ax^2*ay^10*az^3*cos(a/2)^17*sin(a/2)^15*z+2162160*ax^2*ay^10*az^5*cos(a/2)^15*sin(a/2)^17*z+5045040*ax^2*ay^10*az^7*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^2*ay^10*az^9*cos(a/2)^11*sin(a/2)^21*z+7567560*ax^2*ay^10*az^11*cos(a/2)^9*sin(a/2)^23*z+5045040*ax^2*ay^10*az^13*cos(a/2)^7*sin(a/2)^25*z+2162160*ax^2*ay^10*az^15*cos(a/2)^5*sin(a/2)^27*z+540540*ax^2*ay^10*az^17*cos(a/2)^3*sin(a/2)^29*z+60060*ax^2*ay^10*az^19*cos(a/2)*sin(a/2)^31*z+540540*ax^2*ay^11*az^2*cos(a/2)^17*sin(a/2)^15*y+2162160*ax^2*ay^11*az^4*cos(a/2)^15*sin(a/2)^17*y+5045040*ax^2*ay^11*az^6*cos(a/2)^13*sin(a/2)^19*y+7567560*ax^2*ay^11*az^8*cos(a/2)^11*sin(a/2)^21*y+7567560*ax^2*ay^11*az^10*cos(a/2)^9*sin(a/2)^23*y+5045040*ax^2*ay^11*az^12*cos(a/2)^7*sin(a/2)^25*y+2162160*ax^2*ay^11*az^14*cos(a/2)^5*sin(a/2)^27*y+540540*ax^2*ay^11*az^16*cos(a/2)^3*sin(a/2)^29*y+60060*ax^2*ay^11*az^18*cos(a/2)*sin(a/2)^31*y+90090*ax^2*ay^12*az*cos(a/2)^17*sin(a/2)^15*z+720720*ax^2*ay^12*az^3*cos(a/2)^15*sin(a/2)^17*z+2522520*ax^2*ay^12*az^5*cos(a/2)^13*sin(a/2)^19*z+5045040*ax^2*ay^12*az^7*cos(a/2)^11*sin(a/2)^21*z+6306300*ax^2*ay^12*az^9*cos(a/2)^9*sin(a/2)^23*z+5045040*ax^2*ay^12*az^11*cos(a/2)^7*sin(a/2)^25*z+2522520*ax^2*ay^12*az^13*cos(a/2)^5*sin(a/2)^27*z+720720*ax^2*ay^12*az^15*cos(a/2)^3*sin(a/2)^29*z+90090*ax^2*ay^12*az^17*cos(a/2)*sin(a/2)^31*z+720720*ax^2*ay^13*az^2*cos(a/2)^15*sin(a/2)^17*y+2522520*ax^2*ay^13*az^4*cos(a/2)^13*sin(a/2)^19*y+5045040*ax^2*ay^13*az^6*cos(a/2)^11*sin(a/2)^21*y+6306300*ax^2*ay^13*az^8*cos(a/2)^9*sin(a/2)^23*y+5045040*ax^2*ay^13*az^10*cos(a/2)^7*sin(a/2)^25*y+2522520*ax^2*ay^13*az^12*cos(a/2)^5*sin(a/2)^27*y+720720*ax^2*ay^13*az^14*cos(a/2)^3*sin(a/2)^29*y+90090*ax^2*ay^13*az^16*cos(a/2)*sin(a/2)^31*y+102960*ax^2*ay^14*az*cos(a/2)^15*sin(a/2)^17*z+720720*ax^2*ay^14*az^3*cos(a/2)^13*sin(a/2)^19*z+2162160*ax^2*ay^14*az^5*cos(a/2)^11*sin(a/2)^21*z+3603600*ax^2*ay^14*az^7*cos(a/2)^9*sin(a/2)^23*z+3603600*ax^2*ay^14*az^9*cos(a/2)^7*sin(a/2)^25*z+2162160*ax^2*ay^14*az^11*cos(a/2)^5*sin(a/2)^27*z+720720*ax^2*ay^14*az^13*cos(a/2)^3*sin(a/2)^29*z+102960*ax^2*ay^14*az^15*cos(a/2)*sin(a/2)^31*z+720720*ax^2*ay^15*az^2*cos(a/2)^13*sin(a/2)^19*y+2162160*ax^2*ay^15*az^4*cos(a/2)^11*sin(a/2)^21*y+3603600*ax^2*ay^15*az^6*cos(a/2)^9*sin(a/2)^23*y+3603600*ax^2*ay^15*az^8*cos(a/2)^7*sin(a/2)^25*y+2162160*ax^2*ay^15*az^10*cos(a/2)^5*sin(a/2)^27*y+720720*ax^2*ay^15*az^12*cos(a/2)^3*sin(a/2)^29*y+102960*ax^2*ay^15*az^14*cos(a/2)*sin(a/2)^31*y+90090*ax^2*ay^16*az*cos(a/2)^13*sin(a/2)^19*z+540540*ax^2*ay^16*az^3*cos(a/2)^11*sin(a/2)^21*z+1351350*ax^2*ay^16*az^5*cos(a/2)^9*sin(a/2)^23*z+1801800*ax^2*ay^16*az^7*cos(a/2)^7*sin(a/2)^25*z+1351350*ax^2*ay^16*az^9*cos(a/2)^5*sin(a/2)^27*z+540540*ax^2*ay^16*az^11*cos(a/2)^3*sin(a/2)^29*z+90090*ax^2*ay^16*az^13*cos(a/2)*sin(a/2)^31*z+540540*ax^2*ay^17*az^2*cos(a/2)^11*sin(a/2)^21*y+1351350*ax^2*ay^17*az^4*cos(a/2)^9*sin(a/2)^23*y+1801800*ax^2*ay^17*az^6*cos(a/2)^7*sin(a/2)^25*y+1351350*ax^2*ay^17*az^8*cos(a/2)^5*sin(a/2)^27*y+540540*ax^2*ay^17*az^10*cos(a/2)^3*sin(a/2)^29*y+90090*ax^2*ay^17*az^12*cos(a/2)*sin(a/2)^31*y+60060*ax^2*ay^18*az*cos(a/2)^11*sin(a/2)^21*z+300300*ax^2*ay^18*az^3*cos(a/2)^9*sin(a/2)^23*z+600600*ax^2*ay^18*az^5*cos(a/2)^7*sin(a/2)^25*z+600600*ax^2*ay^18*az^7*cos(a/2)^5*sin(a/2)^27*z+300300*ax^2*ay^18*az^9*cos(a/2)^3*sin(a/2)^29*z+60060*ax^2*ay^18*az^11*cos(a/2)*sin(a/2)^31*z+300300*ax^2*ay^19*az^2*cos(a/2)^9*sin(a/2)^23*y+600600*ax^2*ay^19*az^4*cos(a/2)^7*sin(a/2)^25*y+600600*ax^2*ay^19*az^6*cos(a/2)^5*sin(a/2)^27*y+300300*ax^2*ay^19*az^8*cos(a/2)^3*sin(a/2)^29*y+60060*ax^2*ay^19*az^10*cos(a/2)*sin(a/2)^31*y+30030*ax^2*ay^20*az*cos(a/2)^9*sin(a/2)^23*z+120120*ax^2*ay^20*az^3*cos(a/2)^7*sin(a/2)^25*z+180180*ax^2*ay^20*az^5*cos(a/2)^5*sin(a/2)^27*z+120120*ax^2*ay^20*az^7*cos(a/2)^3*sin(a/2)^29*z+30030*ax^2*ay^20*az^9*cos(a/2)*sin(a/2)^31*z+120120*ax^2*ay^21*az^2*cos(a/2)^7*sin(a/2)^25*y+180180*ax^2*ay^21*az^4*cos(a/2)^5*sin(a/2)^27*y+120120*ax^2*ay^21*az^6*cos(a/2)^3*sin(a/2)^29*y+30030*ax^2*ay^21*az^8*cos(a/2)*sin(a/2)^31*y+10920*ax^2*ay^22*az*cos(a/2)^7*sin(a/2)^25*z+32760*ax^2*ay^22*az^3*cos(a/2)^5*sin(a/2)^27*z+32760*ax^2*ay^22*az^5*cos(a/2)^3*sin(a/2)^29*z+10920*ax^2*ay^22*az^7*cos(a/2)*sin(a/2)^31*z+32760*ax^2*ay^23*az^2*cos(a/2)^5*sin(a/2)^27*y+32760*ax^2*ay^23*az^4*cos(a/2)^3*sin(a/2)^29*y+10920*ax^2*ay^23*az^6*cos(a/2)*sin(a/2)^31*y+2730*ax^2*ay^24*az*cos(a/2)^5*sin(a/2)^27*z+5460*ax^2*ay^24*az^3*cos(a/2)^3*sin(a/2)^29*z+2730*ax^2*ay^24*az^5*cos(a/2)*sin(a/2)^31*z+5460*ax^2*ay^25*az^2*cos(a/2)^3*sin(a/2)^29*y+2730*ax^2*ay^25*az^4*cos(a/2)*sin(a/2)^31*y+420*ax^2*ay^26*az*cos(a/2)^3*sin(a/2)^29*z+420*ax^2*ay^26*az^3*cos(a/2)*sin(a/2)^31*z+420*ax^2*ay^27*az^2*cos(a/2)*sin(a/2)^31*y+30*ax^2*ay^28*az*cos(a/2)*sin(a/2)^31*z+5460*ax^3*ay^2*az^2*cos(a/2)^25*sin(a/2)^7*x+32760*ax^3*ay^2*az^4*cos(a/2)^23*sin(a/2)^9*x+120120*ax^3*ay^2*az^6*cos(a/2)^21*sin(a/2)^11*x+300300*ax^3*ay^2*az^8*cos(a/2)^19*sin(a/2)^13*x+540540*ax^3*ay^2*az^10*cos(a/2)^17*sin(a/2)^15*x+720720*ax^3*ay^2*az^12*cos(a/2)^15*sin(a/2)^17*x+720720*ax^3*ay^2*az^14*cos(a/2)^13*sin(a/2)^19*x+540540*ax^3*ay^2*az^16*cos(a/2)^11*sin(a/2)^21*x+300300*ax^3*ay^2*az^18*cos(a/2)^9*sin(a/2)^23*x+120120*ax^3*ay^2*az^20*cos(a/2)^7*sin(a/2)^25*x+32760*ax^3*ay^2*az^22*cos(a/2)^5*sin(a/2)^27*x+5460*ax^3*ay^2*az^24*cos(a/2)^3*sin(a/2)^29*x+420*ax^3*ay^2*az^26*cos(a/2)*sin(a/2)^31*x+32760*ax^3*ay^4*az^2*cos(a/2)^23*sin(a/2)^9*x+180180*ax^3*ay^4*az^4*cos(a/2)^21*sin(a/2)^11*x+600600*ax^3*ay^4*az^6*cos(a/2)^19*sin(a/2)^13*x+1351350*ax^3*ay^4*az^8*cos(a/2)^17*sin(a/2)^15*x+2162160*ax^3*ay^4*az^10*cos(a/2)^15*sin(a/2)^17*x+2522520*ax^3*ay^4*az^12*cos(a/2)^13*sin(a/2)^19*x+2162160*ax^3*ay^4*az^14*cos(a/2)^11*sin(a/2)^21*x+1351350*ax^3*ay^4*az^16*cos(a/2)^9*sin(a/2)^23*x+600600*ax^3*ay^4*az^18*cos(a/2)^7*sin(a/2)^25*x+180180*ax^3*ay^4*az^20*cos(a/2)^5*sin(a/2)^27*x+32760*ax^3*ay^4*az^22*cos(a/2)^3*sin(a/2)^29*x+2730*ax^3*ay^4*az^24*cos(a/2)*sin(a/2)^31*x+120120*ax^3*ay^6*az^2*cos(a/2)^21*sin(a/2)^11*x+600600*ax^3*ay^6*az^4*cos(a/2)^19*sin(a/2)^13*x+1801800*ax^3*ay^6*az^6*cos(a/2)^17*sin(a/2)^15*x+3603600*ax^3*ay^6*az^8*cos(a/2)^15*sin(a/2)^17*x+5045040*ax^3*ay^6*az^10*cos(a/2)^13*sin(a/2)^19*x+5045040*ax^3*ay^6*az^12*cos(a/2)^11*sin(a/2)^21*x+3603600*ax^3*ay^6*az^14*cos(a/2)^9*sin(a/2)^23*x+1801800*ax^3*ay^6*az^16*cos(a/2)^7*sin(a/2)^25*x+600600*ax^3*ay^6*az^18*cos(a/2)^5*sin(a/2)^27*x+120120*ax^3*ay^6*az^20*cos(a/2)^3*sin(a/2)^29*x+10920*ax^3*ay^6*az^22*cos(a/2)*sin(a/2)^31*x+300300*ax^3*ay^8*az^2*cos(a/2)^19*sin(a/2)^13*x+1351350*ax^3*ay^8*az^4*cos(a/2)^17*sin(a/2)^15*x+3603600*ax^3*ay^8*az^6*cos(a/2)^15*sin(a/2)^17*x+6306300*ax^3*ay^8*az^8*cos(a/2)^13*sin(a/2)^19*x+7567560*ax^3*ay^8*az^10*cos(a/2)^11*sin(a/2)^21*x+6306300*ax^3*ay^8*az^12*cos(a/2)^9*sin(a/2)^23*x+3603600*ax^3*ay^8*az^14*cos(a/2)^7*sin(a/2)^25*x+1351350*ax^3*ay^8*az^16*cos(a/2)^5*sin(a/2)^27*x+300300*ax^3*ay^8*az^18*cos(a/2)^3*sin(a/2)^29*x+30030*ax^3*ay^8*az^20*cos(a/2)*sin(a/2)^31*x+540540*ax^3*ay^10*az^2*cos(a/2)^17*sin(a/2)^15*x+2162160*ax^3*ay^10*az^4*cos(a/2)^15*sin(a/2)^17*x+5045040*ax^3*ay^10*az^6*cos(a/2)^13*sin(a/2)^19*x+7567560*ax^3*ay^10*az^8*cos(a/2)^11*sin(a/2)^21*x+7567560*ax^3*ay^10*az^10*cos(a/2)^9*sin(a/2)^23*x+5045040*ax^3*ay^10*az^12*cos(a/2)^7*sin(a/2)^25*x+2162160*ax^3*ay^10*az^14*cos(a/2)^5*sin(a/2)^27*x+540540*ax^3*ay^10*az^16*cos(a/2)^3*sin(a/2)^29*x+60060*ax^3*ay^10*az^18*cos(a/2)*sin(a/2)^31*x+720720*ax^3*ay^12*az^2*cos(a/2)^15*sin(a/2)^17*x+2522520*ax^3*ay^12*az^4*cos(a/2)^13*sin(a/2)^19*x+5045040*ax^3*ay^12*az^6*cos(a/2)^11*sin(a/2)^21*x+6306300*ax^3*ay^12*az^8*cos(a/2)^9*sin(a/2)^23*x+5045040*ax^3*ay^12*az^10*cos(a/2)^7*sin(a/2)^25*x+2522520*ax^3*ay^12*az^12*cos(a/2)^5*sin(a/2)^27*x+720720*ax^3*ay^12*az^14*cos(a/2)^3*sin(a/2)^29*x+90090*ax^3*ay^12*az^16*cos(a/2)*sin(a/2)^31*x+720720*ax^3*ay^14*az^2*cos(a/2)^13*sin(a/2)^19*x+2162160*ax^3*ay^14*az^4*cos(a/2)^11*sin(a/2)^21*x+3603600*ax^3*ay^14*az^6*cos(a/2)^9*sin(a/2)^23*x+3603600*ax^3*ay^14*az^8*cos(a/2)^7*sin(a/2)^25*x+2162160*ax^3*ay^14*az^10*cos(a/2)^5*sin(a/2)^27*x+720720*ax^3*ay^14*az^12*cos(a/2)^3*sin(a/2)^29*x+102960*ax^3*ay^14*az^14*cos(a/2)*sin(a/2)^31*x+540540*ax^3*ay^16*az^2*cos(a/2)^11*sin(a/2)^21*x+1351350*ax^3*ay^16*az^4*cos(a/2)^9*sin(a/2)^23*x+1801800*ax^3*ay^16*az^6*cos(a/2)^7*sin(a/2)^25*x+1351350*ax^3*ay^16*az^8*cos(a/2)^5*sin(a/2)^27*x+540540*ax^3*ay^16*az^10*cos(a/2)^3*sin(a/2)^29*x+90090*ax^3*ay^16*az^12*cos(a/2)*sin(a/2)^31*x+300300*ax^3*ay^18*az^2*cos(a/2)^9*sin(a/2)^23*x+600600*ax^3*ay^18*az^4*cos(a/2)^7*sin(a/2)^25*x+600600*ax^3*ay^18*az^6*cos(a/2)^5*sin(a/2)^27*x+300300*ax^3*ay^18*az^8*cos(a/2)^3*sin(a/2)^29*x+60060*ax^3*ay^18*az^10*cos(a/2)*sin(a/2)^31*x+120120*ax^3*ay^20*az^2*cos(a/2)^7*sin(a/2)^25*x+180180*ax^3*ay^20*az^4*cos(a/2)^5*sin(a/2)^27*x+120120*ax^3*ay^20*az^6*cos(a/2)^3*sin(a/2)^29*x+30030*ax^3*ay^20*az^8*cos(a/2)*sin(a/2)^31*x+32760*ax^3*ay^22*az^2*cos(a/2)^5*sin(a/2)^27*x+32760*ax^3*ay^22*az^4*cos(a/2)^3*sin(a/2)^29*x+10920*ax^3*ay^22*az^6*cos(a/2)*sin(a/2)^31*x+5460*ax^3*ay^24*az^2*cos(a/2)^3*sin(a/2)^29*x+2730*ax^3*ay^24*az^4*cos(a/2)*sin(a/2)^31*x+420*ax^3*ay^26*az^2*cos(a/2)*sin(a/2)^31*x+2730*ax^4*ay*az^2*cos(a/2)^25*sin(a/2)^7*y+16380*ax^4*ay*az^4*cos(a/2)^23*sin(a/2)^9*y+60060*ax^4*ay*az^6*cos(a/2)^21*sin(a/2)^11*y+150150*ax^4*ay*az^8*cos(a/2)^19*sin(a/2)^13*y+270270*ax^4*ay*az^10*cos(a/2)^17*sin(a/2)^15*y+360360*ax^4*ay*az^12*cos(a/2)^15*sin(a/2)^17*y+360360*ax^4*ay*az^14*cos(a/2)^13*sin(a/2)^19*y+270270*ax^4*ay*az^16*cos(a/2)^11*sin(a/2)^21*y+150150*ax^4*ay*az^18*cos(a/2)^9*sin(a/2)^23*y+60060*ax^4*ay*az^20*cos(a/2)^7*sin(a/2)^25*y+16380*ax^4*ay*az^22*cos(a/2)^5*sin(a/2)^27*y+2730*ax^4*ay*az^24*cos(a/2)^3*sin(a/2)^29*y+210*ax^4*ay*az^26*cos(a/2)*sin(a/2)^31*y+2730*ax^4*ay^2*az*cos(a/2)^25*sin(a/2)^7*z+32760*ax^4*ay^2*az^3*cos(a/2)^23*sin(a/2)^9*z+180180*ax^4*ay^2*az^5*cos(a/2)^21*sin(a/2)^11*z+600600*ax^4*ay^2*az^7*cos(a/2)^19*sin(a/2)^13*z+1351350*ax^4*ay^2*az^9*cos(a/2)^17*sin(a/2)^15*z+2162160*ax^4*ay^2*az^11*cos(a/2)^15*sin(a/2)^17*z+2522520*ax^4*ay^2*az^13*cos(a/2)^13*sin(a/2)^19*z+2162160*ax^4*ay^2*az^15*cos(a/2)^11*sin(a/2)^21*z+1351350*ax^4*ay^2*az^17*cos(a/2)^9*sin(a/2)^23*z+600600*ax^4*ay^2*az^19*cos(a/2)^7*sin(a/2)^25*z+180180*ax^4*ay^2*az^21*cos(a/2)^5*sin(a/2)^27*z+32760*ax^4*ay^2*az^23*cos(a/2)^3*sin(a/2)^29*z+2730*ax^4*ay^2*az^25*cos(a/2)*sin(a/2)^31*z+32760*ax^4*ay^3*az^2*cos(a/2)^23*sin(a/2)^9*y+180180*ax^4*ay^3*az^4*cos(a/2)^21*sin(a/2)^11*y+600600*ax^4*ay^3*az^6*cos(a/2)^19*sin(a/2)^13*y+1351350*ax^4*ay^3*az^8*cos(a/2)^17*sin(a/2)^15*y+2162160*ax^4*ay^3*az^10*cos(a/2)^15*sin(a/2)^17*y+2522520*ax^4*ay^3*az^12*cos(a/2)^13*sin(a/2)^19*y+2162160*ax^4*ay^3*az^14*cos(a/2)^11*sin(a/2)^21*y+1351350*ax^4*ay^3*az^16*cos(a/2)^9*sin(a/2)^23*y+600600*ax^4*ay^3*az^18*cos(a/2)^7*sin(a/2)^25*y+180180*ax^4*ay^3*az^20*cos(a/2)^5*sin(a/2)^27*y+32760*ax^4*ay^3*az^22*cos(a/2)^3*sin(a/2)^29*y+2730*ax^4*ay^3*az^24*cos(a/2)*sin(a/2)^31*y+16380*ax^4*ay^4*az*cos(a/2)^23*sin(a/2)^9*z+180180*ax^4*ay^4*az^3*cos(a/2)^21*sin(a/2)^11*z+900900*ax^4*ay^4*az^5*cos(a/2)^19*sin(a/2)^13*z+2702700*ax^4*ay^4*az^7*cos(a/2)^17*sin(a/2)^15*z+5405400*ax^4*ay^4*az^9*cos(a/2)^15*sin(a/2)^17*z+7567560*ax^4*ay^4*az^11*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^4*ay^4*az^13*cos(a/2)^11*sin(a/2)^21*z+5405400*ax^4*ay^4*az^15*cos(a/2)^9*sin(a/2)^23*z+2702700*ax^4*ay^4*az^17*cos(a/2)^7*sin(a/2)^25*z+900900*ax^4*ay^4*az^19*cos(a/2)^5*sin(a/2)^27*z+180180*ax^4*ay^4*az^21*cos(a/2)^3*sin(a/2)^29*z+16380*ax^4*ay^4*az^23*cos(a/2)*sin(a/2)^31*z+180180*ax^4*ay^5*az^2*cos(a/2)^21*sin(a/2)^11*y+900900*ax^4*ay^5*az^4*cos(a/2)^19*sin(a/2)^13*y+2702700*ax^4*ay^5*az^6*cos(a/2)^17*sin(a/2)^15*y+5405400*ax^4*ay^5*az^8*cos(a/2)^15*sin(a/2)^17*y+7567560*ax^4*ay^5*az^10*cos(a/2)^13*sin(a/2)^19*y+7567560*ax^4*ay^5*az^12*cos(a/2)^11*sin(a/2)^21*y+5405400*ax^4*ay^5*az^14*cos(a/2)^9*sin(a/2)^23*y+2702700*ax^4*ay^5*az^16*cos(a/2)^7*sin(a/2)^25*y+900900*ax^4*ay^5*az^18*cos(a/2)^5*sin(a/2)^27*y+180180*ax^4*ay^5*az^20*cos(a/2)^3*sin(a/2)^29*y+16380*ax^4*ay^5*az^22*cos(a/2)*sin(a/2)^31*y+60060*ax^4*ay^6*az*cos(a/2)^21*sin(a/2)^11*z+600600*ax^4*ay^6*az^3*cos(a/2)^19*sin(a/2)^13*z+2702700*ax^4*ay^6*az^5*cos(a/2)^17*sin(a/2)^15*z+7207200*ax^4*ay^6*az^7*cos(a/2)^15*sin(a/2)^17*z+12612600*ax^4*ay^6*az^9*cos(a/2)^13*sin(a/2)^19*z+15135120*ax^4*ay^6*az^11*cos(a/2)^11*sin(a/2)^21*z+12612600*ax^4*ay^6*az^13*cos(a/2)^9*sin(a/2)^23*z+7207200*ax^4*ay^6*az^15*cos(a/2)^7*sin(a/2)^25*z+2702700*ax^4*ay^6*az^17*cos(a/2)^5*sin(a/2)^27*z+600600*ax^4*ay^6*az^19*cos(a/2)^3*sin(a/2)^29*z+60060*ax^4*ay^6*az^21*cos(a/2)*sin(a/2)^31*z+600600*ax^4*ay^7*az^2*cos(a/2)^19*sin(a/2)^13*y+2702700*ax^4*ay^7*az^4*cos(a/2)^17*sin(a/2)^15*y+7207200*ax^4*ay^7*az^6*cos(a/2)^15*sin(a/2)^17*y+12612600*ax^4*ay^7*az^8*cos(a/2)^13*sin(a/2)^19*y+15135120*ax^4*ay^7*az^10*cos(a/2)^11*sin(a/2)^21*y+12612600*ax^4*ay^7*az^12*cos(a/2)^9*sin(a/2)^23*y+7207200*ax^4*ay^7*az^14*cos(a/2)^7*sin(a/2)^25*y+2702700*ax^4*ay^7*az^16*cos(a/2)^5*sin(a/2)^27*y+600600*ax^4*ay^7*az^18*cos(a/2)^3*sin(a/2)^29*y+60060*ax^4*ay^7*az^20*cos(a/2)*sin(a/2)^31*y+150150*ax^4*ay^8*az*cos(a/2)^19*sin(a/2)^13*z+1351350*ax^4*ay^8*az^3*cos(a/2)^17*sin(a/2)^15*z+5405400*ax^4*ay^8*az^5*cos(a/2)^15*sin(a/2)^17*z+12612600*ax^4*ay^8*az^7*cos(a/2)^13*sin(a/2)^19*z+18918900*ax^4*ay^8*az^9*cos(a/2)^11*sin(a/2)^21*z+18918900*ax^4*ay^8*az^11*cos(a/2)^9*sin(a/2)^23*z+12612600*ax^4*ay^8*az^13*cos(a/2)^7*sin(a/2)^25*z+5405400*ax^4*ay^8*az^15*cos(a/2)^5*sin(a/2)^27*z+1351350*ax^4*ay^8*az^17*cos(a/2)^3*sin(a/2)^29*z+150150*ax^4*ay^8*az^19*cos(a/2)*sin(a/2)^31*z+1351350*ax^4*ay^9*az^2*cos(a/2)^17*sin(a/2)^15*y+5405400*ax^4*ay^9*az^4*cos(a/2)^15*sin(a/2)^17*y+12612600*ax^4*ay^9*az^6*cos(a/2)^13*sin(a/2)^19*y+18918900*ax^4*ay^9*az^8*cos(a/2)^11*sin(a/2)^21*y+18918900*ax^4*ay^9*az^10*cos(a/2)^9*sin(a/2)^23*y+12612600*ax^4*ay^9*az^12*cos(a/2)^7*sin(a/2)^25*y+5405400*ax^4*ay^9*az^14*cos(a/2)^5*sin(a/2)^27*y+1351350*ax^4*ay^9*az^16*cos(a/2)^3*sin(a/2)^29*y+150150*ax^4*ay^9*az^18*cos(a/2)*sin(a/2)^31*y+270270*ax^4*ay^10*az*cos(a/2)^17*sin(a/2)^15*z+2162160*ax^4*ay^10*az^3*cos(a/2)^15*sin(a/2)^17*z+7567560*ax^4*ay^10*az^5*cos(a/2)^13*sin(a/2)^19*z+15135120*ax^4*ay^10*az^7*cos(a/2)^11*sin(a/2)^21*z+18918900*ax^4*ay^10*az^9*cos(a/2)^9*sin(a/2)^23*z+15135120*ax^4*ay^10*az^11*cos(a/2)^7*sin(a/2)^25*z+7567560*ax^4*ay^10*az^13*cos(a/2)^5*sin(a/2)^27*z+2162160*ax^4*ay^10*az^15*cos(a/2)^3*sin(a/2)^29*z+270270*ax^4*ay^10*az^17*cos(a/2)*sin(a/2)^31*z+2162160*ax^4*ay^11*az^2*cos(a/2)^15*sin(a/2)^17*y+7567560*ax^4*ay^11*az^4*cos(a/2)^13*sin(a/2)^19*y+15135120*ax^4*ay^11*az^6*cos(a/2)^11*sin(a/2)^21*y+18918900*ax^4*ay^11*az^8*cos(a/2)^9*sin(a/2)^23*y+15135120*ax^4*ay^11*az^10*cos(a/2)^7*sin(a/2)^25*y+7567560*ax^4*ay^11*az^12*cos(a/2)^5*sin(a/2)^27*y+2162160*ax^4*ay^11*az^14*cos(a/2)^3*sin(a/2)^29*y+270270*ax^4*ay^11*az^16*cos(a/2)*sin(a/2)^31*y+360360*ax^4*ay^12*az*cos(a/2)^15*sin(a/2)^17*z+2522520*ax^4*ay^12*az^3*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^4*ay^12*az^5*cos(a/2)^11*sin(a/2)^21*z+12612600*ax^4*ay^12*az^7*cos(a/2)^9*sin(a/2)^23*z+12612600*ax^4*ay^12*az^9*cos(a/2)^7*sin(a/2)^25*z+7567560*ax^4*ay^12*az^11*cos(a/2)^5*sin(a/2)^27*z+2522520*ax^4*ay^12*az^13*cos(a/2)^3*sin(a/2)^29*z+360360*ax^4*ay^12*az^15*cos(a/2)*sin(a/2)^31*z+2522520*ax^4*ay^13*az^2*cos(a/2)^13*sin(a/2)^19*y+7567560*ax^4*ay^13*az^4*cos(a/2)^11*sin(a/2)^21*y+12612600*ax^4*ay^13*az^6*cos(a/2)^9*sin(a/2)^23*y+12612600*ax^4*ay^13*az^8*cos(a/2)^7*sin(a/2)^25*y+7567560*ax^4*ay^13*az^10*cos(a/2)^5*sin(a/2)^27*y+2522520*ax^4*ay^13*az^12*cos(a/2)^3*sin(a/2)^29*y+360360*ax^4*ay^13*az^14*cos(a/2)*sin(a/2)^31*y+360360*ax^4*ay^14*az*cos(a/2)^13*sin(a/2)^19*z+2162160*ax^4*ay^14*az^3*cos(a/2)^11*sin(a/2)^21*z+5405400*ax^4*ay^14*az^5*cos(a/2)^9*sin(a/2)^23*z+7207200*ax^4*ay^14*az^7*cos(a/2)^7*sin(a/2)^25*z+5405400*ax^4*ay^14*az^9*cos(a/2)^5*sin(a/2)^27*z+2162160*ax^4*ay^14*az^11*cos(a/2)^3*sin(a/2)^29*z+360360*ax^4*ay^14*az^13*cos(a/2)*sin(a/2)^31*z+2162160*ax^4*ay^15*az^2*cos(a/2)^11*sin(a/2)^21*y+5405400*ax^4*ay^15*az^4*cos(a/2)^9*sin(a/2)^23*y+7207200*ax^4*ay^15*az^6*cos(a/2)^7*sin(a/2)^25*y+5405400*ax^4*ay^15*az^8*cos(a/2)^5*sin(a/2)^27*y+2162160*ax^4*ay^15*az^10*cos(a/2)^3*sin(a/2)^29*y+360360*ax^4*ay^15*az^12*cos(a/2)*sin(a/2)^31*y+270270*ax^4*ay^16*az*cos(a/2)^11*sin(a/2)^21*z+1351350*ax^4*ay^16*az^3*cos(a/2)^9*sin(a/2)^23*z+2702700*ax^4*ay^16*az^5*cos(a/2)^7*sin(a/2)^25*z+2702700*ax^4*ay^16*az^7*cos(a/2)^5*sin(a/2)^27*z+1351350*ax^4*ay^16*az^9*cos(a/2)^3*sin(a/2)^29*z+270270*ax^4*ay^16*az^11*cos(a/2)*sin(a/2)^31*z+1351350*ax^4*ay^17*az^2*cos(a/2)^9*sin(a/2)^23*y+2702700*ax^4*ay^17*az^4*cos(a/2)^7*sin(a/2)^25*y+2702700*ax^4*ay^17*az^6*cos(a/2)^5*sin(a/2)^27*y+1351350*ax^4*ay^17*az^8*cos(a/2)^3*sin(a/2)^29*y+270270*ax^4*ay^17*az^10*cos(a/2)*sin(a/2)^31*y+150150*ax^4*ay^18*az*cos(a/2)^9*sin(a/2)^23*z+600600*ax^4*ay^18*az^3*cos(a/2)^7*sin(a/2)^25*z+900900*ax^4*ay^18*az^5*cos(a/2)^5*sin(a/2)^27*z+600600*ax^4*ay^18*az^7*cos(a/2)^3*sin(a/2)^29*z+150150*ax^4*ay^18*az^9*cos(a/2)*sin(a/2)^31*z+600600*ax^4*ay^19*az^2*cos(a/2)^7*sin(a/2)^25*y+900900*ax^4*ay^19*az^4*cos(a/2)^5*sin(a/2)^27*y+600600*ax^4*ay^19*az^6*cos(a/2)^3*sin(a/2)^29*y+150150*ax^4*ay^19*az^8*cos(a/2)*sin(a/2)^31*y+60060*ax^4*ay^20*az*cos(a/2)^7*sin(a/2)^25*z+180180*ax^4*ay^20*az^3*cos(a/2)^5*sin(a/2)^27*z+180180*ax^4*ay^20*az^5*cos(a/2)^3*sin(a/2)^29*z+60060*ax^4*ay^20*az^7*cos(a/2)*sin(a/2)^31*z+180180*ax^4*ay^21*az^2*cos(a/2)^5*sin(a/2)^27*y+180180*ax^4*ay^21*az^4*cos(a/2)^3*sin(a/2)^29*y+60060*ax^4*ay^21*az^6*cos(a/2)*sin(a/2)^31*y+16380*ax^4*ay^22*az*cos(a/2)^5*sin(a/2)^27*z+32760*ax^4*ay^22*az^3*cos(a/2)^3*sin(a/2)^29*z+16380*ax^4*ay^22*az^5*cos(a/2)*sin(a/2)^31*z+32760*ax^4*ay^23*az^2*cos(a/2)^3*sin(a/2)^29*y+16380*ax^4*ay^23*az^4*cos(a/2)*sin(a/2)^31*y+2730*ax^4*ay^24*az*cos(a/2)^3*sin(a/2)^29*z+2730*ax^4*ay^24*az^3*cos(a/2)*sin(a/2)^31*z+2730*ax^4*ay^25*az^2*cos(a/2)*sin(a/2)^31*y+210*ax^4*ay^26*az*cos(a/2)*sin(a/2)^31*z+32760*ax^5*ay^2*az^2*cos(a/2)^23*sin(a/2)^9*x+180180*ax^5*ay^2*az^4*cos(a/2)^21*sin(a/2)^11*x+600600*ax^5*ay^2*az^6*cos(a/2)^19*sin(a/2)^13*x+1351350*ax^5*ay^2*az^8*cos(a/2)^17*sin(a/2)^15*x+2162160*ax^5*ay^2*az^10*cos(a/2)^15*sin(a/2)^17*x+2522520*ax^5*ay^2*az^12*cos(a/2)^13*sin(a/2)^19*x+2162160*ax^5*ay^2*az^14*cos(a/2)^11*sin(a/2)^21*x+1351350*ax^5*ay^2*az^16*cos(a/2)^9*sin(a/2)^23*x+600600*ax^5*ay^2*az^18*cos(a/2)^7*sin(a/2)^25*x+180180*ax^5*ay^2*az^20*cos(a/2)^5*sin(a/2)^27*x+32760*ax^5*ay^2*az^22*cos(a/2)^3*sin(a/2)^29*x+2730*ax^5*ay^2*az^24*cos(a/2)*sin(a/2)^31*x+180180*ax^5*ay^4*az^2*cos(a/2)^21*sin(a/2)^11*x+900900*ax^5*ay^4*az^4*cos(a/2)^19*sin(a/2)^13*x+2702700*ax^5*ay^4*az^6*cos(a/2)^17*sin(a/2)^15*x+5405400*ax^5*ay^4*az^8*cos(a/2)^15*sin(a/2)^17*x+7567560*ax^5*ay^4*az^10*cos(a/2)^13*sin(a/2)^19*x+7567560*ax^5*ay^4*az^12*cos(a/2)^11*sin(a/2)^21*x+5405400*ax^5*ay^4*az^14*cos(a/2)^9*sin(a/2)^23*x+2702700*ax^5*ay^4*az^16*cos(a/2)^7*sin(a/2)^25*x+900900*ax^5*ay^4*az^18*cos(a/2)^5*sin(a/2)^27*x+180180*ax^5*ay^4*az^20*cos(a/2)^3*sin(a/2)^29*x+16380*ax^5*ay^4*az^22*cos(a/2)*sin(a/2)^31*x+600600*ax^5*ay^6*az^2*cos(a/2)^19*sin(a/2)^13*x+2702700*ax^5*ay^6*az^4*cos(a/2)^17*sin(a/2)^15*x+7207200*ax^5*ay^6*az^6*cos(a/2)^15*sin(a/2)^17*x+12612600*ax^5*ay^6*az^8*cos(a/2)^13*sin(a/2)^19*x+15135120*ax^5*ay^6*az^10*cos(a/2)^11*sin(a/2)^21*x+12612600*ax^5*ay^6*az^12*cos(a/2)^9*sin(a/2)^23*x+7207200*ax^5*ay^6*az^14*cos(a/2)^7*sin(a/2)^25*x+2702700*ax^5*ay^6*az^16*cos(a/2)^5*sin(a/2)^27*x+600600*ax^5*ay^6*az^18*cos(a/2)^3*sin(a/2)^29*x+60060*ax^5*ay^6*az^20*cos(a/2)*sin(a/2)^31*x+1351350*ax^5*ay^8*az^2*cos(a/2)^17*sin(a/2)^15*x+5405400*ax^5*ay^8*az^4*cos(a/2)^15*sin(a/2)^17*x+12612600*ax^5*ay^8*az^6*cos(a/2)^13*sin(a/2)^19*x+18918900*ax^5*ay^8*az^8*cos(a/2)^11*sin(a/2)^21*x+18918900*ax^5*ay^8*az^10*cos(a/2)^9*sin(a/2)^23*x+12612600*ax^5*ay^8*az^12*cos(a/2)^7*sin(a/2)^25*x+5405400*ax^5*ay^8*az^14*cos(a/2)^5*sin(a/2)^27*x+1351350*ax^5*ay^8*az^16*cos(a/2)^3*sin(a/2)^29*x+150150*ax^5*ay^8*az^18*cos(a/2)*sin(a/2)^31*x+2162160*ax^5*ay^10*az^2*cos(a/2)^15*sin(a/2)^17*x+7567560*ax^5*ay^10*az^4*cos(a/2)^13*sin(a/2)^19*x+15135120*ax^5*ay^10*az^6*cos(a/2)^11*sin(a/2)^21*x+18918900*ax^5*ay^10*az^8*cos(a/2)^9*sin(a/2)^23*x+15135120*ax^5*ay^10*az^10*cos(a/2)^7*sin(a/2)^25*x+7567560*ax^5*ay^10*az^12*cos(a/2)^5*sin(a/2)^27*x+2162160*ax^5*ay^10*az^14*cos(a/2)^3*sin(a/2)^29*x+270270*ax^5*ay^10*az^16*cos(a/2)*sin(a/2)^31*x+2522520*ax^5*ay^12*az^2*cos(a/2)^13*sin(a/2)^19*x+7567560*ax^5*ay^12*az^4*cos(a/2)^11*sin(a/2)^21*x+12612600*ax^5*ay^12*az^6*cos(a/2)^9*sin(a/2)^23*x+12612600*ax^5*ay^12*az^8*cos(a/2)^7*sin(a/2)^25*x+7567560*ax^5*ay^12*az^10*cos(a/2)^5*sin(a/2)^27*x+2522520*ax^5*ay^12*az^12*cos(a/2)^3*sin(a/2)^29*x+360360*ax^5*ay^12*az^14*cos(a/2)*sin(a/2)^31*x+2162160*ax^5*ay^14*az^2*cos(a/2)^11*sin(a/2)^21*x+5405400*ax^5*ay^14*az^4*cos(a/2)^9*sin(a/2)^23*x+7207200*ax^5*ay^14*az^6*cos(a/2)^7*sin(a/2)^25*x+5405400*ax^5*ay^14*az^8*cos(a/2)^5*sin(a/2)^27*x+2162160*ax^5*ay^14*az^10*cos(a/2)^3*sin(a/2)^29*x+360360*ax^5*ay^14*az^12*cos(a/2)*sin(a/2)^31*x+1351350*ax^5*ay^16*az^2*cos(a/2)^9*sin(a/2)^23*x+2702700*ax^5*ay^16*az^4*cos(a/2)^7*sin(a/2)^25*x+2702700*ax^5*ay^16*az^6*cos(a/2)^5*sin(a/2)^27*x+1351350*ax^5*ay^16*az^8*cos(a/2)^3*sin(a/2)^29*x+270270*ax^5*ay^16*az^10*cos(a/2)*sin(a/2)^31*x+600600*ax^5*ay^18*az^2*cos(a/2)^7*sin(a/2)^25*x+900900*ax^5*ay^18*az^4*cos(a/2)^5*sin(a/2)^27*x+600600*ax^5*ay^18*az^6*cos(a/2)^3*sin(a/2)^29*x+150150*ax^5*ay^18*az^8*cos(a/2)*sin(a/2)^31*x+180180*ax^5*ay^20*az^2*cos(a/2)^5*sin(a/2)^27*x+180180*ax^5*ay^20*az^4*cos(a/2)^3*sin(a/2)^29*x+60060*ax^5*ay^20*az^6*cos(a/2)*sin(a/2)^31*x+32760*ax^5*ay^22*az^2*cos(a/2)^3*sin(a/2)^29*x+16380*ax^5*ay^22*az^4*cos(a/2)*sin(a/2)^31*x+2730*ax^5*ay^24*az^2*cos(a/2)*sin(a/2)^31*x+10920*ax^6*ay*az^2*cos(a/2)^23*sin(a/2)^9*y+60060*ax^6*ay*az^4*cos(a/2)^21*sin(a/2)^11*y+200200*ax^6*ay*az^6*cos(a/2)^19*sin(a/2)^13*y+450450*ax^6*ay*az^8*cos(a/2)^17*sin(a/2)^15*y+720720*ax^6*ay*az^10*cos(a/2)^15*sin(a/2)^17*y+840840*ax^6*ay*az^12*cos(a/2)^13*sin(a/2)^19*y+720720*ax^6*ay*az^14*cos(a/2)^11*sin(a/2)^21*y+450450*ax^6*ay*az^16*cos(a/2)^9*sin(a/2)^23*y+200200*ax^6*ay*az^18*cos(a/2)^7*sin(a/2)^25*y+60060*ax^6*ay*az^20*cos(a/2)^5*sin(a/2)^27*y+10920*ax^6*ay*az^22*cos(a/2)^3*sin(a/2)^29*y+910*ax^6*ay*az^24*cos(a/2)*sin(a/2)^31*y+10920*ax^6*ay^2*az*cos(a/2)^23*sin(a/2)^9*z+120120*ax^6*ay^2*az^3*cos(a/2)^21*sin(a/2)^11*z+600600*ax^6*ay^2*az^5*cos(a/2)^19*sin(a/2)^13*z+1801800*ax^6*ay^2*az^7*cos(a/2)^17*sin(a/2)^15*z+3603600*ax^6*ay^2*az^9*cos(a/2)^15*sin(a/2)^17*z+5045040*ax^6*ay^2*az^11*cos(a/2)^13*sin(a/2)^19*z+5045040*ax^6*ay^2*az^13*cos(a/2)^11*sin(a/2)^21*z+3603600*ax^6*ay^2*az^15*cos(a/2)^9*sin(a/2)^23*z+1801800*ax^6*ay^2*az^17*cos(a/2)^7*sin(a/2)^25*z+600600*ax^6*ay^2*az^19*cos(a/2)^5*sin(a/2)^27*z+120120*ax^6*ay^2*az^21*cos(a/2)^3*sin(a/2)^29*z+10920*ax^6*ay^2*az^23*cos(a/2)*sin(a/2)^31*z+120120*ax^6*ay^3*az^2*cos(a/2)^21*sin(a/2)^11*y+600600*ax^6*ay^3*az^4*cos(a/2)^19*sin(a/2)^13*y+1801800*ax^6*ay^3*az^6*cos(a/2)^17*sin(a/2)^15*y+3603600*ax^6*ay^3*az^8*cos(a/2)^15*sin(a/2)^17*y+5045040*ax^6*ay^3*az^10*cos(a/2)^13*sin(a/2)^19*y+5045040*ax^6*ay^3*az^12*cos(a/2)^11*sin(a/2)^21*y+3603600*ax^6*ay^3*az^14*cos(a/2)^9*sin(a/2)^23*y+1801800*ax^6*ay^3*az^16*cos(a/2)^7*sin(a/2)^25*y+600600*ax^6*ay^3*az^18*cos(a/2)^5*sin(a/2)^27*y+120120*ax^6*ay^3*az^20*cos(a/2)^3*sin(a/2)^29*y+10920*ax^6*ay^3*az^22*cos(a/2)*sin(a/2)^31*y+60060*ax^6*ay^4*az*cos(a/2)^21*sin(a/2)^11*z+600600*ax^6*ay^4*az^3*cos(a/2)^19*sin(a/2)^13*z+2702700*ax^6*ay^4*az^5*cos(a/2)^17*sin(a/2)^15*z+7207200*ax^6*ay^4*az^7*cos(a/2)^15*sin(a/2)^17*z+12612600*ax^6*ay^4*az^9*cos(a/2)^13*sin(a/2)^19*z+15135120*ax^6*ay^4*az^11*cos(a/2)^11*sin(a/2)^21*z+12612600*ax^6*ay^4*az^13*cos(a/2)^9*sin(a/2)^23*z+7207200*ax^6*ay^4*az^15*cos(a/2)^7*sin(a/2)^25*z+2702700*ax^6*ay^4*az^17*cos(a/2)^5*sin(a/2)^27*z+600600*ax^6*ay^4*az^19*cos(a/2)^3*sin(a/2)^29*z+60060*ax^6*ay^4*az^21*cos(a/2)*sin(a/2)^31*z+600600*ax^6*ay^5*az^2*cos(a/2)^19*sin(a/2)^13*y+2702700*ax^6*ay^5*az^4*cos(a/2)^17*sin(a/2)^15*y+7207200*ax^6*ay^5*az^6*cos(a/2)^15*sin(a/2)^17*y+12612600*ax^6*ay^5*az^8*cos(a/2)^13*sin(a/2)^19*y+15135120*ax^6*ay^5*az^10*cos(a/2)^11*sin(a/2)^21*y+12612600*ax^6*ay^5*az^12*cos(a/2)^9*sin(a/2)^23*y+7207200*ax^6*ay^5*az^14*cos(a/2)^7*sin(a/2)^25*y+2702700*ax^6*ay^5*az^16*cos(a/2)^5*sin(a/2)^27*y+600600*ax^6*ay^5*az^18*cos(a/2)^3*sin(a/2)^29*y+60060*ax^6*ay^5*az^20*cos(a/2)*sin(a/2)^31*y+200200*ax^6*ay^6*az*cos(a/2)^19*sin(a/2)^13*z+1801800*ax^6*ay^6*az^3*cos(a/2)^17*sin(a/2)^15*z+7207200*ax^6*ay^6*az^5*cos(a/2)^15*sin(a/2)^17*z+16816800*ax^6*ay^6*az^7*cos(a/2)^13*sin(a/2)^19*z+25225200*ax^6*ay^6*az^9*cos(a/2)^11*sin(a/2)^21*z+25225200*ax^6*ay^6*az^11*cos(a/2)^9*sin(a/2)^23*z+16816800*ax^6*ay^6*az^13*cos(a/2)^7*sin(a/2)^25*z+7207200*ax^6*ay^6*az^15*cos(a/2)^5*sin(a/2)^27*z+1801800*ax^6*ay^6*az^17*cos(a/2)^3*sin(a/2)^29*z+200200*ax^6*ay^6*az^19*cos(a/2)*sin(a/2)^31*z+1801800*ax^6*ay^7*az^2*cos(a/2)^17*sin(a/2)^15*y+7207200*ax^6*ay^7*az^4*cos(a/2)^15*sin(a/2)^17*y+16816800*ax^6*ay^7*az^6*cos(a/2)^13*sin(a/2)^19*y+25225200*ax^6*ay^7*az^8*cos(a/2)^11*sin(a/2)^21*y+25225200*ax^6*ay^7*az^10*cos(a/2)^9*sin(a/2)^23*y+16816800*ax^6*ay^7*az^12*cos(a/2)^7*sin(a/2)^25*y+7207200*ax^6*ay^7*az^14*cos(a/2)^5*sin(a/2)^27*y+1801800*ax^6*ay^7*az^16*cos(a/2)^3*sin(a/2)^29*y+200200*ax^6*ay^7*az^18*cos(a/2)*sin(a/2)^31*y+450450*ax^6*ay^8*az*cos(a/2)^17*sin(a/2)^15*z+3603600*ax^6*ay^8*az^3*cos(a/2)^15*sin(a/2)^17*z+12612600*ax^6*ay^8*az^5*cos(a/2)^13*sin(a/2)^19*z+25225200*ax^6*ay^8*az^7*cos(a/2)^11*sin(a/2)^21*z+31531500*ax^6*ay^8*az^9*cos(a/2)^9*sin(a/2)^23*z+25225200*ax^6*ay^8*az^11*cos(a/2)^7*sin(a/2)^25*z+12612600*ax^6*ay^8*az^13*cos(a/2)^5*sin(a/2)^27*z+3603600*ax^6*ay^8*az^15*cos(a/2)^3*sin(a/2)^29*z+450450*ax^6*ay^8*az^17*cos(a/2)*sin(a/2)^31*z+3603600*ax^6*ay^9*az^2*cos(a/2)^15*sin(a/2)^17*y+12612600*ax^6*ay^9*az^4*cos(a/2)^13*sin(a/2)^19*y+25225200*ax^6*ay^9*az^6*cos(a/2)^11*sin(a/2)^21*y+31531500*ax^6*ay^9*az^8*cos(a/2)^9*sin(a/2)^23*y+25225200*ax^6*ay^9*az^10*cos(a/2)^7*sin(a/2)^25*y+12612600*ax^6*ay^9*az^12*cos(a/2)^5*sin(a/2)^27*y+3603600*ax^6*ay^9*az^14*cos(a/2)^3*sin(a/2)^29*y+450450*ax^6*ay^9*az^16*cos(a/2)*sin(a/2)^31*y+720720*ax^6*ay^10*az*cos(a/2)^15*sin(a/2)^17*z+5045040*ax^6*ay^10*az^3*cos(a/2)^13*sin(a/2)^19*z+15135120*ax^6*ay^10*az^5*cos(a/2)^11*sin(a/2)^21*z+25225200*ax^6*ay^10*az^7*cos(a/2)^9*sin(a/2)^23*z+25225200*ax^6*ay^10*az^9*cos(a/2)^7*sin(a/2)^25*z+15135120*ax^6*ay^10*az^11*cos(a/2)^5*sin(a/2)^27*z+5045040*ax^6*ay^10*az^13*cos(a/2)^3*sin(a/2)^29*z+720720*ax^6*ay^10*az^15*cos(a/2)*sin(a/2)^31*z+5045040*ax^6*ay^11*az^2*cos(a/2)^13*sin(a/2)^19*y+15135120*ax^6*ay^11*az^4*cos(a/2)^11*sin(a/2)^21*y+25225200*ax^6*ay^11*az^6*cos(a/2)^9*sin(a/2)^23*y+25225200*ax^6*ay^11*az^8*cos(a/2)^7*sin(a/2)^25*y+15135120*ax^6*ay^11*az^10*cos(a/2)^5*sin(a/2)^27*y+5045040*ax^6*ay^11*az^12*cos(a/2)^3*sin(a/2)^29*y+720720*ax^6*ay^11*az^14*cos(a/2)*sin(a/2)^31*y+840840*ax^6*ay^12*az*cos(a/2)^13*sin(a/2)^19*z+5045040*ax^6*ay^12*az^3*cos(a/2)^11*sin(a/2)^21*z+12612600*ax^6*ay^12*az^5*cos(a/2)^9*sin(a/2)^23*z+16816800*ax^6*ay^12*az^7*cos(a/2)^7*sin(a/2)^25*z+12612600*ax^6*ay^12*az^9*cos(a/2)^5*sin(a/2)^27*z+5045040*ax^6*ay^12*az^11*cos(a/2)^3*sin(a/2)^29*z+840840*ax^6*ay^12*az^13*cos(a/2)*sin(a/2)^31*z+5045040*ax^6*ay^13*az^2*cos(a/2)^11*sin(a/2)^21*y+12612600*ax^6*ay^13*az^4*cos(a/2)^9*sin(a/2)^23*y+16816800*ax^6*ay^13*az^6*cos(a/2)^7*sin(a/2)^25*y+12612600*ax^6*ay^13*az^8*cos(a/2)^5*sin(a/2)^27*y+5045040*ax^6*ay^13*az^10*cos(a/2)^3*sin(a/2)^29*y+840840*ax^6*ay^13*az^12*cos(a/2)*sin(a/2)^31*y+720720*ax^6*ay^14*az*cos(a/2)^11*sin(a/2)^21*z+3603600*ax^6*ay^14*az^3*cos(a/2)^9*sin(a/2)^23*z+7207200*ax^6*ay^14*az^5*cos(a/2)^7*sin(a/2)^25*z+7207200*ax^6*ay^14*az^7*cos(a/2)^5*sin(a/2)^27*z+3603600*ax^6*ay^14*az^9*cos(a/2)^3*sin(a/2)^29*z+720720*ax^6*ay^14*az^11*cos(a/2)*sin(a/2)^31*z+3603600*ax^6*ay^15*az^2*cos(a/2)^9*sin(a/2)^23*y+7207200*ax^6*ay^15*az^4*cos(a/2)^7*sin(a/2)^25*y+7207200*ax^6*ay^15*az^6*cos(a/2)^5*sin(a/2)^27*y+3603600*ax^6*ay^15*az^8*cos(a/2)^3*sin(a/2)^29*y+720720*ax^6*ay^15*az^10*cos(a/2)*sin(a/2)^31*y+450450*ax^6*ay^16*az*cos(a/2)^9*sin(a/2)^23*z+1801800*ax^6*ay^16*az^3*cos(a/2)^7*sin(a/2)^25*z+2702700*ax^6*ay^16*az^5*cos(a/2)^5*sin(a/2)^27*z+1801800*ax^6*ay^16*az^7*cos(a/2)^3*sin(a/2)^29*z+450450*ax^6*ay^16*az^9*cos(a/2)*sin(a/2)^31*z+1801800*ax^6*ay^17*az^2*cos(a/2)^7*sin(a/2)^25*y+2702700*ax^6*ay^17*az^4*cos(a/2)^5*sin(a/2)^27*y+1801800*ax^6*ay^17*az^6*cos(a/2)^3*sin(a/2)^29*y+450450*ax^6*ay^17*az^8*cos(a/2)*sin(a/2)^31*y+200200*ax^6*ay^18*az*cos(a/2)^7*sin(a/2)^25*z+600600*ax^6*ay^18*az^3*cos(a/2)^5*sin(a/2)^27*z+600600*ax^6*ay^18*az^5*cos(a/2)^3*sin(a/2)^29*z+200200*ax^6*ay^18*az^7*cos(a/2)*sin(a/2)^31*z+600600*ax^6*ay^19*az^2*cos(a/2)^5*sin(a/2)^27*y+600600*ax^6*ay^19*az^4*cos(a/2)^3*sin(a/2)^29*y+200200*ax^6*ay^19*az^6*cos(a/2)*sin(a/2)^31*y+60060*ax^6*ay^20*az*cos(a/2)^5*sin(a/2)^27*z+120120*ax^6*ay^20*az^3*cos(a/2)^3*sin(a/2)^29*z+60060*ax^6*ay^20*az^5*cos(a/2)*sin(a/2)^31*z+120120*ax^6*ay^21*az^2*cos(a/2)^3*sin(a/2)^29*y+60060*ax^6*ay^21*az^4*cos(a/2)*sin(a/2)^31*y+10920*ax^6*ay^22*az*cos(a/2)^3*sin(a/2)^29*z+10920*ax^6*ay^22*az^3*cos(a/2)*sin(a/2)^31*z+10920*ax^6*ay^23*az^2*cos(a/2)*sin(a/2)^31*y+910*ax^6*ay^24*az*cos(a/2)*sin(a/2)^31*z+120120*ax^7*ay^2*az^2*cos(a/2)^21*sin(a/2)^11*x+600600*ax^7*ay^2*az^4*cos(a/2)^19*sin(a/2)^13*x+1801800*ax^7*ay^2*az^6*cos(a/2)^17*sin(a/2)^15*x+3603600*ax^7*ay^2*az^8*cos(a/2)^15*sin(a/2)^17*x+5045040*ax^7*ay^2*az^10*cos(a/2)^13*sin(a/2)^19*x+5045040*ax^7*ay^2*az^12*cos(a/2)^11*sin(a/2)^21*x+3603600*ax^7*ay^2*az^14*cos(a/2)^9*sin(a/2)^23*x+1801800*ax^7*ay^2*az^16*cos(a/2)^7*sin(a/2)^25*x+600600*ax^7*ay^2*az^18*cos(a/2)^5*sin(a/2)^27*x+120120*ax^7*ay^2*az^20*cos(a/2)^3*sin(a/2)^29*x+10920*ax^7*ay^2*az^22*cos(a/2)*sin(a/2)^31*x+600600*ax^7*ay^4*az^2*cos(a/2)^19*sin(a/2)^13*x+2702700*ax^7*ay^4*az^4*cos(a/2)^17*sin(a/2)^15*x+7207200*ax^7*ay^4*az^6*cos(a/2)^15*sin(a/2)^17*x+12612600*ax^7*ay^4*az^8*cos(a/2)^13*sin(a/2)^19*x+15135120*ax^7*ay^4*az^10*cos(a/2)^11*sin(a/2)^21*x+12612600*ax^7*ay^4*az^12*cos(a/2)^9*sin(a/2)^23*x+7207200*ax^7*ay^4*az^14*cos(a/2)^7*sin(a/2)^25*x+2702700*ax^7*ay^4*az^16*cos(a/2)^5*sin(a/2)^27*x+600600*ax^7*ay^4*az^18*cos(a/2)^3*sin(a/2)^29*x+60060*ax^7*ay^4*az^20*cos(a/2)*sin(a/2)^31*x+1801800*ax^7*ay^6*az^2*cos(a/2)^17*sin(a/2)^15*x+7207200*ax^7*ay^6*az^4*cos(a/2)^15*sin(a/2)^17*x+16816800*ax^7*ay^6*az^6*cos(a/2)^13*sin(a/2)^19*x+25225200*ax^7*ay^6*az^8*cos(a/2)^11*sin(a/2)^21*x+25225200*ax^7*ay^6*az^10*cos(a/2)^9*sin(a/2)^23*x+16816800*ax^7*ay^6*az^12*cos(a/2)^7*sin(a/2)^25*x+7207200*ax^7*ay^6*az^14*cos(a/2)^5*sin(a/2)^27*x+1801800*ax^7*ay^6*az^16*cos(a/2)^3*sin(a/2)^29*x+200200*ax^7*ay^6*az^18*cos(a/2)*sin(a/2)^31*x+3603600*ax^7*ay^8*az^2*cos(a/2)^15*sin(a/2)^17*x+12612600*ax^7*ay^8*az^4*cos(a/2)^13*sin(a/2)^19*x+25225200*ax^7*ay^8*az^6*cos(a/2)^11*sin(a/2)^21*x+31531500*ax^7*ay^8*az^8*cos(a/2)^9*sin(a/2)^23*x+25225200*ax^7*ay^8*az^10*cos(a/2)^7*sin(a/2)^25*x+12612600*ax^7*ay^8*az^12*cos(a/2)^5*sin(a/2)^27*x+3603600*ax^7*ay^8*az^14*cos(a/2)^3*sin(a/2)^29*x+450450*ax^7*ay^8*az^16*cos(a/2)*sin(a/2)^31*x+5045040*ax^7*ay^10*az^2*cos(a/2)^13*sin(a/2)^19*x+15135120*ax^7*ay^10*az^4*cos(a/2)^11*sin(a/2)^21*x+25225200*ax^7*ay^10*az^6*cos(a/2)^9*sin(a/2)^23*x+25225200*ax^7*ay^10*az^8*cos(a/2)^7*sin(a/2)^25*x+15135120*ax^7*ay^10*az^10*cos(a/2)^5*sin(a/2)^27*x+5045040*ax^7*ay^10*az^12*cos(a/2)^3*sin(a/2)^29*x+720720*ax^7*ay^10*az^14*cos(a/2)*sin(a/2)^31*x+5045040*ax^7*ay^12*az^2*cos(a/2)^11*sin(a/2)^21*x+12612600*ax^7*ay^12*az^4*cos(a/2)^9*sin(a/2)^23*x+16816800*ax^7*ay^12*az^6*cos(a/2)^7*sin(a/2)^25*x+12612600*ax^7*ay^12*az^8*cos(a/2)^5*sin(a/2)^27*x+5045040*ax^7*ay^12*az^10*cos(a/2)^3*sin(a/2)^29*x+840840*ax^7*ay^12*az^12*cos(a/2)*sin(a/2)^31*x+3603600*ax^7*ay^14*az^2*cos(a/2)^9*sin(a/2)^23*x+7207200*ax^7*ay^14*az^4*cos(a/2)^7*sin(a/2)^25*x+7207200*ax^7*ay^14*az^6*cos(a/2)^5*sin(a/2)^27*x+3603600*ax^7*ay^14*az^8*cos(a/2)^3*sin(a/2)^29*x+720720*ax^7*ay^14*az^10*cos(a/2)*sin(a/2)^31*x+1801800*ax^7*ay^16*az^2*cos(a/2)^7*sin(a/2)^25*x+2702700*ax^7*ay^16*az^4*cos(a/2)^5*sin(a/2)^27*x+1801800*ax^7*ay^16*az^6*cos(a/2)^3*sin(a/2)^29*x+450450*ax^7*ay^16*az^8*cos(a/2)*sin(a/2)^31*x+600600*ax^7*ay^18*az^2*cos(a/2)^5*sin(a/2)^27*x+600600*ax^7*ay^18*az^4*cos(a/2)^3*sin(a/2)^29*x+200200*ax^7*ay^18*az^6*cos(a/2)*sin(a/2)^31*x+120120*ax^7*ay^20*az^2*cos(a/2)^3*sin(a/2)^29*x+60060*ax^7*ay^20*az^4*cos(a/2)*sin(a/2)^31*x+10920*ax^7*ay^22*az^2*cos(a/2)*sin(a/2)^31*x+30030*ax^8*ay*az^2*cos(a/2)^21*sin(a/2)^11*y+150150*ax^8*ay*az^4*cos(a/2)^19*sin(a/2)^13*y+450450*ax^8*ay*az^6*cos(a/2)^17*sin(a/2)^15*y+900900*ax^8*ay*az^8*cos(a/2)^15*sin(a/2)^17*y+1261260*ax^8*ay*az^10*cos(a/2)^13*sin(a/2)^19*y+1261260*ax^8*ay*az^12*cos(a/2)^11*sin(a/2)^21*y+900900*ax^8*ay*az^14*cos(a/2)^9*sin(a/2)^23*y+450450*ax^8*ay*az^16*cos(a/2)^7*sin(a/2)^25*y+150150*ax^8*ay*az^18*cos(a/2)^5*sin(a/2)^27*y+30030*ax^8*ay*az^20*cos(a/2)^3*sin(a/2)^29*y+2730*ax^8*ay*az^22*cos(a/2)*sin(a/2)^31*y+30030*ax^8*ay^2*az*cos(a/2)^21*sin(a/2)^11*z+300300*ax^8*ay^2*az^3*cos(a/2)^19*sin(a/2)^13*z+1351350*ax^8*ay^2*az^5*cos(a/2)^17*sin(a/2)^15*z+3603600*ax^8*ay^2*az^7*cos(a/2)^15*sin(a/2)^17*z+6306300*ax^8*ay^2*az^9*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^8*ay^2*az^11*cos(a/2)^11*sin(a/2)^21*z+6306300*ax^8*ay^2*az^13*cos(a/2)^9*sin(a/2)^23*z+3603600*ax^8*ay^2*az^15*cos(a/2)^7*sin(a/2)^25*z+1351350*ax^8*ay^2*az^17*cos(a/2)^5*sin(a/2)^27*z+300300*ax^8*ay^2*az^19*cos(a/2)^3*sin(a/2)^29*z+30030*ax^8*ay^2*az^21*cos(a/2)*sin(a/2)^31*z+300300*ax^8*ay^3*az^2*cos(a/2)^19*sin(a/2)^13*y+1351350*ax^8*ay^3*az^4*cos(a/2)^17*sin(a/2)^15*y+3603600*ax^8*ay^3*az^6*cos(a/2)^15*sin(a/2)^17*y+6306300*ax^8*ay^3*az^8*cos(a/2)^13*sin(a/2)^19*y+7567560*ax^8*ay^3*az^10*cos(a/2)^11*sin(a/2)^21*y+6306300*ax^8*ay^3*az^12*cos(a/2)^9*sin(a/2)^23*y+3603600*ax^8*ay^3*az^14*cos(a/2)^7*sin(a/2)^25*y+1351350*ax^8*ay^3*az^16*cos(a/2)^5*sin(a/2)^27*y+300300*ax^8*ay^3*az^18*cos(a/2)^3*sin(a/2)^29*y+30030*ax^8*ay^3*az^20*cos(a/2)*sin(a/2)^31*y+150150*ax^8*ay^4*az*cos(a/2)^19*sin(a/2)^13*z+1351350*ax^8*ay^4*az^3*cos(a/2)^17*sin(a/2)^15*z+5405400*ax^8*ay^4*az^5*cos(a/2)^15*sin(a/2)^17*z+12612600*ax^8*ay^4*az^7*cos(a/2)^13*sin(a/2)^19*z+18918900*ax^8*ay^4*az^9*cos(a/2)^11*sin(a/2)^21*z+18918900*ax^8*ay^4*az^11*cos(a/2)^9*sin(a/2)^23*z+12612600*ax^8*ay^4*az^13*cos(a/2)^7*sin(a/2)^25*z+5405400*ax^8*ay^4*az^15*cos(a/2)^5*sin(a/2)^27*z+1351350*ax^8*ay^4*az^17*cos(a/2)^3*sin(a/2)^29*z+150150*ax^8*ay^4*az^19*cos(a/2)*sin(a/2)^31*z+1351350*ax^8*ay^5*az^2*cos(a/2)^17*sin(a/2)^15*y+5405400*ax^8*ay^5*az^4*cos(a/2)^15*sin(a/2)^17*y+12612600*ax^8*ay^5*az^6*cos(a/2)^13*sin(a/2)^19*y+18918900*ax^8*ay^5*az^8*cos(a/2)^11*sin(a/2)^21*y+18918900*ax^8*ay^5*az^10*cos(a/2)^9*sin(a/2)^23*y+12612600*ax^8*ay^5*az^12*cos(a/2)^7*sin(a/2)^25*y+5405400*ax^8*ay^5*az^14*cos(a/2)^5*sin(a/2)^27*y+1351350*ax^8*ay^5*az^16*cos(a/2)^3*sin(a/2)^29*y+150150*ax^8*ay^5*az^18*cos(a/2)*sin(a/2)^31*y+450450*ax^8*ay^6*az*cos(a/2)^17*sin(a/2)^15*z+3603600*ax^8*ay^6*az^3*cos(a/2)^15*sin(a/2)^17*z+12612600*ax^8*ay^6*az^5*cos(a/2)^13*sin(a/2)^19*z+25225200*ax^8*ay^6*az^7*cos(a/2)^11*sin(a/2)^21*z+31531500*ax^8*ay^6*az^9*cos(a/2)^9*sin(a/2)^23*z+25225200*ax^8*ay^6*az^11*cos(a/2)^7*sin(a/2)^25*z+12612600*ax^8*ay^6*az^13*cos(a/2)^5*sin(a/2)^27*z+3603600*ax^8*ay^6*az^15*cos(a/2)^3*sin(a/2)^29*z+450450*ax^8*ay^6*az^17*cos(a/2)*sin(a/2)^31*z+3603600*ax^8*ay^7*az^2*cos(a/2)^15*sin(a/2)^17*y+12612600*ax^8*ay^7*az^4*cos(a/2)^13*sin(a/2)^19*y+25225200*ax^8*ay^7*az^6*cos(a/2)^11*sin(a/2)^21*y+31531500*ax^8*ay^7*az^8*cos(a/2)^9*sin(a/2)^23*y+25225200*ax^8*ay^7*az^10*cos(a/2)^7*sin(a/2)^25*y+12612600*ax^8*ay^7*az^12*cos(a/2)^5*sin(a/2)^27*y+3603600*ax^8*ay^7*az^14*cos(a/2)^3*sin(a/2)^29*y+450450*ax^8*ay^7*az^16*cos(a/2)*sin(a/2)^31*y+900900*ax^8*ay^8*az*cos(a/2)^15*sin(a/2)^17*z+6306300*ax^8*ay^8*az^3*cos(a/2)^13*sin(a/2)^19*z+18918900*ax^8*ay^8*az^5*cos(a/2)^11*sin(a/2)^21*z+31531500*ax^8*ay^8*az^7*cos(a/2)^9*sin(a/2)^23*z+31531500*ax^8*ay^8*az^9*cos(a/2)^7*sin(a/2)^25*z+18918900*ax^8*ay^8*az^11*cos(a/2)^5*sin(a/2)^27*z+6306300*ax^8*ay^8*az^13*cos(a/2)^3*sin(a/2)^29*z+900900*ax^8*ay^8*az^15*cos(a/2)*sin(a/2)^31*z+6306300*ax^8*ay^9*az^2*cos(a/2)^13*sin(a/2)^19*y+18918900*ax^8*ay^9*az^4*cos(a/2)^11*sin(a/2)^21*y+31531500*ax^8*ay^9*az^6*cos(a/2)^9*sin(a/2)^23*y+31531500*ax^8*ay^9*az^8*cos(a/2)^7*sin(a/2)^25*y+18918900*ax^8*ay^9*az^10*cos(a/2)^5*sin(a/2)^27*y+6306300*ax^8*ay^9*az^12*cos(a/2)^3*sin(a/2)^29*y+900900*ax^8*ay^9*az^14*cos(a/2)*sin(a/2)^31*y+1261260*ax^8*ay^10*az*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^8*ay^10*az^3*cos(a/2)^11*sin(a/2)^21*z+18918900*ax^8*ay^10*az^5*cos(a/2)^9*sin(a/2)^23*z+25225200*ax^8*ay^10*az^7*cos(a/2)^7*sin(a/2)^25*z+18918900*ax^8*ay^10*az^9*cos(a/2)^5*sin(a/2)^27*z+7567560*ax^8*ay^10*az^11*cos(a/2)^3*sin(a/2)^29*z+1261260*ax^8*ay^10*az^13*cos(a/2)*sin(a/2)^31*z+7567560*ax^8*ay^11*az^2*cos(a/2)^11*sin(a/2)^21*y+18918900*ax^8*ay^11*az^4*cos(a/2)^9*sin(a/2)^23*y+25225200*ax^8*ay^11*az^6*cos(a/2)^7*sin(a/2)^25*y+18918900*ax^8*ay^11*az^8*cos(a/2)^5*sin(a/2)^27*y+7567560*ax^8*ay^11*az^10*cos(a/2)^3*sin(a/2)^29*y+1261260*ax^8*ay^11*az^12*cos(a/2)*sin(a/2)^31*y+1261260*ax^8*ay^12*az*cos(a/2)^11*sin(a/2)^21*z+6306300*ax^8*ay^12*az^3*cos(a/2)^9*sin(a/2)^23*z+12612600*ax^8*ay^12*az^5*cos(a/2)^7*sin(a/2)^25*z+12612600*ax^8*ay^12*az^7*cos(a/2)^5*sin(a/2)^27*z+6306300*ax^8*ay^12*az^9*cos(a/2)^3*sin(a/2)^29*z+1261260*ax^8*ay^12*az^11*cos(a/2)*sin(a/2)^31*z+6306300*ax^8*ay^13*az^2*cos(a/2)^9*sin(a/2)^23*y+12612600*ax^8*ay^13*az^4*cos(a/2)^7*sin(a/2)^25*y+12612600*ax^8*ay^13*az^6*cos(a/2)^5*sin(a/2)^27*y+6306300*ax^8*ay^13*az^8*cos(a/2)^3*sin(a/2)^29*y+1261260*ax^8*ay^13*az^10*cos(a/2)*sin(a/2)^31*y+900900*ax^8*ay^14*az*cos(a/2)^9*sin(a/2)^23*z+3603600*ax^8*ay^14*az^3*cos(a/2)^7*sin(a/2)^25*z+5405400*ax^8*ay^14*az^5*cos(a/2)^5*sin(a/2)^27*z+3603600*ax^8*ay^14*az^7*cos(a/2)^3*sin(a/2)^29*z+900900*ax^8*ay^14*az^9*cos(a/2)*sin(a/2)^31*z+3603600*ax^8*ay^15*az^2*cos(a/2)^7*sin(a/2)^25*y+5405400*ax^8*ay^15*az^4*cos(a/2)^5*sin(a/2)^27*y+3603600*ax^8*ay^15*az^6*cos(a/2)^3*sin(a/2)^29*y+900900*ax^8*ay^15*az^8*cos(a/2)*sin(a/2)^31*y+450450*ax^8*ay^16*az*cos(a/2)^7*sin(a/2)^25*z+1351350*ax^8*ay^16*az^3*cos(a/2)^5*sin(a/2)^27*z+1351350*ax^8*ay^16*az^5*cos(a/2)^3*sin(a/2)^29*z+450450*ax^8*ay^16*az^7*cos(a/2)*sin(a/2)^31*z+1351350*ax^8*ay^17*az^2*cos(a/2)^5*sin(a/2)^27*y+1351350*ax^8*ay^17*az^4*cos(a/2)^3*sin(a/2)^29*y+450450*ax^8*ay^17*az^6*cos(a/2)*sin(a/2)^31*y+150150*ax^8*ay^18*az*cos(a/2)^5*sin(a/2)^27*z+300300*ax^8*ay^18*az^3*cos(a/2)^3*sin(a/2)^29*z+150150*ax^8*ay^18*az^5*cos(a/2)*sin(a/2)^31*z+300300*ax^8*ay^19*az^2*cos(a/2)^3*sin(a/2)^29*y+150150*ax^8*ay^19*az^4*cos(a/2)*sin(a/2)^31*y+30030*ax^8*ay^20*az*cos(a/2)^3*sin(a/2)^29*z+30030*ax^8*ay^20*az^3*cos(a/2)*sin(a/2)^31*z+30030*ax^8*ay^21*az^2*cos(a/2)*sin(a/2)^31*y+2730*ax^8*ay^22*az*cos(a/2)*sin(a/2)^31*z+300300*ax^9*ay^2*az^2*cos(a/2)^19*sin(a/2)^13*x+1351350*ax^9*ay^2*az^4*cos(a/2)^17*sin(a/2)^15*x+3603600*ax^9*ay^2*az^6*cos(a/2)^15*sin(a/2)^17*x+6306300*ax^9*ay^2*az^8*cos(a/2)^13*sin(a/2)^19*x+7567560*ax^9*ay^2*az^10*cos(a/2)^11*sin(a/2)^21*x+6306300*ax^9*ay^2*az^12*cos(a/2)^9*sin(a/2)^23*x+3603600*ax^9*ay^2*az^14*cos(a/2)^7*sin(a/2)^25*x+1351350*ax^9*ay^2*az^16*cos(a/2)^5*sin(a/2)^27*x+300300*ax^9*ay^2*az^18*cos(a/2)^3*sin(a/2)^29*x+30030*ax^9*ay^2*az^20*cos(a/2)*sin(a/2)^31*x+1351350*ax^9*ay^4*az^2*cos(a/2)^17*sin(a/2)^15*x+5405400*ax^9*ay^4*az^4*cos(a/2)^15*sin(a/2)^17*x+12612600*ax^9*ay^4*az^6*cos(a/2)^13*sin(a/2)^19*x+18918900*ax^9*ay^4*az^8*cos(a/2)^11*sin(a/2)^21*x+18918900*ax^9*ay^4*az^10*cos(a/2)^9*sin(a/2)^23*x+12612600*ax^9*ay^4*az^12*cos(a/2)^7*sin(a/2)^25*x+5405400*ax^9*ay^4*az^14*cos(a/2)^5*sin(a/2)^27*x+1351350*ax^9*ay^4*az^16*cos(a/2)^3*sin(a/2)^29*x+150150*ax^9*ay^4*az^18*cos(a/2)*sin(a/2)^31*x+3603600*ax^9*ay^6*az^2*cos(a/2)^15*sin(a/2)^17*x+12612600*ax^9*ay^6*az^4*cos(a/2)^13*sin(a/2)^19*x+25225200*ax^9*ay^6*az^6*cos(a/2)^11*sin(a/2)^21*x+31531500*ax^9*ay^6*az^8*cos(a/2)^9*sin(a/2)^23*x+25225200*ax^9*ay^6*az^10*cos(a/2)^7*sin(a/2)^25*x+12612600*ax^9*ay^6*az^12*cos(a/2)^5*sin(a/2)^27*x+3603600*ax^9*ay^6*az^14*cos(a/2)^3*sin(a/2)^29*x+450450*ax^9*ay^6*az^16*cos(a/2)*sin(a/2)^31*x+6306300*ax^9*ay^8*az^2*cos(a/2)^13*sin(a/2)^19*x+18918900*ax^9*ay^8*az^4*cos(a/2)^11*sin(a/2)^21*x+31531500*ax^9*ay^8*az^6*cos(a/2)^9*sin(a/2)^23*x+31531500*ax^9*ay^8*az^8*cos(a/2)^7*sin(a/2)^25*x+18918900*ax^9*ay^8*az^10*cos(a/2)^5*sin(a/2)^27*x+6306300*ax^9*ay^8*az^12*cos(a/2)^3*sin(a/2)^29*x+900900*ax^9*ay^8*az^14*cos(a/2)*sin(a/2)^31*x+7567560*ax^9*ay^10*az^2*cos(a/2)^11*sin(a/2)^21*x+18918900*ax^9*ay^10*az^4*cos(a/2)^9*sin(a/2)^23*x+25225200*ax^9*ay^10*az^6*cos(a/2)^7*sin(a/2)^25*x+18918900*ax^9*ay^10*az^8*cos(a/2)^5*sin(a/2)^27*x+7567560*ax^9*ay^10*az^10*cos(a/2)^3*sin(a/2)^29*x+1261260*ax^9*ay^10*az^12*cos(a/2)*sin(a/2)^31*x+6306300*ax^9*ay^12*az^2*cos(a/2)^9*sin(a/2)^23*x+12612600*ax^9*ay^12*az^4*cos(a/2)^7*sin(a/2)^25*x+12612600*ax^9*ay^12*az^6*cos(a/2)^5*sin(a/2)^27*x+6306300*ax^9*ay^12*az^8*cos(a/2)^3*sin(a/2)^29*x+1261260*ax^9*ay^12*az^10*cos(a/2)*sin(a/2)^31*x+3603600*ax^9*ay^14*az^2*cos(a/2)^7*sin(a/2)^25*x+5405400*ax^9*ay^14*az^4*cos(a/2)^5*sin(a/2)^27*x+3603600*ax^9*ay^14*az^6*cos(a/2)^3*sin(a/2)^29*x+900900*ax^9*ay^14*az^8*cos(a/2)*sin(a/2)^31*x+1351350*ax^9*ay^16*az^2*cos(a/2)^5*sin(a/2)^27*x+1351350*ax^9*ay^16*az^4*cos(a/2)^3*sin(a/2)^29*x+450450*ax^9*ay^16*az^6*cos(a/2)*sin(a/2)^31*x+300300*ax^9*ay^18*az^2*cos(a/2)^3*sin(a/2)^29*x+150150*ax^9*ay^18*az^4*cos(a/2)*sin(a/2)^31*x+30030*ax^9*ay^20*az^2*cos(a/2)*sin(a/2)^31*x+60060*ax^10*ay*az^2*cos(a/2)^19*sin(a/2)^13*y+270270*ax^10*ay*az^4*cos(a/2)^17*sin(a/2)^15*y+720720*ax^10*ay*az^6*cos(a/2)^15*sin(a/2)^17*y+1261260*ax^10*ay*az^8*cos(a/2)^13*sin(a/2)^19*y+1513512*ax^10*ay*az^10*cos(a/2)^11*sin(a/2)^21*y+1261260*ax^10*ay*az^12*cos(a/2)^9*sin(a/2)^23*y+720720*ax^10*ay*az^14*cos(a/2)^7*sin(a/2)^25*y+270270*ax^10*ay*az^16*cos(a/2)^5*sin(a/2)^27*y+60060*ax^10*ay*az^18*cos(a/2)^3*sin(a/2)^29*y+6006*ax^10*ay*az^20*cos(a/2)*sin(a/2)^31*y+60060*ax^10*ay^2*az*cos(a/2)^19*sin(a/2)^13*z+540540*ax^10*ay^2*az^3*cos(a/2)^17*sin(a/2)^15*z+2162160*ax^10*ay^2*az^5*cos(a/2)^15*sin(a/2)^17*z+5045040*ax^10*ay^2*az^7*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^10*ay^2*az^9*cos(a/2)^11*sin(a/2)^21*z+7567560*ax^10*ay^2*az^11*cos(a/2)^9*sin(a/2)^23*z+5045040*ax^10*ay^2*az^13*cos(a/2)^7*sin(a/2)^25*z+2162160*ax^10*ay^2*az^15*cos(a/2)^5*sin(a/2)^27*z+540540*ax^10*ay^2*az^17*cos(a/2)^3*sin(a/2)^29*z+60060*ax^10*ay^2*az^19*cos(a/2)*sin(a/2)^31*z+540540*ax^10*ay^3*az^2*cos(a/2)^17*sin(a/2)^15*y+2162160*ax^10*ay^3*az^4*cos(a/2)^15*sin(a/2)^17*y+5045040*ax^10*ay^3*az^6*cos(a/2)^13*sin(a/2)^19*y+7567560*ax^10*ay^3*az^8*cos(a/2)^11*sin(a/2)^21*y+7567560*ax^10*ay^3*az^10*cos(a/2)^9*sin(a/2)^23*y+5045040*ax^10*ay^3*az^12*cos(a/2)^7*sin(a/2)^25*y+2162160*ax^10*ay^3*az^14*cos(a/2)^5*sin(a/2)^27*y+540540*ax^10*ay^3*az^16*cos(a/2)^3*sin(a/2)^29*y+60060*ax^10*ay^3*az^18*cos(a/2)*sin(a/2)^31*y+270270*ax^10*ay^4*az*cos(a/2)^17*sin(a/2)^15*z+2162160*ax^10*ay^4*az^3*cos(a/2)^15*sin(a/2)^17*z+7567560*ax^10*ay^4*az^5*cos(a/2)^13*sin(a/2)^19*z+15135120*ax^10*ay^4*az^7*cos(a/2)^11*sin(a/2)^21*z+18918900*ax^10*ay^4*az^9*cos(a/2)^9*sin(a/2)^23*z+15135120*ax^10*ay^4*az^11*cos(a/2)^7*sin(a/2)^25*z+7567560*ax^10*ay^4*az^13*cos(a/2)^5*sin(a/2)^27*z+2162160*ax^10*ay^4*az^15*cos(a/2)^3*sin(a/2)^29*z+270270*ax^10*ay^4*az^17*cos(a/2)*sin(a/2)^31*z+2162160*ax^10*ay^5*az^2*cos(a/2)^15*sin(a/2)^17*y+7567560*ax^10*ay^5*az^4*cos(a/2)^13*sin(a/2)^19*y+15135120*ax^10*ay^5*az^6*cos(a/2)^11*sin(a/2)^21*y+18918900*ax^10*ay^5*az^8*cos(a/2)^9*sin(a/2)^23*y+15135120*ax^10*ay^5*az^10*cos(a/2)^7*sin(a/2)^25*y+7567560*ax^10*ay^5*az^12*cos(a/2)^5*sin(a/2)^27*y+2162160*ax^10*ay^5*az^14*cos(a/2)^3*sin(a/2)^29*y+270270*ax^10*ay^5*az^16*cos(a/2)*sin(a/2)^31*y+720720*ax^10*ay^6*az*cos(a/2)^15*sin(a/2)^17*z+5045040*ax^10*ay^6*az^3*cos(a/2)^13*sin(a/2)^19*z+15135120*ax^10*ay^6*az^5*cos(a/2)^11*sin(a/2)^21*z+25225200*ax^10*ay^6*az^7*cos(a/2)^9*sin(a/2)^23*z+25225200*ax^10*ay^6*az^9*cos(a/2)^7*sin(a/2)^25*z+15135120*ax^10*ay^6*az^11*cos(a/2)^5*sin(a/2)^27*z+5045040*ax^10*ay^6*az^13*cos(a/2)^3*sin(a/2)^29*z+720720*ax^10*ay^6*az^15*cos(a/2)*sin(a/2)^31*z+5045040*ax^10*ay^7*az^2*cos(a/2)^13*sin(a/2)^19*y+15135120*ax^10*ay^7*az^4*cos(a/2)^11*sin(a/2)^21*y+25225200*ax^10*ay^7*az^6*cos(a/2)^9*sin(a/2)^23*y+25225200*ax^10*ay^7*az^8*cos(a/2)^7*sin(a/2)^25*y+15135120*ax^10*ay^7*az^10*cos(a/2)^5*sin(a/2)^27*y+5045040*ax^10*ay^7*az^12*cos(a/2)^3*sin(a/2)^29*y+720720*ax^10*ay^7*az^14*cos(a/2)*sin(a/2)^31*y+1261260*ax^10*ay^8*az*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^10*ay^8*az^3*cos(a/2)^11*sin(a/2)^21*z+18918900*ax^10*ay^8*az^5*cos(a/2)^9*sin(a/2)^23*z+25225200*ax^10*ay^8*az^7*cos(a/2)^7*sin(a/2)^25*z+18918900*ax^10*ay^8*az^9*cos(a/2)^5*sin(a/2)^27*z+7567560*ax^10*ay^8*az^11*cos(a/2)^3*sin(a/2)^29*z+1261260*ax^10*ay^8*az^13*cos(a/2)*sin(a/2)^31*z+7567560*ax^10*ay^9*az^2*cos(a/2)^11*sin(a/2)^21*y+18918900*ax^10*ay^9*az^4*cos(a/2)^9*sin(a/2)^23*y+25225200*ax^10*ay^9*az^6*cos(a/2)^7*sin(a/2)^25*y+18918900*ax^10*ay^9*az^8*cos(a/2)^5*sin(a/2)^27*y+7567560*ax^10*ay^9*az^10*cos(a/2)^3*sin(a/2)^29*y+1261260*ax^10*ay^9*az^12*cos(a/2)*sin(a/2)^31*y+1513512*ax^10*ay^10*az*cos(a/2)^11*sin(a/2)^21*z+7567560*ax^10*ay^10*az^3*cos(a/2)^9*sin(a/2)^23*z+15135120*ax^10*ay^10*az^5*cos(a/2)^7*sin(a/2)^25*z+15135120*ax^10*ay^10*az^7*cos(a/2)^5*sin(a/2)^27*z+7567560*ax^10*ay^10*az^9*cos(a/2)^3*sin(a/2)^29*z+1513512*ax^10*ay^10*az^11*cos(a/2)*sin(a/2)^31*z+7567560*ax^10*ay^11*az^2*cos(a/2)^9*sin(a/2)^23*y+15135120*ax^10*ay^11*az^4*cos(a/2)^7*sin(a/2)^25*y+15135120*ax^10*ay^11*az^6*cos(a/2)^5*sin(a/2)^27*y+7567560*ax^10*ay^11*az^8*cos(a/2)^3*sin(a/2)^29*y+1513512*ax^10*ay^11*az^10*cos(a/2)*sin(a/2)^31*y+1261260*ax^10*ay^12*az*cos(a/2)^9*sin(a/2)^23*z+5045040*ax^10*ay^12*az^3*cos(a/2)^7*sin(a/2)^25*z+7567560*ax^10*ay^12*az^5*cos(a/2)^5*sin(a/2)^27*z+5045040*ax^10*ay^12*az^7*cos(a/2)^3*sin(a/2)^29*z+1261260*ax^10*ay^12*az^9*cos(a/2)*sin(a/2)^31*z+5045040*ax^10*ay^13*az^2*cos(a/2)^7*sin(a/2)^25*y+7567560*ax^10*ay^13*az^4*cos(a/2)^5*sin(a/2)^27*y+5045040*ax^10*ay^13*az^6*cos(a/2)^3*sin(a/2)^29*y+1261260*ax^10*ay^13*az^8*cos(a/2)*sin(a/2)^31*y+720720*ax^10*ay^14*az*cos(a/2)^7*sin(a/2)^25*z+2162160*ax^10*ay^14*az^3*cos(a/2)^5*sin(a/2)^27*z+2162160*ax^10*ay^14*az^5*cos(a/2)^3*sin(a/2)^29*z+720720*ax^10*ay^14*az^7*cos(a/2)*sin(a/2)^31*z+2162160*ax^10*ay^15*az^2*cos(a/2)^5*sin(a/2)^27*y+2162160*ax^10*ay^15*az^4*cos(a/2)^3*sin(a/2)^29*y+720720*ax^10*ay^15*az^6*cos(a/2)*sin(a/2)^31*y+270270*ax^10*ay^16*az*cos(a/2)^5*sin(a/2)^27*z+540540*ax^10*ay^16*az^3*cos(a/2)^3*sin(a/2)^29*z+270270*ax^10*ay^16*az^5*cos(a/2)*sin(a/2)^31*z+540540*ax^10*ay^17*az^2*cos(a/2)^3*sin(a/2)^29*y+270270*ax^10*ay^17*az^4*cos(a/2)*sin(a/2)^31*y+60060*ax^10*ay^18*az*cos(a/2)^3*sin(a/2)^29*z+60060*ax^10*ay^18*az^3*cos(a/2)*sin(a/2)^31*z+60060*ax^10*ay^19*az^2*cos(a/2)*sin(a/2)^31*y+6006*ax^10*ay^20*az*cos(a/2)*sin(a/2)^31*z+540540*ax^11*ay^2*az^2*cos(a/2)^17*sin(a/2)^15*x+2162160*ax^11*ay^2*az^4*cos(a/2)^15*sin(a/2)^17*x+5045040*ax^11*ay^2*az^6*cos(a/2)^13*sin(a/2)^19*x+7567560*ax^11*ay^2*az^8*cos(a/2)^11*sin(a/2)^21*x+7567560*ax^11*ay^2*az^10*cos(a/2)^9*sin(a/2)^23*x+5045040*ax^11*ay^2*az^12*cos(a/2)^7*sin(a/2)^25*x+2162160*ax^11*ay^2*az^14*cos(a/2)^5*sin(a/2)^27*x+540540*ax^11*ay^2*az^16*cos(a/2)^3*sin(a/2)^29*x+60060*ax^11*ay^2*az^18*cos(a/2)*sin(a/2)^31*x+2162160*ax^11*ay^4*az^2*cos(a/2)^15*sin(a/2)^17*x+7567560*ax^11*ay^4*az^4*cos(a/2)^13*sin(a/2)^19*x+15135120*ax^11*ay^4*az^6*cos(a/2)^11*sin(a/2)^21*x+18918900*ax^11*ay^4*az^8*cos(a/2)^9*sin(a/2)^23*x+15135120*ax^11*ay^4*az^10*cos(a/2)^7*sin(a/2)^25*x+7567560*ax^11*ay^4*az^12*cos(a/2)^5*sin(a/2)^27*x+2162160*ax^11*ay^4*az^14*cos(a/2)^3*sin(a/2)^29*x+270270*ax^11*ay^4*az^16*cos(a/2)*sin(a/2)^31*x+5045040*ax^11*ay^6*az^2*cos(a/2)^13*sin(a/2)^19*x+15135120*ax^11*ay^6*az^4*cos(a/2)^11*sin(a/2)^21*x+25225200*ax^11*ay^6*az^6*cos(a/2)^9*sin(a/2)^23*x+25225200*ax^11*ay^6*az^8*cos(a/2)^7*sin(a/2)^25*x+15135120*ax^11*ay^6*az^10*cos(a/2)^5*sin(a/2)^27*x+5045040*ax^11*ay^6*az^12*cos(a/2)^3*sin(a/2)^29*x+720720*ax^11*ay^6*az^14*cos(a/2)*sin(a/2)^31*x+7567560*ax^11*ay^8*az^2*cos(a/2)^11*sin(a/2)^21*x+18918900*ax^11*ay^8*az^4*cos(a/2)^9*sin(a/2)^23*x+25225200*ax^11*ay^8*az^6*cos(a/2)^7*sin(a/2)^25*x+18918900*ax^11*ay^8*az^8*cos(a/2)^5*sin(a/2)^27*x+7567560*ax^11*ay^8*az^10*cos(a/2)^3*sin(a/2)^29*x+1261260*ax^11*ay^8*az^12*cos(a/2)*sin(a/2)^31*x+7567560*ax^11*ay^10*az^2*cos(a/2)^9*sin(a/2)^23*x+15135120*ax^11*ay^10*az^4*cos(a/2)^7*sin(a/2)^25*x+15135120*ax^11*ay^10*az^6*cos(a/2)^5*sin(a/2)^27*x+7567560*ax^11*ay^10*az^8*cos(a/2)^3*sin(a/2)^29*x+1513512*ax^11*ay^10*az^10*cos(a/2)*sin(a/2)^31*x+5045040*ax^11*ay^12*az^2*cos(a/2)^7*sin(a/2)^25*x+7567560*ax^11*ay^12*az^4*cos(a/2)^5*sin(a/2)^27*x+5045040*ax^11*ay^12*az^6*cos(a/2)^3*sin(a/2)^29*x+1261260*ax^11*ay^12*az^8*cos(a/2)*sin(a/2)^31*x+2162160*ax^11*ay^14*az^2*cos(a/2)^5*sin(a/2)^27*x+2162160*ax^11*ay^14*az^4*cos(a/2)^3*sin(a/2)^29*x+720720*ax^11*ay^14*az^6*cos(a/2)*sin(a/2)^31*x+540540*ax^11*ay^16*az^2*cos(a/2)^3*sin(a/2)^29*x+270270*ax^11*ay^16*az^4*cos(a/2)*sin(a/2)^31*x+60060*ax^11*ay^18*az^2*cos(a/2)*sin(a/2)^31*x+90090*ax^12*ay*az^2*cos(a/2)^17*sin(a/2)^15*y+360360*ax^12*ay*az^4*cos(a/2)^15*sin(a/2)^17*y+840840*ax^12*ay*az^6*cos(a/2)^13*sin(a/2)^19*y+1261260*ax^12*ay*az^8*cos(a/2)^11*sin(a/2)^21*y+1261260*ax^12*ay*az^10*cos(a/2)^9*sin(a/2)^23*y+840840*ax^12*ay*az^12*cos(a/2)^7*sin(a/2)^25*y+360360*ax^12*ay*az^14*cos(a/2)^5*sin(a/2)^27*y+90090*ax^12*ay*az^16*cos(a/2)^3*sin(a/2)^29*y+10010*ax^12*ay*az^18*cos(a/2)*sin(a/2)^31*y+90090*ax^12*ay^2*az*cos(a/2)^17*sin(a/2)^15*z+720720*ax^12*ay^2*az^3*cos(a/2)^15*sin(a/2)^17*z+2522520*ax^12*ay^2*az^5*cos(a/2)^13*sin(a/2)^19*z+5045040*ax^12*ay^2*az^7*cos(a/2)^11*sin(a/2)^21*z+6306300*ax^12*ay^2*az^9*cos(a/2)^9*sin(a/2)^23*z+5045040*ax^12*ay^2*az^11*cos(a/2)^7*sin(a/2)^25*z+2522520*ax^12*ay^2*az^13*cos(a/2)^5*sin(a/2)^27*z+720720*ax^12*ay^2*az^15*cos(a/2)^3*sin(a/2)^29*z+90090*ax^12*ay^2*az^17*cos(a/2)*sin(a/2)^31*z+720720*ax^12*ay^3*az^2*cos(a/2)^15*sin(a/2)^17*y+2522520*ax^12*ay^3*az^4*cos(a/2)^13*sin(a/2)^19*y+5045040*ax^12*ay^3*az^6*cos(a/2)^11*sin(a/2)^21*y+6306300*ax^12*ay^3*az^8*cos(a/2)^9*sin(a/2)^23*y+5045040*ax^12*ay^3*az^10*cos(a/2)^7*sin(a/2)^25*y+2522520*ax^12*ay^3*az^12*cos(a/2)^5*sin(a/2)^27*y+720720*ax^12*ay^3*az^14*cos(a/2)^3*sin(a/2)^29*y+90090*ax^12*ay^3*az^16*cos(a/2)*sin(a/2)^31*y+360360*ax^12*ay^4*az*cos(a/2)^15*sin(a/2)^17*z+2522520*ax^12*ay^4*az^3*cos(a/2)^13*sin(a/2)^19*z+7567560*ax^12*ay^4*az^5*cos(a/2)^11*sin(a/2)^21*z+12612600*ax^12*ay^4*az^7*cos(a/2)^9*sin(a/2)^23*z+12612600*ax^12*ay^4*az^9*cos(a/2)^7*sin(a/2)^25*z+7567560*ax^12*ay^4*az^11*cos(a/2)^5*sin(a/2)^27*z+2522520*ax^12*ay^4*az^13*cos(a/2)^3*sin(a/2)^29*z+360360*ax^12*ay^4*az^15*cos(a/2)*sin(a/2)^31*z+2522520*ax^12*ay^5*az^2*cos(a/2)^13*sin(a/2)^19*y+7567560*ax^12*ay^5*az^4*cos(a/2)^11*sin(a/2)^21*y+12612600*ax^12*ay^5*az^6*cos(a/2)^9*sin(a/2)^23*y+12612600*ax^12*ay^5*az^8*cos(a/2)^7*sin(a/2)^25*y+7567560*ax^12*ay^5*az^10*cos(a/2)^5*sin(a/2)^27*y+2522520*ax^12*ay^5*az^12*cos(a/2)^3*sin(a/2)^29*y+360360*ax^12*ay^5*az^14*cos(a/2)*sin(a/2)^31*y+840840*ax^12*ay^6*az*cos(a/2)^13*sin(a/2)^19*z+5045040*ax^12*ay^6*az^3*cos(a/2)^11*sin(a/2)^21*z+12612600*ax^12*ay^6*az^5*cos(a/2)^9*sin(a/2)^23*z+16816800*ax^12*ay^6*az^7*cos(a/2)^7*sin(a/2)^25*z+12612600*ax^12*ay^6*az^9*cos(a/2)^5*sin(a/2)^27*z+5045040*ax^12*ay^6*az^11*cos(a/2)^3*sin(a/2)^29*z+840840*ax^12*ay^6*az^13*cos(a/2)*sin(a/2)^31*z+5045040*ax^12*ay^7*az^2*cos(a/2)^11*sin(a/2)^21*y+12612600*ax^12*ay^7*az^4*cos(a/2)^9*sin(a/2)^23*y+16816800*ax^12*ay^7*az^6*cos(a/2)^7*sin(a/2)^25*y+12612600*ax^12*ay^7*az^8*cos(a/2)^5*sin(a/2)^27*y+5045040*ax^12*ay^7*az^10*cos(a/2)^3*sin(a/2)^29*y+840840*ax^12*ay^7*az^12*cos(a/2)*sin(a/2)^31*y+1261260*ax^12*ay^8*az*cos(a/2)^11*sin(a/2)^21*z+6306300*ax^12*ay^8*az^3*cos(a/2)^9*sin(a/2)^23*z+12612600*ax^12*ay^8*az^5*cos(a/2)^7*sin(a/2)^25*z+12612600*ax^12*ay^8*az^7*cos(a/2)^5*sin(a/2)^27*z+6306300*ax^12*ay^8*az^9*cos(a/2)^3*sin(a/2)^29*z+1261260*ax^12*ay^8*az^11*cos(a/2)*sin(a/2)^31*z+6306300*ax^12*ay^9*az^2*cos(a/2)^9*sin(a/2)^23*y+12612600*ax^12*ay^9*az^4*cos(a/2)^7*sin(a/2)^25*y+12612600*ax^12*ay^9*az^6*cos(a/2)^5*sin(a/2)^27*y+6306300*ax^12*ay^9*az^8*cos(a/2)^3*sin(a/2)^29*y+1261260*ax^12*ay^9*az^10*cos(a/2)*sin(a/2)^31*y+1261260*ax^12*ay^10*az*cos(a/2)^9*sin(a/2)^23*z+5045040*ax^12*ay^10*az^3*cos(a/2)^7*sin(a/2)^25*z+7567560*ax^12*ay^10*az^5*cos(a/2)^5*sin(a/2)^27*z+5045040*ax^12*ay^10*az^7*cos(a/2)^3*sin(a/2)^29*z+1261260*ax^12*ay^10*az^9*cos(a/2)*sin(a/2)^31*z+5045040*ax^12*ay^11*az^2*cos(a/2)^7*sin(a/2)^25*y+7567560*ax^12*ay^11*az^4*cos(a/2)^5*sin(a/2)^27*y+5045040*ax^12*ay^11*az^6*cos(a/2)^3*sin(a/2)^29*y+1261260*ax^12*ay^11*az^8*cos(a/2)*sin(a/2)^31*y+840840*ax^12*ay^12*az*cos(a/2)^7*sin(a/2)^25*z+2522520*ax^12*ay^12*az^3*cos(a/2)^5*sin(a/2)^27*z+2522520*ax^12*ay^12*az^5*cos(a/2)^3*sin(a/2)^29*z+840840*ax^12*ay^12*az^7*cos(a/2)*sin(a/2)^31*z+2522520*ax^12*ay^13*az^2*cos(a/2)^5*sin(a/2)^27*y+2522520*ax^12*ay^13*az^4*cos(a/2)^3*sin(a/2)^29*y+840840*ax^12*ay^13*az^6*cos(a/2)*sin(a/2)^31*y+360360*ax^12*ay^14*az*cos(a/2)^5*sin(a/2)^27*z+720720*ax^12*ay^14*az^3*cos(a/2)^3*sin(a/2)^29*z+360360*ax^12*ay^14*az^5*cos(a/2)*sin(a/2)^31*z+720720*ax^12*ay^15*az^2*cos(a/2)^3*sin(a/2)^29*y+360360*ax^12*ay^15*az^4*cos(a/2)*sin(a/2)^31*y+90090*ax^12*ay^16*az*cos(a/2)^3*sin(a/2)^29*z+90090*ax^12*ay^16*az^3*cos(a/2)*sin(a/2)^31*z+90090*ax^12*ay^17*az^2*cos(a/2)*sin(a/2)^31*y+10010*ax^12*ay^18*az*cos(a/2)*sin(a/2)^31*z+720720*ax^13*ay^2*az^2*cos(a/2)^15*sin(a/2)^17*x+2522520*ax^13*ay^2*az^4*cos(a/2)^13*sin(a/2)^19*x+5045040*ax^13*ay^2*az^6*cos(a/2)^11*sin(a/2)^21*x+6306300*ax^13*ay^2*az^8*cos(a/2)^9*sin(a/2)^23*x+5045040*ax^13*ay^2*az^10*cos(a/2)^7*sin(a/2)^25*x+2522520*ax^13*ay^2*az^12*cos(a/2)^5*sin(a/2)^27*x+720720*ax^13*ay^2*az^14*cos(a/2)^3*sin(a/2)^29*x+90090*ax^13*ay^2*az^16*cos(a/2)*sin(a/2)^31*x+2522520*ax^13*ay^4*az^2*cos(a/2)^13*sin(a/2)^19*x+7567560*ax^13*ay^4*az^4*cos(a/2)^11*sin(a/2)^21*x+12612600*ax^13*ay^4*az^6*cos(a/2)^9*sin(a/2)^23*x+12612600*ax^13*ay^4*az^8*cos(a/2)^7*sin(a/2)^25*x+7567560*ax^13*ay^4*az^10*cos(a/2)^5*sin(a/2)^27*x+2522520*ax^13*ay^4*az^12*cos(a/2)^3*sin(a/2)^29*x+360360*ax^13*ay^4*az^14*cos(a/2)*sin(a/2)^31*x+5045040*ax^13*ay^6*az^2*cos(a/2)^11*sin(a/2)^21*x+12612600*ax^13*ay^6*az^4*cos(a/2)^9*sin(a/2)^23*x+16816800*ax^13*ay^6*az^6*cos(a/2)^7*sin(a/2)^25*x+12612600*ax^13*ay^6*az^8*cos(a/2)^5*sin(a/2)^27*x+5045040*ax^13*ay^6*az^10*cos(a/2)^3*sin(a/2)^29*x+840840*ax^13*ay^6*az^12*cos(a/2)*sin(a/2)^31*x+6306300*ax^13*ay^8*az^2*cos(a/2)^9*sin(a/2)^23*x+12612600*ax^13*ay^8*az^4*cos(a/2)^7*sin(a/2)^25*x+12612600*ax^13*ay^8*az^6*cos(a/2)^5*sin(a/2)^27*x+6306300*ax^13*ay^8*az^8*cos(a/2)^3*sin(a/2)^29*x+1261260*ax^13*ay^8*az^10*cos(a/2)*sin(a/2)^31*x+5045040*ax^13*ay^10*az^2*cos(a/2)^7*sin(a/2)^25*x+7567560*ax^13*ay^10*az^4*cos(a/2)^5*sin(a/2)^27*x+5045040*ax^13*ay^10*az^6*cos(a/2)^3*sin(a/2)^29*x+1261260*ax^13*ay^10*az^8*cos(a/2)*sin(a/2)^31*x+2522520*ax^13*ay^12*az^2*cos(a/2)^5*sin(a/2)^27*x+2522520*ax^13*ay^12*az^4*cos(a/2)^3*sin(a/2)^29*x+840840*ax^13*ay^12*az^6*cos(a/2)*sin(a/2)^31*x+720720*ax^13*ay^14*az^2*cos(a/2)^3*sin(a/2)^29*x+360360*ax^13*ay^14*az^4*cos(a/2)*sin(a/2)^31*x+90090*ax^13*ay^16*az^2*cos(a/2)*sin(a/2)^31*x+102960*ax^14*ay*az^2*cos(a/2)^15*sin(a/2)^17*y+360360*ax^14*ay*az^4*cos(a/2)^13*sin(a/2)^19*y+720720*ax^14*ay*az^6*cos(a/2)^11*sin(a/2)^21*y+900900*ax^14*ay*az^8*cos(a/2)^9*sin(a/2)^23*y+720720*ax^14*ay*az^10*cos(a/2)^7*sin(a/2)^25*y+360360*ax^14*ay*az^12*cos(a/2)^5*sin(a/2)^27*y+102960*ax^14*ay*az^14*cos(a/2)^3*sin(a/2)^29*y+12870*ax^14*ay*az^16*cos(a/2)*sin(a/2)^31*y+102960*ax^14*ay^2*az*cos(a/2)^15*sin(a/2)^17*z+720720*ax^14*ay^2*az^3*cos(a/2)^13*sin(a/2)^19*z+2162160*ax^14*ay^2*az^5*cos(a/2)^11*sin(a/2)^21*z+3603600*ax^14*ay^2*az^7*cos(a/2)^9*sin(a/2)^23*z+3603600*ax^14*ay^2*az^9*cos(a/2)^7*sin(a/2)^25*z+2162160*ax^14*ay^2*az^11*cos(a/2)^5*sin(a/2)^27*z+720720*ax^14*ay^2*az^13*cos(a/2)^3*sin(a/2)^29*z+102960*ax^14*ay^2*az^15*cos(a/2)*sin(a/2)^31*z+720720*ax^14*ay^3*az^2*cos(a/2)^13*sin(a/2)^19*y+2162160*ax^14*ay^3*az^4*cos(a/2)^11*sin(a/2)^21*y+3603600*ax^14*ay^3*az^6*cos(a/2)^9*sin(a/2)^23*y+3603600*ax^14*ay^3*az^8*cos(a/2)^7*sin(a/2)^25*y+2162160*ax^14*ay^3*az^10*cos(a/2)^5*sin(a/2)^27*y+720720*ax^14*ay^3*az^12*cos(a/2)^3*sin(a/2)^29*y+102960*ax^14*ay^3*az^14*cos(a/2)*sin(a/2)^31*y+360360*ax^14*ay^4*az*cos(a/2)^13*sin(a/2)^19*z+2162160*ax^14*ay^4*az^3*cos(a/2)^11*sin(a/2)^21*z+5405400*ax^14*ay^4*az^5*cos(a/2)^9*sin(a/2)^23*z+7207200*ax^14*ay^4*az^7*cos(a/2)^7*sin(a/2)^25*z+5405400*ax^14*ay^4*az^9*cos(a/2)^5*sin(a/2)^27*z+2162160*ax^14*ay^4*az^11*cos(a/2)^3*sin(a/2)^29*z+360360*ax^14*ay^4*az^13*cos(a/2)*sin(a/2)^31*z+2162160*ax^14*ay^5*az^2*cos(a/2)^11*sin(a/2)^21*y+5405400*ax^14*ay^5*az^4*cos(a/2)^9*sin(a/2)^23*y+7207200*ax^14*ay^5*az^6*cos(a/2)^7*sin(a/2)^25*y+5405400*ax^14*ay^5*az^8*cos(a/2)^5*sin(a/2)^27*y+2162160*ax^14*ay^5*az^10*cos(a/2)^3*sin(a/2)^29*y+360360*ax^14*ay^5*az^12*cos(a/2)*sin(a/2)^31*y+720720*ax^14*ay^6*az*cos(a/2)^11*sin(a/2)^21*z+3603600*ax^14*ay^6*az^3*cos(a/2)^9*sin(a/2)^23*z+7207200*ax^14*ay^6*az^5*cos(a/2)^7*sin(a/2)^25*z+7207200*ax^14*ay^6*az^7*cos(a/2)^5*sin(a/2)^27*z+3603600*ax^14*ay^6*az^9*cos(a/2)^3*sin(a/2)^29*z+720720*ax^14*ay^6*az^11*cos(a/2)*sin(a/2)^31*z+3603600*ax^14*ay^7*az^2*cos(a/2)^9*sin(a/2)^23*y+7207200*ax^14*ay^7*az^4*cos(a/2)^7*sin(a/2)^25*y+7207200*ax^14*ay^7*az^6*cos(a/2)^5*sin(a/2)^27*y+3603600*ax^14*ay^7*az^8*cos(a/2)^3*sin(a/2)^29*y+720720*ax^14*ay^7*az^10*cos(a/2)*sin(a/2)^31*y+900900*ax^14*ay^8*az*cos(a/2)^9*sin(a/2)^23*z+3603600*ax^14*ay^8*az^3*cos(a/2)^7*sin(a/2)^25*z+5405400*ax^14*ay^8*az^5*cos(a/2)^5*sin(a/2)^27*z+3603600*ax^14*ay^8*az^7*cos(a/2)^3*sin(a/2)^29*z+900900*ax^14*ay^8*az^9*cos(a/2)*sin(a/2)^31*z+3603600*ax^14*ay^9*az^2*cos(a/2)^7*sin(a/2)^25*y+5405400*ax^14*ay^9*az^4*cos(a/2)^5*sin(a/2)^27*y+3603600*ax^14*ay^9*az^6*cos(a/2)^3*sin(a/2)^29*y+900900*ax^14*ay^9*az^8*cos(a/2)*sin(a/2)^31*y+720720*ax^14*ay^10*az*cos(a/2)^7*sin(a/2)^25*z+2162160*ax^14*ay^10*az^3*cos(a/2)^5*sin(a/2)^27*z+2162160*ax^14*ay^10*az^5*cos(a/2)^3*sin(a/2)^29*z+720720*ax^14*ay^10*az^7*cos(a/2)*sin(a/2)^31*z+2162160*ax^14*ay^11*az^2*cos(a/2)^5*sin(a/2)^27*y+2162160*ax^14*ay^11*az^4*cos(a/2)^3*sin(a/2)^29*y+720720*ax^14*ay^11*az^6*cos(a/2)*sin(a/2)^31*y+360360*ax^14*ay^12*az*cos(a/2)^5*sin(a/2)^27*z+720720*ax^14*ay^12*az^3*cos(a/2)^3*sin(a/2)^29*z+360360*ax^14*ay^12*az^5*cos(a/2)*sin(a/2)^31*z+720720*ax^14*ay^13*az^2*cos(a/2)^3*sin(a/2)^29*y+360360*ax^14*ay^13*az^4*cos(a/2)*sin(a/2)^31*y+102960*ax^14*ay^14*az*cos(a/2)^3*sin(a/2)^29*z+102960*ax^14*ay^14*az^3*cos(a/2)*sin(a/2)^31*z+102960*ax^14*ay^15*az^2*cos(a/2)*sin(a/2)^31*y+12870*ax^14*ay^16*az*cos(a/2)*sin(a/2)^31*z+720720*ax^15*ay^2*az^2*cos(a/2)^13*sin(a/2)^19*x+2162160*ax^15*ay^2*az^4*cos(a/2)^11*sin(a/2)^21*x+3603600*ax^15*ay^2*az^6*cos(a/2)^9*sin(a/2)^23*x+3603600*ax^15*ay^2*az^8*cos(a/2)^7*sin(a/2)^25*x+2162160*ax^15*ay^2*az^10*cos(a/2)^5*sin(a/2)^27*x+720720*ax^15*ay^2*az^12*cos(a/2)^3*sin(a/2)^29*x+102960*ax^15*ay^2*az^14*cos(a/2)*sin(a/2)^31*x+2162160*ax^15*ay^4*az^2*cos(a/2)^11*sin(a/2)^21*x+5405400*ax^15*ay^4*az^4*cos(a/2)^9*sin(a/2)^23*x+7207200*ax^15*ay^4*az^6*cos(a/2)^7*sin(a/2)^25*x+5405400*ax^15*ay^4*az^8*cos(a/2)^5*sin(a/2)^27*x+2162160*ax^15*ay^4*az^10*cos(a/2)^3*sin(a/2)^29*x+360360*ax^15*ay^4*az^12*cos(a/2)*sin(a/2)^31*x+3603600*ax^15*ay^6*az^2*cos(a/2)^9*sin(a/2)^23*x+7207200*ax^15*ay^6*az^4*cos(a/2)^7*sin(a/2)^25*x+7207200*ax^15*ay^6*az^6*cos(a/2)^5*sin(a/2)^27*x+3603600*ax^15*ay^6*az^8*cos(a/2)^3*sin(a/2)^29*x+720720*ax^15*ay^6*az^10*cos(a/2)*sin(a/2)^31*x+3603600*ax^15*ay^8*az^2*cos(a/2)^7*sin(a/2)^25*x+5405400*ax^15*ay^8*az^4*cos(a/2)^5*sin(a/2)^27*x+3603600*ax^15*ay^8*az^6*cos(a/2)^3*sin(a/2)^29*x+900900*ax^15*ay^8*az^8*cos(a/2)*sin(a/2)^31*x+2162160*ax^15*ay^10*az^2*cos(a/2)^5*sin(a/2)^27*x+2162160*ax^15*ay^10*az^4*cos(a/2)^3*sin(a/2)^29*x+720720*ax^15*ay^10*az^6*cos(a/2)*sin(a/2)^31*x+720720*ax^15*ay^12*az^2*cos(a/2)^3*sin(a/2)^29*x+360360*ax^15*ay^12*az^4*cos(a/2)*sin(a/2)^31*x+102960*ax^15*ay^14*az^2*cos(a/2)*sin(a/2)^31*x+90090*ax^16*ay*az^2*cos(a/2)^13*sin(a/2)^19*y+270270*ax^16*ay*az^4*cos(a/2)^11*sin(a/2)^21*y+450450*ax^16*ay*az^6*cos(a/2)^9*sin(a/2)^23*y+450450*ax^16*ay*az^8*cos(a/2)^7*sin(a/2)^25*y+270270*ax^16*ay*az^10*cos(a/2)^5*sin(a/2)^27*y+90090*ax^16*ay*az^12*cos(a/2)^3*sin(a/2)^29*y+12870*ax^16*ay*az^14*cos(a/2)*sin(a/2)^31*y+90090*ax^16*ay^2*az*cos(a/2)^13*sin(a/2)^19*z+540540*ax^16*ay^2*az^3*cos(a/2)^11*sin(a/2)^21*z+1351350*ax^16*ay^2*az^5*cos(a/2)^9*sin(a/2)^23*z+1801800*ax^16*ay^2*az^7*cos(a/2)^7*sin(a/2)^25*z+1351350*ax^16*ay^2*az^9*cos(a/2)^5*sin(a/2)^27*z+540540*ax^16*ay^2*az^11*cos(a/2)^3*sin(a/2)^29*z+90090*ax^16*ay^2*az^13*cos(a/2)*sin(a/2)^31*z+540540*ax^16*ay^3*az^2*cos(a/2)^11*sin(a/2)^21*y+1351350*ax^16*ay^3*az^4*cos(a/2)^9*sin(a/2)^23*y+1801800*ax^16*ay^3*az^6*cos(a/2)^7*sin(a/2)^25*y+1351350*ax^16*ay^3*az^8*cos(a/2)^5*sin(a/2)^27*y+540540*ax^16*ay^3*az^10*cos(a/2)^3*sin(a/2)^29*y+90090*ax^16*ay^3*az^12*cos(a/2)*sin(a/2)^31*y+270270*ax^16*ay^4*az*cos(a/2)^11*sin(a/2)^21*z+1351350*ax^16*ay^4*az^3*cos(a/2)^9*sin(a/2)^23*z+2702700*ax^16*ay^4*az^5*cos(a/2)^7*sin(a/2)^25*z+2702700*ax^16*ay^4*az^7*cos(a/2)^5*sin(a/2)^27*z+1351350*ax^16*ay^4*az^9*cos(a/2)^3*sin(a/2)^29*z+270270*ax^16*ay^4*az^11*cos(a/2)*sin(a/2)^31*z+1351350*ax^16*ay^5*az^2*cos(a/2)^9*sin(a/2)^23*y+2702700*ax^16*ay^5*az^4*cos(a/2)^7*sin(a/2)^25*y+2702700*ax^16*ay^5*az^6*cos(a/2)^5*sin(a/2)^27*y+1351350*ax^16*ay^5*az^8*cos(a/2)^3*sin(a/2)^29*y+270270*ax^16*ay^5*az^10*cos(a/2)*sin(a/2)^31*y+450450*ax^16*ay^6*az*cos(a/2)^9*sin(a/2)^23*z+1801800*ax^16*ay^6*az^3*cos(a/2)^7*sin(a/2)^25*z+2702700*ax^16*ay^6*az^5*cos(a/2)^5*sin(a/2)^27*z+1801800*ax^16*ay^6*az^7*cos(a/2)^3*sin(a/2)^29*z+450450*ax^16*ay^6*az^9*cos(a/2)*sin(a/2)^31*z+1801800*ax^16*ay^7*az^2*cos(a/2)^7*sin(a/2)^25*y+2702700*ax^16*ay^7*az^4*cos(a/2)^5*sin(a/2)^27*y+1801800*ax^16*ay^7*az^6*cos(a/2)^3*sin(a/2)^29*y+450450*ax^16*ay^7*az^8*cos(a/2)*sin(a/2)^31*y+450450*ax^16*ay^8*az*cos(a/2)^7*sin(a/2)^25*z+1351350*ax^16*ay^8*az^3*cos(a/2)^5*sin(a/2)^27*z+1351350*ax^16*ay^8*az^5*cos(a/2)^3*sin(a/2)^29*z+450450*ax^16*ay^8*az^7*cos(a/2)*sin(a/2)^31*z+1351350*ax^16*ay^9*az^2*cos(a/2)^5*sin(a/2)^27*y+1351350*ax^16*ay^9*az^4*cos(a/2)^3*sin(a/2)^29*y+450450*ax^16*ay^9*az^6*cos(a/2)*sin(a/2)^31*y+270270*ax^16*ay^10*az*cos(a/2)^5*sin(a/2)^27*z+540540*ax^16*ay^10*az^3*cos(a/2)^3*sin(a/2)^29*z+270270*ax^16*ay^10*az^5*cos(a/2)*sin(a/2)^31*z+540540*ax^16*ay^11*az^2*cos(a/2)^3*sin(a/2)^29*y+270270*ax^16*ay^11*az^4*cos(a/2)*sin(a/2)^31*y+90090*ax^16*ay^12*az*cos(a/2)^3*sin(a/2)^29*z+90090*ax^16*ay^12*az^3*cos(a/2)*sin(a/2)^31*z+90090*ax^16*ay^13*az^2*cos(a/2)*sin(a/2)^31*y+12870*ax^16*ay^14*az*cos(a/2)*sin(a/2)^31*z+540540*ax^17*ay^2*az^2*cos(a/2)^11*sin(a/2)^21*x+1351350*ax^17*ay^2*az^4*cos(a/2)^9*sin(a/2)^23*x+1801800*ax^17*ay^2*az^6*cos(a/2)^7*sin(a/2)^25*x+1351350*ax^17*ay^2*az^8*cos(a/2)^5*sin(a/2)^27*x+540540*ax^17*ay^2*az^10*cos(a/2)^3*sin(a/2)^29*x+90090*ax^17*ay^2*az^12*cos(a/2)*sin(a/2)^31*x+1351350*ax^17*ay^4*az^2*cos(a/2)^9*sin(a/2)^23*x+2702700*ax^17*ay^4*az^4*cos(a/2)^7*sin(a/2)^25*x+2702700*ax^17*ay^4*az^6*cos(a/2)^5*sin(a/2)^27*x+1351350*ax^17*ay^4*az^8*cos(a/2)^3*sin(a/2)^29*x+270270*ax^17*ay^4*az^10*cos(a/2)*sin(a/2)^31*x+1801800*ax^17*ay^6*az^2*cos(a/2)^7*sin(a/2)^25*x+2702700*ax^17*ay^6*az^4*cos(a/2)^5*sin(a/2)^27*x+1801800*ax^17*ay^6*az^6*cos(a/2)^3*sin(a/2)^29*x+450450*ax^17*ay^6*az^8*cos(a/2)*sin(a/2)^31*x+1351350*ax^17*ay^8*az^2*cos(a/2)^5*sin(a/2)^27*x+1351350*ax^17*ay^8*az^4*cos(a/2)^3*sin(a/2)^29*x+450450*ax^17*ay^8*az^6*cos(a/2)*sin(a/2)^31*x+540540*ax^17*ay^10*az^2*cos(a/2)^3*sin(a/2)^29*x+270270*ax^17*ay^10*az^4*cos(a/2)*sin(a/2)^31*x+90090*ax^17*ay^12*az^2*cos(a/2)*sin(a/2)^31*x+60060*ax^18*ay*az^2*cos(a/2)^11*sin(a/2)^21*y+150150*ax^18*ay*az^4*cos(a/2)^9*sin(a/2)^23*y+200200*ax^18*ay*az^6*cos(a/2)^7*sin(a/2)^25*y+150150*ax^18*ay*az^8*cos(a/2)^5*sin(a/2)^27*y+60060*ax^18*ay*az^10*cos(a/2)^3*sin(a/2)^29*y+10010*ax^18*ay*az^12*cos(a/2)*sin(a/2)^31*y+60060*ax^18*ay^2*az*cos(a/2)^11*sin(a/2)^21*z+300300*ax^18*ay^2*az^3*cos(a/2)^9*sin(a/2)^23*z+600600*ax^18*ay^2*az^5*cos(a/2)^7*sin(a/2)^25*z+600600*ax^18*ay^2*az^7*cos(a/2)^5*sin(a/2)^27*z+300300*ax^18*ay^2*az^9*cos(a/2)^3*sin(a/2)^29*z+60060*ax^18*ay^2*az^11*cos(a/2)*sin(a/2)^31*z+300300*ax^18*ay^3*az^2*cos(a/2)^9*sin(a/2)^23*y+600600*ax^18*ay^3*az^4*cos(a/2)^7*sin(a/2)^25*y+600600*ax^18*ay^3*az^6*cos(a/2)^5*sin(a/2)^27*y+300300*ax^18*ay^3*az^8*cos(a/2)^3*sin(a/2)^29*y+60060*ax^18*ay^3*az^10*cos(a/2)*sin(a/2)^31*y+150150*ax^18*ay^4*az*cos(a/2)^9*sin(a/2)^23*z+600600*ax^18*ay^4*az^3*cos(a/2)^7*sin(a/2)^25*z+900900*ax^18*ay^4*az^5*cos(a/2)^5*sin(a/2)^27*z+600600*ax^18*ay^4*az^7*cos(a/2)^3*sin(a/2)^29*z+150150*ax^18*ay^4*az^9*cos(a/2)*sin(a/2)^31*z+600600*ax^18*ay^5*az^2*cos(a/2)^7*sin(a/2)^25*y+900900*ax^18*ay^5*az^4*cos(a/2)^5*sin(a/2)^27*y+600600*ax^18*ay^5*az^6*cos(a/2)^3*sin(a/2)^29*y+150150*ax^18*ay^5*az^8*cos(a/2)*sin(a/2)^31*y+200200*ax^18*ay^6*az*cos(a/2)^7*sin(a/2)^25*z+600600*ax^18*ay^6*az^3*cos(a/2)^5*sin(a/2)^27*z+600600*ax^18*ay^6*az^5*cos(a/2)^3*sin(a/2)^29*z+200200*ax^18*ay^6*az^7*cos(a/2)*sin(a/2)^31*z+600600*ax^18*ay^7*az^2*cos(a/2)^5*sin(a/2)^27*y+600600*ax^18*ay^7*az^4*cos(a/2)^3*sin(a/2)^29*y+200200*ax^18*ay^7*az^6*cos(a/2)*sin(a/2)^31*y+150150*ax^18*ay^8*az*cos(a/2)^5*sin(a/2)^27*z+300300*ax^18*ay^8*az^3*cos(a/2)^3*sin(a/2)^29*z+150150*ax^18*ay^8*az^5*cos(a/2)*sin(a/2)^31*z+300300*ax^18*ay^9*az^2*cos(a/2)^3*sin(a/2)^29*y+150150*ax^18*ay^9*az^4*cos(a/2)*sin(a/2)^31*y+60060*ax^18*ay^10*az*cos(a/2)^3*sin(a/2)^29*z+60060*ax^18*ay^10*az^3*cos(a/2)*sin(a/2)^31*z+60060*ax^18*ay^11*az^2*cos(a/2)*sin(a/2)^31*y+10010*ax^18*ay^12*az*cos(a/2)*sin(a/2)^31*z+300300*ax^19*ay^2*az^2*cos(a/2)^9*sin(a/2)^23*x+600600*ax^19*ay^2*az^4*cos(a/2)^7*sin(a/2)^25*x+600600*ax^19*ay^2*az^6*cos(a/2)^5*sin(a/2)^27*x+300300*ax^19*ay^2*az^8*cos(a/2)^3*sin(a/2)^29*x+60060*ax^19*ay^2*az^10*cos(a/2)*sin(a/2)^31*x+600600*ax^19*ay^4*az^2*cos(a/2)^7*sin(a/2)^25*x+900900*ax^19*ay^4*az^4*cos(a/2)^5*sin(a/2)^27*x+600600*ax^19*ay^4*az^6*cos(a/2)^3*sin(a/2)^29*x+150150*ax^19*ay^4*az^8*cos(a/2)*sin(a/2)^31*x+600600*ax^19*ay^6*az^2*cos(a/2)^5*sin(a/2)^27*x+600600*ax^19*ay^6*az^4*cos(a/2)^3*sin(a/2)^29*x+200200*ax^19*ay^6*az^6*cos(a/2)*sin(a/2)^31*x+300300*ax^19*ay^8*az^2*cos(a/2)^3*sin(a/2)^29*x+150150*ax^19*ay^8*az^4*cos(a/2)*sin(a/2)^31*x+60060*ax^19*ay^10*az^2*cos(a/2)*sin(a/2)^31*x+30030*ax^20*ay*az^2*cos(a/2)^9*sin(a/2)^23*y+60060*ax^20*ay*az^4*cos(a/2)^7*sin(a/2)^25*y+60060*ax^20*ay*az^6*cos(a/2)^5*sin(a/2)^27*y+30030*ax^20*ay*az^8*cos(a/2)^3*sin(a/2)^29*y+6006*ax^20*ay*az^10*cos(a/2)*sin(a/2)^31*y+30030*ax^20*ay^2*az*cos(a/2)^9*sin(a/2)^23*z+120120*ax^20*ay^2*az^3*cos(a/2)^7*sin(a/2)^25*z+180180*ax^20*ay^2*az^5*cos(a/2)^5*sin(a/2)^27*z+120120*ax^20*ay^2*az^7*cos(a/2)^3*sin(a/2)^29*z+30030*ax^20*ay^2*az^9*cos(a/2)*sin(a/2)^31*z+120120*ax^20*ay^3*az^2*cos(a/2)^7*sin(a/2)^25*y+180180*ax^20*ay^3*az^4*cos(a/2)^5*sin(a/2)^27*y+120120*ax^20*ay^3*az^6*cos(a/2)^3*sin(a/2)^29*y+30030*ax^20*ay^3*az^8*cos(a/2)*sin(a/2)^31*y+60060*ax^20*ay^4*az*cos(a/2)^7*sin(a/2)^25*z+180180*ax^20*ay^4*az^3*cos(a/2)^5*sin(a/2)^27*z+180180*ax^20*ay^4*az^5*cos(a/2)^3*sin(a/2)^29*z+60060*ax^20*ay^4*az^7*cos(a/2)*sin(a/2)^31*z+180180*ax^20*ay^5*az^2*cos(a/2)^5*sin(a/2)^27*y+180180*ax^20*ay^5*az^4*cos(a/2)^3*sin(a/2)^29*y+60060*ax^20*ay^5*az^6*cos(a/2)*sin(a/2)^31*y+60060*ax^20*ay^6*az*cos(a/2)^5*sin(a/2)^27*z+120120*ax^20*ay^6*az^3*cos(a/2)^3*sin(a/2)^29*z+60060*ax^20*ay^6*az^5*cos(a/2)*sin(a/2)^31*z+120120*ax^20*ay^7*az^2*cos(a/2)^3*sin(a/2)^29*y+60060*ax^20*ay^7*az^4*cos(a/2)*sin(a/2)^31*y+30030*ax^20*ay^8*az*cos(a/2)^3*sin(a/2)^29*z+30030*ax^20*ay^8*az^3*cos(a/2)*sin(a/2)^31*z+30030*ax^20*ay^9*az^2*cos(a/2)*sin(a/2)^31*y+6006*ax^20*ay^10*az*cos(a/2)*sin(a/2)^31*z+120120*ax^21*ay^2*az^2*cos(a/2)^7*sin(a/2)^25*x+180180*ax^21*ay^2*az^4*cos(a/2)^5*sin(a/2)^27*x+120120*ax^21*ay^2*az^6*cos(a/2)^3*sin(a/2)^29*x+30030*ax^21*ay^2*az^8*cos(a/2)*sin(a/2)^31*x+180180*ax^21*ay^4*az^2*cos(a/2)^5*sin(a/2)^27*x+180180*ax^21*ay^4*az^4*cos(a/2)^3*sin(a/2)^29*x+60060*ax^21*ay^4*az^6*cos(a/2)*sin(a/2)^31*x+120120*ax^21*ay^6*az^2*cos(a/2)^3*sin(a/2)^29*x+60060*ax^21*ay^6*az^4*cos(a/2)*sin(a/2)^31*x+30030*ax^21*ay^8*az^2*cos(a/2)*sin(a/2)^31*x+10920*ax^22*ay*az^2*cos(a/2)^7*sin(a/2)^25*y+16380*ax^22*ay*az^4*cos(a/2)^5*sin(a/2)^27*y+10920*ax^22*ay*az^6*cos(a/2)^3*sin(a/2)^29*y+2730*ax^22*ay*az^8*cos(a/2)*sin(a/2)^31*y+10920*ax^22*ay^2*az*cos(a/2)^7*sin(a/2)^25*z+32760*ax^22*ay^2*az^3*cos(a/2)^5*sin(a/2)^27*z+32760*ax^22*ay^2*az^5*cos(a/2)^3*sin(a/2)^29*z+10920*ax^22*ay^2*az^7*cos(a/2)*sin(a/2)^31*z+32760*ax^22*ay^3*az^2*cos(a/2)^5*sin(a/2)^27*y+32760*ax^22*ay^3*az^4*cos(a/2)^3*sin(a/2)^29*y+10920*ax^22*ay^3*az^6*cos(a/2)*sin(a/2)^31*y+16380*ax^22*ay^4*az*cos(a/2)^5*sin(a/2)^27*z+32760*ax^22*ay^4*az^3*cos(a/2)^3*sin(a/2)^29*z+16380*ax^22*ay^4*az^5*cos(a/2)*sin(a/2)^31*z+32760*ax^22*ay^5*az^2*cos(a/2)^3*sin(a/2)^29*y+16380*ax^22*ay^5*az^4*cos(a/2)*sin(a/2)^31*y+10920*ax^22*ay^6*az*cos(a/2)^3*sin(a/2)^29*z+10920*ax^22*ay^6*az^3*cos(a/2)*sin(a/2)^31*z+10920*ax^22*ay^7*az^2*cos(a/2)*sin(a/2)^31*y+2730*ax^22*ay^8*az*cos(a/2)*sin(a/2)^31*z+32760*ax^23*ay^2*az^2*cos(a/2)^5*sin(a/2)^27*x+32760*ax^23*ay^2*az^4*cos(a/2)^3*sin(a/2)^29*x+10920*ax^23*ay^2*az^6*cos(a/2)*sin(a/2)^31*x+32760*ax^23*ay^4*az^2*cos(a/2)^3*sin(a/2)^29*x+16380*ax^23*ay^4*az^4*cos(a/2)*sin(a/2)^31*x+10920*ax^23*ay^6*az^2*cos(a/2)*sin(a/2)^31*x+2730*ax^24*ay*az^2*cos(a/2)^5*sin(a/2)^27*y+2730*ax^24*ay*az^4*cos(a/2)^3*sin(a/2)^29*y+910*ax^24*ay*az^6*cos(a/2)*sin(a/2)^31*y+2730*ax^24*ay^2*az*cos(a/2)^5*sin(a/2)^27*z+5460*ax^24*ay^2*az^3*cos(a/2)^3*sin(a/2)^29*z+2730*ax^24*ay^2*az^5*cos(a/2)*sin(a/2)^31*z+5460*ax^24*ay^3*az^2*cos(a/2)^3*sin(a/2)^29*y+2730*ax^24*ay^3*az^4*cos(a/2)*sin(a/2)^31*y+2730*ax^24*ay^4*az*cos(a/2)^3*sin(a/2)^29*z+2730*ax^24*ay^4*az^3*cos(a/2)*sin(a/2)^31*z+2730*ax^24*ay^5*az^2*cos(a/2)*sin(a/2)^31*y+910*ax^24*ay^6*az*cos(a/2)*sin(a/2)^31*z+5460*ax^25*ay^2*az^2*cos(a/2)^3*sin(a/2)^29*x+2730*ax^25*ay^2*az^4*cos(a/2)*sin(a/2)^31*x+2730*ax^25*ay^4*az^2*cos(a/2)*sin(a/2)^31*x+420*ax^26*ay*az^2*cos(a/2)^3*sin(a/2)^29*y+210*ax^26*ay*az^4*cos(a/2)*sin(a/2)^31*y+420*ax^26*ay^2*az*cos(a/2)^3*sin(a/2)^29*z+420*ax^26*ay^2*az^3*cos(a/2)*sin(a/2)^31*z+420*ax^26*ay^3*az^2*cos(a/2)*sin(a/2)^31*y+210*ax^26*ay^4*az*cos(a/2)*sin(a/2)^31*z+420*ax^27*ay^2*az^2*cos(a/2)*sin(a/2)^31*x+30*ax^28*ay*az^2*cos(a/2)*sin(a/2)^31*y+30*ax^28*ay^2*az*cos(a/2)*sin(a/2)^31*z)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+az^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*az^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*az^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*az^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*az^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*az^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*az^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*az^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*az^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*az^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*az^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*az^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*az^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*az^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*az^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*az^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*az^30*sin(a/2)^32+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*az^28*sin(a/2)^32+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*az^26*sin(a/2)^32+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*az^24*sin(a/2)^32+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*az^22*sin(a/2)^32+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*az^20*sin(a/2)^32+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*az^18*sin(a/2)^32+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*az^16*sin(a/2)^32+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*az^14*sin(a/2)^32+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*az^12*sin(a/2)^32+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*az^10*sin(a/2)^32+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*az^8*sin(a/2)^32+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*az^6*sin(a/2)^32+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*az^4*sin(a/2)^32+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*az^2*sin(a/2)^32+16*ay^30*cos(a/2)^2*sin(a/2)^30+16*az^2*cos(a/2)^30*sin(a/2)^2+120*az^4*cos(a/2)^28*sin(a/2)^4+560*az^6*cos(a/2)^26*sin(a/2)^6+1820*az^8*cos(a/2)^24*sin(a/2)^8+4368*az^10*cos(a/2)^22*sin(a/2)^10+8008*az^12*cos(a/2)^20*sin(a/2)^12+11440*az^14*cos(a/2)^18*sin(a/2)^14+12870*az^16*cos(a/2)^16*sin(a/2)^16+11440*az^18*cos(a/2)^14*sin(a/2)^18+8008*az^20*cos(a/2)^12*sin(a/2)^20+4368*az^22*cos(a/2)^10*sin(a/2)^22+1820*az^24*cos(a/2)^8*sin(a/2)^24+560*az^26*cos(a/2)^6*sin(a/2)^26+120*az^28*cos(a/2)^4*sin(a/2)^28+16*az^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*az^28*sin(a/2)^32+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*az^26*sin(a/2)^32+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*az^24*sin(a/2)^32+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*az^22*sin(a/2)^32+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*az^20*sin(a/2)^32+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*az^18*sin(a/2)^32+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*az^16*sin(a/2)^32+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*az^14*sin(a/2)^32+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*az^12*sin(a/2)^32+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*az^10*sin(a/2)^32+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*az^8*sin(a/2)^32+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*az^6*sin(a/2)^32+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*az^4*sin(a/2)^32+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*az^2*sin(a/2)^32+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+240*ax^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*az^26*sin(a/2)^32+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*az^24*sin(a/2)^32+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*az^22*sin(a/2)^32+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*az^20*sin(a/2)^32+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*az^18*sin(a/2)^32+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*az^16*sin(a/2)^32+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*az^14*sin(a/2)^32+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*az^12*sin(a/2)^32+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*az^10*sin(a/2)^32+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*az^8*sin(a/2)^32+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*az^6*sin(a/2)^32+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*az^4*sin(a/2)^32+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*az^2*sin(a/2)^32+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+1680*ax^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*az^24*sin(a/2)^32+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*az^22*sin(a/2)^32+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*az^20*sin(a/2)^32+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*az^18*sin(a/2)^32+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*az^16*sin(a/2)^32+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*az^14*sin(a/2)^32+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*az^12*sin(a/2)^32+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*az^10*sin(a/2)^32+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*az^8*sin(a/2)^32+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*az^6*sin(a/2)^32+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*az^4*sin(a/2)^32+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*az^2*sin(a/2)^32+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+7280*ax^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*az^22*sin(a/2)^32+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*az^20*sin(a/2)^32+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*az^18*sin(a/2)^32+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*az^16*sin(a/2)^32+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*az^14*sin(a/2)^32+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*az^12*sin(a/2)^32+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*az^10*sin(a/2)^32+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*az^8*sin(a/2)^32+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*az^6*sin(a/2)^32+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*az^4*sin(a/2)^32+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*az^2*sin(a/2)^32+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+21840*ax^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*az^20*sin(a/2)^32+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*az^18*sin(a/2)^32+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*az^16*sin(a/2)^32+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*az^14*sin(a/2)^32+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*az^12*sin(a/2)^32+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*az^10*sin(a/2)^32+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*az^8*sin(a/2)^32+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*az^6*sin(a/2)^32+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*az^4*sin(a/2)^32+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*az^2*sin(a/2)^32+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+48048*ax^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*az^18*sin(a/2)^32+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*az^16*sin(a/2)^32+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*az^14*sin(a/2)^32+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*az^12*sin(a/2)^32+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*az^10*sin(a/2)^32+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*az^8*sin(a/2)^32+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*az^6*sin(a/2)^32+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*az^4*sin(a/2)^32+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*az^2*sin(a/2)^32+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+80080*ax^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*az^16*sin(a/2)^32+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*az^14*sin(a/2)^32+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*az^12*sin(a/2)^32+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*az^10*sin(a/2)^32+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*az^8*sin(a/2)^32+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*az^6*sin(a/2)^32+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*az^4*sin(a/2)^32+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*az^2*sin(a/2)^32+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*az^14*sin(a/2)^32+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*az^12*sin(a/2)^32+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*az^10*sin(a/2)^32+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*az^8*sin(a/2)^32+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*az^6*sin(a/2)^32+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*az^4*sin(a/2)^32+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*az^2*sin(a/2)^32+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+102960*ax^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*az^12*sin(a/2)^32+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*az^10*sin(a/2)^32+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*az^8*sin(a/2)^32+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*az^6*sin(a/2)^32+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*az^4*sin(a/2)^32+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*az^2*sin(a/2)^32+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+80080*ax^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*az^10*sin(a/2)^32+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*az^8*sin(a/2)^32+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*az^6*sin(a/2)^32+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*az^4*sin(a/2)^32+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*az^2*sin(a/2)^32+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+48048*ax^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*az^8*sin(a/2)^32+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*az^6*sin(a/2)^32+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*az^4*sin(a/2)^32+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*az^2*sin(a/2)^32+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+21840*ax^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*az^6*sin(a/2)^32+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*az^4*sin(a/2)^32+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*az^2*sin(a/2)^32+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+7280*ax^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*az^4*sin(a/2)^32+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*az^2*sin(a/2)^32+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+1680*ax^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*az^2*sin(a/2)^32+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30+240*ax^28*az^2*cos(a/2)^2*sin(a/2)^30+240*ay^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ay^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ay^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ay^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ay^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ay^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ay^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ay^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ay^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ay^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ay^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ay^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ay^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ay^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ay^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ay^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ay^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ay^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ay^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ay^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ay^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ay^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ay^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ay^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ay^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ay^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ay^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ay^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ay^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ay^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ay^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ay^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ay^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ay^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ay^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ay^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ay^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ay^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ay^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ay^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ay^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ay^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ay^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ay^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ay^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ay^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ay^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ay^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ay^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ay^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ay^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ay^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ay^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ay^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ay^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ay^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ay^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ay^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ay^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ay^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ay^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ay^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ay^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ay^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ay^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ay^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ay^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ay^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ay^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ay^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ay^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ay^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ay^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ay^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ay^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ay^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ay^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ay^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ay^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ay^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ay^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ay^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ay^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ay^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ay^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ay^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ay^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ay^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ay^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ay^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ay^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ay^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ay^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ay^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ay^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ay^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ay^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ay^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ay^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ay^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ay^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ay^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ay^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ay^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ay^28*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^2*az^2*cos(a/2)^26*sin(a/2)^6+21840*ax^2*ay^2*az^4*cos(a/2)^24*sin(a/2)^8+87360*ax^2*ay^2*az^6*cos(a/2)^22*sin(a/2)^10+240240*ax^2*ay^2*az^8*cos(a/2)^20*sin(a/2)^12+480480*ax^2*ay^2*az^10*cos(a/2)^18*sin(a/2)^14+720720*ax^2*ay^2*az^12*cos(a/2)^16*sin(a/2)^16+823680*ax^2*ay^2*az^14*cos(a/2)^14*sin(a/2)^18+720720*ax^2*ay^2*az^16*cos(a/2)^12*sin(a/2)^20+480480*ax^2*ay^2*az^18*cos(a/2)^10*sin(a/2)^22+240240*ax^2*ay^2*az^20*cos(a/2)^8*sin(a/2)^24+87360*ax^2*ay^2*az^22*cos(a/2)^6*sin(a/2)^26+21840*ax^2*ay^2*az^24*cos(a/2)^4*sin(a/2)^28+3360*ax^2*ay^2*az^26*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^4*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^2*ay^4*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^4*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^4*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^4*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^4*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^4*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^4*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^4*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^4*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^4*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^4*az^24*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^6*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^6*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^2*ay^6*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^6*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^6*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^6*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^6*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^6*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^6*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^6*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^6*az^22*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^8*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^8*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^8*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^2*ay^8*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^8*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^8*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^8*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^8*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^8*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^8*az^20*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^10*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^10*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^10*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^10*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^2*ay^10*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^10*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^10*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^10*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^10*az^18*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^12*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^12*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^12*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^12*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^12*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^2*ay^12*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^12*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^12*az^16*cos(a/2)^2*sin(a/2)^30+823680*ax^2*ay^14*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^14*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^14*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^14*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^14*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^14*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^2*ay^14*az^14*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^16*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^16*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^16*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^16*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^16*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^16*az^12*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^18*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^18*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^18*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^18*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^18*az^10*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^20*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^20*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^20*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^20*az^8*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^22*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^22*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^22*az^6*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^24*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^24*az^4*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^26*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^2*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^4*ay^2*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^4*ay^2*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^4*ay^2*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^4*ay^2*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^4*ay^2*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^4*ay^2*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^4*ay^2*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^4*ay^2*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^4*ay^2*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^4*ay^2*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^4*ay^2*az^24*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^4*az^2*cos(a/2)^22*sin(a/2)^10+720720*ax^4*ay^4*az^4*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^4*az^6*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^4*az^8*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^4*az^10*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^4*az^12*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^4*az^14*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^4*az^16*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^4*az^18*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^4*az^20*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^4*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^6*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^6*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^4*ay^6*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^6*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^6*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^6*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^6*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^6*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^6*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^6*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^8*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^8*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^8*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^4*ay^8*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^8*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^8*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^8*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^8*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^8*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^10*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^10*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^10*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^10*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^4*ay^10*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^10*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^10*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^10*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^12*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^12*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^12*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^12*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^12*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^4*ay^12*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^12*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^14*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^14*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^14*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^14*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^14*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^14*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^16*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^16*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^16*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^16*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^16*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^18*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^18*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^18*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^18*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^20*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^20*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^20*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^22*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^22*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^24*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^2*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^6*ay^2*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^6*ay^2*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^6*ay^2*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^6*ay^2*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^6*ay^2*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^6*ay^2*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^6*ay^2*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^6*ay^2*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^6*ay^2*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^6*ay^2*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^4*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^6*ay^4*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^4*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^4*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^4*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^4*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^4*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^4*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^4*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^4*az^20*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^6*az^2*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^6*az^4*cos(a/2)^16*sin(a/2)^16+19219200*ax^6*ay^6*az^6*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^6*az^8*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^6*az^10*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^6*az^12*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^6*az^14*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^6*az^16*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^6*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^8*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^8*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^8*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^6*ay^8*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^8*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^8*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^8*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^8*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^10*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^10*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^10*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^10*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^6*ay^10*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^10*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^10*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^6*ay^12*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^12*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^12*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^12*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^12*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^6*ay^12*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^14*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^14*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^14*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^14*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^14*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^16*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^16*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^16*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^16*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^18*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^18*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^18*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^20*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^20*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^22*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^2*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^8*ay^2*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^8*ay^2*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^8*ay^2*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^8*ay^2*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^8*ay^2*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^8*ay^2*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^8*ay^2*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^8*ay^2*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^8*ay^2*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^4*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^8*ay^4*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^4*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^4*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^4*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^4*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^4*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^4*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^4*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^6*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^6*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^8*ay^6*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^6*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^6*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^6*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^6*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^6*az^16*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^8*az^2*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^8*az^4*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^8*az^6*cos(a/2)^10*sin(a/2)^22+63063000*ax^8*ay^8*az^8*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^8*az^10*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^8*az^12*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^8*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^10*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^10*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^10*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^10*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^8*ay^10*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^10*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^12*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^12*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^12*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^12*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^12*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^14*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^14*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^14*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^14*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^16*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^16*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^16*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^18*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^18*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^20*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^2*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^10*ay^2*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^10*ay^2*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^10*ay^2*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^10*ay^2*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^10*ay^2*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^10*ay^2*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^10*ay^2*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^10*ay^2*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^4*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^10*ay^4*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^4*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^4*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^4*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^4*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^4*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^4*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^6*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^6*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^10*ay^6*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^6*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^6*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^6*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^6*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^8*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^8*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^8*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^10*ay^8*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^8*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^8*az^12*cos(a/2)^2*sin(a/2)^30+12108096*ax^10*ay^10*az^2*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^10*az^4*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^10*az^6*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^10*az^8*cos(a/2)^4*sin(a/2)^28+12108096*ax^10*ay^10*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^12*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^12*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^12*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^12*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^14*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^14*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^14*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^16*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^16*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^18*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^2*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^12*ay^2*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^12*ay^2*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^12*ay^2*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^12*ay^2*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^12*ay^2*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^12*ay^2*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^12*ay^2*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^4*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^12*ay^4*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^4*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^4*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^4*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^4*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^4*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^6*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^6*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^12*ay^6*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^6*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^6*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^6*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^8*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^8*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^8*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^12*ay^8*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^8*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^10*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^10*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^10*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^10*az^8*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^12*az^2*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^12*az^4*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^12*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^14*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^14*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^16*az^2*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^2*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^14*ay^2*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^14*ay^2*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^14*ay^2*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^14*ay^2*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^14*ay^2*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^14*ay^2*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^4*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^14*ay^4*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^4*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^4*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^4*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^4*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^6*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^6*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^14*ay^6*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^6*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^6*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^14*ay^8*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^8*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^8*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^14*ay^8*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^10*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^10*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^10*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^12*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^12*az^4*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^14*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^2*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^16*ay^2*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^16*ay^2*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^16*ay^2*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^16*ay^2*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^16*ay^2*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^4*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^16*ay^4*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^4*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^4*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^4*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^6*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^6*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^16*ay^6*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^6*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^8*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^8*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^8*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^10*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^10*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^12*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^2*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^18*ay^2*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^18*ay^2*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^18*ay^2*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^18*ay^2*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^4*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^18*ay^4*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^4*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^4*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^18*ay^6*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^6*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^18*ay^6*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^8*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^8*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^10*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^2*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^20*ay^2*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^20*ay^2*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^20*ay^2*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^4*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^20*ay^4*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^4*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^6*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^6*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^8*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^2*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^22*ay^2*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^22*ay^2*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^22*ay^4*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^22*ay^4*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^6*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^2*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^24*ay^2*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^4*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^26*ay^2*az^2*cos(a/2)^2*sin(a/2)^30)},{(-2*ax*cos(a/2)^7*sin(a/2)-6*ax^3*cos(a/2)^5*sin(a/2)^3-6*ax^5*cos(a/2)^3*sin(a/2)^5-2*ax^7*cos(a/2)*sin(a/2)^7-6*ax*ay^2*cos(a/2)^5*sin(a/2)^3-6*ax*ay^4*cos(a/2)^3*sin(a/2)^5-2*ax*ay^6*cos(a/2)*sin(a/2)^7-6*ax*az^2*cos(a/2)^5*sin(a/2)^3-6*ax*az^4*cos(a/2)^3*sin(a/2)^5-2*ax*az^6*cos(a/2)*sin(a/2)^7-12*ax^3*ay^2*cos(a/2)^3*sin(a/2)^5-6*ax^3*ay^4*cos(a/2)*sin(a/2)^7-12*ax^3*az^2*cos(a/2)^3*sin(a/2)^5-6*ax^3*az^4*cos(a/2)*sin(a/2)^7-6*ax^5*ay^2*cos(a/2)*sin(a/2)^7-6*ax^5*az^2*cos(a/2)*sin(a/2)^7-12*ax*ay^2*az^2*cos(a/2)^3*sin(a/2)^5-6*ax*ay^2*az^4*cos(a/2)*sin(a/2)^7-6*ax*ay^4*az^2*cos(a/2)*sin(a/2)^7-12*ax^3*ay^2*az^2*cos(a/2)*sin(a/2)^7)/(cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6),(-cos(a/2)^32*x+ax^32*sin(a/2)^32*x-ay^32*sin(a/2)^32*x-az^32*sin(a/2)^32*x+2*ax*ay^31*sin(a/2)^32*y+2*ax*az^31*sin(a/2)^32*z-14*ax^2*ay^30*sin(a/2)^32*x-14*ax^2*az^30*sin(a/2)^32*x-14*ax^2*cos(a/2)^30*sin(a/2)^2*x+30*ax^3*ay^29*sin(a/2)^32*y+30*ax^3*az^29*sin(a/2)^32*z-90*ax^4*ay^28*sin(a/2)^32*x-90*ax^4*az^28*sin(a/2)^32*x-90*ax^4*cos(a/2)^28*sin(a/2)^4*x+210*ax^5*ay^27*sin(a/2)^32*y+210*ax^5*az^27*sin(a/2)^32*z-350*ax^6*ay^26*sin(a/2)^32*x-350*ax^6*az^26*sin(a/2)^32*x-350*ax^6*cos(a/2)^26*sin(a/2)^6*x+910*ax^7*ay^25*sin(a/2)^32*y+910*ax^7*az^25*sin(a/2)^32*z-910*ax^8*ay^24*sin(a/2)^32*x-910*ax^8*az^24*sin(a/2)^32*x-910*ax^8*cos(a/2)^24*sin(a/2)^8*x+2730*ax^9*ay^23*sin(a/2)^32*y+2730*ax^9*az^23*sin(a/2)^32*z-1638*ax^10*ay^22*sin(a/2)^32*x-1638*ax^10*az^22*sin(a/2)^32*x-1638*ax^10*cos(a/2)^22*sin(a/2)^10*x+6006*ax^11*ay^21*sin(a/2)^32*y+6006*ax^11*az^21*sin(a/2)^32*z-2002*ax^12*ay^20*sin(a/2)^32*x-2002*ax^12*az^20*sin(a/2)^32*x-2002*ax^12*cos(a/2)^20*sin(a/2)^12*x+10010*ax^13*ay^19*sin(a/2)^32*y+10010*ax^13*az^19*sin(a/2)^32*z-1430*ax^14*ay^18*sin(a/2)^32*x-1430*ax^14*az^18*sin(a/2)^32*x-1430*ax^14*cos(a/2)^18*sin(a/2)^14*x+12870*ax^15*ay^17*sin(a/2)^32*y+12870*ax^15*az^17*sin(a/2)^32*z+12870*ax^17*ay^15*sin(a/2)^32*y+12870*ax^17*az^15*sin(a/2)^32*z+1430*ax^18*ay^14*sin(a/2)^32*x+1430*ax^18*az^14*sin(a/2)^32*x+1430*ax^18*cos(a/2)^14*sin(a/2)^18*x+10010*ax^19*ay^13*sin(a/2)^32*y+10010*ax^19*az^13*sin(a/2)^32*z+2002*ax^20*ay^12*sin(a/2)^32*x+2002*ax^20*az^12*sin(a/2)^32*x+2002*ax^20*cos(a/2)^12*sin(a/2)^20*x+6006*ax^21*ay^11*sin(a/2)^32*y+6006*ax^21*az^11*sin(a/2)^32*z+1638*ax^22*ay^10*sin(a/2)^32*x+1638*ax^22*az^10*sin(a/2)^32*x+1638*ax^22*cos(a/2)^10*sin(a/2)^22*x+2730*ax^23*ay^9*sin(a/2)^32*y+2730*ax^23*az^9*sin(a/2)^32*z+910*ax^24*ay^8*sin(a/2)^32*x+910*ax^24*az^8*sin(a/2)^32*x+910*ax^24*cos(a/2)^8*sin(a/2)^24*x+910*ax^25*ay^7*sin(a/2)^32*y+910*ax^25*az^7*sin(a/2)^32*z+350*ax^26*ay^6*sin(a/2)^32*x+350*ax^26*az^6*sin(a/2)^32*x+350*ax^26*cos(a/2)^6*sin(a/2)^26*x+210*ax^27*ay^5*sin(a/2)^32*y+210*ax^27*az^5*sin(a/2)^32*z+90*ax^28*ay^4*sin(a/2)^32*x+90*ax^28*az^4*sin(a/2)^32*x+90*ax^28*cos(a/2)^4*sin(a/2)^28*x+30*ax^29*ay^3*sin(a/2)^32*y+30*ax^29*az^3*sin(a/2)^32*z+14*ax^30*ay^2*sin(a/2)^32*x+14*ax^30*az^2*sin(a/2)^32*x+14*ax^30*cos(a/2)^2*sin(a/2)^30*x+2*ax^31*ay*sin(a/2)^32*y+2*ax^31*az*sin(a/2)^32*z-16*ay^2*az^30*sin(a/2)^32*x-16*ay^2*cos(a/2)^30*sin(a/2)^2*x-120*ay^4*az^28*sin(a/2)^32*x-120*ay^4*cos(a/2)^28*sin(a/2)^4*x-560*ay^6*az^26*sin(a/2)^32*x-560*ay^6*cos(a/2)^26*sin(a/2)^6*x-1820*ay^8*az^24*sin(a/2)^32*x-1820*ay^8*cos(a/2)^24*sin(a/2)^8*x-4368*ay^10*az^22*sin(a/2)^32*x-4368*ay^10*cos(a/2)^22*sin(a/2)^10*x-8008*ay^12*az^20*sin(a/2)^32*x-8008*ay^12*cos(a/2)^20*sin(a/2)^12*x-11440*ay^14*az^18*sin(a/2)^32*x-11440*ay^14*cos(a/2)^18*sin(a/2)^14*x-12870*ay^16*az^16*sin(a/2)^32*x-12870*ay^16*cos(a/2)^16*sin(a/2)^16*x-11440*ay^18*az^14*sin(a/2)^32*x-11440*ay^18*cos(a/2)^14*sin(a/2)^18*x-8008*ay^20*az^12*sin(a/2)^32*x-8008*ay^20*cos(a/2)^12*sin(a/2)^20*x-4368*ay^22*az^10*sin(a/2)^32*x-4368*ay^22*cos(a/2)^10*sin(a/2)^22*x-1820*ay^24*az^8*sin(a/2)^32*x-1820*ay^24*cos(a/2)^8*sin(a/2)^24*x-560*ay^26*az^6*sin(a/2)^32*x-560*ay^26*cos(a/2)^6*sin(a/2)^26*x-120*ay^28*az^4*sin(a/2)^32*x-120*ay^28*cos(a/2)^4*sin(a/2)^28*x-16*ay^30*az^2*sin(a/2)^32*x-16*ay^30*cos(a/2)^2*sin(a/2)^30*x-16*az^2*cos(a/2)^30*sin(a/2)^2*x-120*az^4*cos(a/2)^28*sin(a/2)^4*x-560*az^6*cos(a/2)^26*sin(a/2)^6*x-1820*az^8*cos(a/2)^24*sin(a/2)^8*x-4368*az^10*cos(a/2)^22*sin(a/2)^10*x-8008*az^12*cos(a/2)^20*sin(a/2)^12*x-11440*az^14*cos(a/2)^18*sin(a/2)^14*x-12870*az^16*cos(a/2)^16*sin(a/2)^16*x-11440*az^18*cos(a/2)^14*sin(a/2)^18*x-8008*az^20*cos(a/2)^12*sin(a/2)^20*x-4368*az^22*cos(a/2)^10*sin(a/2)^22*x-1820*az^24*cos(a/2)^8*sin(a/2)^24*x-560*az^26*cos(a/2)^6*sin(a/2)^26*x-120*az^28*cos(a/2)^4*sin(a/2)^28*x-16*az^30*cos(a/2)^2*sin(a/2)^30*x+2*ax*ay*az^30*sin(a/2)^32*y+2*ax*ay*cos(a/2)^30*sin(a/2)^2*y+30*ax*ay^2*az^29*sin(a/2)^32*z+30*ax*ay^3*az^28*sin(a/2)^32*y+30*ax*ay^3*cos(a/2)^28*sin(a/2)^4*y+210*ax*ay^4*az^27*sin(a/2)^32*z+210*ax*ay^5*az^26*sin(a/2)^32*y+210*ax*ay^5*cos(a/2)^26*sin(a/2)^6*y+910*ax*ay^6*az^25*sin(a/2)^32*z+910*ax*ay^7*az^24*sin(a/2)^32*y+910*ax*ay^7*cos(a/2)^24*sin(a/2)^8*y+2730*ax*ay^8*az^23*sin(a/2)^32*z+2730*ax*ay^9*az^22*sin(a/2)^32*y+2730*ax*ay^9*cos(a/2)^22*sin(a/2)^10*y+6006*ax*ay^10*az^21*sin(a/2)^32*z+6006*ax*ay^11*az^20*sin(a/2)^32*y+6006*ax*ay^11*cos(a/2)^20*sin(a/2)^12*y+10010*ax*ay^12*az^19*sin(a/2)^32*z+10010*ax*ay^13*az^18*sin(a/2)^32*y+10010*ax*ay^13*cos(a/2)^18*sin(a/2)^14*y+12870*ax*ay^14*az^17*sin(a/2)^32*z+12870*ax*ay^15*az^16*sin(a/2)^32*y+12870*ax*ay^15*cos(a/2)^16*sin(a/2)^16*y+12870*ax*ay^16*az^15*sin(a/2)^32*z+12870*ax*ay^17*az^14*sin(a/2)^32*y+12870*ax*ay^17*cos(a/2)^14*sin(a/2)^18*y+10010*ax*ay^18*az^13*sin(a/2)^32*z+10010*ax*ay^19*az^12*sin(a/2)^32*y+10010*ax*ay^19*cos(a/2)^12*sin(a/2)^20*y+6006*ax*ay^20*az^11*sin(a/2)^32*z+6006*ax*ay^21*az^10*sin(a/2)^32*y+6006*ax*ay^21*cos(a/2)^10*sin(a/2)^22*y+2730*ax*ay^22*az^9*sin(a/2)^32*z+2730*ax*ay^23*az^8*sin(a/2)^32*y+2730*ax*ay^23*cos(a/2)^8*sin(a/2)^24*y+910*ax*ay^24*az^7*sin(a/2)^32*z+910*ax*ay^25*az^6*sin(a/2)^32*y+910*ax*ay^25*cos(a/2)^6*sin(a/2)^26*y+210*ax*ay^26*az^5*sin(a/2)^32*z+210*ax*ay^27*az^4*sin(a/2)^32*y+210*ax*ay^27*cos(a/2)^4*sin(a/2)^28*y+30*ax*ay^28*az^3*sin(a/2)^32*z+30*ax*ay^29*az^2*sin(a/2)^32*y+30*ax*ay^29*cos(a/2)^2*sin(a/2)^30*y+2*ax*ay^30*az*sin(a/2)^32*z+2*ax*az*cos(a/2)^30*sin(a/2)^2*z+30*ax*az^3*cos(a/2)^28*sin(a/2)^4*z+210*ax*az^5*cos(a/2)^26*sin(a/2)^6*z+910*ax*az^7*cos(a/2)^24*sin(a/2)^8*z+2730*ax*az^9*cos(a/2)^22*sin(a/2)^10*z+6006*ax*az^11*cos(a/2)^20*sin(a/2)^12*z+10010*ax*az^13*cos(a/2)^18*sin(a/2)^14*z+12870*ax*az^15*cos(a/2)^16*sin(a/2)^16*z+12870*ax*az^17*cos(a/2)^14*sin(a/2)^18*z+10010*ax*az^19*cos(a/2)^12*sin(a/2)^20*z+6006*ax*az^21*cos(a/2)^10*sin(a/2)^22*z+2730*ax*az^23*cos(a/2)^8*sin(a/2)^24*z+910*ax*az^25*cos(a/2)^6*sin(a/2)^26*z+210*ax*az^27*cos(a/2)^4*sin(a/2)^28*z+30*ax*az^29*cos(a/2)^2*sin(a/2)^30*z-210*ax^2*ay^2*az^28*sin(a/2)^32*x-210*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4*x-1470*ax^2*ay^4*az^26*sin(a/2)^32*x-1470*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6*x-6370*ax^2*ay^6*az^24*sin(a/2)^32*x-6370*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8*x-19110*ax^2*ay^8*az^22*sin(a/2)^32*x-19110*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10*x-42042*ax^2*ay^10*az^20*sin(a/2)^32*x-42042*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12*x-70070*ax^2*ay^12*az^18*sin(a/2)^32*x-70070*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14*x-90090*ax^2*ay^14*az^16*sin(a/2)^32*x-90090*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16*x-90090*ax^2*ay^16*az^14*sin(a/2)^32*x-90090*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18*x-70070*ax^2*ay^18*az^12*sin(a/2)^32*x-70070*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20*x-42042*ax^2*ay^20*az^10*sin(a/2)^32*x-42042*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22*x-19110*ax^2*ay^22*az^8*sin(a/2)^32*x-19110*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24*x-6370*ax^2*ay^24*az^6*sin(a/2)^32*x-6370*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26*x-1470*ax^2*ay^26*az^4*sin(a/2)^32*x-1470*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28*x-210*ax^2*ay^28*az^2*sin(a/2)^32*x-210*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30*x-210*ax^2*az^2*cos(a/2)^28*sin(a/2)^4*x-1470*ax^2*az^4*cos(a/2)^26*sin(a/2)^6*x-6370*ax^2*az^6*cos(a/2)^24*sin(a/2)^8*x-19110*ax^2*az^8*cos(a/2)^22*sin(a/2)^10*x-42042*ax^2*az^10*cos(a/2)^20*sin(a/2)^12*x-70070*ax^2*az^12*cos(a/2)^18*sin(a/2)^14*x-90090*ax^2*az^14*cos(a/2)^16*sin(a/2)^16*x-90090*ax^2*az^16*cos(a/2)^14*sin(a/2)^18*x-70070*ax^2*az^18*cos(a/2)^12*sin(a/2)^20*x-42042*ax^2*az^20*cos(a/2)^10*sin(a/2)^22*x-19110*ax^2*az^22*cos(a/2)^8*sin(a/2)^24*x-6370*ax^2*az^24*cos(a/2)^6*sin(a/2)^26*x-1470*ax^2*az^26*cos(a/2)^4*sin(a/2)^28*x-210*ax^2*az^28*cos(a/2)^2*sin(a/2)^30*x+30*ax^3*ay*az^28*sin(a/2)^32*y+30*ax^3*ay*cos(a/2)^28*sin(a/2)^4*y+420*ax^3*ay^2*az^27*sin(a/2)^32*z+420*ax^3*ay^3*az^26*sin(a/2)^32*y+420*ax^3*ay^3*cos(a/2)^26*sin(a/2)^6*y+2730*ax^3*ay^4*az^25*sin(a/2)^32*z+2730*ax^3*ay^5*az^24*sin(a/2)^32*y+2730*ax^3*ay^5*cos(a/2)^24*sin(a/2)^8*y+10920*ax^3*ay^6*az^23*sin(a/2)^32*z+10920*ax^3*ay^7*az^22*sin(a/2)^32*y+10920*ax^3*ay^7*cos(a/2)^22*sin(a/2)^10*y+30030*ax^3*ay^8*az^21*sin(a/2)^32*z+30030*ax^3*ay^9*az^20*sin(a/2)^32*y+30030*ax^3*ay^9*cos(a/2)^20*sin(a/2)^12*y+60060*ax^3*ay^10*az^19*sin(a/2)^32*z+60060*ax^3*ay^11*az^18*sin(a/2)^32*y+60060*ax^3*ay^11*cos(a/2)^18*sin(a/2)^14*y+90090*ax^3*ay^12*az^17*sin(a/2)^32*z+90090*ax^3*ay^13*az^16*sin(a/2)^32*y+90090*ax^3*ay^13*cos(a/2)^16*sin(a/2)^16*y+102960*ax^3*ay^14*az^15*sin(a/2)^32*z+102960*ax^3*ay^15*az^14*sin(a/2)^32*y+102960*ax^3*ay^15*cos(a/2)^14*sin(a/2)^18*y+90090*ax^3*ay^16*az^13*sin(a/2)^32*z+90090*ax^3*ay^17*az^12*sin(a/2)^32*y+90090*ax^3*ay^17*cos(a/2)^12*sin(a/2)^20*y+60060*ax^3*ay^18*az^11*sin(a/2)^32*z+60060*ax^3*ay^19*az^10*sin(a/2)^32*y+60060*ax^3*ay^19*cos(a/2)^10*sin(a/2)^22*y+30030*ax^3*ay^20*az^9*sin(a/2)^32*z+30030*ax^3*ay^21*az^8*sin(a/2)^32*y+30030*ax^3*ay^21*cos(a/2)^8*sin(a/2)^24*y+10920*ax^3*ay^22*az^7*sin(a/2)^32*z+10920*ax^3*ay^23*az^6*sin(a/2)^32*y+10920*ax^3*ay^23*cos(a/2)^6*sin(a/2)^26*y+2730*ax^3*ay^24*az^5*sin(a/2)^32*z+2730*ax^3*ay^25*az^4*sin(a/2)^32*y+2730*ax^3*ay^25*cos(a/2)^4*sin(a/2)^28*y+420*ax^3*ay^26*az^3*sin(a/2)^32*z+420*ax^3*ay^27*az^2*sin(a/2)^32*y+420*ax^3*ay^27*cos(a/2)^2*sin(a/2)^30*y+30*ax^3*ay^28*az*sin(a/2)^32*z+30*ax^3*az*cos(a/2)^28*sin(a/2)^4*z+420*ax^3*az^3*cos(a/2)^26*sin(a/2)^6*z+2730*ax^3*az^5*cos(a/2)^24*sin(a/2)^8*z+10920*ax^3*az^7*cos(a/2)^22*sin(a/2)^10*z+30030*ax^3*az^9*cos(a/2)^20*sin(a/2)^12*z+60060*ax^3*az^11*cos(a/2)^18*sin(a/2)^14*z+90090*ax^3*az^13*cos(a/2)^16*sin(a/2)^16*z+102960*ax^3*az^15*cos(a/2)^14*sin(a/2)^18*z+90090*ax^3*az^17*cos(a/2)^12*sin(a/2)^20*z+60060*ax^3*az^19*cos(a/2)^10*sin(a/2)^22*z+30030*ax^3*az^21*cos(a/2)^8*sin(a/2)^24*z+10920*ax^3*az^23*cos(a/2)^6*sin(a/2)^26*z+2730*ax^3*az^25*cos(a/2)^4*sin(a/2)^28*z+420*ax^3*az^27*cos(a/2)^2*sin(a/2)^30*z-1260*ax^4*ay^2*az^26*sin(a/2)^32*x-1260*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6*x-8190*ax^4*ay^4*az^24*sin(a/2)^32*x-8190*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8*x-32760*ax^4*ay^6*az^22*sin(a/2)^32*x-32760*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10*x-90090*ax^4*ay^8*az^20*sin(a/2)^32*x-90090*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12*x-180180*ax^4*ay^10*az^18*sin(a/2)^32*x-180180*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14*x-270270*ax^4*ay^12*az^16*sin(a/2)^32*x-270270*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16*x-308880*ax^4*ay^14*az^14*sin(a/2)^32*x-308880*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18*x-270270*ax^4*ay^16*az^12*sin(a/2)^32*x-270270*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20*x-180180*ax^4*ay^18*az^10*sin(a/2)^32*x-180180*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22*x-90090*ax^4*ay^20*az^8*sin(a/2)^32*x-90090*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24*x-32760*ax^4*ay^22*az^6*sin(a/2)^32*x-32760*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26*x-8190*ax^4*ay^24*az^4*sin(a/2)^32*x-8190*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28*x-1260*ax^4*ay^26*az^2*sin(a/2)^32*x-1260*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30*x-1260*ax^4*az^2*cos(a/2)^26*sin(a/2)^6*x-8190*ax^4*az^4*cos(a/2)^24*sin(a/2)^8*x-32760*ax^4*az^6*cos(a/2)^22*sin(a/2)^10*x-90090*ax^4*az^8*cos(a/2)^20*sin(a/2)^12*x-180180*ax^4*az^10*cos(a/2)^18*sin(a/2)^14*x-270270*ax^4*az^12*cos(a/2)^16*sin(a/2)^16*x-308880*ax^4*az^14*cos(a/2)^14*sin(a/2)^18*x-270270*ax^4*az^16*cos(a/2)^12*sin(a/2)^20*x-180180*ax^4*az^18*cos(a/2)^10*sin(a/2)^22*x-90090*ax^4*az^20*cos(a/2)^8*sin(a/2)^24*x-32760*ax^4*az^22*cos(a/2)^6*sin(a/2)^26*x-8190*ax^4*az^24*cos(a/2)^4*sin(a/2)^28*x-1260*ax^4*az^26*cos(a/2)^2*sin(a/2)^30*x+210*ax^5*ay*az^26*sin(a/2)^32*y+210*ax^5*ay*cos(a/2)^26*sin(a/2)^6*y+2730*ax^5*ay^2*az^25*sin(a/2)^32*z+2730*ax^5*ay^3*az^24*sin(a/2)^32*y+2730*ax^5*ay^3*cos(a/2)^24*sin(a/2)^8*y+16380*ax^5*ay^4*az^23*sin(a/2)^32*z+16380*ax^5*ay^5*az^22*sin(a/2)^32*y+16380*ax^5*ay^5*cos(a/2)^22*sin(a/2)^10*y+60060*ax^5*ay^6*az^21*sin(a/2)^32*z+60060*ax^5*ay^7*az^20*sin(a/2)^32*y+60060*ax^5*ay^7*cos(a/2)^20*sin(a/2)^12*y+150150*ax^5*ay^8*az^19*sin(a/2)^32*z+150150*ax^5*ay^9*az^18*sin(a/2)^32*y+150150*ax^5*ay^9*cos(a/2)^18*sin(a/2)^14*y+270270*ax^5*ay^10*az^17*sin(a/2)^32*z+270270*ax^5*ay^11*az^16*sin(a/2)^32*y+270270*ax^5*ay^11*cos(a/2)^16*sin(a/2)^16*y+360360*ax^5*ay^12*az^15*sin(a/2)^32*z+360360*ax^5*ay^13*az^14*sin(a/2)^32*y+360360*ax^5*ay^13*cos(a/2)^14*sin(a/2)^18*y+360360*ax^5*ay^14*az^13*sin(a/2)^32*z+360360*ax^5*ay^15*az^12*sin(a/2)^32*y+360360*ax^5*ay^15*cos(a/2)^12*sin(a/2)^20*y+270270*ax^5*ay^16*az^11*sin(a/2)^32*z+270270*ax^5*ay^17*az^10*sin(a/2)^32*y+270270*ax^5*ay^17*cos(a/2)^10*sin(a/2)^22*y+150150*ax^5*ay^18*az^9*sin(a/2)^32*z+150150*ax^5*ay^19*az^8*sin(a/2)^32*y+150150*ax^5*ay^19*cos(a/2)^8*sin(a/2)^24*y+60060*ax^5*ay^20*az^7*sin(a/2)^32*z+60060*ax^5*ay^21*az^6*sin(a/2)^32*y+60060*ax^5*ay^21*cos(a/2)^6*sin(a/2)^26*y+16380*ax^5*ay^22*az^5*sin(a/2)^32*z+16380*ax^5*ay^23*az^4*sin(a/2)^32*y+16380*ax^5*ay^23*cos(a/2)^4*sin(a/2)^28*y+2730*ax^5*ay^24*az^3*sin(a/2)^32*z+2730*ax^5*ay^25*az^2*sin(a/2)^32*y+2730*ax^5*ay^25*cos(a/2)^2*sin(a/2)^30*y+210*ax^5*ay^26*az*sin(a/2)^32*z+210*ax^5*az*cos(a/2)^26*sin(a/2)^6*z+2730*ax^5*az^3*cos(a/2)^24*sin(a/2)^8*z+16380*ax^5*az^5*cos(a/2)^22*sin(a/2)^10*z+60060*ax^5*az^7*cos(a/2)^20*sin(a/2)^12*z+150150*ax^5*az^9*cos(a/2)^18*sin(a/2)^14*z+270270*ax^5*az^11*cos(a/2)^16*sin(a/2)^16*z+360360*ax^5*az^13*cos(a/2)^14*sin(a/2)^18*z+360360*ax^5*az^15*cos(a/2)^12*sin(a/2)^20*z+270270*ax^5*az^17*cos(a/2)^10*sin(a/2)^22*z+150150*ax^5*az^19*cos(a/2)^8*sin(a/2)^24*z+60060*ax^5*az^21*cos(a/2)^6*sin(a/2)^26*z+16380*ax^5*az^23*cos(a/2)^4*sin(a/2)^28*z+2730*ax^5*az^25*cos(a/2)^2*sin(a/2)^30*z-4550*ax^6*ay^2*az^24*sin(a/2)^32*x-4550*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8*x-27300*ax^6*ay^4*az^22*sin(a/2)^32*x-27300*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10*x-100100*ax^6*ay^6*az^20*sin(a/2)^32*x-100100*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12*x-250250*ax^6*ay^8*az^18*sin(a/2)^32*x-250250*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14*x-450450*ax^6*ay^10*az^16*sin(a/2)^32*x-450450*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16*x-600600*ax^6*ay^12*az^14*sin(a/2)^32*x-600600*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18*x-600600*ax^6*ay^14*az^12*sin(a/2)^32*x-600600*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20*x-450450*ax^6*ay^16*az^10*sin(a/2)^32*x-450450*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22*x-250250*ax^6*ay^18*az^8*sin(a/2)^32*x-250250*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24*x-100100*ax^6*ay^20*az^6*sin(a/2)^32*x-100100*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26*x-27300*ax^6*ay^22*az^4*sin(a/2)^32*x-27300*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28*x-4550*ax^6*ay^24*az^2*sin(a/2)^32*x-4550*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30*x-4550*ax^6*az^2*cos(a/2)^24*sin(a/2)^8*x-27300*ax^6*az^4*cos(a/2)^22*sin(a/2)^10*x-100100*ax^6*az^6*cos(a/2)^20*sin(a/2)^12*x-250250*ax^6*az^8*cos(a/2)^18*sin(a/2)^14*x-450450*ax^6*az^10*cos(a/2)^16*sin(a/2)^16*x-600600*ax^6*az^12*cos(a/2)^14*sin(a/2)^18*x-600600*ax^6*az^14*cos(a/2)^12*sin(a/2)^20*x-450450*ax^6*az^16*cos(a/2)^10*sin(a/2)^22*x-250250*ax^6*az^18*cos(a/2)^8*sin(a/2)^24*x-100100*ax^6*az^20*cos(a/2)^6*sin(a/2)^26*x-27300*ax^6*az^22*cos(a/2)^4*sin(a/2)^28*x-4550*ax^6*az^24*cos(a/2)^2*sin(a/2)^30*x+910*ax^7*ay*az^24*sin(a/2)^32*y+910*ax^7*ay*cos(a/2)^24*sin(a/2)^8*y+10920*ax^7*ay^2*az^23*sin(a/2)^32*z+10920*ax^7*ay^3*az^22*sin(a/2)^32*y+10920*ax^7*ay^3*cos(a/2)^22*sin(a/2)^10*y+60060*ax^7*ay^4*az^21*sin(a/2)^32*z+60060*ax^7*ay^5*az^20*sin(a/2)^32*y+60060*ax^7*ay^5*cos(a/2)^20*sin(a/2)^12*y+200200*ax^7*ay^6*az^19*sin(a/2)^32*z+200200*ax^7*ay^7*az^18*sin(a/2)^32*y+200200*ax^7*ay^7*cos(a/2)^18*sin(a/2)^14*y+450450*ax^7*ay^8*az^17*sin(a/2)^32*z+450450*ax^7*ay^9*az^16*sin(a/2)^32*y+450450*ax^7*ay^9*cos(a/2)^16*sin(a/2)^16*y+720720*ax^7*ay^10*az^15*sin(a/2)^32*z+720720*ax^7*ay^11*az^14*sin(a/2)^32*y+720720*ax^7*ay^11*cos(a/2)^14*sin(a/2)^18*y+840840*ax^7*ay^12*az^13*sin(a/2)^32*z+840840*ax^7*ay^13*az^12*sin(a/2)^32*y+840840*ax^7*ay^13*cos(a/2)^12*sin(a/2)^20*y+720720*ax^7*ay^14*az^11*sin(a/2)^32*z+720720*ax^7*ay^15*az^10*sin(a/2)^32*y+720720*ax^7*ay^15*cos(a/2)^10*sin(a/2)^22*y+450450*ax^7*ay^16*az^9*sin(a/2)^32*z+450450*ax^7*ay^17*az^8*sin(a/2)^32*y+450450*ax^7*ay^17*cos(a/2)^8*sin(a/2)^24*y+200200*ax^7*ay^18*az^7*sin(a/2)^32*z+200200*ax^7*ay^19*az^6*sin(a/2)^32*y+200200*ax^7*ay^19*cos(a/2)^6*sin(a/2)^26*y+60060*ax^7*ay^20*az^5*sin(a/2)^32*z+60060*ax^7*ay^21*az^4*sin(a/2)^32*y+60060*ax^7*ay^21*cos(a/2)^4*sin(a/2)^28*y+10920*ax^7*ay^22*az^3*sin(a/2)^32*z+10920*ax^7*ay^23*az^2*sin(a/2)^32*y+10920*ax^7*ay^23*cos(a/2)^2*sin(a/2)^30*y+910*ax^7*ay^24*az*sin(a/2)^32*z+910*ax^7*az*cos(a/2)^24*sin(a/2)^8*z+10920*ax^7*az^3*cos(a/2)^22*sin(a/2)^10*z+60060*ax^7*az^5*cos(a/2)^20*sin(a/2)^12*z+200200*ax^7*az^7*cos(a/2)^18*sin(a/2)^14*z+450450*ax^7*az^9*cos(a/2)^16*sin(a/2)^16*z+720720*ax^7*az^11*cos(a/2)^14*sin(a/2)^18*z+840840*ax^7*az^13*cos(a/2)^12*sin(a/2)^20*z+720720*ax^7*az^15*cos(a/2)^10*sin(a/2)^22*z+450450*ax^7*az^17*cos(a/2)^8*sin(a/2)^24*z+200200*ax^7*az^19*cos(a/2)^6*sin(a/2)^26*z+60060*ax^7*az^21*cos(a/2)^4*sin(a/2)^28*z+10920*ax^7*az^23*cos(a/2)^2*sin(a/2)^30*z-10920*ax^8*ay^2*az^22*sin(a/2)^32*x-10920*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10*x-60060*ax^8*ay^4*az^20*sin(a/2)^32*x-60060*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12*x-200200*ax^8*ay^6*az^18*sin(a/2)^32*x-200200*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14*x-450450*ax^8*ay^8*az^16*sin(a/2)^32*x-450450*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16*x-720720*ax^8*ay^10*az^14*sin(a/2)^32*x-720720*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18*x-840840*ax^8*ay^12*az^12*sin(a/2)^32*x-840840*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20*x-720720*ax^8*ay^14*az^10*sin(a/2)^32*x-720720*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22*x-450450*ax^8*ay^16*az^8*sin(a/2)^32*x-450450*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24*x-200200*ax^8*ay^18*az^6*sin(a/2)^32*x-200200*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26*x-60060*ax^8*ay^20*az^4*sin(a/2)^32*x-60060*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28*x-10920*ax^8*ay^22*az^2*sin(a/2)^32*x-10920*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30*x-10920*ax^8*az^2*cos(a/2)^22*sin(a/2)^10*x-60060*ax^8*az^4*cos(a/2)^20*sin(a/2)^12*x-200200*ax^8*az^6*cos(a/2)^18*sin(a/2)^14*x-450450*ax^8*az^8*cos(a/2)^16*sin(a/2)^16*x-720720*ax^8*az^10*cos(a/2)^14*sin(a/2)^18*x-840840*ax^8*az^12*cos(a/2)^12*sin(a/2)^20*x-720720*ax^8*az^14*cos(a/2)^10*sin(a/2)^22*x-450450*ax^8*az^16*cos(a/2)^8*sin(a/2)^24*x-200200*ax^8*az^18*cos(a/2)^6*sin(a/2)^26*x-60060*ax^8*az^20*cos(a/2)^4*sin(a/2)^28*x-10920*ax^8*az^22*cos(a/2)^2*sin(a/2)^30*x+2730*ax^9*ay*az^22*sin(a/2)^32*y+2730*ax^9*ay*cos(a/2)^22*sin(a/2)^10*y+30030*ax^9*ay^2*az^21*sin(a/2)^32*z+30030*ax^9*ay^3*az^20*sin(a/2)^32*y+30030*ax^9*ay^3*cos(a/2)^20*sin(a/2)^12*y+150150*ax^9*ay^4*az^19*sin(a/2)^32*z+150150*ax^9*ay^5*az^18*sin(a/2)^32*y+150150*ax^9*ay^5*cos(a/2)^18*sin(a/2)^14*y+450450*ax^9*ay^6*az^17*sin(a/2)^32*z+450450*ax^9*ay^7*az^16*sin(a/2)^32*y+450450*ax^9*ay^7*cos(a/2)^16*sin(a/2)^16*y+900900*ax^9*ay^8*az^15*sin(a/2)^32*z+900900*ax^9*ay^9*az^14*sin(a/2)^32*y+900900*ax^9*ay^9*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^9*ay^10*az^13*sin(a/2)^32*z+1261260*ax^9*ay^11*az^12*sin(a/2)^32*y+1261260*ax^9*ay^11*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^9*ay^12*az^11*sin(a/2)^32*z+1261260*ax^9*ay^13*az^10*sin(a/2)^32*y+1261260*ax^9*ay^13*cos(a/2)^10*sin(a/2)^22*y+900900*ax^9*ay^14*az^9*sin(a/2)^32*z+900900*ax^9*ay^15*az^8*sin(a/2)^32*y+900900*ax^9*ay^15*cos(a/2)^8*sin(a/2)^24*y+450450*ax^9*ay^16*az^7*sin(a/2)^32*z+450450*ax^9*ay^17*az^6*sin(a/2)^32*y+450450*ax^9*ay^17*cos(a/2)^6*sin(a/2)^26*y+150150*ax^9*ay^18*az^5*sin(a/2)^32*z+150150*ax^9*ay^19*az^4*sin(a/2)^32*y+150150*ax^9*ay^19*cos(a/2)^4*sin(a/2)^28*y+30030*ax^9*ay^20*az^3*sin(a/2)^32*z+30030*ax^9*ay^21*az^2*sin(a/2)^32*y+30030*ax^9*ay^21*cos(a/2)^2*sin(a/2)^30*y+2730*ax^9*ay^22*az*sin(a/2)^32*z+2730*ax^9*az*cos(a/2)^22*sin(a/2)^10*z+30030*ax^9*az^3*cos(a/2)^20*sin(a/2)^12*z+150150*ax^9*az^5*cos(a/2)^18*sin(a/2)^14*z+450450*ax^9*az^7*cos(a/2)^16*sin(a/2)^16*z+900900*ax^9*az^9*cos(a/2)^14*sin(a/2)^18*z+1261260*ax^9*az^11*cos(a/2)^12*sin(a/2)^20*z+1261260*ax^9*az^13*cos(a/2)^10*sin(a/2)^22*z+900900*ax^9*az^15*cos(a/2)^8*sin(a/2)^24*z+450450*ax^9*az^17*cos(a/2)^6*sin(a/2)^26*z+150150*ax^9*az^19*cos(a/2)^4*sin(a/2)^28*z+30030*ax^9*az^21*cos(a/2)^2*sin(a/2)^30*z-18018*ax^10*ay^2*az^20*sin(a/2)^32*x-18018*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12*x-90090*ax^10*ay^4*az^18*sin(a/2)^32*x-90090*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14*x-270270*ax^10*ay^6*az^16*sin(a/2)^32*x-270270*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16*x-540540*ax^10*ay^8*az^14*sin(a/2)^32*x-540540*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18*x-756756*ax^10*ay^10*az^12*sin(a/2)^32*x-756756*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20*x-756756*ax^10*ay^12*az^10*sin(a/2)^32*x-756756*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22*x-540540*ax^10*ay^14*az^8*sin(a/2)^32*x-540540*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24*x-270270*ax^10*ay^16*az^6*sin(a/2)^32*x-270270*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26*x-90090*ax^10*ay^18*az^4*sin(a/2)^32*x-90090*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28*x-18018*ax^10*ay^20*az^2*sin(a/2)^32*x-18018*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30*x-18018*ax^10*az^2*cos(a/2)^20*sin(a/2)^12*x-90090*ax^10*az^4*cos(a/2)^18*sin(a/2)^14*x-270270*ax^10*az^6*cos(a/2)^16*sin(a/2)^16*x-540540*ax^10*az^8*cos(a/2)^14*sin(a/2)^18*x-756756*ax^10*az^10*cos(a/2)^12*sin(a/2)^20*x-756756*ax^10*az^12*cos(a/2)^10*sin(a/2)^22*x-540540*ax^10*az^14*cos(a/2)^8*sin(a/2)^24*x-270270*ax^10*az^16*cos(a/2)^6*sin(a/2)^26*x-90090*ax^10*az^18*cos(a/2)^4*sin(a/2)^28*x-18018*ax^10*az^20*cos(a/2)^2*sin(a/2)^30*x+6006*ax^11*ay*az^20*sin(a/2)^32*y+6006*ax^11*ay*cos(a/2)^20*sin(a/2)^12*y+60060*ax^11*ay^2*az^19*sin(a/2)^32*z+60060*ax^11*ay^3*az^18*sin(a/2)^32*y+60060*ax^11*ay^3*cos(a/2)^18*sin(a/2)^14*y+270270*ax^11*ay^4*az^17*sin(a/2)^32*z+270270*ax^11*ay^5*az^16*sin(a/2)^32*y+270270*ax^11*ay^5*cos(a/2)^16*sin(a/2)^16*y+720720*ax^11*ay^6*az^15*sin(a/2)^32*z+720720*ax^11*ay^7*az^14*sin(a/2)^32*y+720720*ax^11*ay^7*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^11*ay^8*az^13*sin(a/2)^32*z+1261260*ax^11*ay^9*az^12*sin(a/2)^32*y+1261260*ax^11*ay^9*cos(a/2)^12*sin(a/2)^20*y+1513512*ax^11*ay^10*az^11*sin(a/2)^32*z+1513512*ax^11*ay^11*az^10*sin(a/2)^32*y+1513512*ax^11*ay^11*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^11*ay^12*az^9*sin(a/2)^32*z+1261260*ax^11*ay^13*az^8*sin(a/2)^32*y+1261260*ax^11*ay^13*cos(a/2)^8*sin(a/2)^24*y+720720*ax^11*ay^14*az^7*sin(a/2)^32*z+720720*ax^11*ay^15*az^6*sin(a/2)^32*y+720720*ax^11*ay^15*cos(a/2)^6*sin(a/2)^26*y+270270*ax^11*ay^16*az^5*sin(a/2)^32*z+270270*ax^11*ay^17*az^4*sin(a/2)^32*y+270270*ax^11*ay^17*cos(a/2)^4*sin(a/2)^28*y+60060*ax^11*ay^18*az^3*sin(a/2)^32*z+60060*ax^11*ay^19*az^2*sin(a/2)^32*y+60060*ax^11*ay^19*cos(a/2)^2*sin(a/2)^30*y+6006*ax^11*ay^20*az*sin(a/2)^32*z+6006*ax^11*az*cos(a/2)^20*sin(a/2)^12*z+60060*ax^11*az^3*cos(a/2)^18*sin(a/2)^14*z+270270*ax^11*az^5*cos(a/2)^16*sin(a/2)^16*z+720720*ax^11*az^7*cos(a/2)^14*sin(a/2)^18*z+1261260*ax^11*az^9*cos(a/2)^12*sin(a/2)^20*z+1513512*ax^11*az^11*cos(a/2)^10*sin(a/2)^22*z+1261260*ax^11*az^13*cos(a/2)^8*sin(a/2)^24*z+720720*ax^11*az^15*cos(a/2)^6*sin(a/2)^26*z+270270*ax^11*az^17*cos(a/2)^4*sin(a/2)^28*z+60060*ax^11*az^19*cos(a/2)^2*sin(a/2)^30*z-20020*ax^12*ay^2*az^18*sin(a/2)^32*x-20020*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14*x-90090*ax^12*ay^4*az^16*sin(a/2)^32*x-90090*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16*x-240240*ax^12*ay^6*az^14*sin(a/2)^32*x-240240*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18*x-420420*ax^12*ay^8*az^12*sin(a/2)^32*x-420420*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20*x-504504*ax^12*ay^10*az^10*sin(a/2)^32*x-504504*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22*x-420420*ax^12*ay^12*az^8*sin(a/2)^32*x-420420*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24*x-240240*ax^12*ay^14*az^6*sin(a/2)^32*x-240240*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26*x-90090*ax^12*ay^16*az^4*sin(a/2)^32*x-90090*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28*x-20020*ax^12*ay^18*az^2*sin(a/2)^32*x-20020*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30*x-20020*ax^12*az^2*cos(a/2)^18*sin(a/2)^14*x-90090*ax^12*az^4*cos(a/2)^16*sin(a/2)^16*x-240240*ax^12*az^6*cos(a/2)^14*sin(a/2)^18*x-420420*ax^12*az^8*cos(a/2)^12*sin(a/2)^20*x-504504*ax^12*az^10*cos(a/2)^10*sin(a/2)^22*x-420420*ax^12*az^12*cos(a/2)^8*sin(a/2)^24*x-240240*ax^12*az^14*cos(a/2)^6*sin(a/2)^26*x-90090*ax^12*az^16*cos(a/2)^4*sin(a/2)^28*x-20020*ax^12*az^18*cos(a/2)^2*sin(a/2)^30*x+10010*ax^13*ay*az^18*sin(a/2)^32*y+10010*ax^13*ay*cos(a/2)^18*sin(a/2)^14*y+90090*ax^13*ay^2*az^17*sin(a/2)^32*z+90090*ax^13*ay^3*az^16*sin(a/2)^32*y+90090*ax^13*ay^3*cos(a/2)^16*sin(a/2)^16*y+360360*ax^13*ay^4*az^15*sin(a/2)^32*z+360360*ax^13*ay^5*az^14*sin(a/2)^32*y+360360*ax^13*ay^5*cos(a/2)^14*sin(a/2)^18*y+840840*ax^13*ay^6*az^13*sin(a/2)^32*z+840840*ax^13*ay^7*az^12*sin(a/2)^32*y+840840*ax^13*ay^7*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^13*ay^8*az^11*sin(a/2)^32*z+1261260*ax^13*ay^9*az^10*sin(a/2)^32*y+1261260*ax^13*ay^9*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^13*ay^10*az^9*sin(a/2)^32*z+1261260*ax^13*ay^11*az^8*sin(a/2)^32*y+1261260*ax^13*ay^11*cos(a/2)^8*sin(a/2)^24*y+840840*ax^13*ay^12*az^7*sin(a/2)^32*z+840840*ax^13*ay^13*az^6*sin(a/2)^32*y+840840*ax^13*ay^13*cos(a/2)^6*sin(a/2)^26*y+360360*ax^13*ay^14*az^5*sin(a/2)^32*z+360360*ax^13*ay^15*az^4*sin(a/2)^32*y+360360*ax^13*ay^15*cos(a/2)^4*sin(a/2)^28*y+90090*ax^13*ay^16*az^3*sin(a/2)^32*z+90090*ax^13*ay^17*az^2*sin(a/2)^32*y+90090*ax^13*ay^17*cos(a/2)^2*sin(a/2)^30*y+10010*ax^13*ay^18*az*sin(a/2)^32*z+10010*ax^13*az*cos(a/2)^18*sin(a/2)^14*z+90090*ax^13*az^3*cos(a/2)^16*sin(a/2)^16*z+360360*ax^13*az^5*cos(a/2)^14*sin(a/2)^18*z+840840*ax^13*az^7*cos(a/2)^12*sin(a/2)^20*z+1261260*ax^13*az^9*cos(a/2)^10*sin(a/2)^22*z+1261260*ax^13*az^11*cos(a/2)^8*sin(a/2)^24*z+840840*ax^13*az^13*cos(a/2)^6*sin(a/2)^26*z+360360*ax^13*az^15*cos(a/2)^4*sin(a/2)^28*z+90090*ax^13*az^17*cos(a/2)^2*sin(a/2)^30*z-12870*ax^14*ay^2*az^16*sin(a/2)^32*x-12870*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16*x-51480*ax^14*ay^4*az^14*sin(a/2)^32*x-51480*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18*x-120120*ax^14*ay^6*az^12*sin(a/2)^32*x-120120*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20*x-180180*ax^14*ay^8*az^10*sin(a/2)^32*x-180180*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22*x-180180*ax^14*ay^10*az^8*sin(a/2)^32*x-180180*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24*x-120120*ax^14*ay^12*az^6*sin(a/2)^32*x-120120*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26*x-51480*ax^14*ay^14*az^4*sin(a/2)^32*x-51480*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28*x-12870*ax^14*ay^16*az^2*sin(a/2)^32*x-12870*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30*x-12870*ax^14*az^2*cos(a/2)^16*sin(a/2)^16*x-51480*ax^14*az^4*cos(a/2)^14*sin(a/2)^18*x-120120*ax^14*az^6*cos(a/2)^12*sin(a/2)^20*x-180180*ax^14*az^8*cos(a/2)^10*sin(a/2)^22*x-180180*ax^14*az^10*cos(a/2)^8*sin(a/2)^24*x-120120*ax^14*az^12*cos(a/2)^6*sin(a/2)^26*x-51480*ax^14*az^14*cos(a/2)^4*sin(a/2)^28*x-12870*ax^14*az^16*cos(a/2)^2*sin(a/2)^30*x+12870*ax^15*ay*az^16*sin(a/2)^32*y+12870*ax^15*ay*cos(a/2)^16*sin(a/2)^16*y+102960*ax^15*ay^2*az^15*sin(a/2)^32*z+102960*ax^15*ay^3*az^14*sin(a/2)^32*y+102960*ax^15*ay^3*cos(a/2)^14*sin(a/2)^18*y+360360*ax^15*ay^4*az^13*sin(a/2)^32*z+360360*ax^15*ay^5*az^12*sin(a/2)^32*y+360360*ax^15*ay^5*cos(a/2)^12*sin(a/2)^20*y+720720*ax^15*ay^6*az^11*sin(a/2)^32*z+720720*ax^15*ay^7*az^10*sin(a/2)^32*y+720720*ax^15*ay^7*cos(a/2)^10*sin(a/2)^22*y+900900*ax^15*ay^8*az^9*sin(a/2)^32*z+900900*ax^15*ay^9*az^8*sin(a/2)^32*y+900900*ax^15*ay^9*cos(a/2)^8*sin(a/2)^24*y+720720*ax^15*ay^10*az^7*sin(a/2)^32*z+720720*ax^15*ay^11*az^6*sin(a/2)^32*y+720720*ax^15*ay^11*cos(a/2)^6*sin(a/2)^26*y+360360*ax^15*ay^12*az^5*sin(a/2)^32*z+360360*ax^15*ay^13*az^4*sin(a/2)^32*y+360360*ax^15*ay^13*cos(a/2)^4*sin(a/2)^28*y+102960*ax^15*ay^14*az^3*sin(a/2)^32*z+102960*ax^15*ay^15*az^2*sin(a/2)^32*y+102960*ax^15*ay^15*cos(a/2)^2*sin(a/2)^30*y+12870*ax^15*ay^16*az*sin(a/2)^32*z+12870*ax^15*az*cos(a/2)^16*sin(a/2)^16*z+102960*ax^15*az^3*cos(a/2)^14*sin(a/2)^18*z+360360*ax^15*az^5*cos(a/2)^12*sin(a/2)^20*z+720720*ax^15*az^7*cos(a/2)^10*sin(a/2)^22*z+900900*ax^15*az^9*cos(a/2)^8*sin(a/2)^24*z+720720*ax^15*az^11*cos(a/2)^6*sin(a/2)^26*z+360360*ax^15*az^13*cos(a/2)^4*sin(a/2)^28*z+102960*ax^15*az^15*cos(a/2)^2*sin(a/2)^30*z+12870*ax^17*ay*az^14*sin(a/2)^32*y+12870*ax^17*ay*cos(a/2)^14*sin(a/2)^18*y+90090*ax^17*ay^2*az^13*sin(a/2)^32*z+90090*ax^17*ay^3*az^12*sin(a/2)^32*y+90090*ax^17*ay^3*cos(a/2)^12*sin(a/2)^20*y+270270*ax^17*ay^4*az^11*sin(a/2)^32*z+270270*ax^17*ay^5*az^10*sin(a/2)^32*y+270270*ax^17*ay^5*cos(a/2)^10*sin(a/2)^22*y+450450*ax^17*ay^6*az^9*sin(a/2)^32*z+450450*ax^17*ay^7*az^8*sin(a/2)^32*y+450450*ax^17*ay^7*cos(a/2)^8*sin(a/2)^24*y+450450*ax^17*ay^8*az^7*sin(a/2)^32*z+450450*ax^17*ay^9*az^6*sin(a/2)^32*y+450450*ax^17*ay^9*cos(a/2)^6*sin(a/2)^26*y+270270*ax^17*ay^10*az^5*sin(a/2)^32*z+270270*ax^17*ay^11*az^4*sin(a/2)^32*y+270270*ax^17*ay^11*cos(a/2)^4*sin(a/2)^28*y+90090*ax^17*ay^12*az^3*sin(a/2)^32*z+90090*ax^17*ay^13*az^2*sin(a/2)^32*y+90090*ax^17*ay^13*cos(a/2)^2*sin(a/2)^30*y+12870*ax^17*ay^14*az*sin(a/2)^32*z+12870*ax^17*az*cos(a/2)^14*sin(a/2)^18*z+90090*ax^17*az^3*cos(a/2)^12*sin(a/2)^20*z+270270*ax^17*az^5*cos(a/2)^10*sin(a/2)^22*z+450450*ax^17*az^7*cos(a/2)^8*sin(a/2)^24*z+450450*ax^17*az^9*cos(a/2)^6*sin(a/2)^26*z+270270*ax^17*az^11*cos(a/2)^4*sin(a/2)^28*z+90090*ax^17*az^13*cos(a/2)^2*sin(a/2)^30*z+10010*ax^18*ay^2*az^12*sin(a/2)^32*x+10010*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20*x+30030*ax^18*ay^4*az^10*sin(a/2)^32*x+30030*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22*x+50050*ax^18*ay^6*az^8*sin(a/2)^32*x+50050*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24*x+50050*ax^18*ay^8*az^6*sin(a/2)^32*x+50050*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26*x+30030*ax^18*ay^10*az^4*sin(a/2)^32*x+30030*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28*x+10010*ax^18*ay^12*az^2*sin(a/2)^32*x+10010*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30*x+10010*ax^18*az^2*cos(a/2)^12*sin(a/2)^20*x+30030*ax^18*az^4*cos(a/2)^10*sin(a/2)^22*x+50050*ax^18*az^6*cos(a/2)^8*sin(a/2)^24*x+50050*ax^18*az^8*cos(a/2)^6*sin(a/2)^26*x+30030*ax^18*az^10*cos(a/2)^4*sin(a/2)^28*x+10010*ax^18*az^12*cos(a/2)^2*sin(a/2)^30*x+10010*ax^19*ay*az^12*sin(a/2)^32*y+10010*ax^19*ay*cos(a/2)^12*sin(a/2)^20*y+60060*ax^19*ay^2*az^11*sin(a/2)^32*z+60060*ax^19*ay^3*az^10*sin(a/2)^32*y+60060*ax^19*ay^3*cos(a/2)^10*sin(a/2)^22*y+150150*ax^19*ay^4*az^9*sin(a/2)^32*z+150150*ax^19*ay^5*az^8*sin(a/2)^32*y+150150*ax^19*ay^5*cos(a/2)^8*sin(a/2)^24*y+200200*ax^19*ay^6*az^7*sin(a/2)^32*z+200200*ax^19*ay^7*az^6*sin(a/2)^32*y+200200*ax^19*ay^7*cos(a/2)^6*sin(a/2)^26*y+150150*ax^19*ay^8*az^5*sin(a/2)^32*z+150150*ax^19*ay^9*az^4*sin(a/2)^32*y+150150*ax^19*ay^9*cos(a/2)^4*sin(a/2)^28*y+60060*ax^19*ay^10*az^3*sin(a/2)^32*z+60060*ax^19*ay^11*az^2*sin(a/2)^32*y+60060*ax^19*ay^11*cos(a/2)^2*sin(a/2)^30*y+10010*ax^19*ay^12*az*sin(a/2)^32*z+10010*ax^19*az*cos(a/2)^12*sin(a/2)^20*z+60060*ax^19*az^3*cos(a/2)^10*sin(a/2)^22*z+150150*ax^19*az^5*cos(a/2)^8*sin(a/2)^24*z+200200*ax^19*az^7*cos(a/2)^6*sin(a/2)^26*z+150150*ax^19*az^9*cos(a/2)^4*sin(a/2)^28*z+60060*ax^19*az^11*cos(a/2)^2*sin(a/2)^30*z+12012*ax^20*ay^2*az^10*sin(a/2)^32*x+12012*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22*x+30030*ax^20*ay^4*az^8*sin(a/2)^32*x+30030*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24*x+40040*ax^20*ay^6*az^6*sin(a/2)^32*x+40040*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26*x+30030*ax^20*ay^8*az^4*sin(a/2)^32*x+30030*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28*x+12012*ax^20*ay^10*az^2*sin(a/2)^32*x+12012*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30*x+12012*ax^20*az^2*cos(a/2)^10*sin(a/2)^22*x+30030*ax^20*az^4*cos(a/2)^8*sin(a/2)^24*x+40040*ax^20*az^6*cos(a/2)^6*sin(a/2)^26*x+30030*ax^20*az^8*cos(a/2)^4*sin(a/2)^28*x+12012*ax^20*az^10*cos(a/2)^2*sin(a/2)^30*x+6006*ax^21*ay*az^10*sin(a/2)^32*y+6006*ax^21*ay*cos(a/2)^10*sin(a/2)^22*y+30030*ax^21*ay^2*az^9*sin(a/2)^32*z+30030*ax^21*ay^3*az^8*sin(a/2)^32*y+30030*ax^21*ay^3*cos(a/2)^8*sin(a/2)^24*y+60060*ax^21*ay^4*az^7*sin(a/2)^32*z+60060*ax^21*ay^5*az^6*sin(a/2)^32*y+60060*ax^21*ay^5*cos(a/2)^6*sin(a/2)^26*y+60060*ax^21*ay^6*az^5*sin(a/2)^32*z+60060*ax^21*ay^7*az^4*sin(a/2)^32*y+60060*ax^21*ay^7*cos(a/2)^4*sin(a/2)^28*y+30030*ax^21*ay^8*az^3*sin(a/2)^32*z+30030*ax^21*ay^9*az^2*sin(a/2)^32*y+30030*ax^21*ay^9*cos(a/2)^2*sin(a/2)^30*y+6006*ax^21*ay^10*az*sin(a/2)^32*z+6006*ax^21*az*cos(a/2)^10*sin(a/2)^22*z+30030*ax^21*az^3*cos(a/2)^8*sin(a/2)^24*z+60060*ax^21*az^5*cos(a/2)^6*sin(a/2)^26*z+60060*ax^21*az^7*cos(a/2)^4*sin(a/2)^28*z+30030*ax^21*az^9*cos(a/2)^2*sin(a/2)^30*z+8190*ax^22*ay^2*az^8*sin(a/2)^32*x+8190*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24*x+16380*ax^22*ay^4*az^6*sin(a/2)^32*x+16380*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26*x+16380*ax^22*ay^6*az^4*sin(a/2)^32*x+16380*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28*x+8190*ax^22*ay^8*az^2*sin(a/2)^32*x+8190*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30*x+8190*ax^22*az^2*cos(a/2)^8*sin(a/2)^24*x+16380*ax^22*az^4*cos(a/2)^6*sin(a/2)^26*x+16380*ax^22*az^6*cos(a/2)^4*sin(a/2)^28*x+8190*ax^22*az^8*cos(a/2)^2*sin(a/2)^30*x+2730*ax^23*ay*az^8*sin(a/2)^32*y+2730*ax^23*ay*cos(a/2)^8*sin(a/2)^24*y+10920*ax^23*ay^2*az^7*sin(a/2)^32*z+10920*ax^23*ay^3*az^6*sin(a/2)^32*y+10920*ax^23*ay^3*cos(a/2)^6*sin(a/2)^26*y+16380*ax^23*ay^4*az^5*sin(a/2)^32*z+16380*ax^23*ay^5*az^4*sin(a/2)^32*y+16380*ax^23*ay^5*cos(a/2)^4*sin(a/2)^28*y+10920*ax^23*ay^6*az^3*sin(a/2)^32*z+10920*ax^23*ay^7*az^2*sin(a/2)^32*y+10920*ax^23*ay^7*cos(a/2)^2*sin(a/2)^30*y+2730*ax^23*ay^8*az*sin(a/2)^32*z+2730*ax^23*az*cos(a/2)^8*sin(a/2)^24*z+10920*ax^23*az^3*cos(a/2)^6*sin(a/2)^26*z+16380*ax^23*az^5*cos(a/2)^4*sin(a/2)^28*z+10920*ax^23*az^7*cos(a/2)^2*sin(a/2)^30*z+3640*ax^24*ay^2*az^6*sin(a/2)^32*x+3640*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26*x+5460*ax^24*ay^4*az^4*sin(a/2)^32*x+5460*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28*x+3640*ax^24*ay^6*az^2*sin(a/2)^32*x+3640*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30*x+3640*ax^24*az^2*cos(a/2)^6*sin(a/2)^26*x+5460*ax^24*az^4*cos(a/2)^4*sin(a/2)^28*x+3640*ax^24*az^6*cos(a/2)^2*sin(a/2)^30*x+910*ax^25*ay*az^6*sin(a/2)^32*y+910*ax^25*ay*cos(a/2)^6*sin(a/2)^26*y+2730*ax^25*ay^2*az^5*sin(a/2)^32*z+2730*ax^25*ay^3*az^4*sin(a/2)^32*y+2730*ax^25*ay^3*cos(a/2)^4*sin(a/2)^28*y+2730*ax^25*ay^4*az^3*sin(a/2)^32*z+2730*ax^25*ay^5*az^2*sin(a/2)^32*y+2730*ax^25*ay^5*cos(a/2)^2*sin(a/2)^30*y+910*ax^25*ay^6*az*sin(a/2)^32*z+910*ax^25*az*cos(a/2)^6*sin(a/2)^26*z+2730*ax^25*az^3*cos(a/2)^4*sin(a/2)^28*z+2730*ax^25*az^5*cos(a/2)^2*sin(a/2)^30*z+1050*ax^26*ay^2*az^4*sin(a/2)^32*x+1050*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28*x+1050*ax^26*ay^4*az^2*sin(a/2)^32*x+1050*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30*x+1050*ax^26*az^2*cos(a/2)^4*sin(a/2)^28*x+1050*ax^26*az^4*cos(a/2)^2*sin(a/2)^30*x+210*ax^27*ay*az^4*sin(a/2)^32*y+210*ax^27*ay*cos(a/2)^4*sin(a/2)^28*y+420*ax^27*ay^2*az^3*sin(a/2)^32*z+420*ax^27*ay^3*az^2*sin(a/2)^32*y+420*ax^27*ay^3*cos(a/2)^2*sin(a/2)^30*y+210*ax^27*ay^4*az*sin(a/2)^32*z+210*ax^27*az*cos(a/2)^4*sin(a/2)^28*z+420*ax^27*az^3*cos(a/2)^2*sin(a/2)^30*z+180*ax^28*ay^2*az^2*sin(a/2)^32*x+180*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30*x+180*ax^28*az^2*cos(a/2)^2*sin(a/2)^30*x+30*ax^29*ay*az^2*sin(a/2)^32*y+30*ax^29*ay*cos(a/2)^2*sin(a/2)^30*y+30*ax^29*ay^2*az*sin(a/2)^32*z+30*ax^29*az*cos(a/2)^2*sin(a/2)^30*z-240*ay^2*az^2*cos(a/2)^28*sin(a/2)^4*x-1680*ay^2*az^4*cos(a/2)^26*sin(a/2)^6*x-7280*ay^2*az^6*cos(a/2)^24*sin(a/2)^8*x-21840*ay^2*az^8*cos(a/2)^22*sin(a/2)^10*x-48048*ay^2*az^10*cos(a/2)^20*sin(a/2)^12*x-80080*ay^2*az^12*cos(a/2)^18*sin(a/2)^14*x-102960*ay^2*az^14*cos(a/2)^16*sin(a/2)^16*x-102960*ay^2*az^16*cos(a/2)^14*sin(a/2)^18*x-80080*ay^2*az^18*cos(a/2)^12*sin(a/2)^20*x-48048*ay^2*az^20*cos(a/2)^10*sin(a/2)^22*x-21840*ay^2*az^22*cos(a/2)^8*sin(a/2)^24*x-7280*ay^2*az^24*cos(a/2)^6*sin(a/2)^26*x-1680*ay^2*az^26*cos(a/2)^4*sin(a/2)^28*x-240*ay^2*az^28*cos(a/2)^2*sin(a/2)^30*x-1680*ay^4*az^2*cos(a/2)^26*sin(a/2)^6*x-10920*ay^4*az^4*cos(a/2)^24*sin(a/2)^8*x-43680*ay^4*az^6*cos(a/2)^22*sin(a/2)^10*x-120120*ay^4*az^8*cos(a/2)^20*sin(a/2)^12*x-240240*ay^4*az^10*cos(a/2)^18*sin(a/2)^14*x-360360*ay^4*az^12*cos(a/2)^16*sin(a/2)^16*x-411840*ay^4*az^14*cos(a/2)^14*sin(a/2)^18*x-360360*ay^4*az^16*cos(a/2)^12*sin(a/2)^20*x-240240*ay^4*az^18*cos(a/2)^10*sin(a/2)^22*x-120120*ay^4*az^20*cos(a/2)^8*sin(a/2)^24*x-43680*ay^4*az^22*cos(a/2)^6*sin(a/2)^26*x-10920*ay^4*az^24*cos(a/2)^4*sin(a/2)^28*x-1680*ay^4*az^26*cos(a/2)^2*sin(a/2)^30*x-7280*ay^6*az^2*cos(a/2)^24*sin(a/2)^8*x-43680*ay^6*az^4*cos(a/2)^22*sin(a/2)^10*x-160160*ay^6*az^6*cos(a/2)^20*sin(a/2)^12*x-400400*ay^6*az^8*cos(a/2)^18*sin(a/2)^14*x-720720*ay^6*az^10*cos(a/2)^16*sin(a/2)^16*x-960960*ay^6*az^12*cos(a/2)^14*sin(a/2)^18*x-960960*ay^6*az^14*cos(a/2)^12*sin(a/2)^20*x-720720*ay^6*az^16*cos(a/2)^10*sin(a/2)^22*x-400400*ay^6*az^18*cos(a/2)^8*sin(a/2)^24*x-160160*ay^6*az^20*cos(a/2)^6*sin(a/2)^26*x-43680*ay^6*az^22*cos(a/2)^4*sin(a/2)^28*x-7280*ay^6*az^24*cos(a/2)^2*sin(a/2)^30*x-21840*ay^8*az^2*cos(a/2)^22*sin(a/2)^10*x-120120*ay^8*az^4*cos(a/2)^20*sin(a/2)^12*x-400400*ay^8*az^6*cos(a/2)^18*sin(a/2)^14*x-900900*ay^8*az^8*cos(a/2)^16*sin(a/2)^16*x-1441440*ay^8*az^10*cos(a/2)^14*sin(a/2)^18*x-1681680*ay^8*az^12*cos(a/2)^12*sin(a/2)^20*x-1441440*ay^8*az^14*cos(a/2)^10*sin(a/2)^22*x-900900*ay^8*az^16*cos(a/2)^8*sin(a/2)^24*x-400400*ay^8*az^18*cos(a/2)^6*sin(a/2)^26*x-120120*ay^8*az^20*cos(a/2)^4*sin(a/2)^28*x-21840*ay^8*az^22*cos(a/2)^2*sin(a/2)^30*x-48048*ay^10*az^2*cos(a/2)^20*sin(a/2)^12*x-240240*ay^10*az^4*cos(a/2)^18*sin(a/2)^14*x-720720*ay^10*az^6*cos(a/2)^16*sin(a/2)^16*x-1441440*ay^10*az^8*cos(a/2)^14*sin(a/2)^18*x-2018016*ay^10*az^10*cos(a/2)^12*sin(a/2)^20*x-2018016*ay^10*az^12*cos(a/2)^10*sin(a/2)^22*x-1441440*ay^10*az^14*cos(a/2)^8*sin(a/2)^24*x-720720*ay^10*az^16*cos(a/2)^6*sin(a/2)^26*x-240240*ay^10*az^18*cos(a/2)^4*sin(a/2)^28*x-48048*ay^10*az^20*cos(a/2)^2*sin(a/2)^30*x-80080*ay^12*az^2*cos(a/2)^18*sin(a/2)^14*x-360360*ay^12*az^4*cos(a/2)^16*sin(a/2)^16*x-960960*ay^12*az^6*cos(a/2)^14*sin(a/2)^18*x-1681680*ay^12*az^8*cos(a/2)^12*sin(a/2)^20*x-2018016*ay^12*az^10*cos(a/2)^10*sin(a/2)^22*x-1681680*ay^12*az^12*cos(a/2)^8*sin(a/2)^24*x-960960*ay^12*az^14*cos(a/2)^6*sin(a/2)^26*x-360360*ay^12*az^16*cos(a/2)^4*sin(a/2)^28*x-80080*ay^12*az^18*cos(a/2)^2*sin(a/2)^30*x-102960*ay^14*az^2*cos(a/2)^16*sin(a/2)^16*x-411840*ay^14*az^4*cos(a/2)^14*sin(a/2)^18*x-960960*ay^14*az^6*cos(a/2)^12*sin(a/2)^20*x-1441440*ay^14*az^8*cos(a/2)^10*sin(a/2)^22*x-1441440*ay^14*az^10*cos(a/2)^8*sin(a/2)^24*x-960960*ay^14*az^12*cos(a/2)^6*sin(a/2)^26*x-411840*ay^14*az^14*cos(a/2)^4*sin(a/2)^28*x-102960*ay^14*az^16*cos(a/2)^2*sin(a/2)^30*x-102960*ay^16*az^2*cos(a/2)^14*sin(a/2)^18*x-360360*ay^16*az^4*cos(a/2)^12*sin(a/2)^20*x-720720*ay^16*az^6*cos(a/2)^10*sin(a/2)^22*x-900900*ay^16*az^8*cos(a/2)^8*sin(a/2)^24*x-720720*ay^16*az^10*cos(a/2)^6*sin(a/2)^26*x-360360*ay^16*az^12*cos(a/2)^4*sin(a/2)^28*x-102960*ay^16*az^14*cos(a/2)^2*sin(a/2)^30*x-80080*ay^18*az^2*cos(a/2)^12*sin(a/2)^20*x-240240*ay^18*az^4*cos(a/2)^10*sin(a/2)^22*x-400400*ay^18*az^6*cos(a/2)^8*sin(a/2)^24*x-400400*ay^18*az^8*cos(a/2)^6*sin(a/2)^26*x-240240*ay^18*az^10*cos(a/2)^4*sin(a/2)^28*x-80080*ay^18*az^12*cos(a/2)^2*sin(a/2)^30*x-48048*ay^20*az^2*cos(a/2)^10*sin(a/2)^22*x-120120*ay^20*az^4*cos(a/2)^8*sin(a/2)^24*x-160160*ay^20*az^6*cos(a/2)^6*sin(a/2)^26*x-120120*ay^20*az^8*cos(a/2)^4*sin(a/2)^28*x-48048*ay^20*az^10*cos(a/2)^2*sin(a/2)^30*x-21840*ay^22*az^2*cos(a/2)^8*sin(a/2)^24*x-43680*ay^22*az^4*cos(a/2)^6*sin(a/2)^26*x-43680*ay^22*az^6*cos(a/2)^4*sin(a/2)^28*x-21840*ay^22*az^8*cos(a/2)^2*sin(a/2)^30*x-7280*ay^24*az^2*cos(a/2)^6*sin(a/2)^26*x-10920*ay^24*az^4*cos(a/2)^4*sin(a/2)^28*x-7280*ay^24*az^6*cos(a/2)^2*sin(a/2)^30*x-1680*ay^26*az^2*cos(a/2)^4*sin(a/2)^28*x-1680*ay^26*az^4*cos(a/2)^2*sin(a/2)^30*x-240*ay^28*az^2*cos(a/2)^2*sin(a/2)^30*x+30*ax*ay*az^2*cos(a/2)^28*sin(a/2)^4*y+210*ax*ay*az^4*cos(a/2)^26*sin(a/2)^6*y+910*ax*ay*az^6*cos(a/2)^24*sin(a/2)^8*y+2730*ax*ay*az^8*cos(a/2)^22*sin(a/2)^10*y+6006*ax*ay*az^10*cos(a/2)^20*sin(a/2)^12*y+10010*ax*ay*az^12*cos(a/2)^18*sin(a/2)^14*y+12870*ax*ay*az^14*cos(a/2)^16*sin(a/2)^16*y+12870*ax*ay*az^16*cos(a/2)^14*sin(a/2)^18*y+10010*ax*ay*az^18*cos(a/2)^12*sin(a/2)^20*y+6006*ax*ay*az^20*cos(a/2)^10*sin(a/2)^22*y+2730*ax*ay*az^22*cos(a/2)^8*sin(a/2)^24*y+910*ax*ay*az^24*cos(a/2)^6*sin(a/2)^26*y+210*ax*ay*az^26*cos(a/2)^4*sin(a/2)^28*y+30*ax*ay*az^28*cos(a/2)^2*sin(a/2)^30*y+30*ax*ay^2*az*cos(a/2)^28*sin(a/2)^4*z+420*ax*ay^2*az^3*cos(a/2)^26*sin(a/2)^6*z+2730*ax*ay^2*az^5*cos(a/2)^24*sin(a/2)^8*z+10920*ax*ay^2*az^7*cos(a/2)^22*sin(a/2)^10*z+30030*ax*ay^2*az^9*cos(a/2)^20*sin(a/2)^12*z+60060*ax*ay^2*az^11*cos(a/2)^18*sin(a/2)^14*z+90090*ax*ay^2*az^13*cos(a/2)^16*sin(a/2)^16*z+102960*ax*ay^2*az^15*cos(a/2)^14*sin(a/2)^18*z+90090*ax*ay^2*az^17*cos(a/2)^12*sin(a/2)^20*z+60060*ax*ay^2*az^19*cos(a/2)^10*sin(a/2)^22*z+30030*ax*ay^2*az^21*cos(a/2)^8*sin(a/2)^24*z+10920*ax*ay^2*az^23*cos(a/2)^6*sin(a/2)^26*z+2730*ax*ay^2*az^25*cos(a/2)^4*sin(a/2)^28*z+420*ax*ay^2*az^27*cos(a/2)^2*sin(a/2)^30*z+420*ax*ay^3*az^2*cos(a/2)^26*sin(a/2)^6*y+2730*ax*ay^3*az^4*cos(a/2)^24*sin(a/2)^8*y+10920*ax*ay^3*az^6*cos(a/2)^22*sin(a/2)^10*y+30030*ax*ay^3*az^8*cos(a/2)^20*sin(a/2)^12*y+60060*ax*ay^3*az^10*cos(a/2)^18*sin(a/2)^14*y+90090*ax*ay^3*az^12*cos(a/2)^16*sin(a/2)^16*y+102960*ax*ay^3*az^14*cos(a/2)^14*sin(a/2)^18*y+90090*ax*ay^3*az^16*cos(a/2)^12*sin(a/2)^20*y+60060*ax*ay^3*az^18*cos(a/2)^10*sin(a/2)^22*y+30030*ax*ay^3*az^20*cos(a/2)^8*sin(a/2)^24*y+10920*ax*ay^3*az^22*cos(a/2)^6*sin(a/2)^26*y+2730*ax*ay^3*az^24*cos(a/2)^4*sin(a/2)^28*y+420*ax*ay^3*az^26*cos(a/2)^2*sin(a/2)^30*y+210*ax*ay^4*az*cos(a/2)^26*sin(a/2)^6*z+2730*ax*ay^4*az^3*cos(a/2)^24*sin(a/2)^8*z+16380*ax*ay^4*az^5*cos(a/2)^22*sin(a/2)^10*z+60060*ax*ay^4*az^7*cos(a/2)^20*sin(a/2)^12*z+150150*ax*ay^4*az^9*cos(a/2)^18*sin(a/2)^14*z+270270*ax*ay^4*az^11*cos(a/2)^16*sin(a/2)^16*z+360360*ax*ay^4*az^13*cos(a/2)^14*sin(a/2)^18*z+360360*ax*ay^4*az^15*cos(a/2)^12*sin(a/2)^20*z+270270*ax*ay^4*az^17*cos(a/2)^10*sin(a/2)^22*z+150150*ax*ay^4*az^19*cos(a/2)^8*sin(a/2)^24*z+60060*ax*ay^4*az^21*cos(a/2)^6*sin(a/2)^26*z+16380*ax*ay^4*az^23*cos(a/2)^4*sin(a/2)^28*z+2730*ax*ay^4*az^25*cos(a/2)^2*sin(a/2)^30*z+2730*ax*ay^5*az^2*cos(a/2)^24*sin(a/2)^8*y+16380*ax*ay^5*az^4*cos(a/2)^22*sin(a/2)^10*y+60060*ax*ay^5*az^6*cos(a/2)^20*sin(a/2)^12*y+150150*ax*ay^5*az^8*cos(a/2)^18*sin(a/2)^14*y+270270*ax*ay^5*az^10*cos(a/2)^16*sin(a/2)^16*y+360360*ax*ay^5*az^12*cos(a/2)^14*sin(a/2)^18*y+360360*ax*ay^5*az^14*cos(a/2)^12*sin(a/2)^20*y+270270*ax*ay^5*az^16*cos(a/2)^10*sin(a/2)^22*y+150150*ax*ay^5*az^18*cos(a/2)^8*sin(a/2)^24*y+60060*ax*ay^5*az^20*cos(a/2)^6*sin(a/2)^26*y+16380*ax*ay^5*az^22*cos(a/2)^4*sin(a/2)^28*y+2730*ax*ay^5*az^24*cos(a/2)^2*sin(a/2)^30*y+910*ax*ay^6*az*cos(a/2)^24*sin(a/2)^8*z+10920*ax*ay^6*az^3*cos(a/2)^22*sin(a/2)^10*z+60060*ax*ay^6*az^5*cos(a/2)^20*sin(a/2)^12*z+200200*ax*ay^6*az^7*cos(a/2)^18*sin(a/2)^14*z+450450*ax*ay^6*az^9*cos(a/2)^16*sin(a/2)^16*z+720720*ax*ay^6*az^11*cos(a/2)^14*sin(a/2)^18*z+840840*ax*ay^6*az^13*cos(a/2)^12*sin(a/2)^20*z+720720*ax*ay^6*az^15*cos(a/2)^10*sin(a/2)^22*z+450450*ax*ay^6*az^17*cos(a/2)^8*sin(a/2)^24*z+200200*ax*ay^6*az^19*cos(a/2)^6*sin(a/2)^26*z+60060*ax*ay^6*az^21*cos(a/2)^4*sin(a/2)^28*z+10920*ax*ay^6*az^23*cos(a/2)^2*sin(a/2)^30*z+10920*ax*ay^7*az^2*cos(a/2)^22*sin(a/2)^10*y+60060*ax*ay^7*az^4*cos(a/2)^20*sin(a/2)^12*y+200200*ax*ay^7*az^6*cos(a/2)^18*sin(a/2)^14*y+450450*ax*ay^7*az^8*cos(a/2)^16*sin(a/2)^16*y+720720*ax*ay^7*az^10*cos(a/2)^14*sin(a/2)^18*y+840840*ax*ay^7*az^12*cos(a/2)^12*sin(a/2)^20*y+720720*ax*ay^7*az^14*cos(a/2)^10*sin(a/2)^22*y+450450*ax*ay^7*az^16*cos(a/2)^8*sin(a/2)^24*y+200200*ax*ay^7*az^18*cos(a/2)^6*sin(a/2)^26*y+60060*ax*ay^7*az^20*cos(a/2)^4*sin(a/2)^28*y+10920*ax*ay^7*az^22*cos(a/2)^2*sin(a/2)^30*y+2730*ax*ay^8*az*cos(a/2)^22*sin(a/2)^10*z+30030*ax*ay^8*az^3*cos(a/2)^20*sin(a/2)^12*z+150150*ax*ay^8*az^5*cos(a/2)^18*sin(a/2)^14*z+450450*ax*ay^8*az^7*cos(a/2)^16*sin(a/2)^16*z+900900*ax*ay^8*az^9*cos(a/2)^14*sin(a/2)^18*z+1261260*ax*ay^8*az^11*cos(a/2)^12*sin(a/2)^20*z+1261260*ax*ay^8*az^13*cos(a/2)^10*sin(a/2)^22*z+900900*ax*ay^8*az^15*cos(a/2)^8*sin(a/2)^24*z+450450*ax*ay^8*az^17*cos(a/2)^6*sin(a/2)^26*z+150150*ax*ay^8*az^19*cos(a/2)^4*sin(a/2)^28*z+30030*ax*ay^8*az^21*cos(a/2)^2*sin(a/2)^30*z+30030*ax*ay^9*az^2*cos(a/2)^20*sin(a/2)^12*y+150150*ax*ay^9*az^4*cos(a/2)^18*sin(a/2)^14*y+450450*ax*ay^9*az^6*cos(a/2)^16*sin(a/2)^16*y+900900*ax*ay^9*az^8*cos(a/2)^14*sin(a/2)^18*y+1261260*ax*ay^9*az^10*cos(a/2)^12*sin(a/2)^20*y+1261260*ax*ay^9*az^12*cos(a/2)^10*sin(a/2)^22*y+900900*ax*ay^9*az^14*cos(a/2)^8*sin(a/2)^24*y+450450*ax*ay^9*az^16*cos(a/2)^6*sin(a/2)^26*y+150150*ax*ay^9*az^18*cos(a/2)^4*sin(a/2)^28*y+30030*ax*ay^9*az^20*cos(a/2)^2*sin(a/2)^30*y+6006*ax*ay^10*az*cos(a/2)^20*sin(a/2)^12*z+60060*ax*ay^10*az^3*cos(a/2)^18*sin(a/2)^14*z+270270*ax*ay^10*az^5*cos(a/2)^16*sin(a/2)^16*z+720720*ax*ay^10*az^7*cos(a/2)^14*sin(a/2)^18*z+1261260*ax*ay^10*az^9*cos(a/2)^12*sin(a/2)^20*z+1513512*ax*ay^10*az^11*cos(a/2)^10*sin(a/2)^22*z+1261260*ax*ay^10*az^13*cos(a/2)^8*sin(a/2)^24*z+720720*ax*ay^10*az^15*cos(a/2)^6*sin(a/2)^26*z+270270*ax*ay^10*az^17*cos(a/2)^4*sin(a/2)^28*z+60060*ax*ay^10*az^19*cos(a/2)^2*sin(a/2)^30*z+60060*ax*ay^11*az^2*cos(a/2)^18*sin(a/2)^14*y+270270*ax*ay^11*az^4*cos(a/2)^16*sin(a/2)^16*y+720720*ax*ay^11*az^6*cos(a/2)^14*sin(a/2)^18*y+1261260*ax*ay^11*az^8*cos(a/2)^12*sin(a/2)^20*y+1513512*ax*ay^11*az^10*cos(a/2)^10*sin(a/2)^22*y+1261260*ax*ay^11*az^12*cos(a/2)^8*sin(a/2)^24*y+720720*ax*ay^11*az^14*cos(a/2)^6*sin(a/2)^26*y+270270*ax*ay^11*az^16*cos(a/2)^4*sin(a/2)^28*y+60060*ax*ay^11*az^18*cos(a/2)^2*sin(a/2)^30*y+10010*ax*ay^12*az*cos(a/2)^18*sin(a/2)^14*z+90090*ax*ay^12*az^3*cos(a/2)^16*sin(a/2)^16*z+360360*ax*ay^12*az^5*cos(a/2)^14*sin(a/2)^18*z+840840*ax*ay^12*az^7*cos(a/2)^12*sin(a/2)^20*z+1261260*ax*ay^12*az^9*cos(a/2)^10*sin(a/2)^22*z+1261260*ax*ay^12*az^11*cos(a/2)^8*sin(a/2)^24*z+840840*ax*ay^12*az^13*cos(a/2)^6*sin(a/2)^26*z+360360*ax*ay^12*az^15*cos(a/2)^4*sin(a/2)^28*z+90090*ax*ay^12*az^17*cos(a/2)^2*sin(a/2)^30*z+90090*ax*ay^13*az^2*cos(a/2)^16*sin(a/2)^16*y+360360*ax*ay^13*az^4*cos(a/2)^14*sin(a/2)^18*y+840840*ax*ay^13*az^6*cos(a/2)^12*sin(a/2)^20*y+1261260*ax*ay^13*az^8*cos(a/2)^10*sin(a/2)^22*y+1261260*ax*ay^13*az^10*cos(a/2)^8*sin(a/2)^24*y+840840*ax*ay^13*az^12*cos(a/2)^6*sin(a/2)^26*y+360360*ax*ay^13*az^14*cos(a/2)^4*sin(a/2)^28*y+90090*ax*ay^13*az^16*cos(a/2)^2*sin(a/2)^30*y+12870*ax*ay^14*az*cos(a/2)^16*sin(a/2)^16*z+102960*ax*ay^14*az^3*cos(a/2)^14*sin(a/2)^18*z+360360*ax*ay^14*az^5*cos(a/2)^12*sin(a/2)^20*z+720720*ax*ay^14*az^7*cos(a/2)^10*sin(a/2)^22*z+900900*ax*ay^14*az^9*cos(a/2)^8*sin(a/2)^24*z+720720*ax*ay^14*az^11*cos(a/2)^6*sin(a/2)^26*z+360360*ax*ay^14*az^13*cos(a/2)^4*sin(a/2)^28*z+102960*ax*ay^14*az^15*cos(a/2)^2*sin(a/2)^30*z+102960*ax*ay^15*az^2*cos(a/2)^14*sin(a/2)^18*y+360360*ax*ay^15*az^4*cos(a/2)^12*sin(a/2)^20*y+720720*ax*ay^15*az^6*cos(a/2)^10*sin(a/2)^22*y+900900*ax*ay^15*az^8*cos(a/2)^8*sin(a/2)^24*y+720720*ax*ay^15*az^10*cos(a/2)^6*sin(a/2)^26*y+360360*ax*ay^15*az^12*cos(a/2)^4*sin(a/2)^28*y+102960*ax*ay^15*az^14*cos(a/2)^2*sin(a/2)^30*y+12870*ax*ay^16*az*cos(a/2)^14*sin(a/2)^18*z+90090*ax*ay^16*az^3*cos(a/2)^12*sin(a/2)^20*z+270270*ax*ay^16*az^5*cos(a/2)^10*sin(a/2)^22*z+450450*ax*ay^16*az^7*cos(a/2)^8*sin(a/2)^24*z+450450*ax*ay^16*az^9*cos(a/2)^6*sin(a/2)^26*z+270270*ax*ay^16*az^11*cos(a/2)^4*sin(a/2)^28*z+90090*ax*ay^16*az^13*cos(a/2)^2*sin(a/2)^30*z+90090*ax*ay^17*az^2*cos(a/2)^12*sin(a/2)^20*y+270270*ax*ay^17*az^4*cos(a/2)^10*sin(a/2)^22*y+450450*ax*ay^17*az^6*cos(a/2)^8*sin(a/2)^24*y+450450*ax*ay^17*az^8*cos(a/2)^6*sin(a/2)^26*y+270270*ax*ay^17*az^10*cos(a/2)^4*sin(a/2)^28*y+90090*ax*ay^17*az^12*cos(a/2)^2*sin(a/2)^30*y+10010*ax*ay^18*az*cos(a/2)^12*sin(a/2)^20*z+60060*ax*ay^18*az^3*cos(a/2)^10*sin(a/2)^22*z+150150*ax*ay^18*az^5*cos(a/2)^8*sin(a/2)^24*z+200200*ax*ay^18*az^7*cos(a/2)^6*sin(a/2)^26*z+150150*ax*ay^18*az^9*cos(a/2)^4*sin(a/2)^28*z+60060*ax*ay^18*az^11*cos(a/2)^2*sin(a/2)^30*z+60060*ax*ay^19*az^2*cos(a/2)^10*sin(a/2)^22*y+150150*ax*ay^19*az^4*cos(a/2)^8*sin(a/2)^24*y+200200*ax*ay^19*az^6*cos(a/2)^6*sin(a/2)^26*y+150150*ax*ay^19*az^8*cos(a/2)^4*sin(a/2)^28*y+60060*ax*ay^19*az^10*cos(a/2)^2*sin(a/2)^30*y+6006*ax*ay^20*az*cos(a/2)^10*sin(a/2)^22*z+30030*ax*ay^20*az^3*cos(a/2)^8*sin(a/2)^24*z+60060*ax*ay^20*az^5*cos(a/2)^6*sin(a/2)^26*z+60060*ax*ay^20*az^7*cos(a/2)^4*sin(a/2)^28*z+30030*ax*ay^20*az^9*cos(a/2)^2*sin(a/2)^30*z+30030*ax*ay^21*az^2*cos(a/2)^8*sin(a/2)^24*y+60060*ax*ay^21*az^4*cos(a/2)^6*sin(a/2)^26*y+60060*ax*ay^21*az^6*cos(a/2)^4*sin(a/2)^28*y+30030*ax*ay^21*az^8*cos(a/2)^2*sin(a/2)^30*y+2730*ax*ay^22*az*cos(a/2)^8*sin(a/2)^24*z+10920*ax*ay^22*az^3*cos(a/2)^6*sin(a/2)^26*z+16380*ax*ay^22*az^5*cos(a/2)^4*sin(a/2)^28*z+10920*ax*ay^22*az^7*cos(a/2)^2*sin(a/2)^30*z+10920*ax*ay^23*az^2*cos(a/2)^6*sin(a/2)^26*y+16380*ax*ay^23*az^4*cos(a/2)^4*sin(a/2)^28*y+10920*ax*ay^23*az^6*cos(a/2)^2*sin(a/2)^30*y+910*ax*ay^24*az*cos(a/2)^6*sin(a/2)^26*z+2730*ax*ay^24*az^3*cos(a/2)^4*sin(a/2)^28*z+2730*ax*ay^24*az^5*cos(a/2)^2*sin(a/2)^30*z+2730*ax*ay^25*az^2*cos(a/2)^4*sin(a/2)^28*y+2730*ax*ay^25*az^4*cos(a/2)^2*sin(a/2)^30*y+210*ax*ay^26*az*cos(a/2)^4*sin(a/2)^28*z+420*ax*ay^26*az^3*cos(a/2)^2*sin(a/2)^30*z+420*ax*ay^27*az^2*cos(a/2)^2*sin(a/2)^30*y+30*ax*ay^28*az*cos(a/2)^2*sin(a/2)^30*z-2940*ax^2*ay^2*az^2*cos(a/2)^26*sin(a/2)^6*x-19110*ax^2*ay^2*az^4*cos(a/2)^24*sin(a/2)^8*x-76440*ax^2*ay^2*az^6*cos(a/2)^22*sin(a/2)^10*x-210210*ax^2*ay^2*az^8*cos(a/2)^20*sin(a/2)^12*x-420420*ax^2*ay^2*az^10*cos(a/2)^18*sin(a/2)^14*x-630630*ax^2*ay^2*az^12*cos(a/2)^16*sin(a/2)^16*x-720720*ax^2*ay^2*az^14*cos(a/2)^14*sin(a/2)^18*x-630630*ax^2*ay^2*az^16*cos(a/2)^12*sin(a/2)^20*x-420420*ax^2*ay^2*az^18*cos(a/2)^10*sin(a/2)^22*x-210210*ax^2*ay^2*az^20*cos(a/2)^8*sin(a/2)^24*x-76440*ax^2*ay^2*az^22*cos(a/2)^6*sin(a/2)^26*x-19110*ax^2*ay^2*az^24*cos(a/2)^4*sin(a/2)^28*x-2940*ax^2*ay^2*az^26*cos(a/2)^2*sin(a/2)^30*x-19110*ax^2*ay^4*az^2*cos(a/2)^24*sin(a/2)^8*x-114660*ax^2*ay^4*az^4*cos(a/2)^22*sin(a/2)^10*x-420420*ax^2*ay^4*az^6*cos(a/2)^20*sin(a/2)^12*x-1051050*ax^2*ay^4*az^8*cos(a/2)^18*sin(a/2)^14*x-1891890*ax^2*ay^4*az^10*cos(a/2)^16*sin(a/2)^16*x-2522520*ax^2*ay^4*az^12*cos(a/2)^14*sin(a/2)^18*x-2522520*ax^2*ay^4*az^14*cos(a/2)^12*sin(a/2)^20*x-1891890*ax^2*ay^4*az^16*cos(a/2)^10*sin(a/2)^22*x-1051050*ax^2*ay^4*az^18*cos(a/2)^8*sin(a/2)^24*x-420420*ax^2*ay^4*az^20*cos(a/2)^6*sin(a/2)^26*x-114660*ax^2*ay^4*az^22*cos(a/2)^4*sin(a/2)^28*x-19110*ax^2*ay^4*az^24*cos(a/2)^2*sin(a/2)^30*x-76440*ax^2*ay^6*az^2*cos(a/2)^22*sin(a/2)^10*x-420420*ax^2*ay^6*az^4*cos(a/2)^20*sin(a/2)^12*x-1401400*ax^2*ay^6*az^6*cos(a/2)^18*sin(a/2)^14*x-3153150*ax^2*ay^6*az^8*cos(a/2)^16*sin(a/2)^16*x-5045040*ax^2*ay^6*az^10*cos(a/2)^14*sin(a/2)^18*x-5885880*ax^2*ay^6*az^12*cos(a/2)^12*sin(a/2)^20*x-5045040*ax^2*ay^6*az^14*cos(a/2)^10*sin(a/2)^22*x-3153150*ax^2*ay^6*az^16*cos(a/2)^8*sin(a/2)^24*x-1401400*ax^2*ay^6*az^18*cos(a/2)^6*sin(a/2)^26*x-420420*ax^2*ay^6*az^20*cos(a/2)^4*sin(a/2)^28*x-76440*ax^2*ay^6*az^22*cos(a/2)^2*sin(a/2)^30*x-210210*ax^2*ay^8*az^2*cos(a/2)^20*sin(a/2)^12*x-1051050*ax^2*ay^8*az^4*cos(a/2)^18*sin(a/2)^14*x-3153150*ax^2*ay^8*az^6*cos(a/2)^16*sin(a/2)^16*x-6306300*ax^2*ay^8*az^8*cos(a/2)^14*sin(a/2)^18*x-8828820*ax^2*ay^8*az^10*cos(a/2)^12*sin(a/2)^20*x-8828820*ax^2*ay^8*az^12*cos(a/2)^10*sin(a/2)^22*x-6306300*ax^2*ay^8*az^14*cos(a/2)^8*sin(a/2)^24*x-3153150*ax^2*ay^8*az^16*cos(a/2)^6*sin(a/2)^26*x-1051050*ax^2*ay^8*az^18*cos(a/2)^4*sin(a/2)^28*x-210210*ax^2*ay^8*az^20*cos(a/2)^2*sin(a/2)^30*x-420420*ax^2*ay^10*az^2*cos(a/2)^18*sin(a/2)^14*x-1891890*ax^2*ay^10*az^4*cos(a/2)^16*sin(a/2)^16*x-5045040*ax^2*ay^10*az^6*cos(a/2)^14*sin(a/2)^18*x-8828820*ax^2*ay^10*az^8*cos(a/2)^12*sin(a/2)^20*x-10594584*ax^2*ay^10*az^10*cos(a/2)^10*sin(a/2)^22*x-8828820*ax^2*ay^10*az^12*cos(a/2)^8*sin(a/2)^24*x-5045040*ax^2*ay^10*az^14*cos(a/2)^6*sin(a/2)^26*x-1891890*ax^2*ay^10*az^16*cos(a/2)^4*sin(a/2)^28*x-420420*ax^2*ay^10*az^18*cos(a/2)^2*sin(a/2)^30*x-630630*ax^2*ay^12*az^2*cos(a/2)^16*sin(a/2)^16*x-2522520*ax^2*ay^12*az^4*cos(a/2)^14*sin(a/2)^18*x-5885880*ax^2*ay^12*az^6*cos(a/2)^12*sin(a/2)^20*x-8828820*ax^2*ay^12*az^8*cos(a/2)^10*sin(a/2)^22*x-8828820*ax^2*ay^12*az^10*cos(a/2)^8*sin(a/2)^24*x-5885880*ax^2*ay^12*az^12*cos(a/2)^6*sin(a/2)^26*x-2522520*ax^2*ay^12*az^14*cos(a/2)^4*sin(a/2)^28*x-630630*ax^2*ay^12*az^16*cos(a/2)^2*sin(a/2)^30*x-720720*ax^2*ay^14*az^2*cos(a/2)^14*sin(a/2)^18*x-2522520*ax^2*ay^14*az^4*cos(a/2)^12*sin(a/2)^20*x-5045040*ax^2*ay^14*az^6*cos(a/2)^10*sin(a/2)^22*x-6306300*ax^2*ay^14*az^8*cos(a/2)^8*sin(a/2)^24*x-5045040*ax^2*ay^14*az^10*cos(a/2)^6*sin(a/2)^26*x-2522520*ax^2*ay^14*az^12*cos(a/2)^4*sin(a/2)^28*x-720720*ax^2*ay^14*az^14*cos(a/2)^2*sin(a/2)^30*x-630630*ax^2*ay^16*az^2*cos(a/2)^12*sin(a/2)^20*x-1891890*ax^2*ay^16*az^4*cos(a/2)^10*sin(a/2)^22*x-3153150*ax^2*ay^16*az^6*cos(a/2)^8*sin(a/2)^24*x-3153150*ax^2*ay^16*az^8*cos(a/2)^6*sin(a/2)^26*x-1891890*ax^2*ay^16*az^10*cos(a/2)^4*sin(a/2)^28*x-630630*ax^2*ay^16*az^12*cos(a/2)^2*sin(a/2)^30*x-420420*ax^2*ay^18*az^2*cos(a/2)^10*sin(a/2)^22*x-1051050*ax^2*ay^18*az^4*cos(a/2)^8*sin(a/2)^24*x-1401400*ax^2*ay^18*az^6*cos(a/2)^6*sin(a/2)^26*x-1051050*ax^2*ay^18*az^8*cos(a/2)^4*sin(a/2)^28*x-420420*ax^2*ay^18*az^10*cos(a/2)^2*sin(a/2)^30*x-210210*ax^2*ay^20*az^2*cos(a/2)^8*sin(a/2)^24*x-420420*ax^2*ay^20*az^4*cos(a/2)^6*sin(a/2)^26*x-420420*ax^2*ay^20*az^6*cos(a/2)^4*sin(a/2)^28*x-210210*ax^2*ay^20*az^8*cos(a/2)^2*sin(a/2)^30*x-76440*ax^2*ay^22*az^2*cos(a/2)^6*sin(a/2)^26*x-114660*ax^2*ay^22*az^4*cos(a/2)^4*sin(a/2)^28*x-76440*ax^2*ay^22*az^6*cos(a/2)^2*sin(a/2)^30*x-19110*ax^2*ay^24*az^2*cos(a/2)^4*sin(a/2)^28*x-19110*ax^2*ay^24*az^4*cos(a/2)^2*sin(a/2)^30*x-2940*ax^2*ay^26*az^2*cos(a/2)^2*sin(a/2)^30*x+420*ax^3*ay*az^2*cos(a/2)^26*sin(a/2)^6*y+2730*ax^3*ay*az^4*cos(a/2)^24*sin(a/2)^8*y+10920*ax^3*ay*az^6*cos(a/2)^22*sin(a/2)^10*y+30030*ax^3*ay*az^8*cos(a/2)^20*sin(a/2)^12*y+60060*ax^3*ay*az^10*cos(a/2)^18*sin(a/2)^14*y+90090*ax^3*ay*az^12*cos(a/2)^16*sin(a/2)^16*y+102960*ax^3*ay*az^14*cos(a/2)^14*sin(a/2)^18*y+90090*ax^3*ay*az^16*cos(a/2)^12*sin(a/2)^20*y+60060*ax^3*ay*az^18*cos(a/2)^10*sin(a/2)^22*y+30030*ax^3*ay*az^20*cos(a/2)^8*sin(a/2)^24*y+10920*ax^3*ay*az^22*cos(a/2)^6*sin(a/2)^26*y+2730*ax^3*ay*az^24*cos(a/2)^4*sin(a/2)^28*y+420*ax^3*ay*az^26*cos(a/2)^2*sin(a/2)^30*y+420*ax^3*ay^2*az*cos(a/2)^26*sin(a/2)^6*z+5460*ax^3*ay^2*az^3*cos(a/2)^24*sin(a/2)^8*z+32760*ax^3*ay^2*az^5*cos(a/2)^22*sin(a/2)^10*z+120120*ax^3*ay^2*az^7*cos(a/2)^20*sin(a/2)^12*z+300300*ax^3*ay^2*az^9*cos(a/2)^18*sin(a/2)^14*z+540540*ax^3*ay^2*az^11*cos(a/2)^16*sin(a/2)^16*z+720720*ax^3*ay^2*az^13*cos(a/2)^14*sin(a/2)^18*z+720720*ax^3*ay^2*az^15*cos(a/2)^12*sin(a/2)^20*z+540540*ax^3*ay^2*az^17*cos(a/2)^10*sin(a/2)^22*z+300300*ax^3*ay^2*az^19*cos(a/2)^8*sin(a/2)^24*z+120120*ax^3*ay^2*az^21*cos(a/2)^6*sin(a/2)^26*z+32760*ax^3*ay^2*az^23*cos(a/2)^4*sin(a/2)^28*z+5460*ax^3*ay^2*az^25*cos(a/2)^2*sin(a/2)^30*z+5460*ax^3*ay^3*az^2*cos(a/2)^24*sin(a/2)^8*y+32760*ax^3*ay^3*az^4*cos(a/2)^22*sin(a/2)^10*y+120120*ax^3*ay^3*az^6*cos(a/2)^20*sin(a/2)^12*y+300300*ax^3*ay^3*az^8*cos(a/2)^18*sin(a/2)^14*y+540540*ax^3*ay^3*az^10*cos(a/2)^16*sin(a/2)^16*y+720720*ax^3*ay^3*az^12*cos(a/2)^14*sin(a/2)^18*y+720720*ax^3*ay^3*az^14*cos(a/2)^12*sin(a/2)^20*y+540540*ax^3*ay^3*az^16*cos(a/2)^10*sin(a/2)^22*y+300300*ax^3*ay^3*az^18*cos(a/2)^8*sin(a/2)^24*y+120120*ax^3*ay^3*az^20*cos(a/2)^6*sin(a/2)^26*y+32760*ax^3*ay^3*az^22*cos(a/2)^4*sin(a/2)^28*y+5460*ax^3*ay^3*az^24*cos(a/2)^2*sin(a/2)^30*y+2730*ax^3*ay^4*az*cos(a/2)^24*sin(a/2)^8*z+32760*ax^3*ay^4*az^3*cos(a/2)^22*sin(a/2)^10*z+180180*ax^3*ay^4*az^5*cos(a/2)^20*sin(a/2)^12*z+600600*ax^3*ay^4*az^7*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^3*ay^4*az^9*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^3*ay^4*az^11*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^3*ay^4*az^13*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^3*ay^4*az^15*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^3*ay^4*az^17*cos(a/2)^8*sin(a/2)^24*z+600600*ax^3*ay^4*az^19*cos(a/2)^6*sin(a/2)^26*z+180180*ax^3*ay^4*az^21*cos(a/2)^4*sin(a/2)^28*z+32760*ax^3*ay^4*az^23*cos(a/2)^2*sin(a/2)^30*z+32760*ax^3*ay^5*az^2*cos(a/2)^22*sin(a/2)^10*y+180180*ax^3*ay^5*az^4*cos(a/2)^20*sin(a/2)^12*y+600600*ax^3*ay^5*az^6*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^3*ay^5*az^8*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^3*ay^5*az^10*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^3*ay^5*az^12*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^3*ay^5*az^14*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^3*ay^5*az^16*cos(a/2)^8*sin(a/2)^24*y+600600*ax^3*ay^5*az^18*cos(a/2)^6*sin(a/2)^26*y+180180*ax^3*ay^5*az^20*cos(a/2)^4*sin(a/2)^28*y+32760*ax^3*ay^5*az^22*cos(a/2)^2*sin(a/2)^30*y+10920*ax^3*ay^6*az*cos(a/2)^22*sin(a/2)^10*z+120120*ax^3*ay^6*az^3*cos(a/2)^20*sin(a/2)^12*z+600600*ax^3*ay^6*az^5*cos(a/2)^18*sin(a/2)^14*z+1801800*ax^3*ay^6*az^7*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^3*ay^6*az^9*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^3*ay^6*az^11*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^3*ay^6*az^13*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^3*ay^6*az^15*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^3*ay^6*az^17*cos(a/2)^6*sin(a/2)^26*z+600600*ax^3*ay^6*az^19*cos(a/2)^4*sin(a/2)^28*z+120120*ax^3*ay^6*az^21*cos(a/2)^2*sin(a/2)^30*z+120120*ax^3*ay^7*az^2*cos(a/2)^20*sin(a/2)^12*y+600600*ax^3*ay^7*az^4*cos(a/2)^18*sin(a/2)^14*y+1801800*ax^3*ay^7*az^6*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^3*ay^7*az^8*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^3*ay^7*az^10*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^3*ay^7*az^12*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^3*ay^7*az^14*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^3*ay^7*az^16*cos(a/2)^6*sin(a/2)^26*y+600600*ax^3*ay^7*az^18*cos(a/2)^4*sin(a/2)^28*y+120120*ax^3*ay^7*az^20*cos(a/2)^2*sin(a/2)^30*y+30030*ax^3*ay^8*az*cos(a/2)^20*sin(a/2)^12*z+300300*ax^3*ay^8*az^3*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^3*ay^8*az^5*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^3*ay^8*az^7*cos(a/2)^14*sin(a/2)^18*z+6306300*ax^3*ay^8*az^9*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^3*ay^8*az^11*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^3*ay^8*az^13*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^3*ay^8*az^15*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^3*ay^8*az^17*cos(a/2)^4*sin(a/2)^28*z+300300*ax^3*ay^8*az^19*cos(a/2)^2*sin(a/2)^30*z+300300*ax^3*ay^9*az^2*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^3*ay^9*az^4*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^3*ay^9*az^6*cos(a/2)^14*sin(a/2)^18*y+6306300*ax^3*ay^9*az^8*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^3*ay^9*az^10*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^3*ay^9*az^12*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^3*ay^9*az^14*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^3*ay^9*az^16*cos(a/2)^4*sin(a/2)^28*y+300300*ax^3*ay^9*az^18*cos(a/2)^2*sin(a/2)^30*y+60060*ax^3*ay^10*az*cos(a/2)^18*sin(a/2)^14*z+540540*ax^3*ay^10*az^3*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^3*ay^10*az^5*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^3*ay^10*az^7*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^3*ay^10*az^9*cos(a/2)^10*sin(a/2)^22*z+7567560*ax^3*ay^10*az^11*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^3*ay^10*az^13*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^3*ay^10*az^15*cos(a/2)^4*sin(a/2)^28*z+540540*ax^3*ay^10*az^17*cos(a/2)^2*sin(a/2)^30*z+540540*ax^3*ay^11*az^2*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^3*ay^11*az^4*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^3*ay^11*az^6*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^3*ay^11*az^8*cos(a/2)^10*sin(a/2)^22*y+7567560*ax^3*ay^11*az^10*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^3*ay^11*az^12*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^3*ay^11*az^14*cos(a/2)^4*sin(a/2)^28*y+540540*ax^3*ay^11*az^16*cos(a/2)^2*sin(a/2)^30*y+90090*ax^3*ay^12*az*cos(a/2)^16*sin(a/2)^16*z+720720*ax^3*ay^12*az^3*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^3*ay^12*az^5*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^3*ay^12*az^7*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^3*ay^12*az^9*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^3*ay^12*az^11*cos(a/2)^6*sin(a/2)^26*z+2522520*ax^3*ay^12*az^13*cos(a/2)^4*sin(a/2)^28*z+720720*ax^3*ay^12*az^15*cos(a/2)^2*sin(a/2)^30*z+720720*ax^3*ay^13*az^2*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^3*ay^13*az^4*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^3*ay^13*az^6*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^3*ay^13*az^8*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^3*ay^13*az^10*cos(a/2)^6*sin(a/2)^26*y+2522520*ax^3*ay^13*az^12*cos(a/2)^4*sin(a/2)^28*y+720720*ax^3*ay^13*az^14*cos(a/2)^2*sin(a/2)^30*y+102960*ax^3*ay^14*az*cos(a/2)^14*sin(a/2)^18*z+720720*ax^3*ay^14*az^3*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^3*ay^14*az^5*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^3*ay^14*az^7*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^3*ay^14*az^9*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^3*ay^14*az^11*cos(a/2)^4*sin(a/2)^28*z+720720*ax^3*ay^14*az^13*cos(a/2)^2*sin(a/2)^30*z+720720*ax^3*ay^15*az^2*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^3*ay^15*az^4*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^3*ay^15*az^6*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^3*ay^15*az^8*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^3*ay^15*az^10*cos(a/2)^4*sin(a/2)^28*y+720720*ax^3*ay^15*az^12*cos(a/2)^2*sin(a/2)^30*y+90090*ax^3*ay^16*az*cos(a/2)^12*sin(a/2)^20*z+540540*ax^3*ay^16*az^3*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^3*ay^16*az^5*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^3*ay^16*az^7*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^3*ay^16*az^9*cos(a/2)^4*sin(a/2)^28*z+540540*ax^3*ay^16*az^11*cos(a/2)^2*sin(a/2)^30*z+540540*ax^3*ay^17*az^2*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^3*ay^17*az^4*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^3*ay^17*az^6*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^3*ay^17*az^8*cos(a/2)^4*sin(a/2)^28*y+540540*ax^3*ay^17*az^10*cos(a/2)^2*sin(a/2)^30*y+60060*ax^3*ay^18*az*cos(a/2)^10*sin(a/2)^22*z+300300*ax^3*ay^18*az^3*cos(a/2)^8*sin(a/2)^24*z+600600*ax^3*ay^18*az^5*cos(a/2)^6*sin(a/2)^26*z+600600*ax^3*ay^18*az^7*cos(a/2)^4*sin(a/2)^28*z+300300*ax^3*ay^18*az^9*cos(a/2)^2*sin(a/2)^30*z+300300*ax^3*ay^19*az^2*cos(a/2)^8*sin(a/2)^24*y+600600*ax^3*ay^19*az^4*cos(a/2)^6*sin(a/2)^26*y+600600*ax^3*ay^19*az^6*cos(a/2)^4*sin(a/2)^28*y+300300*ax^3*ay^19*az^8*cos(a/2)^2*sin(a/2)^30*y+30030*ax^3*ay^20*az*cos(a/2)^8*sin(a/2)^24*z+120120*ax^3*ay^20*az^3*cos(a/2)^6*sin(a/2)^26*z+180180*ax^3*ay^20*az^5*cos(a/2)^4*sin(a/2)^28*z+120120*ax^3*ay^20*az^7*cos(a/2)^2*sin(a/2)^30*z+120120*ax^3*ay^21*az^2*cos(a/2)^6*sin(a/2)^26*y+180180*ax^3*ay^21*az^4*cos(a/2)^4*sin(a/2)^28*y+120120*ax^3*ay^21*az^6*cos(a/2)^2*sin(a/2)^30*y+10920*ax^3*ay^22*az*cos(a/2)^6*sin(a/2)^26*z+32760*ax^3*ay^22*az^3*cos(a/2)^4*sin(a/2)^28*z+32760*ax^3*ay^22*az^5*cos(a/2)^2*sin(a/2)^30*z+32760*ax^3*ay^23*az^2*cos(a/2)^4*sin(a/2)^28*y+32760*ax^3*ay^23*az^4*cos(a/2)^2*sin(a/2)^30*y+2730*ax^3*ay^24*az*cos(a/2)^4*sin(a/2)^28*z+5460*ax^3*ay^24*az^3*cos(a/2)^2*sin(a/2)^30*z+5460*ax^3*ay^25*az^2*cos(a/2)^2*sin(a/2)^30*y+420*ax^3*ay^26*az*cos(a/2)^2*sin(a/2)^30*z-16380*ax^4*ay^2*az^2*cos(a/2)^24*sin(a/2)^8*x-98280*ax^4*ay^2*az^4*cos(a/2)^22*sin(a/2)^10*x-360360*ax^4*ay^2*az^6*cos(a/2)^20*sin(a/2)^12*x-900900*ax^4*ay^2*az^8*cos(a/2)^18*sin(a/2)^14*x-1621620*ax^4*ay^2*az^10*cos(a/2)^16*sin(a/2)^16*x-2162160*ax^4*ay^2*az^12*cos(a/2)^14*sin(a/2)^18*x-2162160*ax^4*ay^2*az^14*cos(a/2)^12*sin(a/2)^20*x-1621620*ax^4*ay^2*az^16*cos(a/2)^10*sin(a/2)^22*x-900900*ax^4*ay^2*az^18*cos(a/2)^8*sin(a/2)^24*x-360360*ax^4*ay^2*az^20*cos(a/2)^6*sin(a/2)^26*x-98280*ax^4*ay^2*az^22*cos(a/2)^4*sin(a/2)^28*x-16380*ax^4*ay^2*az^24*cos(a/2)^2*sin(a/2)^30*x-98280*ax^4*ay^4*az^2*cos(a/2)^22*sin(a/2)^10*x-540540*ax^4*ay^4*az^4*cos(a/2)^20*sin(a/2)^12*x-1801800*ax^4*ay^4*az^6*cos(a/2)^18*sin(a/2)^14*x-4054050*ax^4*ay^4*az^8*cos(a/2)^16*sin(a/2)^16*x-6486480*ax^4*ay^4*az^10*cos(a/2)^14*sin(a/2)^18*x-7567560*ax^4*ay^4*az^12*cos(a/2)^12*sin(a/2)^20*x-6486480*ax^4*ay^4*az^14*cos(a/2)^10*sin(a/2)^22*x-4054050*ax^4*ay^4*az^16*cos(a/2)^8*sin(a/2)^24*x-1801800*ax^4*ay^4*az^18*cos(a/2)^6*sin(a/2)^26*x-540540*ax^4*ay^4*az^20*cos(a/2)^4*sin(a/2)^28*x-98280*ax^4*ay^4*az^22*cos(a/2)^2*sin(a/2)^30*x-360360*ax^4*ay^6*az^2*cos(a/2)^20*sin(a/2)^12*x-1801800*ax^4*ay^6*az^4*cos(a/2)^18*sin(a/2)^14*x-5405400*ax^4*ay^6*az^6*cos(a/2)^16*sin(a/2)^16*x-10810800*ax^4*ay^6*az^8*cos(a/2)^14*sin(a/2)^18*x-15135120*ax^4*ay^6*az^10*cos(a/2)^12*sin(a/2)^20*x-15135120*ax^4*ay^6*az^12*cos(a/2)^10*sin(a/2)^22*x-10810800*ax^4*ay^6*az^14*cos(a/2)^8*sin(a/2)^24*x-5405400*ax^4*ay^6*az^16*cos(a/2)^6*sin(a/2)^26*x-1801800*ax^4*ay^6*az^18*cos(a/2)^4*sin(a/2)^28*x-360360*ax^4*ay^6*az^20*cos(a/2)^2*sin(a/2)^30*x-900900*ax^4*ay^8*az^2*cos(a/2)^18*sin(a/2)^14*x-4054050*ax^4*ay^8*az^4*cos(a/2)^16*sin(a/2)^16*x-10810800*ax^4*ay^8*az^6*cos(a/2)^14*sin(a/2)^18*x-18918900*ax^4*ay^8*az^8*cos(a/2)^12*sin(a/2)^20*x-22702680*ax^4*ay^8*az^10*cos(a/2)^10*sin(a/2)^22*x-18918900*ax^4*ay^8*az^12*cos(a/2)^8*sin(a/2)^24*x-10810800*ax^4*ay^8*az^14*cos(a/2)^6*sin(a/2)^26*x-4054050*ax^4*ay^8*az^16*cos(a/2)^4*sin(a/2)^28*x-900900*ax^4*ay^8*az^18*cos(a/2)^2*sin(a/2)^30*x-1621620*ax^4*ay^10*az^2*cos(a/2)^16*sin(a/2)^16*x-6486480*ax^4*ay^10*az^4*cos(a/2)^14*sin(a/2)^18*x-15135120*ax^4*ay^10*az^6*cos(a/2)^12*sin(a/2)^20*x-22702680*ax^4*ay^10*az^8*cos(a/2)^10*sin(a/2)^22*x-22702680*ax^4*ay^10*az^10*cos(a/2)^8*sin(a/2)^24*x-15135120*ax^4*ay^10*az^12*cos(a/2)^6*sin(a/2)^26*x-6486480*ax^4*ay^10*az^14*cos(a/2)^4*sin(a/2)^28*x-1621620*ax^4*ay^10*az^16*cos(a/2)^2*sin(a/2)^30*x-2162160*ax^4*ay^12*az^2*cos(a/2)^14*sin(a/2)^18*x-7567560*ax^4*ay^12*az^4*cos(a/2)^12*sin(a/2)^20*x-15135120*ax^4*ay^12*az^6*cos(a/2)^10*sin(a/2)^22*x-18918900*ax^4*ay^12*az^8*cos(a/2)^8*sin(a/2)^24*x-15135120*ax^4*ay^12*az^10*cos(a/2)^6*sin(a/2)^26*x-7567560*ax^4*ay^12*az^12*cos(a/2)^4*sin(a/2)^28*x-2162160*ax^4*ay^12*az^14*cos(a/2)^2*sin(a/2)^30*x-2162160*ax^4*ay^14*az^2*cos(a/2)^12*sin(a/2)^20*x-6486480*ax^4*ay^14*az^4*cos(a/2)^10*sin(a/2)^22*x-10810800*ax^4*ay^14*az^6*cos(a/2)^8*sin(a/2)^24*x-10810800*ax^4*ay^14*az^8*cos(a/2)^6*sin(a/2)^26*x-6486480*ax^4*ay^14*az^10*cos(a/2)^4*sin(a/2)^28*x-2162160*ax^4*ay^14*az^12*cos(a/2)^2*sin(a/2)^30*x-1621620*ax^4*ay^16*az^2*cos(a/2)^10*sin(a/2)^22*x-4054050*ax^4*ay^16*az^4*cos(a/2)^8*sin(a/2)^24*x-5405400*ax^4*ay^16*az^6*cos(a/2)^6*sin(a/2)^26*x-4054050*ax^4*ay^16*az^8*cos(a/2)^4*sin(a/2)^28*x-1621620*ax^4*ay^16*az^10*cos(a/2)^2*sin(a/2)^30*x-900900*ax^4*ay^18*az^2*cos(a/2)^8*sin(a/2)^24*x-1801800*ax^4*ay^18*az^4*cos(a/2)^6*sin(a/2)^26*x-1801800*ax^4*ay^18*az^6*cos(a/2)^4*sin(a/2)^28*x-900900*ax^4*ay^18*az^8*cos(a/2)^2*sin(a/2)^30*x-360360*ax^4*ay^20*az^2*cos(a/2)^6*sin(a/2)^26*x-540540*ax^4*ay^20*az^4*cos(a/2)^4*sin(a/2)^28*x-360360*ax^4*ay^20*az^6*cos(a/2)^2*sin(a/2)^30*x-98280*ax^4*ay^22*az^2*cos(a/2)^4*sin(a/2)^28*x-98280*ax^4*ay^22*az^4*cos(a/2)^2*sin(a/2)^30*x-16380*ax^4*ay^24*az^2*cos(a/2)^2*sin(a/2)^30*x+2730*ax^5*ay*az^2*cos(a/2)^24*sin(a/2)^8*y+16380*ax^5*ay*az^4*cos(a/2)^22*sin(a/2)^10*y+60060*ax^5*ay*az^6*cos(a/2)^20*sin(a/2)^12*y+150150*ax^5*ay*az^8*cos(a/2)^18*sin(a/2)^14*y+270270*ax^5*ay*az^10*cos(a/2)^16*sin(a/2)^16*y+360360*ax^5*ay*az^12*cos(a/2)^14*sin(a/2)^18*y+360360*ax^5*ay*az^14*cos(a/2)^12*sin(a/2)^20*y+270270*ax^5*ay*az^16*cos(a/2)^10*sin(a/2)^22*y+150150*ax^5*ay*az^18*cos(a/2)^8*sin(a/2)^24*y+60060*ax^5*ay*az^20*cos(a/2)^6*sin(a/2)^26*y+16380*ax^5*ay*az^22*cos(a/2)^4*sin(a/2)^28*y+2730*ax^5*ay*az^24*cos(a/2)^2*sin(a/2)^30*y+2730*ax^5*ay^2*az*cos(a/2)^24*sin(a/2)^8*z+32760*ax^5*ay^2*az^3*cos(a/2)^22*sin(a/2)^10*z+180180*ax^5*ay^2*az^5*cos(a/2)^20*sin(a/2)^12*z+600600*ax^5*ay^2*az^7*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^5*ay^2*az^9*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^5*ay^2*az^11*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^5*ay^2*az^13*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^5*ay^2*az^15*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^5*ay^2*az^17*cos(a/2)^8*sin(a/2)^24*z+600600*ax^5*ay^2*az^19*cos(a/2)^6*sin(a/2)^26*z+180180*ax^5*ay^2*az^21*cos(a/2)^4*sin(a/2)^28*z+32760*ax^5*ay^2*az^23*cos(a/2)^2*sin(a/2)^30*z+32760*ax^5*ay^3*az^2*cos(a/2)^22*sin(a/2)^10*y+180180*ax^5*ay^3*az^4*cos(a/2)^20*sin(a/2)^12*y+600600*ax^5*ay^3*az^6*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^5*ay^3*az^8*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^5*ay^3*az^10*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^5*ay^3*az^12*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^5*ay^3*az^14*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^5*ay^3*az^16*cos(a/2)^8*sin(a/2)^24*y+600600*ax^5*ay^3*az^18*cos(a/2)^6*sin(a/2)^26*y+180180*ax^5*ay^3*az^20*cos(a/2)^4*sin(a/2)^28*y+32760*ax^5*ay^3*az^22*cos(a/2)^2*sin(a/2)^30*y+16380*ax^5*ay^4*az*cos(a/2)^22*sin(a/2)^10*z+180180*ax^5*ay^4*az^3*cos(a/2)^20*sin(a/2)^12*z+900900*ax^5*ay^4*az^5*cos(a/2)^18*sin(a/2)^14*z+2702700*ax^5*ay^4*az^7*cos(a/2)^16*sin(a/2)^16*z+5405400*ax^5*ay^4*az^9*cos(a/2)^14*sin(a/2)^18*z+7567560*ax^5*ay^4*az^11*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^5*ay^4*az^13*cos(a/2)^10*sin(a/2)^22*z+5405400*ax^5*ay^4*az^15*cos(a/2)^8*sin(a/2)^24*z+2702700*ax^5*ay^4*az^17*cos(a/2)^6*sin(a/2)^26*z+900900*ax^5*ay^4*az^19*cos(a/2)^4*sin(a/2)^28*z+180180*ax^5*ay^4*az^21*cos(a/2)^2*sin(a/2)^30*z+180180*ax^5*ay^5*az^2*cos(a/2)^20*sin(a/2)^12*y+900900*ax^5*ay^5*az^4*cos(a/2)^18*sin(a/2)^14*y+2702700*ax^5*ay^5*az^6*cos(a/2)^16*sin(a/2)^16*y+5405400*ax^5*ay^5*az^8*cos(a/2)^14*sin(a/2)^18*y+7567560*ax^5*ay^5*az^10*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^5*ay^5*az^12*cos(a/2)^10*sin(a/2)^22*y+5405400*ax^5*ay^5*az^14*cos(a/2)^8*sin(a/2)^24*y+2702700*ax^5*ay^5*az^16*cos(a/2)^6*sin(a/2)^26*y+900900*ax^5*ay^5*az^18*cos(a/2)^4*sin(a/2)^28*y+180180*ax^5*ay^5*az^20*cos(a/2)^2*sin(a/2)^30*y+60060*ax^5*ay^6*az*cos(a/2)^20*sin(a/2)^12*z+600600*ax^5*ay^6*az^3*cos(a/2)^18*sin(a/2)^14*z+2702700*ax^5*ay^6*az^5*cos(a/2)^16*sin(a/2)^16*z+7207200*ax^5*ay^6*az^7*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^5*ay^6*az^9*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^5*ay^6*az^11*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^5*ay^6*az^13*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^5*ay^6*az^15*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^5*ay^6*az^17*cos(a/2)^4*sin(a/2)^28*z+600600*ax^5*ay^6*az^19*cos(a/2)^2*sin(a/2)^30*z+600600*ax^5*ay^7*az^2*cos(a/2)^18*sin(a/2)^14*y+2702700*ax^5*ay^7*az^4*cos(a/2)^16*sin(a/2)^16*y+7207200*ax^5*ay^7*az^6*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^5*ay^7*az^8*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^5*ay^7*az^10*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^5*ay^7*az^12*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^5*ay^7*az^14*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^5*ay^7*az^16*cos(a/2)^4*sin(a/2)^28*y+600600*ax^5*ay^7*az^18*cos(a/2)^2*sin(a/2)^30*y+150150*ax^5*ay^8*az*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^5*ay^8*az^3*cos(a/2)^16*sin(a/2)^16*z+5405400*ax^5*ay^8*az^5*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^5*ay^8*az^7*cos(a/2)^12*sin(a/2)^20*z+18918900*ax^5*ay^8*az^9*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^5*ay^8*az^11*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^5*ay^8*az^13*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^5*ay^8*az^15*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^5*ay^8*az^17*cos(a/2)^2*sin(a/2)^30*z+1351350*ax^5*ay^9*az^2*cos(a/2)^16*sin(a/2)^16*y+5405400*ax^5*ay^9*az^4*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^5*ay^9*az^6*cos(a/2)^12*sin(a/2)^20*y+18918900*ax^5*ay^9*az^8*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^5*ay^9*az^10*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^5*ay^9*az^12*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^5*ay^9*az^14*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^5*ay^9*az^16*cos(a/2)^2*sin(a/2)^30*y+270270*ax^5*ay^10*az*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^5*ay^10*az^3*cos(a/2)^14*sin(a/2)^18*z+7567560*ax^5*ay^10*az^5*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^5*ay^10*az^7*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^5*ay^10*az^9*cos(a/2)^8*sin(a/2)^24*z+15135120*ax^5*ay^10*az^11*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^5*ay^10*az^13*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^5*ay^10*az^15*cos(a/2)^2*sin(a/2)^30*z+2162160*ax^5*ay^11*az^2*cos(a/2)^14*sin(a/2)^18*y+7567560*ax^5*ay^11*az^4*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^5*ay^11*az^6*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^5*ay^11*az^8*cos(a/2)^8*sin(a/2)^24*y+15135120*ax^5*ay^11*az^10*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^5*ay^11*az^12*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^5*ay^11*az^14*cos(a/2)^2*sin(a/2)^30*y+360360*ax^5*ay^12*az*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^5*ay^12*az^3*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^5*ay^12*az^5*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^5*ay^12*az^7*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^5*ay^12*az^9*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^5*ay^12*az^11*cos(a/2)^4*sin(a/2)^28*z+2522520*ax^5*ay^12*az^13*cos(a/2)^2*sin(a/2)^30*z+2522520*ax^5*ay^13*az^2*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^5*ay^13*az^4*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^5*ay^13*az^6*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^5*ay^13*az^8*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^5*ay^13*az^10*cos(a/2)^4*sin(a/2)^28*y+2522520*ax^5*ay^13*az^12*cos(a/2)^2*sin(a/2)^30*y+360360*ax^5*ay^14*az*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^5*ay^14*az^3*cos(a/2)^10*sin(a/2)^22*z+5405400*ax^5*ay^14*az^5*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^5*ay^14*az^7*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^5*ay^14*az^9*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^5*ay^14*az^11*cos(a/2)^2*sin(a/2)^30*z+2162160*ax^5*ay^15*az^2*cos(a/2)^10*sin(a/2)^22*y+5405400*ax^5*ay^15*az^4*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^5*ay^15*az^6*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^5*ay^15*az^8*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^5*ay^15*az^10*cos(a/2)^2*sin(a/2)^30*y+270270*ax^5*ay^16*az*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^5*ay^16*az^3*cos(a/2)^8*sin(a/2)^24*z+2702700*ax^5*ay^16*az^5*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^5*ay^16*az^7*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^5*ay^16*az^9*cos(a/2)^2*sin(a/2)^30*z+1351350*ax^5*ay^17*az^2*cos(a/2)^8*sin(a/2)^24*y+2702700*ax^5*ay^17*az^4*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^5*ay^17*az^6*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^5*ay^17*az^8*cos(a/2)^2*sin(a/2)^30*y+150150*ax^5*ay^18*az*cos(a/2)^8*sin(a/2)^24*z+600600*ax^5*ay^18*az^3*cos(a/2)^6*sin(a/2)^26*z+900900*ax^5*ay^18*az^5*cos(a/2)^4*sin(a/2)^28*z+600600*ax^5*ay^18*az^7*cos(a/2)^2*sin(a/2)^30*z+600600*ax^5*ay^19*az^2*cos(a/2)^6*sin(a/2)^26*y+900900*ax^5*ay^19*az^4*cos(a/2)^4*sin(a/2)^28*y+600600*ax^5*ay^19*az^6*cos(a/2)^2*sin(a/2)^30*y+60060*ax^5*ay^20*az*cos(a/2)^6*sin(a/2)^26*z+180180*ax^5*ay^20*az^3*cos(a/2)^4*sin(a/2)^28*z+180180*ax^5*ay^20*az^5*cos(a/2)^2*sin(a/2)^30*z+180180*ax^5*ay^21*az^2*cos(a/2)^4*sin(a/2)^28*y+180180*ax^5*ay^21*az^4*cos(a/2)^2*sin(a/2)^30*y+16380*ax^5*ay^22*az*cos(a/2)^4*sin(a/2)^28*z+32760*ax^5*ay^22*az^3*cos(a/2)^2*sin(a/2)^30*z+32760*ax^5*ay^23*az^2*cos(a/2)^2*sin(a/2)^30*y+2730*ax^5*ay^24*az*cos(a/2)^2*sin(a/2)^30*z-54600*ax^6*ay^2*az^2*cos(a/2)^22*sin(a/2)^10*x-300300*ax^6*ay^2*az^4*cos(a/2)^20*sin(a/2)^12*x-1001000*ax^6*ay^2*az^6*cos(a/2)^18*sin(a/2)^14*x-2252250*ax^6*ay^2*az^8*cos(a/2)^16*sin(a/2)^16*x-3603600*ax^6*ay^2*az^10*cos(a/2)^14*sin(a/2)^18*x-4204200*ax^6*ay^2*az^12*cos(a/2)^12*sin(a/2)^20*x-3603600*ax^6*ay^2*az^14*cos(a/2)^10*sin(a/2)^22*x-2252250*ax^6*ay^2*az^16*cos(a/2)^8*sin(a/2)^24*x-1001000*ax^6*ay^2*az^18*cos(a/2)^6*sin(a/2)^26*x-300300*ax^6*ay^2*az^20*cos(a/2)^4*sin(a/2)^28*x-54600*ax^6*ay^2*az^22*cos(a/2)^2*sin(a/2)^30*x-300300*ax^6*ay^4*az^2*cos(a/2)^20*sin(a/2)^12*x-1501500*ax^6*ay^4*az^4*cos(a/2)^18*sin(a/2)^14*x-4504500*ax^6*ay^4*az^6*cos(a/2)^16*sin(a/2)^16*x-9009000*ax^6*ay^4*az^8*cos(a/2)^14*sin(a/2)^18*x-12612600*ax^6*ay^4*az^10*cos(a/2)^12*sin(a/2)^20*x-12612600*ax^6*ay^4*az^12*cos(a/2)^10*sin(a/2)^22*x-9009000*ax^6*ay^4*az^14*cos(a/2)^8*sin(a/2)^24*x-4504500*ax^6*ay^4*az^16*cos(a/2)^6*sin(a/2)^26*x-1501500*ax^6*ay^4*az^18*cos(a/2)^4*sin(a/2)^28*x-300300*ax^6*ay^4*az^20*cos(a/2)^2*sin(a/2)^30*x-1001000*ax^6*ay^6*az^2*cos(a/2)^18*sin(a/2)^14*x-4504500*ax^6*ay^6*az^4*cos(a/2)^16*sin(a/2)^16*x-12012000*ax^6*ay^6*az^6*cos(a/2)^14*sin(a/2)^18*x-21021000*ax^6*ay^6*az^8*cos(a/2)^12*sin(a/2)^20*x-25225200*ax^6*ay^6*az^10*cos(a/2)^10*sin(a/2)^22*x-21021000*ax^6*ay^6*az^12*cos(a/2)^8*sin(a/2)^24*x-12012000*ax^6*ay^6*az^14*cos(a/2)^6*sin(a/2)^26*x-4504500*ax^6*ay^6*az^16*cos(a/2)^4*sin(a/2)^28*x-1001000*ax^6*ay^6*az^18*cos(a/2)^2*sin(a/2)^30*x-2252250*ax^6*ay^8*az^2*cos(a/2)^16*sin(a/2)^16*x-9009000*ax^6*ay^8*az^4*cos(a/2)^14*sin(a/2)^18*x-21021000*ax^6*ay^8*az^6*cos(a/2)^12*sin(a/2)^20*x-31531500*ax^6*ay^8*az^8*cos(a/2)^10*sin(a/2)^22*x-31531500*ax^6*ay^8*az^10*cos(a/2)^8*sin(a/2)^24*x-21021000*ax^6*ay^8*az^12*cos(a/2)^6*sin(a/2)^26*x-9009000*ax^6*ay^8*az^14*cos(a/2)^4*sin(a/2)^28*x-2252250*ax^6*ay^8*az^16*cos(a/2)^2*sin(a/2)^30*x-3603600*ax^6*ay^10*az^2*cos(a/2)^14*sin(a/2)^18*x-12612600*ax^6*ay^10*az^4*cos(a/2)^12*sin(a/2)^20*x-25225200*ax^6*ay^10*az^6*cos(a/2)^10*sin(a/2)^22*x-31531500*ax^6*ay^10*az^8*cos(a/2)^8*sin(a/2)^24*x-25225200*ax^6*ay^10*az^10*cos(a/2)^6*sin(a/2)^26*x-12612600*ax^6*ay^10*az^12*cos(a/2)^4*sin(a/2)^28*x-3603600*ax^6*ay^10*az^14*cos(a/2)^2*sin(a/2)^30*x-4204200*ax^6*ay^12*az^2*cos(a/2)^12*sin(a/2)^20*x-12612600*ax^6*ay^12*az^4*cos(a/2)^10*sin(a/2)^22*x-21021000*ax^6*ay^12*az^6*cos(a/2)^8*sin(a/2)^24*x-21021000*ax^6*ay^12*az^8*cos(a/2)^6*sin(a/2)^26*x-12612600*ax^6*ay^12*az^10*cos(a/2)^4*sin(a/2)^28*x-4204200*ax^6*ay^12*az^12*cos(a/2)^2*sin(a/2)^30*x-3603600*ax^6*ay^14*az^2*cos(a/2)^10*sin(a/2)^22*x-9009000*ax^6*ay^14*az^4*cos(a/2)^8*sin(a/2)^24*x-12012000*ax^6*ay^14*az^6*cos(a/2)^6*sin(a/2)^26*x-9009000*ax^6*ay^14*az^8*cos(a/2)^4*sin(a/2)^28*x-3603600*ax^6*ay^14*az^10*cos(a/2)^2*sin(a/2)^30*x-2252250*ax^6*ay^16*az^2*cos(a/2)^8*sin(a/2)^24*x-4504500*ax^6*ay^16*az^4*cos(a/2)^6*sin(a/2)^26*x-4504500*ax^6*ay^16*az^6*cos(a/2)^4*sin(a/2)^28*x-2252250*ax^6*ay^16*az^8*cos(a/2)^2*sin(a/2)^30*x-1001000*ax^6*ay^18*az^2*cos(a/2)^6*sin(a/2)^26*x-1501500*ax^6*ay^18*az^4*cos(a/2)^4*sin(a/2)^28*x-1001000*ax^6*ay^18*az^6*cos(a/2)^2*sin(a/2)^30*x-300300*ax^6*ay^20*az^2*cos(a/2)^4*sin(a/2)^28*x-300300*ax^6*ay^20*az^4*cos(a/2)^2*sin(a/2)^30*x-54600*ax^6*ay^22*az^2*cos(a/2)^2*sin(a/2)^30*x+10920*ax^7*ay*az^2*cos(a/2)^22*sin(a/2)^10*y+60060*ax^7*ay*az^4*cos(a/2)^20*sin(a/2)^12*y+200200*ax^7*ay*az^6*cos(a/2)^18*sin(a/2)^14*y+450450*ax^7*ay*az^8*cos(a/2)^16*sin(a/2)^16*y+720720*ax^7*ay*az^10*cos(a/2)^14*sin(a/2)^18*y+840840*ax^7*ay*az^12*cos(a/2)^12*sin(a/2)^20*y+720720*ax^7*ay*az^14*cos(a/2)^10*sin(a/2)^22*y+450450*ax^7*ay*az^16*cos(a/2)^8*sin(a/2)^24*y+200200*ax^7*ay*az^18*cos(a/2)^6*sin(a/2)^26*y+60060*ax^7*ay*az^20*cos(a/2)^4*sin(a/2)^28*y+10920*ax^7*ay*az^22*cos(a/2)^2*sin(a/2)^30*y+10920*ax^7*ay^2*az*cos(a/2)^22*sin(a/2)^10*z+120120*ax^7*ay^2*az^3*cos(a/2)^20*sin(a/2)^12*z+600600*ax^7*ay^2*az^5*cos(a/2)^18*sin(a/2)^14*z+1801800*ax^7*ay^2*az^7*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^7*ay^2*az^9*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^7*ay^2*az^11*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^7*ay^2*az^13*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^7*ay^2*az^15*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^7*ay^2*az^17*cos(a/2)^6*sin(a/2)^26*z+600600*ax^7*ay^2*az^19*cos(a/2)^4*sin(a/2)^28*z+120120*ax^7*ay^2*az^21*cos(a/2)^2*sin(a/2)^30*z+120120*ax^7*ay^3*az^2*cos(a/2)^20*sin(a/2)^12*y+600600*ax^7*ay^3*az^4*cos(a/2)^18*sin(a/2)^14*y+1801800*ax^7*ay^3*az^6*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^7*ay^3*az^8*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^7*ay^3*az^10*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^7*ay^3*az^12*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^7*ay^3*az^14*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^7*ay^3*az^16*cos(a/2)^6*sin(a/2)^26*y+600600*ax^7*ay^3*az^18*cos(a/2)^4*sin(a/2)^28*y+120120*ax^7*ay^3*az^20*cos(a/2)^2*sin(a/2)^30*y+60060*ax^7*ay^4*az*cos(a/2)^20*sin(a/2)^12*z+600600*ax^7*ay^4*az^3*cos(a/2)^18*sin(a/2)^14*z+2702700*ax^7*ay^4*az^5*cos(a/2)^16*sin(a/2)^16*z+7207200*ax^7*ay^4*az^7*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^7*ay^4*az^9*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^7*ay^4*az^11*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^7*ay^4*az^13*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^7*ay^4*az^15*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^7*ay^4*az^17*cos(a/2)^4*sin(a/2)^28*z+600600*ax^7*ay^4*az^19*cos(a/2)^2*sin(a/2)^30*z+600600*ax^7*ay^5*az^2*cos(a/2)^18*sin(a/2)^14*y+2702700*ax^7*ay^5*az^4*cos(a/2)^16*sin(a/2)^16*y+7207200*ax^7*ay^5*az^6*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^7*ay^5*az^8*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^7*ay^5*az^10*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^7*ay^5*az^12*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^7*ay^5*az^14*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^7*ay^5*az^16*cos(a/2)^4*sin(a/2)^28*y+600600*ax^7*ay^5*az^18*cos(a/2)^2*sin(a/2)^30*y+200200*ax^7*ay^6*az*cos(a/2)^18*sin(a/2)^14*z+1801800*ax^7*ay^6*az^3*cos(a/2)^16*sin(a/2)^16*z+7207200*ax^7*ay^6*az^5*cos(a/2)^14*sin(a/2)^18*z+16816800*ax^7*ay^6*az^7*cos(a/2)^12*sin(a/2)^20*z+25225200*ax^7*ay^6*az^9*cos(a/2)^10*sin(a/2)^22*z+25225200*ax^7*ay^6*az^11*cos(a/2)^8*sin(a/2)^24*z+16816800*ax^7*ay^6*az^13*cos(a/2)^6*sin(a/2)^26*z+7207200*ax^7*ay^6*az^15*cos(a/2)^4*sin(a/2)^28*z+1801800*ax^7*ay^6*az^17*cos(a/2)^2*sin(a/2)^30*z+1801800*ax^7*ay^7*az^2*cos(a/2)^16*sin(a/2)^16*y+7207200*ax^7*ay^7*az^4*cos(a/2)^14*sin(a/2)^18*y+16816800*ax^7*ay^7*az^6*cos(a/2)^12*sin(a/2)^20*y+25225200*ax^7*ay^7*az^8*cos(a/2)^10*sin(a/2)^22*y+25225200*ax^7*ay^7*az^10*cos(a/2)^8*sin(a/2)^24*y+16816800*ax^7*ay^7*az^12*cos(a/2)^6*sin(a/2)^26*y+7207200*ax^7*ay^7*az^14*cos(a/2)^4*sin(a/2)^28*y+1801800*ax^7*ay^7*az^16*cos(a/2)^2*sin(a/2)^30*y+450450*ax^7*ay^8*az*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^7*ay^8*az^3*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^7*ay^8*az^5*cos(a/2)^12*sin(a/2)^20*z+25225200*ax^7*ay^8*az^7*cos(a/2)^10*sin(a/2)^22*z+31531500*ax^7*ay^8*az^9*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^7*ay^8*az^11*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^7*ay^8*az^13*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^7*ay^8*az^15*cos(a/2)^2*sin(a/2)^30*z+3603600*ax^7*ay^9*az^2*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^7*ay^9*az^4*cos(a/2)^12*sin(a/2)^20*y+25225200*ax^7*ay^9*az^6*cos(a/2)^10*sin(a/2)^22*y+31531500*ax^7*ay^9*az^8*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^7*ay^9*az^10*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^7*ay^9*az^12*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^7*ay^9*az^14*cos(a/2)^2*sin(a/2)^30*y+720720*ax^7*ay^10*az*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^7*ay^10*az^3*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^7*ay^10*az^5*cos(a/2)^10*sin(a/2)^22*z+25225200*ax^7*ay^10*az^7*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^7*ay^10*az^9*cos(a/2)^6*sin(a/2)^26*z+15135120*ax^7*ay^10*az^11*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^7*ay^10*az^13*cos(a/2)^2*sin(a/2)^30*z+5045040*ax^7*ay^11*az^2*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^7*ay^11*az^4*cos(a/2)^10*sin(a/2)^22*y+25225200*ax^7*ay^11*az^6*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^7*ay^11*az^8*cos(a/2)^6*sin(a/2)^26*y+15135120*ax^7*ay^11*az^10*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^7*ay^11*az^12*cos(a/2)^2*sin(a/2)^30*y+840840*ax^7*ay^12*az*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^7*ay^12*az^3*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^7*ay^12*az^5*cos(a/2)^8*sin(a/2)^24*z+16816800*ax^7*ay^12*az^7*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^7*ay^12*az^9*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^7*ay^12*az^11*cos(a/2)^2*sin(a/2)^30*z+5045040*ax^7*ay^13*az^2*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^7*ay^13*az^4*cos(a/2)^8*sin(a/2)^24*y+16816800*ax^7*ay^13*az^6*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^7*ay^13*az^8*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^7*ay^13*az^10*cos(a/2)^2*sin(a/2)^30*y+720720*ax^7*ay^14*az*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^7*ay^14*az^3*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^7*ay^14*az^5*cos(a/2)^6*sin(a/2)^26*z+7207200*ax^7*ay^14*az^7*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^7*ay^14*az^9*cos(a/2)^2*sin(a/2)^30*z+3603600*ax^7*ay^15*az^2*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^7*ay^15*az^4*cos(a/2)^6*sin(a/2)^26*y+7207200*ax^7*ay^15*az^6*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^7*ay^15*az^8*cos(a/2)^2*sin(a/2)^30*y+450450*ax^7*ay^16*az*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^7*ay^16*az^3*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^7*ay^16*az^5*cos(a/2)^4*sin(a/2)^28*z+1801800*ax^7*ay^16*az^7*cos(a/2)^2*sin(a/2)^30*z+1801800*ax^7*ay^17*az^2*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^7*ay^17*az^4*cos(a/2)^4*sin(a/2)^28*y+1801800*ax^7*ay^17*az^6*cos(a/2)^2*sin(a/2)^30*y+200200*ax^7*ay^18*az*cos(a/2)^6*sin(a/2)^26*z+600600*ax^7*ay^18*az^3*cos(a/2)^4*sin(a/2)^28*z+600600*ax^7*ay^18*az^5*cos(a/2)^2*sin(a/2)^30*z+600600*ax^7*ay^19*az^2*cos(a/2)^4*sin(a/2)^28*y+600600*ax^7*ay^19*az^4*cos(a/2)^2*sin(a/2)^30*y+60060*ax^7*ay^20*az*cos(a/2)^4*sin(a/2)^28*z+120120*ax^7*ay^20*az^3*cos(a/2)^2*sin(a/2)^30*z+120120*ax^7*ay^21*az^2*cos(a/2)^2*sin(a/2)^30*y+10920*ax^7*ay^22*az*cos(a/2)^2*sin(a/2)^30*z-120120*ax^8*ay^2*az^2*cos(a/2)^20*sin(a/2)^12*x-600600*ax^8*ay^2*az^4*cos(a/2)^18*sin(a/2)^14*x-1801800*ax^8*ay^2*az^6*cos(a/2)^16*sin(a/2)^16*x-3603600*ax^8*ay^2*az^8*cos(a/2)^14*sin(a/2)^18*x-5045040*ax^8*ay^2*az^10*cos(a/2)^12*sin(a/2)^20*x-5045040*ax^8*ay^2*az^12*cos(a/2)^10*sin(a/2)^22*x-3603600*ax^8*ay^2*az^14*cos(a/2)^8*sin(a/2)^24*x-1801800*ax^8*ay^2*az^16*cos(a/2)^6*sin(a/2)^26*x-600600*ax^8*ay^2*az^18*cos(a/2)^4*sin(a/2)^28*x-120120*ax^8*ay^2*az^20*cos(a/2)^2*sin(a/2)^30*x-600600*ax^8*ay^4*az^2*cos(a/2)^18*sin(a/2)^14*x-2702700*ax^8*ay^4*az^4*cos(a/2)^16*sin(a/2)^16*x-7207200*ax^8*ay^4*az^6*cos(a/2)^14*sin(a/2)^18*x-12612600*ax^8*ay^4*az^8*cos(a/2)^12*sin(a/2)^20*x-15135120*ax^8*ay^4*az^10*cos(a/2)^10*sin(a/2)^22*x-12612600*ax^8*ay^4*az^12*cos(a/2)^8*sin(a/2)^24*x-7207200*ax^8*ay^4*az^14*cos(a/2)^6*sin(a/2)^26*x-2702700*ax^8*ay^4*az^16*cos(a/2)^4*sin(a/2)^28*x-600600*ax^8*ay^4*az^18*cos(a/2)^2*sin(a/2)^30*x-1801800*ax^8*ay^6*az^2*cos(a/2)^16*sin(a/2)^16*x-7207200*ax^8*ay^6*az^4*cos(a/2)^14*sin(a/2)^18*x-16816800*ax^8*ay^6*az^6*cos(a/2)^12*sin(a/2)^20*x-25225200*ax^8*ay^6*az^8*cos(a/2)^10*sin(a/2)^22*x-25225200*ax^8*ay^6*az^10*cos(a/2)^8*sin(a/2)^24*x-16816800*ax^8*ay^6*az^12*cos(a/2)^6*sin(a/2)^26*x-7207200*ax^8*ay^6*az^14*cos(a/2)^4*sin(a/2)^28*x-1801800*ax^8*ay^6*az^16*cos(a/2)^2*sin(a/2)^30*x-3603600*ax^8*ay^8*az^2*cos(a/2)^14*sin(a/2)^18*x-12612600*ax^8*ay^8*az^4*cos(a/2)^12*sin(a/2)^20*x-25225200*ax^8*ay^8*az^6*cos(a/2)^10*sin(a/2)^22*x-31531500*ax^8*ay^8*az^8*cos(a/2)^8*sin(a/2)^24*x-25225200*ax^8*ay^8*az^10*cos(a/2)^6*sin(a/2)^26*x-12612600*ax^8*ay^8*az^12*cos(a/2)^4*sin(a/2)^28*x-3603600*ax^8*ay^8*az^14*cos(a/2)^2*sin(a/2)^30*x-5045040*ax^8*ay^10*az^2*cos(a/2)^12*sin(a/2)^20*x-15135120*ax^8*ay^10*az^4*cos(a/2)^10*sin(a/2)^22*x-25225200*ax^8*ay^10*az^6*cos(a/2)^8*sin(a/2)^24*x-25225200*ax^8*ay^10*az^8*cos(a/2)^6*sin(a/2)^26*x-15135120*ax^8*ay^10*az^10*cos(a/2)^4*sin(a/2)^28*x-5045040*ax^8*ay^10*az^12*cos(a/2)^2*sin(a/2)^30*x-5045040*ax^8*ay^12*az^2*cos(a/2)^10*sin(a/2)^22*x-12612600*ax^8*ay^12*az^4*cos(a/2)^8*sin(a/2)^24*x-16816800*ax^8*ay^12*az^6*cos(a/2)^6*sin(a/2)^26*x-12612600*ax^8*ay^12*az^8*cos(a/2)^4*sin(a/2)^28*x-5045040*ax^8*ay^12*az^10*cos(a/2)^2*sin(a/2)^30*x-3603600*ax^8*ay^14*az^2*cos(a/2)^8*sin(a/2)^24*x-7207200*ax^8*ay^14*az^4*cos(a/2)^6*sin(a/2)^26*x-7207200*ax^8*ay^14*az^6*cos(a/2)^4*sin(a/2)^28*x-3603600*ax^8*ay^14*az^8*cos(a/2)^2*sin(a/2)^30*x-1801800*ax^8*ay^16*az^2*cos(a/2)^6*sin(a/2)^26*x-2702700*ax^8*ay^16*az^4*cos(a/2)^4*sin(a/2)^28*x-1801800*ax^8*ay^16*az^6*cos(a/2)^2*sin(a/2)^30*x-600600*ax^8*ay^18*az^2*cos(a/2)^4*sin(a/2)^28*x-600600*ax^8*ay^18*az^4*cos(a/2)^2*sin(a/2)^30*x-120120*ax^8*ay^20*az^2*cos(a/2)^2*sin(a/2)^30*x+30030*ax^9*ay*az^2*cos(a/2)^20*sin(a/2)^12*y+150150*ax^9*ay*az^4*cos(a/2)^18*sin(a/2)^14*y+450450*ax^9*ay*az^6*cos(a/2)^16*sin(a/2)^16*y+900900*ax^9*ay*az^8*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^9*ay*az^10*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^9*ay*az^12*cos(a/2)^10*sin(a/2)^22*y+900900*ax^9*ay*az^14*cos(a/2)^8*sin(a/2)^24*y+450450*ax^9*ay*az^16*cos(a/2)^6*sin(a/2)^26*y+150150*ax^9*ay*az^18*cos(a/2)^4*sin(a/2)^28*y+30030*ax^9*ay*az^20*cos(a/2)^2*sin(a/2)^30*y+30030*ax^9*ay^2*az*cos(a/2)^20*sin(a/2)^12*z+300300*ax^9*ay^2*az^3*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^9*ay^2*az^5*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^9*ay^2*az^7*cos(a/2)^14*sin(a/2)^18*z+6306300*ax^9*ay^2*az^9*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^9*ay^2*az^11*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^9*ay^2*az^13*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^9*ay^2*az^15*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^9*ay^2*az^17*cos(a/2)^4*sin(a/2)^28*z+300300*ax^9*ay^2*az^19*cos(a/2)^2*sin(a/2)^30*z+300300*ax^9*ay^3*az^2*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^9*ay^3*az^4*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^9*ay^3*az^6*cos(a/2)^14*sin(a/2)^18*y+6306300*ax^9*ay^3*az^8*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^9*ay^3*az^10*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^9*ay^3*az^12*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^9*ay^3*az^14*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^9*ay^3*az^16*cos(a/2)^4*sin(a/2)^28*y+300300*ax^9*ay^3*az^18*cos(a/2)^2*sin(a/2)^30*y+150150*ax^9*ay^4*az*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^9*ay^4*az^3*cos(a/2)^16*sin(a/2)^16*z+5405400*ax^9*ay^4*az^5*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^9*ay^4*az^7*cos(a/2)^12*sin(a/2)^20*z+18918900*ax^9*ay^4*az^9*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^9*ay^4*az^11*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^9*ay^4*az^13*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^9*ay^4*az^15*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^9*ay^4*az^17*cos(a/2)^2*sin(a/2)^30*z+1351350*ax^9*ay^5*az^2*cos(a/2)^16*sin(a/2)^16*y+5405400*ax^9*ay^5*az^4*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^9*ay^5*az^6*cos(a/2)^12*sin(a/2)^20*y+18918900*ax^9*ay^5*az^8*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^9*ay^5*az^10*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^9*ay^5*az^12*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^9*ay^5*az^14*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^9*ay^5*az^16*cos(a/2)^2*sin(a/2)^30*y+450450*ax^9*ay^6*az*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^9*ay^6*az^3*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^9*ay^6*az^5*cos(a/2)^12*sin(a/2)^20*z+25225200*ax^9*ay^6*az^7*cos(a/2)^10*sin(a/2)^22*z+31531500*ax^9*ay^6*az^9*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^9*ay^6*az^11*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^9*ay^6*az^13*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^9*ay^6*az^15*cos(a/2)^2*sin(a/2)^30*z+3603600*ax^9*ay^7*az^2*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^9*ay^7*az^4*cos(a/2)^12*sin(a/2)^20*y+25225200*ax^9*ay^7*az^6*cos(a/2)^10*sin(a/2)^22*y+31531500*ax^9*ay^7*az^8*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^9*ay^7*az^10*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^9*ay^7*az^12*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^9*ay^7*az^14*cos(a/2)^2*sin(a/2)^30*y+900900*ax^9*ay^8*az*cos(a/2)^14*sin(a/2)^18*z+6306300*ax^9*ay^8*az^3*cos(a/2)^12*sin(a/2)^20*z+18918900*ax^9*ay^8*az^5*cos(a/2)^10*sin(a/2)^22*z+31531500*ax^9*ay^8*az^7*cos(a/2)^8*sin(a/2)^24*z+31531500*ax^9*ay^8*az^9*cos(a/2)^6*sin(a/2)^26*z+18918900*ax^9*ay^8*az^11*cos(a/2)^4*sin(a/2)^28*z+6306300*ax^9*ay^8*az^13*cos(a/2)^2*sin(a/2)^30*z+6306300*ax^9*ay^9*az^2*cos(a/2)^12*sin(a/2)^20*y+18918900*ax^9*ay^9*az^4*cos(a/2)^10*sin(a/2)^22*y+31531500*ax^9*ay^9*az^6*cos(a/2)^8*sin(a/2)^24*y+31531500*ax^9*ay^9*az^8*cos(a/2)^6*sin(a/2)^26*y+18918900*ax^9*ay^9*az^10*cos(a/2)^4*sin(a/2)^28*y+6306300*ax^9*ay^9*az^12*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^9*ay^10*az*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^9*ay^10*az^3*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^9*ay^10*az^5*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^9*ay^10*az^7*cos(a/2)^6*sin(a/2)^26*z+18918900*ax^9*ay^10*az^9*cos(a/2)^4*sin(a/2)^28*z+7567560*ax^9*ay^10*az^11*cos(a/2)^2*sin(a/2)^30*z+7567560*ax^9*ay^11*az^2*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^9*ay^11*az^4*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^9*ay^11*az^6*cos(a/2)^6*sin(a/2)^26*y+18918900*ax^9*ay^11*az^8*cos(a/2)^4*sin(a/2)^28*y+7567560*ax^9*ay^11*az^10*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^9*ay^12*az*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^9*ay^12*az^3*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^9*ay^12*az^5*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^9*ay^12*az^7*cos(a/2)^4*sin(a/2)^28*z+6306300*ax^9*ay^12*az^9*cos(a/2)^2*sin(a/2)^30*z+6306300*ax^9*ay^13*az^2*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^9*ay^13*az^4*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^9*ay^13*az^6*cos(a/2)^4*sin(a/2)^28*y+6306300*ax^9*ay^13*az^8*cos(a/2)^2*sin(a/2)^30*y+900900*ax^9*ay^14*az*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^9*ay^14*az^3*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^9*ay^14*az^5*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^9*ay^14*az^7*cos(a/2)^2*sin(a/2)^30*z+3603600*ax^9*ay^15*az^2*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^9*ay^15*az^4*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^9*ay^15*az^6*cos(a/2)^2*sin(a/2)^30*y+450450*ax^9*ay^16*az*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^9*ay^16*az^3*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^9*ay^16*az^5*cos(a/2)^2*sin(a/2)^30*z+1351350*ax^9*ay^17*az^2*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^9*ay^17*az^4*cos(a/2)^2*sin(a/2)^30*y+150150*ax^9*ay^18*az*cos(a/2)^4*sin(a/2)^28*z+300300*ax^9*ay^18*az^3*cos(a/2)^2*sin(a/2)^30*z+300300*ax^9*ay^19*az^2*cos(a/2)^2*sin(a/2)^30*y+30030*ax^9*ay^20*az*cos(a/2)^2*sin(a/2)^30*z-180180*ax^10*ay^2*az^2*cos(a/2)^18*sin(a/2)^14*x-810810*ax^10*ay^2*az^4*cos(a/2)^16*sin(a/2)^16*x-2162160*ax^10*ay^2*az^6*cos(a/2)^14*sin(a/2)^18*x-3783780*ax^10*ay^2*az^8*cos(a/2)^12*sin(a/2)^20*x-4540536*ax^10*ay^2*az^10*cos(a/2)^10*sin(a/2)^22*x-3783780*ax^10*ay^2*az^12*cos(a/2)^8*sin(a/2)^24*x-2162160*ax^10*ay^2*az^14*cos(a/2)^6*sin(a/2)^26*x-810810*ax^10*ay^2*az^16*cos(a/2)^4*sin(a/2)^28*x-180180*ax^10*ay^2*az^18*cos(a/2)^2*sin(a/2)^30*x-810810*ax^10*ay^4*az^2*cos(a/2)^16*sin(a/2)^16*x-3243240*ax^10*ay^4*az^4*cos(a/2)^14*sin(a/2)^18*x-7567560*ax^10*ay^4*az^6*cos(a/2)^12*sin(a/2)^20*x-11351340*ax^10*ay^4*az^8*cos(a/2)^10*sin(a/2)^22*x-11351340*ax^10*ay^4*az^10*cos(a/2)^8*sin(a/2)^24*x-7567560*ax^10*ay^4*az^12*cos(a/2)^6*sin(a/2)^26*x-3243240*ax^10*ay^4*az^14*cos(a/2)^4*sin(a/2)^28*x-810810*ax^10*ay^4*az^16*cos(a/2)^2*sin(a/2)^30*x-2162160*ax^10*ay^6*az^2*cos(a/2)^14*sin(a/2)^18*x-7567560*ax^10*ay^6*az^4*cos(a/2)^12*sin(a/2)^20*x-15135120*ax^10*ay^6*az^6*cos(a/2)^10*sin(a/2)^22*x-18918900*ax^10*ay^6*az^8*cos(a/2)^8*sin(a/2)^24*x-15135120*ax^10*ay^6*az^10*cos(a/2)^6*sin(a/2)^26*x-7567560*ax^10*ay^6*az^12*cos(a/2)^4*sin(a/2)^28*x-2162160*ax^10*ay^6*az^14*cos(a/2)^2*sin(a/2)^30*x-3783780*ax^10*ay^8*az^2*cos(a/2)^12*sin(a/2)^20*x-11351340*ax^10*ay^8*az^4*cos(a/2)^10*sin(a/2)^22*x-18918900*ax^10*ay^8*az^6*cos(a/2)^8*sin(a/2)^24*x-18918900*ax^10*ay^8*az^8*cos(a/2)^6*sin(a/2)^26*x-11351340*ax^10*ay^8*az^10*cos(a/2)^4*sin(a/2)^28*x-3783780*ax^10*ay^8*az^12*cos(a/2)^2*sin(a/2)^30*x-4540536*ax^10*ay^10*az^2*cos(a/2)^10*sin(a/2)^22*x-11351340*ax^10*ay^10*az^4*cos(a/2)^8*sin(a/2)^24*x-15135120*ax^10*ay^10*az^6*cos(a/2)^6*sin(a/2)^26*x-11351340*ax^10*ay^10*az^8*cos(a/2)^4*sin(a/2)^28*x-4540536*ax^10*ay^10*az^10*cos(a/2)^2*sin(a/2)^30*x-3783780*ax^10*ay^12*az^2*cos(a/2)^8*sin(a/2)^24*x-7567560*ax^10*ay^12*az^4*cos(a/2)^6*sin(a/2)^26*x-7567560*ax^10*ay^12*az^6*cos(a/2)^4*sin(a/2)^28*x-3783780*ax^10*ay^12*az^8*cos(a/2)^2*sin(a/2)^30*x-2162160*ax^10*ay^14*az^2*cos(a/2)^6*sin(a/2)^26*x-3243240*ax^10*ay^14*az^4*cos(a/2)^4*sin(a/2)^28*x-2162160*ax^10*ay^14*az^6*cos(a/2)^2*sin(a/2)^30*x-810810*ax^10*ay^16*az^2*cos(a/2)^4*sin(a/2)^28*x-810810*ax^10*ay^16*az^4*cos(a/2)^2*sin(a/2)^30*x-180180*ax^10*ay^18*az^2*cos(a/2)^2*sin(a/2)^30*x+60060*ax^11*ay*az^2*cos(a/2)^18*sin(a/2)^14*y+270270*ax^11*ay*az^4*cos(a/2)^16*sin(a/2)^16*y+720720*ax^11*ay*az^6*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^11*ay*az^8*cos(a/2)^12*sin(a/2)^20*y+1513512*ax^11*ay*az^10*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^11*ay*az^12*cos(a/2)^8*sin(a/2)^24*y+720720*ax^11*ay*az^14*cos(a/2)^6*sin(a/2)^26*y+270270*ax^11*ay*az^16*cos(a/2)^4*sin(a/2)^28*y+60060*ax^11*ay*az^18*cos(a/2)^2*sin(a/2)^30*y+60060*ax^11*ay^2*az*cos(a/2)^18*sin(a/2)^14*z+540540*ax^11*ay^2*az^3*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^11*ay^2*az^5*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^11*ay^2*az^7*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^11*ay^2*az^9*cos(a/2)^10*sin(a/2)^22*z+7567560*ax^11*ay^2*az^11*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^11*ay^2*az^13*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^11*ay^2*az^15*cos(a/2)^4*sin(a/2)^28*z+540540*ax^11*ay^2*az^17*cos(a/2)^2*sin(a/2)^30*z+540540*ax^11*ay^3*az^2*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^11*ay^3*az^4*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^11*ay^3*az^6*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^11*ay^3*az^8*cos(a/2)^10*sin(a/2)^22*y+7567560*ax^11*ay^3*az^10*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^11*ay^3*az^12*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^11*ay^3*az^14*cos(a/2)^4*sin(a/2)^28*y+540540*ax^11*ay^3*az^16*cos(a/2)^2*sin(a/2)^30*y+270270*ax^11*ay^4*az*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^11*ay^4*az^3*cos(a/2)^14*sin(a/2)^18*z+7567560*ax^11*ay^4*az^5*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^11*ay^4*az^7*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^11*ay^4*az^9*cos(a/2)^8*sin(a/2)^24*z+15135120*ax^11*ay^4*az^11*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^11*ay^4*az^13*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^11*ay^4*az^15*cos(a/2)^2*sin(a/2)^30*z+2162160*ax^11*ay^5*az^2*cos(a/2)^14*sin(a/2)^18*y+7567560*ax^11*ay^5*az^4*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^11*ay^5*az^6*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^11*ay^5*az^8*cos(a/2)^8*sin(a/2)^24*y+15135120*ax^11*ay^5*az^10*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^11*ay^5*az^12*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^11*ay^5*az^14*cos(a/2)^2*sin(a/2)^30*y+720720*ax^11*ay^6*az*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^11*ay^6*az^3*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^11*ay^6*az^5*cos(a/2)^10*sin(a/2)^22*z+25225200*ax^11*ay^6*az^7*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^11*ay^6*az^9*cos(a/2)^6*sin(a/2)^26*z+15135120*ax^11*ay^6*az^11*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^11*ay^6*az^13*cos(a/2)^2*sin(a/2)^30*z+5045040*ax^11*ay^7*az^2*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^11*ay^7*az^4*cos(a/2)^10*sin(a/2)^22*y+25225200*ax^11*ay^7*az^6*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^11*ay^7*az^8*cos(a/2)^6*sin(a/2)^26*y+15135120*ax^11*ay^7*az^10*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^11*ay^7*az^12*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^11*ay^8*az*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^11*ay^8*az^3*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^11*ay^8*az^5*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^11*ay^8*az^7*cos(a/2)^6*sin(a/2)^26*z+18918900*ax^11*ay^8*az^9*cos(a/2)^4*sin(a/2)^28*z+7567560*ax^11*ay^8*az^11*cos(a/2)^2*sin(a/2)^30*z+7567560*ax^11*ay^9*az^2*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^11*ay^9*az^4*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^11*ay^9*az^6*cos(a/2)^6*sin(a/2)^26*y+18918900*ax^11*ay^9*az^8*cos(a/2)^4*sin(a/2)^28*y+7567560*ax^11*ay^9*az^10*cos(a/2)^2*sin(a/2)^30*y+1513512*ax^11*ay^10*az*cos(a/2)^10*sin(a/2)^22*z+7567560*ax^11*ay^10*az^3*cos(a/2)^8*sin(a/2)^24*z+15135120*ax^11*ay^10*az^5*cos(a/2)^6*sin(a/2)^26*z+15135120*ax^11*ay^10*az^7*cos(a/2)^4*sin(a/2)^28*z+7567560*ax^11*ay^10*az^9*cos(a/2)^2*sin(a/2)^30*z+7567560*ax^11*ay^11*az^2*cos(a/2)^8*sin(a/2)^24*y+15135120*ax^11*ay^11*az^4*cos(a/2)^6*sin(a/2)^26*y+15135120*ax^11*ay^11*az^6*cos(a/2)^4*sin(a/2)^28*y+7567560*ax^11*ay^11*az^8*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^11*ay^12*az*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^11*ay^12*az^3*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^11*ay^12*az^5*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^11*ay^12*az^7*cos(a/2)^2*sin(a/2)^30*z+5045040*ax^11*ay^13*az^2*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^11*ay^13*az^4*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^11*ay^13*az^6*cos(a/2)^2*sin(a/2)^30*y+720720*ax^11*ay^14*az*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^11*ay^14*az^3*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^11*ay^14*az^5*cos(a/2)^2*sin(a/2)^30*z+2162160*ax^11*ay^15*az^2*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^11*ay^15*az^4*cos(a/2)^2*sin(a/2)^30*y+270270*ax^11*ay^16*az*cos(a/2)^4*sin(a/2)^28*z+540540*ax^11*ay^16*az^3*cos(a/2)^2*sin(a/2)^30*z+540540*ax^11*ay^17*az^2*cos(a/2)^2*sin(a/2)^30*y+60060*ax^11*ay^18*az*cos(a/2)^2*sin(a/2)^30*z-180180*ax^12*ay^2*az^2*cos(a/2)^16*sin(a/2)^16*x-720720*ax^12*ay^2*az^4*cos(a/2)^14*sin(a/2)^18*x-1681680*ax^12*ay^2*az^6*cos(a/2)^12*sin(a/2)^20*x-2522520*ax^12*ay^2*az^8*cos(a/2)^10*sin(a/2)^22*x-2522520*ax^12*ay^2*az^10*cos(a/2)^8*sin(a/2)^24*x-1681680*ax^12*ay^2*az^12*cos(a/2)^6*sin(a/2)^26*x-720720*ax^12*ay^2*az^14*cos(a/2)^4*sin(a/2)^28*x-180180*ax^12*ay^2*az^16*cos(a/2)^2*sin(a/2)^30*x-720720*ax^12*ay^4*az^2*cos(a/2)^14*sin(a/2)^18*x-2522520*ax^12*ay^4*az^4*cos(a/2)^12*sin(a/2)^20*x-5045040*ax^12*ay^4*az^6*cos(a/2)^10*sin(a/2)^22*x-6306300*ax^12*ay^4*az^8*cos(a/2)^8*sin(a/2)^24*x-5045040*ax^12*ay^4*az^10*cos(a/2)^6*sin(a/2)^26*x-2522520*ax^12*ay^4*az^12*cos(a/2)^4*sin(a/2)^28*x-720720*ax^12*ay^4*az^14*cos(a/2)^2*sin(a/2)^30*x-1681680*ax^12*ay^6*az^2*cos(a/2)^12*sin(a/2)^20*x-5045040*ax^12*ay^6*az^4*cos(a/2)^10*sin(a/2)^22*x-8408400*ax^12*ay^6*az^6*cos(a/2)^8*sin(a/2)^24*x-8408400*ax^12*ay^6*az^8*cos(a/2)^6*sin(a/2)^26*x-5045040*ax^12*ay^6*az^10*cos(a/2)^4*sin(a/2)^28*x-1681680*ax^12*ay^6*az^12*cos(a/2)^2*sin(a/2)^30*x-2522520*ax^12*ay^8*az^2*cos(a/2)^10*sin(a/2)^22*x-6306300*ax^12*ay^8*az^4*cos(a/2)^8*sin(a/2)^24*x-8408400*ax^12*ay^8*az^6*cos(a/2)^6*sin(a/2)^26*x-6306300*ax^12*ay^8*az^8*cos(a/2)^4*sin(a/2)^28*x-2522520*ax^12*ay^8*az^10*cos(a/2)^2*sin(a/2)^30*x-2522520*ax^12*ay^10*az^2*cos(a/2)^8*sin(a/2)^24*x-5045040*ax^12*ay^10*az^4*cos(a/2)^6*sin(a/2)^26*x-5045040*ax^12*ay^10*az^6*cos(a/2)^4*sin(a/2)^28*x-2522520*ax^12*ay^10*az^8*cos(a/2)^2*sin(a/2)^30*x-1681680*ax^12*ay^12*az^2*cos(a/2)^6*sin(a/2)^26*x-2522520*ax^12*ay^12*az^4*cos(a/2)^4*sin(a/2)^28*x-1681680*ax^12*ay^12*az^6*cos(a/2)^2*sin(a/2)^30*x-720720*ax^12*ay^14*az^2*cos(a/2)^4*sin(a/2)^28*x-720720*ax^12*ay^14*az^4*cos(a/2)^2*sin(a/2)^30*x-180180*ax^12*ay^16*az^2*cos(a/2)^2*sin(a/2)^30*x+90090*ax^13*ay*az^2*cos(a/2)^16*sin(a/2)^16*y+360360*ax^13*ay*az^4*cos(a/2)^14*sin(a/2)^18*y+840840*ax^13*ay*az^6*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^13*ay*az^8*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^13*ay*az^10*cos(a/2)^8*sin(a/2)^24*y+840840*ax^13*ay*az^12*cos(a/2)^6*sin(a/2)^26*y+360360*ax^13*ay*az^14*cos(a/2)^4*sin(a/2)^28*y+90090*ax^13*ay*az^16*cos(a/2)^2*sin(a/2)^30*y+90090*ax^13*ay^2*az*cos(a/2)^16*sin(a/2)^16*z+720720*ax^13*ay^2*az^3*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^13*ay^2*az^5*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^13*ay^2*az^7*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^13*ay^2*az^9*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^13*ay^2*az^11*cos(a/2)^6*sin(a/2)^26*z+2522520*ax^13*ay^2*az^13*cos(a/2)^4*sin(a/2)^28*z+720720*ax^13*ay^2*az^15*cos(a/2)^2*sin(a/2)^30*z+720720*ax^13*ay^3*az^2*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^13*ay^3*az^4*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^13*ay^3*az^6*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^13*ay^3*az^8*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^13*ay^3*az^10*cos(a/2)^6*sin(a/2)^26*y+2522520*ax^13*ay^3*az^12*cos(a/2)^4*sin(a/2)^28*y+720720*ax^13*ay^3*az^14*cos(a/2)^2*sin(a/2)^30*y+360360*ax^13*ay^4*az*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^13*ay^4*az^3*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^13*ay^4*az^5*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^13*ay^4*az^7*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^13*ay^4*az^9*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^13*ay^4*az^11*cos(a/2)^4*sin(a/2)^28*z+2522520*ax^13*ay^4*az^13*cos(a/2)^2*sin(a/2)^30*z+2522520*ax^13*ay^5*az^2*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^13*ay^5*az^4*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^13*ay^5*az^6*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^13*ay^5*az^8*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^13*ay^5*az^10*cos(a/2)^4*sin(a/2)^28*y+2522520*ax^13*ay^5*az^12*cos(a/2)^2*sin(a/2)^30*y+840840*ax^13*ay^6*az*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^13*ay^6*az^3*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^13*ay^6*az^5*cos(a/2)^8*sin(a/2)^24*z+16816800*ax^13*ay^6*az^7*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^13*ay^6*az^9*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^13*ay^6*az^11*cos(a/2)^2*sin(a/2)^30*z+5045040*ax^13*ay^7*az^2*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^13*ay^7*az^4*cos(a/2)^8*sin(a/2)^24*y+16816800*ax^13*ay^7*az^6*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^13*ay^7*az^8*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^13*ay^7*az^10*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^13*ay^8*az*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^13*ay^8*az^3*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^13*ay^8*az^5*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^13*ay^8*az^7*cos(a/2)^4*sin(a/2)^28*z+6306300*ax^13*ay^8*az^9*cos(a/2)^2*sin(a/2)^30*z+6306300*ax^13*ay^9*az^2*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^13*ay^9*az^4*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^13*ay^9*az^6*cos(a/2)^4*sin(a/2)^28*y+6306300*ax^13*ay^9*az^8*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^13*ay^10*az*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^13*ay^10*az^3*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^13*ay^10*az^5*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^13*ay^10*az^7*cos(a/2)^2*sin(a/2)^30*z+5045040*ax^13*ay^11*az^2*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^13*ay^11*az^4*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^13*ay^11*az^6*cos(a/2)^2*sin(a/2)^30*y+840840*ax^13*ay^12*az*cos(a/2)^6*sin(a/2)^26*z+2522520*ax^13*ay^12*az^3*cos(a/2)^4*sin(a/2)^28*z+2522520*ax^13*ay^12*az^5*cos(a/2)^2*sin(a/2)^30*z+2522520*ax^13*ay^13*az^2*cos(a/2)^4*sin(a/2)^28*y+2522520*ax^13*ay^13*az^4*cos(a/2)^2*sin(a/2)^30*y+360360*ax^13*ay^14*az*cos(a/2)^4*sin(a/2)^28*z+720720*ax^13*ay^14*az^3*cos(a/2)^2*sin(a/2)^30*z+720720*ax^13*ay^15*az^2*cos(a/2)^2*sin(a/2)^30*y+90090*ax^13*ay^16*az*cos(a/2)^2*sin(a/2)^30*z-102960*ax^14*ay^2*az^2*cos(a/2)^14*sin(a/2)^18*x-360360*ax^14*ay^2*az^4*cos(a/2)^12*sin(a/2)^20*x-720720*ax^14*ay^2*az^6*cos(a/2)^10*sin(a/2)^22*x-900900*ax^14*ay^2*az^8*cos(a/2)^8*sin(a/2)^24*x-720720*ax^14*ay^2*az^10*cos(a/2)^6*sin(a/2)^26*x-360360*ax^14*ay^2*az^12*cos(a/2)^4*sin(a/2)^28*x-102960*ax^14*ay^2*az^14*cos(a/2)^2*sin(a/2)^30*x-360360*ax^14*ay^4*az^2*cos(a/2)^12*sin(a/2)^20*x-1081080*ax^14*ay^4*az^4*cos(a/2)^10*sin(a/2)^22*x-1801800*ax^14*ay^4*az^6*cos(a/2)^8*sin(a/2)^24*x-1801800*ax^14*ay^4*az^8*cos(a/2)^6*sin(a/2)^26*x-1081080*ax^14*ay^4*az^10*cos(a/2)^4*sin(a/2)^28*x-360360*ax^14*ay^4*az^12*cos(a/2)^2*sin(a/2)^30*x-720720*ax^14*ay^6*az^2*cos(a/2)^10*sin(a/2)^22*x-1801800*ax^14*ay^6*az^4*cos(a/2)^8*sin(a/2)^24*x-2402400*ax^14*ay^6*az^6*cos(a/2)^6*sin(a/2)^26*x-1801800*ax^14*ay^6*az^8*cos(a/2)^4*sin(a/2)^28*x-720720*ax^14*ay^6*az^10*cos(a/2)^2*sin(a/2)^30*x-900900*ax^14*ay^8*az^2*cos(a/2)^8*sin(a/2)^24*x-1801800*ax^14*ay^8*az^4*cos(a/2)^6*sin(a/2)^26*x-1801800*ax^14*ay^8*az^6*cos(a/2)^4*sin(a/2)^28*x-900900*ax^14*ay^8*az^8*cos(a/2)^2*sin(a/2)^30*x-720720*ax^14*ay^10*az^2*cos(a/2)^6*sin(a/2)^26*x-1081080*ax^14*ay^10*az^4*cos(a/2)^4*sin(a/2)^28*x-720720*ax^14*ay^10*az^6*cos(a/2)^2*sin(a/2)^30*x-360360*ax^14*ay^12*az^2*cos(a/2)^4*sin(a/2)^28*x-360360*ax^14*ay^12*az^4*cos(a/2)^2*sin(a/2)^30*x-102960*ax^14*ay^14*az^2*cos(a/2)^2*sin(a/2)^30*x+102960*ax^15*ay*az^2*cos(a/2)^14*sin(a/2)^18*y+360360*ax^15*ay*az^4*cos(a/2)^12*sin(a/2)^20*y+720720*ax^15*ay*az^6*cos(a/2)^10*sin(a/2)^22*y+900900*ax^15*ay*az^8*cos(a/2)^8*sin(a/2)^24*y+720720*ax^15*ay*az^10*cos(a/2)^6*sin(a/2)^26*y+360360*ax^15*ay*az^12*cos(a/2)^4*sin(a/2)^28*y+102960*ax^15*ay*az^14*cos(a/2)^2*sin(a/2)^30*y+102960*ax^15*ay^2*az*cos(a/2)^14*sin(a/2)^18*z+720720*ax^15*ay^2*az^3*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^15*ay^2*az^5*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^15*ay^2*az^7*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^15*ay^2*az^9*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^15*ay^2*az^11*cos(a/2)^4*sin(a/2)^28*z+720720*ax^15*ay^2*az^13*cos(a/2)^2*sin(a/2)^30*z+720720*ax^15*ay^3*az^2*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^15*ay^3*az^4*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^15*ay^3*az^6*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^15*ay^3*az^8*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^15*ay^3*az^10*cos(a/2)^4*sin(a/2)^28*y+720720*ax^15*ay^3*az^12*cos(a/2)^2*sin(a/2)^30*y+360360*ax^15*ay^4*az*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^15*ay^4*az^3*cos(a/2)^10*sin(a/2)^22*z+5405400*ax^15*ay^4*az^5*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^15*ay^4*az^7*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^15*ay^4*az^9*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^15*ay^4*az^11*cos(a/2)^2*sin(a/2)^30*z+2162160*ax^15*ay^5*az^2*cos(a/2)^10*sin(a/2)^22*y+5405400*ax^15*ay^5*az^4*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^15*ay^5*az^6*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^15*ay^5*az^8*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^15*ay^5*az^10*cos(a/2)^2*sin(a/2)^30*y+720720*ax^15*ay^6*az*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^15*ay^6*az^3*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^15*ay^6*az^5*cos(a/2)^6*sin(a/2)^26*z+7207200*ax^15*ay^6*az^7*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^15*ay^6*az^9*cos(a/2)^2*sin(a/2)^30*z+3603600*ax^15*ay^7*az^2*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^15*ay^7*az^4*cos(a/2)^6*sin(a/2)^26*y+7207200*ax^15*ay^7*az^6*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^15*ay^7*az^8*cos(a/2)^2*sin(a/2)^30*y+900900*ax^15*ay^8*az*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^15*ay^8*az^3*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^15*ay^8*az^5*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^15*ay^8*az^7*cos(a/2)^2*sin(a/2)^30*z+3603600*ax^15*ay^9*az^2*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^15*ay^9*az^4*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^15*ay^9*az^6*cos(a/2)^2*sin(a/2)^30*y+720720*ax^15*ay^10*az*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^15*ay^10*az^3*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^15*ay^10*az^5*cos(a/2)^2*sin(a/2)^30*z+2162160*ax^15*ay^11*az^2*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^15*ay^11*az^4*cos(a/2)^2*sin(a/2)^30*y+360360*ax^15*ay^12*az*cos(a/2)^4*sin(a/2)^28*z+720720*ax^15*ay^12*az^3*cos(a/2)^2*sin(a/2)^30*z+720720*ax^15*ay^13*az^2*cos(a/2)^2*sin(a/2)^30*y+102960*ax^15*ay^14*az*cos(a/2)^2*sin(a/2)^30*z+90090*ax^17*ay*az^2*cos(a/2)^12*sin(a/2)^20*y+270270*ax^17*ay*az^4*cos(a/2)^10*sin(a/2)^22*y+450450*ax^17*ay*az^6*cos(a/2)^8*sin(a/2)^24*y+450450*ax^17*ay*az^8*cos(a/2)^6*sin(a/2)^26*y+270270*ax^17*ay*az^10*cos(a/2)^4*sin(a/2)^28*y+90090*ax^17*ay*az^12*cos(a/2)^2*sin(a/2)^30*y+90090*ax^17*ay^2*az*cos(a/2)^12*sin(a/2)^20*z+540540*ax^17*ay^2*az^3*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^17*ay^2*az^5*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^17*ay^2*az^7*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^17*ay^2*az^9*cos(a/2)^4*sin(a/2)^28*z+540540*ax^17*ay^2*az^11*cos(a/2)^2*sin(a/2)^30*z+540540*ax^17*ay^3*az^2*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^17*ay^3*az^4*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^17*ay^3*az^6*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^17*ay^3*az^8*cos(a/2)^4*sin(a/2)^28*y+540540*ax^17*ay^3*az^10*cos(a/2)^2*sin(a/2)^30*y+270270*ax^17*ay^4*az*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^17*ay^4*az^3*cos(a/2)^8*sin(a/2)^24*z+2702700*ax^17*ay^4*az^5*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^17*ay^4*az^7*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^17*ay^4*az^9*cos(a/2)^2*sin(a/2)^30*z+1351350*ax^17*ay^5*az^2*cos(a/2)^8*sin(a/2)^24*y+2702700*ax^17*ay^5*az^4*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^17*ay^5*az^6*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^17*ay^5*az^8*cos(a/2)^2*sin(a/2)^30*y+450450*ax^17*ay^6*az*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^17*ay^6*az^3*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^17*ay^6*az^5*cos(a/2)^4*sin(a/2)^28*z+1801800*ax^17*ay^6*az^7*cos(a/2)^2*sin(a/2)^30*z+1801800*ax^17*ay^7*az^2*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^17*ay^7*az^4*cos(a/2)^4*sin(a/2)^28*y+1801800*ax^17*ay^7*az^6*cos(a/2)^2*sin(a/2)^30*y+450450*ax^17*ay^8*az*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^17*ay^8*az^3*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^17*ay^8*az^5*cos(a/2)^2*sin(a/2)^30*z+1351350*ax^17*ay^9*az^2*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^17*ay^9*az^4*cos(a/2)^2*sin(a/2)^30*y+270270*ax^17*ay^10*az*cos(a/2)^4*sin(a/2)^28*z+540540*ax^17*ay^10*az^3*cos(a/2)^2*sin(a/2)^30*z+540540*ax^17*ay^11*az^2*cos(a/2)^2*sin(a/2)^30*y+90090*ax^17*ay^12*az*cos(a/2)^2*sin(a/2)^30*z+60060*ax^18*ay^2*az^2*cos(a/2)^10*sin(a/2)^22*x+150150*ax^18*ay^2*az^4*cos(a/2)^8*sin(a/2)^24*x+200200*ax^18*ay^2*az^6*cos(a/2)^6*sin(a/2)^26*x+150150*ax^18*ay^2*az^8*cos(a/2)^4*sin(a/2)^28*x+60060*ax^18*ay^2*az^10*cos(a/2)^2*sin(a/2)^30*x+150150*ax^18*ay^4*az^2*cos(a/2)^8*sin(a/2)^24*x+300300*ax^18*ay^4*az^4*cos(a/2)^6*sin(a/2)^26*x+300300*ax^18*ay^4*az^6*cos(a/2)^4*sin(a/2)^28*x+150150*ax^18*ay^4*az^8*cos(a/2)^2*sin(a/2)^30*x+200200*ax^18*ay^6*az^2*cos(a/2)^6*sin(a/2)^26*x+300300*ax^18*ay^6*az^4*cos(a/2)^4*sin(a/2)^28*x+200200*ax^18*ay^6*az^6*cos(a/2)^2*sin(a/2)^30*x+150150*ax^18*ay^8*az^2*cos(a/2)^4*sin(a/2)^28*x+150150*ax^18*ay^8*az^4*cos(a/2)^2*sin(a/2)^30*x+60060*ax^18*ay^10*az^2*cos(a/2)^2*sin(a/2)^30*x+60060*ax^19*ay*az^2*cos(a/2)^10*sin(a/2)^22*y+150150*ax^19*ay*az^4*cos(a/2)^8*sin(a/2)^24*y+200200*ax^19*ay*az^6*cos(a/2)^6*sin(a/2)^26*y+150150*ax^19*ay*az^8*cos(a/2)^4*sin(a/2)^28*y+60060*ax^19*ay*az^10*cos(a/2)^2*sin(a/2)^30*y+60060*ax^19*ay^2*az*cos(a/2)^10*sin(a/2)^22*z+300300*ax^19*ay^2*az^3*cos(a/2)^8*sin(a/2)^24*z+600600*ax^19*ay^2*az^5*cos(a/2)^6*sin(a/2)^26*z+600600*ax^19*ay^2*az^7*cos(a/2)^4*sin(a/2)^28*z+300300*ax^19*ay^2*az^9*cos(a/2)^2*sin(a/2)^30*z+300300*ax^19*ay^3*az^2*cos(a/2)^8*sin(a/2)^24*y+600600*ax^19*ay^3*az^4*cos(a/2)^6*sin(a/2)^26*y+600600*ax^19*ay^3*az^6*cos(a/2)^4*sin(a/2)^28*y+300300*ax^19*ay^3*az^8*cos(a/2)^2*sin(a/2)^30*y+150150*ax^19*ay^4*az*cos(a/2)^8*sin(a/2)^24*z+600600*ax^19*ay^4*az^3*cos(a/2)^6*sin(a/2)^26*z+900900*ax^19*ay^4*az^5*cos(a/2)^4*sin(a/2)^28*z+600600*ax^19*ay^4*az^7*cos(a/2)^2*sin(a/2)^30*z+600600*ax^19*ay^5*az^2*cos(a/2)^6*sin(a/2)^26*y+900900*ax^19*ay^5*az^4*cos(a/2)^4*sin(a/2)^28*y+600600*ax^19*ay^5*az^6*cos(a/2)^2*sin(a/2)^30*y+200200*ax^19*ay^6*az*cos(a/2)^6*sin(a/2)^26*z+600600*ax^19*ay^6*az^3*cos(a/2)^4*sin(a/2)^28*z+600600*ax^19*ay^6*az^5*cos(a/2)^2*sin(a/2)^30*z+600600*ax^19*ay^7*az^2*cos(a/2)^4*sin(a/2)^28*y+600600*ax^19*ay^7*az^4*cos(a/2)^2*sin(a/2)^30*y+150150*ax^19*ay^8*az*cos(a/2)^4*sin(a/2)^28*z+300300*ax^19*ay^8*az^3*cos(a/2)^2*sin(a/2)^30*z+300300*ax^19*ay^9*az^2*cos(a/2)^2*sin(a/2)^30*y+60060*ax^19*ay^10*az*cos(a/2)^2*sin(a/2)^30*z+60060*ax^20*ay^2*az^2*cos(a/2)^8*sin(a/2)^24*x+120120*ax^20*ay^2*az^4*cos(a/2)^6*sin(a/2)^26*x+120120*ax^20*ay^2*az^6*cos(a/2)^4*sin(a/2)^28*x+60060*ax^20*ay^2*az^8*cos(a/2)^2*sin(a/2)^30*x+120120*ax^20*ay^4*az^2*cos(a/2)^6*sin(a/2)^26*x+180180*ax^20*ay^4*az^4*cos(a/2)^4*sin(a/2)^28*x+120120*ax^20*ay^4*az^6*cos(a/2)^2*sin(a/2)^30*x+120120*ax^20*ay^6*az^2*cos(a/2)^4*sin(a/2)^28*x+120120*ax^20*ay^6*az^4*cos(a/2)^2*sin(a/2)^30*x+60060*ax^20*ay^8*az^2*cos(a/2)^2*sin(a/2)^30*x+30030*ax^21*ay*az^2*cos(a/2)^8*sin(a/2)^24*y+60060*ax^21*ay*az^4*cos(a/2)^6*sin(a/2)^26*y+60060*ax^21*ay*az^6*cos(a/2)^4*sin(a/2)^28*y+30030*ax^21*ay*az^8*cos(a/2)^2*sin(a/2)^30*y+30030*ax^21*ay^2*az*cos(a/2)^8*sin(a/2)^24*z+120120*ax^21*ay^2*az^3*cos(a/2)^6*sin(a/2)^26*z+180180*ax^21*ay^2*az^5*cos(a/2)^4*sin(a/2)^28*z+120120*ax^21*ay^2*az^7*cos(a/2)^2*sin(a/2)^30*z+120120*ax^21*ay^3*az^2*cos(a/2)^6*sin(a/2)^26*y+180180*ax^21*ay^3*az^4*cos(a/2)^4*sin(a/2)^28*y+120120*ax^21*ay^3*az^6*cos(a/2)^2*sin(a/2)^30*y+60060*ax^21*ay^4*az*cos(a/2)^6*sin(a/2)^26*z+180180*ax^21*ay^4*az^3*cos(a/2)^4*sin(a/2)^28*z+180180*ax^21*ay^4*az^5*cos(a/2)^2*sin(a/2)^30*z+180180*ax^21*ay^5*az^2*cos(a/2)^4*sin(a/2)^28*y+180180*ax^21*ay^5*az^4*cos(a/2)^2*sin(a/2)^30*y+60060*ax^21*ay^6*az*cos(a/2)^4*sin(a/2)^28*z+120120*ax^21*ay^6*az^3*cos(a/2)^2*sin(a/2)^30*z+120120*ax^21*ay^7*az^2*cos(a/2)^2*sin(a/2)^30*y+30030*ax^21*ay^8*az*cos(a/2)^2*sin(a/2)^30*z+32760*ax^22*ay^2*az^2*cos(a/2)^6*sin(a/2)^26*x+49140*ax^22*ay^2*az^4*cos(a/2)^4*sin(a/2)^28*x+32760*ax^22*ay^2*az^6*cos(a/2)^2*sin(a/2)^30*x+49140*ax^22*ay^4*az^2*cos(a/2)^4*sin(a/2)^28*x+49140*ax^22*ay^4*az^4*cos(a/2)^2*sin(a/2)^30*x+32760*ax^22*ay^6*az^2*cos(a/2)^2*sin(a/2)^30*x+10920*ax^23*ay*az^2*cos(a/2)^6*sin(a/2)^26*y+16380*ax^23*ay*az^4*cos(a/2)^4*sin(a/2)^28*y+10920*ax^23*ay*az^6*cos(a/2)^2*sin(a/2)^30*y+10920*ax^23*ay^2*az*cos(a/2)^6*sin(a/2)^26*z+32760*ax^23*ay^2*az^3*cos(a/2)^4*sin(a/2)^28*z+32760*ax^23*ay^2*az^5*cos(a/2)^2*sin(a/2)^30*z+32760*ax^23*ay^3*az^2*cos(a/2)^4*sin(a/2)^28*y+32760*ax^23*ay^3*az^4*cos(a/2)^2*sin(a/2)^30*y+16380*ax^23*ay^4*az*cos(a/2)^4*sin(a/2)^28*z+32760*ax^23*ay^4*az^3*cos(a/2)^2*sin(a/2)^30*z+32760*ax^23*ay^5*az^2*cos(a/2)^2*sin(a/2)^30*y+10920*ax^23*ay^6*az*cos(a/2)^2*sin(a/2)^30*z+10920*ax^24*ay^2*az^2*cos(a/2)^4*sin(a/2)^28*x+10920*ax^24*ay^2*az^4*cos(a/2)^2*sin(a/2)^30*x+10920*ax^24*ay^4*az^2*cos(a/2)^2*sin(a/2)^30*x+2730*ax^25*ay*az^2*cos(a/2)^4*sin(a/2)^28*y+2730*ax^25*ay*az^4*cos(a/2)^2*sin(a/2)^30*y+2730*ax^25*ay^2*az*cos(a/2)^4*sin(a/2)^28*z+5460*ax^25*ay^2*az^3*cos(a/2)^2*sin(a/2)^30*z+5460*ax^25*ay^3*az^2*cos(a/2)^2*sin(a/2)^30*y+2730*ax^25*ay^4*az*cos(a/2)^2*sin(a/2)^30*z+2100*ax^26*ay^2*az^2*cos(a/2)^2*sin(a/2)^30*x+420*ax^27*ay*az^2*cos(a/2)^2*sin(a/2)^30*y+420*ax^27*ay^2*az*cos(a/2)^2*sin(a/2)^30*z)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+az^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*az^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*az^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*az^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*az^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*az^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*az^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*az^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*az^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*az^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*az^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*az^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*az^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*az^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*az^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*az^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*az^30*sin(a/2)^32+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*az^28*sin(a/2)^32+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*az^26*sin(a/2)^32+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*az^24*sin(a/2)^32+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*az^22*sin(a/2)^32+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*az^20*sin(a/2)^32+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*az^18*sin(a/2)^32+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*az^16*sin(a/2)^32+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*az^14*sin(a/2)^32+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*az^12*sin(a/2)^32+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*az^10*sin(a/2)^32+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*az^8*sin(a/2)^32+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*az^6*sin(a/2)^32+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*az^4*sin(a/2)^32+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*az^2*sin(a/2)^32+16*ay^30*cos(a/2)^2*sin(a/2)^30+16*az^2*cos(a/2)^30*sin(a/2)^2+120*az^4*cos(a/2)^28*sin(a/2)^4+560*az^6*cos(a/2)^26*sin(a/2)^6+1820*az^8*cos(a/2)^24*sin(a/2)^8+4368*az^10*cos(a/2)^22*sin(a/2)^10+8008*az^12*cos(a/2)^20*sin(a/2)^12+11440*az^14*cos(a/2)^18*sin(a/2)^14+12870*az^16*cos(a/2)^16*sin(a/2)^16+11440*az^18*cos(a/2)^14*sin(a/2)^18+8008*az^20*cos(a/2)^12*sin(a/2)^20+4368*az^22*cos(a/2)^10*sin(a/2)^22+1820*az^24*cos(a/2)^8*sin(a/2)^24+560*az^26*cos(a/2)^6*sin(a/2)^26+120*az^28*cos(a/2)^4*sin(a/2)^28+16*az^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*az^28*sin(a/2)^32+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*az^26*sin(a/2)^32+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*az^24*sin(a/2)^32+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*az^22*sin(a/2)^32+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*az^20*sin(a/2)^32+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*az^18*sin(a/2)^32+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*az^16*sin(a/2)^32+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*az^14*sin(a/2)^32+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*az^12*sin(a/2)^32+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*az^10*sin(a/2)^32+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*az^8*sin(a/2)^32+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*az^6*sin(a/2)^32+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*az^4*sin(a/2)^32+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*az^2*sin(a/2)^32+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+240*ax^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*az^26*sin(a/2)^32+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*az^24*sin(a/2)^32+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*az^22*sin(a/2)^32+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*az^20*sin(a/2)^32+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*az^18*sin(a/2)^32+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*az^16*sin(a/2)^32+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*az^14*sin(a/2)^32+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*az^12*sin(a/2)^32+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*az^10*sin(a/2)^32+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*az^8*sin(a/2)^32+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*az^6*sin(a/2)^32+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*az^4*sin(a/2)^32+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*az^2*sin(a/2)^32+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+1680*ax^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*az^24*sin(a/2)^32+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*az^22*sin(a/2)^32+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*az^20*sin(a/2)^32+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*az^18*sin(a/2)^32+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*az^16*sin(a/2)^32+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*az^14*sin(a/2)^32+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*az^12*sin(a/2)^32+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*az^10*sin(a/2)^32+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*az^8*sin(a/2)^32+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*az^6*sin(a/2)^32+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*az^4*sin(a/2)^32+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*az^2*sin(a/2)^32+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+7280*ax^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*az^22*sin(a/2)^32+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*az^20*sin(a/2)^32+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*az^18*sin(a/2)^32+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*az^16*sin(a/2)^32+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*az^14*sin(a/2)^32+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*az^12*sin(a/2)^32+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*az^10*sin(a/2)^32+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*az^8*sin(a/2)^32+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*az^6*sin(a/2)^32+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*az^4*sin(a/2)^32+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*az^2*sin(a/2)^32+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+21840*ax^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*az^20*sin(a/2)^32+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*az^18*sin(a/2)^32+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*az^16*sin(a/2)^32+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*az^14*sin(a/2)^32+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*az^12*sin(a/2)^32+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*az^10*sin(a/2)^32+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*az^8*sin(a/2)^32+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*az^6*sin(a/2)^32+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*az^4*sin(a/2)^32+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*az^2*sin(a/2)^32+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+48048*ax^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*az^18*sin(a/2)^32+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*az^16*sin(a/2)^32+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*az^14*sin(a/2)^32+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*az^12*sin(a/2)^32+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*az^10*sin(a/2)^32+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*az^8*sin(a/2)^32+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*az^6*sin(a/2)^32+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*az^4*sin(a/2)^32+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*az^2*sin(a/2)^32+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+80080*ax^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*az^16*sin(a/2)^32+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*az^14*sin(a/2)^32+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*az^12*sin(a/2)^32+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*az^10*sin(a/2)^32+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*az^8*sin(a/2)^32+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*az^6*sin(a/2)^32+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*az^4*sin(a/2)^32+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*az^2*sin(a/2)^32+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*az^14*sin(a/2)^32+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*az^12*sin(a/2)^32+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*az^10*sin(a/2)^32+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*az^8*sin(a/2)^32+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*az^6*sin(a/2)^32+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*az^4*sin(a/2)^32+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*az^2*sin(a/2)^32+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+102960*ax^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*az^12*sin(a/2)^32+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*az^10*sin(a/2)^32+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*az^8*sin(a/2)^32+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*az^6*sin(a/2)^32+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*az^4*sin(a/2)^32+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*az^2*sin(a/2)^32+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+80080*ax^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*az^10*sin(a/2)^32+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*az^8*sin(a/2)^32+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*az^6*sin(a/2)^32+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*az^4*sin(a/2)^32+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*az^2*sin(a/2)^32+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+48048*ax^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*az^8*sin(a/2)^32+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*az^6*sin(a/2)^32+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*az^4*sin(a/2)^32+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*az^2*sin(a/2)^32+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+21840*ax^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*az^6*sin(a/2)^32+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*az^4*sin(a/2)^32+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*az^2*sin(a/2)^32+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+7280*ax^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*az^4*sin(a/2)^32+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*az^2*sin(a/2)^32+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+1680*ax^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*az^2*sin(a/2)^32+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30+240*ax^28*az^2*cos(a/2)^2*sin(a/2)^30+240*ay^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ay^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ay^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ay^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ay^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ay^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ay^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ay^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ay^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ay^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ay^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ay^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ay^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ay^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ay^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ay^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ay^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ay^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ay^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ay^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ay^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ay^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ay^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ay^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ay^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ay^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ay^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ay^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ay^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ay^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ay^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ay^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ay^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ay^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ay^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ay^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ay^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ay^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ay^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ay^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ay^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ay^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ay^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ay^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ay^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ay^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ay^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ay^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ay^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ay^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ay^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ay^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ay^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ay^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ay^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ay^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ay^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ay^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ay^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ay^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ay^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ay^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ay^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ay^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ay^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ay^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ay^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ay^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ay^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ay^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ay^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ay^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ay^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ay^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ay^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ay^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ay^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ay^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ay^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ay^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ay^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ay^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ay^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ay^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ay^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ay^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ay^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ay^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ay^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ay^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ay^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ay^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ay^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ay^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ay^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ay^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ay^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ay^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ay^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ay^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ay^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ay^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ay^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ay^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ay^28*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^2*az^2*cos(a/2)^26*sin(a/2)^6+21840*ax^2*ay^2*az^4*cos(a/2)^24*sin(a/2)^8+87360*ax^2*ay^2*az^6*cos(a/2)^22*sin(a/2)^10+240240*ax^2*ay^2*az^8*cos(a/2)^20*sin(a/2)^12+480480*ax^2*ay^2*az^10*cos(a/2)^18*sin(a/2)^14+720720*ax^2*ay^2*az^12*cos(a/2)^16*sin(a/2)^16+823680*ax^2*ay^2*az^14*cos(a/2)^14*sin(a/2)^18+720720*ax^2*ay^2*az^16*cos(a/2)^12*sin(a/2)^20+480480*ax^2*ay^2*az^18*cos(a/2)^10*sin(a/2)^22+240240*ax^2*ay^2*az^20*cos(a/2)^8*sin(a/2)^24+87360*ax^2*ay^2*az^22*cos(a/2)^6*sin(a/2)^26+21840*ax^2*ay^2*az^24*cos(a/2)^4*sin(a/2)^28+3360*ax^2*ay^2*az^26*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^4*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^2*ay^4*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^4*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^4*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^4*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^4*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^4*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^4*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^4*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^4*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^4*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^4*az^24*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^6*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^6*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^2*ay^6*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^6*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^6*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^6*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^6*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^6*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^6*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^6*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^6*az^22*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^8*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^8*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^8*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^2*ay^8*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^8*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^8*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^8*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^8*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^8*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^8*az^20*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^10*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^10*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^10*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^10*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^2*ay^10*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^10*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^10*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^10*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^10*az^18*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^12*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^12*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^12*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^12*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^12*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^2*ay^12*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^12*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^12*az^16*cos(a/2)^2*sin(a/2)^30+823680*ax^2*ay^14*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^14*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^14*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^14*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^14*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^14*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^2*ay^14*az^14*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^16*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^16*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^16*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^16*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^16*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^16*az^12*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^18*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^18*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^18*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^18*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^18*az^10*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^20*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^20*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^20*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^20*az^8*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^22*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^22*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^22*az^6*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^24*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^24*az^4*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^26*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^2*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^4*ay^2*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^4*ay^2*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^4*ay^2*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^4*ay^2*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^4*ay^2*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^4*ay^2*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^4*ay^2*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^4*ay^2*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^4*ay^2*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^4*ay^2*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^4*ay^2*az^24*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^4*az^2*cos(a/2)^22*sin(a/2)^10+720720*ax^4*ay^4*az^4*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^4*az^6*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^4*az^8*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^4*az^10*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^4*az^12*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^4*az^14*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^4*az^16*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^4*az^18*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^4*az^20*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^4*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^6*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^6*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^4*ay^6*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^6*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^6*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^6*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^6*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^6*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^6*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^6*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^8*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^8*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^8*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^4*ay^8*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^8*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^8*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^8*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^8*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^8*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^10*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^10*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^10*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^10*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^4*ay^10*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^10*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^10*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^10*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^12*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^12*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^12*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^12*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^12*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^4*ay^12*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^12*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^14*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^14*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^14*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^14*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^14*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^14*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^16*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^16*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^16*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^16*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^16*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^18*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^18*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^18*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^18*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^20*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^20*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^20*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^22*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^22*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^24*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^2*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^6*ay^2*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^6*ay^2*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^6*ay^2*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^6*ay^2*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^6*ay^2*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^6*ay^2*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^6*ay^2*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^6*ay^2*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^6*ay^2*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^6*ay^2*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^4*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^6*ay^4*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^4*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^4*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^4*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^4*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^4*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^4*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^4*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^4*az^20*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^6*az^2*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^6*az^4*cos(a/2)^16*sin(a/2)^16+19219200*ax^6*ay^6*az^6*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^6*az^8*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^6*az^10*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^6*az^12*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^6*az^14*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^6*az^16*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^6*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^8*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^8*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^8*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^6*ay^8*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^8*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^8*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^8*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^8*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^10*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^10*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^10*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^10*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^6*ay^10*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^10*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^10*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^6*ay^12*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^12*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^12*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^12*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^12*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^6*ay^12*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^14*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^14*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^14*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^14*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^14*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^16*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^16*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^16*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^16*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^18*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^18*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^18*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^20*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^20*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^22*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^2*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^8*ay^2*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^8*ay^2*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^8*ay^2*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^8*ay^2*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^8*ay^2*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^8*ay^2*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^8*ay^2*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^8*ay^2*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^8*ay^2*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^4*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^8*ay^4*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^4*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^4*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^4*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^4*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^4*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^4*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^4*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^6*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^6*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^8*ay^6*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^6*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^6*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^6*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^6*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^6*az^16*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^8*az^2*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^8*az^4*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^8*az^6*cos(a/2)^10*sin(a/2)^22+63063000*ax^8*ay^8*az^8*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^8*az^10*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^8*az^12*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^8*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^10*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^10*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^10*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^10*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^8*ay^10*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^10*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^12*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^12*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^12*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^12*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^12*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^14*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^14*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^14*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^14*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^16*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^16*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^16*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^18*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^18*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^20*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^2*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^10*ay^2*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^10*ay^2*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^10*ay^2*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^10*ay^2*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^10*ay^2*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^10*ay^2*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^10*ay^2*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^10*ay^2*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^4*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^10*ay^4*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^4*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^4*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^4*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^4*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^4*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^4*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^6*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^6*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^10*ay^6*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^6*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^6*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^6*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^6*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^8*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^8*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^8*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^10*ay^8*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^8*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^8*az^12*cos(a/2)^2*sin(a/2)^30+12108096*ax^10*ay^10*az^2*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^10*az^4*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^10*az^6*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^10*az^8*cos(a/2)^4*sin(a/2)^28+12108096*ax^10*ay^10*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^12*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^12*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^12*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^12*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^14*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^14*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^14*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^16*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^16*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^18*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^2*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^12*ay^2*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^12*ay^2*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^12*ay^2*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^12*ay^2*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^12*ay^2*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^12*ay^2*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^12*ay^2*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^4*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^12*ay^4*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^4*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^4*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^4*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^4*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^4*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^6*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^6*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^12*ay^6*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^6*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^6*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^6*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^8*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^8*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^8*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^12*ay^8*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^8*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^10*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^10*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^10*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^10*az^8*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^12*az^2*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^12*az^4*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^12*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^14*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^14*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^16*az^2*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^2*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^14*ay^2*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^14*ay^2*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^14*ay^2*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^14*ay^2*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^14*ay^2*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^14*ay^2*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^4*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^14*ay^4*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^4*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^4*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^4*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^4*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^6*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^6*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^14*ay^6*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^6*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^6*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^14*ay^8*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^8*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^8*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^14*ay^8*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^10*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^10*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^10*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^12*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^12*az^4*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^14*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^2*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^16*ay^2*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^16*ay^2*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^16*ay^2*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^16*ay^2*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^16*ay^2*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^4*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^16*ay^4*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^4*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^4*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^4*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^6*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^6*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^16*ay^6*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^6*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^8*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^8*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^8*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^10*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^10*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^12*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^2*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^18*ay^2*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^18*ay^2*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^18*ay^2*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^18*ay^2*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^4*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^18*ay^4*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^4*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^4*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^18*ay^6*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^6*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^18*ay^6*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^8*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^8*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^10*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^2*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^20*ay^2*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^20*ay^2*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^20*ay^2*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^4*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^20*ay^4*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^4*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^6*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^6*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^8*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^2*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^22*ay^2*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^22*ay^2*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^22*ay^4*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^22*ay^4*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^6*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^2*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^24*ay^2*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^4*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^26*ay^2*az^2*cos(a/2)^2*sin(a/2)^30)},{(-2*ay*cos(a/2)^7*sin(a/2)-6*ay^3*cos(a/2)^5*sin(a/2)^3-6*ay^5*cos(a/2)^3*sin(a/2)^5-2*ay^7*cos(a/2)*sin(a/2)^7-6*ax^2*ay*cos(a/2)^5*sin(a/2)^3-12*ax^2*ay^3*cos(a/2)^3*sin(a/2)^5-6*ax^2*ay^5*cos(a/2)*sin(a/2)^7-6*ax^4*ay*cos(a/2)^3*sin(a/2)^5-6*ax^4*ay^3*cos(a/2)*sin(a/2)^7-2*ax^6*ay*cos(a/2)*sin(a/2)^7-6*ay*az^2*cos(a/2)^5*sin(a/2)^3-6*ay*az^4*cos(a/2)^3*sin(a/2)^5-2*ay*az^6*cos(a/2)*sin(a/2)^7-12*ay^3*az^2*cos(a/2)^3*sin(a/2)^5-6*ay^3*az^4*cos(a/2)*sin(a/2)^7-6*ay^5*az^2*cos(a/2)*sin(a/2)^7-12*ax^2*ay*az^2*cos(a/2)^3*sin(a/2)^5-6*ax^2*ay*az^4*cos(a/2)*sin(a/2)^7-12*ax^2*ay^3*az^2*cos(a/2)*sin(a/2)^7-6*ax^4*ay*az^2*cos(a/2)*sin(a/2)^7)/(cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6),(-cos(a/2)^32*y-ax^32*sin(a/2)^32*y+ay^32*sin(a/2)^32*y-az^32*sin(a/2)^32*y+2*ax*ay^31*sin(a/2)^32*x+14*ax^2*ay^30*sin(a/2)^32*y-16*ax^2*az^30*sin(a/2)^32*y-16*ax^2*cos(a/2)^30*sin(a/2)^2*y+30*ax^3*ay^29*sin(a/2)^32*x+90*ax^4*ay^28*sin(a/2)^32*y-120*ax^4*az^28*sin(a/2)^32*y-120*ax^4*cos(a/2)^28*sin(a/2)^4*y+210*ax^5*ay^27*sin(a/2)^32*x+350*ax^6*ay^26*sin(a/2)^32*y-560*ax^6*az^26*sin(a/2)^32*y-560*ax^6*cos(a/2)^26*sin(a/2)^6*y+910*ax^7*ay^25*sin(a/2)^32*x+910*ax^8*ay^24*sin(a/2)^32*y-1820*ax^8*az^24*sin(a/2)^32*y-1820*ax^8*cos(a/2)^24*sin(a/2)^8*y+2730*ax^9*ay^23*sin(a/2)^32*x+1638*ax^10*ay^22*sin(a/2)^32*y-4368*ax^10*az^22*sin(a/2)^32*y-4368*ax^10*cos(a/2)^22*sin(a/2)^10*y+6006*ax^11*ay^21*sin(a/2)^32*x+2002*ax^12*ay^20*sin(a/2)^32*y-8008*ax^12*az^20*sin(a/2)^32*y-8008*ax^12*cos(a/2)^20*sin(a/2)^12*y+10010*ax^13*ay^19*sin(a/2)^32*x+1430*ax^14*ay^18*sin(a/2)^32*y-11440*ax^14*az^18*sin(a/2)^32*y-11440*ax^14*cos(a/2)^18*sin(a/2)^14*y+12870*ax^15*ay^17*sin(a/2)^32*x-12870*ax^16*az^16*sin(a/2)^32*y-12870*ax^16*cos(a/2)^16*sin(a/2)^16*y+12870*ax^17*ay^15*sin(a/2)^32*x-1430*ax^18*ay^14*sin(a/2)^32*y-11440*ax^18*az^14*sin(a/2)^32*y-11440*ax^18*cos(a/2)^14*sin(a/2)^18*y+10010*ax^19*ay^13*sin(a/2)^32*x-2002*ax^20*ay^12*sin(a/2)^32*y-8008*ax^20*az^12*sin(a/2)^32*y-8008*ax^20*cos(a/2)^12*sin(a/2)^20*y+6006*ax^21*ay^11*sin(a/2)^32*x-1638*ax^22*ay^10*sin(a/2)^32*y-4368*ax^22*az^10*sin(a/2)^32*y-4368*ax^22*cos(a/2)^10*sin(a/2)^22*y+2730*ax^23*ay^9*sin(a/2)^32*x-910*ax^24*ay^8*sin(a/2)^32*y-1820*ax^24*az^8*sin(a/2)^32*y-1820*ax^24*cos(a/2)^8*sin(a/2)^24*y+910*ax^25*ay^7*sin(a/2)^32*x-350*ax^26*ay^6*sin(a/2)^32*y-560*ax^26*az^6*sin(a/2)^32*y-560*ax^26*cos(a/2)^6*sin(a/2)^26*y+210*ax^27*ay^5*sin(a/2)^32*x-90*ax^28*ay^4*sin(a/2)^32*y-120*ax^28*az^4*sin(a/2)^32*y-120*ax^28*cos(a/2)^4*sin(a/2)^28*y+30*ax^29*ay^3*sin(a/2)^32*x-14*ax^30*ay^2*sin(a/2)^32*y-16*ax^30*az^2*sin(a/2)^32*y-16*ax^30*cos(a/2)^2*sin(a/2)^30*y+2*ax^31*ay*sin(a/2)^32*x+2*ay*az^31*sin(a/2)^32*z-14*ay^2*az^30*sin(a/2)^32*y-14*ay^2*cos(a/2)^30*sin(a/2)^2*y+30*ay^3*az^29*sin(a/2)^32*z-90*ay^4*az^28*sin(a/2)^32*y-90*ay^4*cos(a/2)^28*sin(a/2)^4*y+210*ay^5*az^27*sin(a/2)^32*z-350*ay^6*az^26*sin(a/2)^32*y-350*ay^6*cos(a/2)^26*sin(a/2)^6*y+910*ay^7*az^25*sin(a/2)^32*z-910*ay^8*az^24*sin(a/2)^32*y-910*ay^8*cos(a/2)^24*sin(a/2)^8*y+2730*ay^9*az^23*sin(a/2)^32*z-1638*ay^10*az^22*sin(a/2)^32*y-1638*ay^10*cos(a/2)^22*sin(a/2)^10*y+6006*ay^11*az^21*sin(a/2)^32*z-2002*ay^12*az^20*sin(a/2)^32*y-2002*ay^12*cos(a/2)^20*sin(a/2)^12*y+10010*ay^13*az^19*sin(a/2)^32*z-1430*ay^14*az^18*sin(a/2)^32*y-1430*ay^14*cos(a/2)^18*sin(a/2)^14*y+12870*ay^15*az^17*sin(a/2)^32*z+12870*ay^17*az^15*sin(a/2)^32*z+1430*ay^18*az^14*sin(a/2)^32*y+1430*ay^18*cos(a/2)^14*sin(a/2)^18*y+10010*ay^19*az^13*sin(a/2)^32*z+2002*ay^20*az^12*sin(a/2)^32*y+2002*ay^20*cos(a/2)^12*sin(a/2)^20*y+6006*ay^21*az^11*sin(a/2)^32*z+1638*ay^22*az^10*sin(a/2)^32*y+1638*ay^22*cos(a/2)^10*sin(a/2)^22*y+2730*ay^23*az^9*sin(a/2)^32*z+910*ay^24*az^8*sin(a/2)^32*y+910*ay^24*cos(a/2)^8*sin(a/2)^24*y+910*ay^25*az^7*sin(a/2)^32*z+350*ay^26*az^6*sin(a/2)^32*y+350*ay^26*cos(a/2)^6*sin(a/2)^26*y+210*ay^27*az^5*sin(a/2)^32*z+90*ay^28*az^4*sin(a/2)^32*y+90*ay^28*cos(a/2)^4*sin(a/2)^28*y+30*ay^29*az^3*sin(a/2)^32*z+14*ay^30*az^2*sin(a/2)^32*y+14*ay^30*cos(a/2)^2*sin(a/2)^30*y+2*ay^31*az*sin(a/2)^32*z-16*az^2*cos(a/2)^30*sin(a/2)^2*y-120*az^4*cos(a/2)^28*sin(a/2)^4*y-560*az^6*cos(a/2)^26*sin(a/2)^6*y-1820*az^8*cos(a/2)^24*sin(a/2)^8*y-4368*az^10*cos(a/2)^22*sin(a/2)^10*y-8008*az^12*cos(a/2)^20*sin(a/2)^12*y-11440*az^14*cos(a/2)^18*sin(a/2)^14*y-12870*az^16*cos(a/2)^16*sin(a/2)^16*y-11440*az^18*cos(a/2)^14*sin(a/2)^18*y-8008*az^20*cos(a/2)^12*sin(a/2)^20*y-4368*az^22*cos(a/2)^10*sin(a/2)^22*y-1820*az^24*cos(a/2)^8*sin(a/2)^24*y-560*az^26*cos(a/2)^6*sin(a/2)^26*y-120*az^28*cos(a/2)^4*sin(a/2)^28*y-16*az^30*cos(a/2)^2*sin(a/2)^30*y+2*ax*ay*az^30*sin(a/2)^32*x+2*ax*ay*cos(a/2)^30*sin(a/2)^2*x+30*ax*ay^3*az^28*sin(a/2)^32*x+30*ax*ay^3*cos(a/2)^28*sin(a/2)^4*x+210*ax*ay^5*az^26*sin(a/2)^32*x+210*ax*ay^5*cos(a/2)^26*sin(a/2)^6*x+910*ax*ay^7*az^24*sin(a/2)^32*x+910*ax*ay^7*cos(a/2)^24*sin(a/2)^8*x+2730*ax*ay^9*az^22*sin(a/2)^32*x+2730*ax*ay^9*cos(a/2)^22*sin(a/2)^10*x+6006*ax*ay^11*az^20*sin(a/2)^32*x+6006*ax*ay^11*cos(a/2)^20*sin(a/2)^12*x+10010*ax*ay^13*az^18*sin(a/2)^32*x+10010*ax*ay^13*cos(a/2)^18*sin(a/2)^14*x+12870*ax*ay^15*az^16*sin(a/2)^32*x+12870*ax*ay^15*cos(a/2)^16*sin(a/2)^16*x+12870*ax*ay^17*az^14*sin(a/2)^32*x+12870*ax*ay^17*cos(a/2)^14*sin(a/2)^18*x+10010*ax*ay^19*az^12*sin(a/2)^32*x+10010*ax*ay^19*cos(a/2)^12*sin(a/2)^20*x+6006*ax*ay^21*az^10*sin(a/2)^32*x+6006*ax*ay^21*cos(a/2)^10*sin(a/2)^22*x+2730*ax*ay^23*az^8*sin(a/2)^32*x+2730*ax*ay^23*cos(a/2)^8*sin(a/2)^24*x+910*ax*ay^25*az^6*sin(a/2)^32*x+910*ax*ay^25*cos(a/2)^6*sin(a/2)^26*x+210*ax*ay^27*az^4*sin(a/2)^32*x+210*ax*ay^27*cos(a/2)^4*sin(a/2)^28*x+30*ax*ay^29*az^2*sin(a/2)^32*x+30*ax*ay^29*cos(a/2)^2*sin(a/2)^30*x+30*ax^2*ay*az^29*sin(a/2)^32*z-210*ax^2*ay^2*az^28*sin(a/2)^32*y-210*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4*y+420*ax^2*ay^3*az^27*sin(a/2)^32*z-1260*ax^2*ay^4*az^26*sin(a/2)^32*y-1260*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6*y+2730*ax^2*ay^5*az^25*sin(a/2)^32*z-4550*ax^2*ay^6*az^24*sin(a/2)^32*y-4550*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8*y+10920*ax^2*ay^7*az^23*sin(a/2)^32*z-10920*ax^2*ay^8*az^22*sin(a/2)^32*y-10920*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10*y+30030*ax^2*ay^9*az^21*sin(a/2)^32*z-18018*ax^2*ay^10*az^20*sin(a/2)^32*y-18018*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12*y+60060*ax^2*ay^11*az^19*sin(a/2)^32*z-20020*ax^2*ay^12*az^18*sin(a/2)^32*y-20020*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14*y+90090*ax^2*ay^13*az^17*sin(a/2)^32*z-12870*ax^2*ay^14*az^16*sin(a/2)^32*y-12870*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16*y+102960*ax^2*ay^15*az^15*sin(a/2)^32*z+90090*ax^2*ay^17*az^13*sin(a/2)^32*z+10010*ax^2*ay^18*az^12*sin(a/2)^32*y+10010*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20*y+60060*ax^2*ay^19*az^11*sin(a/2)^32*z+12012*ax^2*ay^20*az^10*sin(a/2)^32*y+12012*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22*y+30030*ax^2*ay^21*az^9*sin(a/2)^32*z+8190*ax^2*ay^22*az^8*sin(a/2)^32*y+8190*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24*y+10920*ax^2*ay^23*az^7*sin(a/2)^32*z+3640*ax^2*ay^24*az^6*sin(a/2)^32*y+3640*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26*y+2730*ax^2*ay^25*az^5*sin(a/2)^32*z+1050*ax^2*ay^26*az^4*sin(a/2)^32*y+1050*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28*y+420*ax^2*ay^27*az^3*sin(a/2)^32*z+180*ax^2*ay^28*az^2*sin(a/2)^32*y+180*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30*y+30*ax^2*ay^29*az*sin(a/2)^32*z-240*ax^2*az^2*cos(a/2)^28*sin(a/2)^4*y-1680*ax^2*az^4*cos(a/2)^26*sin(a/2)^6*y-7280*ax^2*az^6*cos(a/2)^24*sin(a/2)^8*y-21840*ax^2*az^8*cos(a/2)^22*sin(a/2)^10*y-48048*ax^2*az^10*cos(a/2)^20*sin(a/2)^12*y-80080*ax^2*az^12*cos(a/2)^18*sin(a/2)^14*y-102960*ax^2*az^14*cos(a/2)^16*sin(a/2)^16*y-102960*ax^2*az^16*cos(a/2)^14*sin(a/2)^18*y-80080*ax^2*az^18*cos(a/2)^12*sin(a/2)^20*y-48048*ax^2*az^20*cos(a/2)^10*sin(a/2)^22*y-21840*ax^2*az^22*cos(a/2)^8*sin(a/2)^24*y-7280*ax^2*az^24*cos(a/2)^6*sin(a/2)^26*y-1680*ax^2*az^26*cos(a/2)^4*sin(a/2)^28*y-240*ax^2*az^28*cos(a/2)^2*sin(a/2)^30*y+30*ax^3*ay*az^28*sin(a/2)^32*x+30*ax^3*ay*cos(a/2)^28*sin(a/2)^4*x+420*ax^3*ay^3*az^26*sin(a/2)^32*x+420*ax^3*ay^3*cos(a/2)^26*sin(a/2)^6*x+2730*ax^3*ay^5*az^24*sin(a/2)^32*x+2730*ax^3*ay^5*cos(a/2)^24*sin(a/2)^8*x+10920*ax^3*ay^7*az^22*sin(a/2)^32*x+10920*ax^3*ay^7*cos(a/2)^22*sin(a/2)^10*x+30030*ax^3*ay^9*az^20*sin(a/2)^32*x+30030*ax^3*ay^9*cos(a/2)^20*sin(a/2)^12*x+60060*ax^3*ay^11*az^18*sin(a/2)^32*x+60060*ax^3*ay^11*cos(a/2)^18*sin(a/2)^14*x+90090*ax^3*ay^13*az^16*sin(a/2)^32*x+90090*ax^3*ay^13*cos(a/2)^16*sin(a/2)^16*x+102960*ax^3*ay^15*az^14*sin(a/2)^32*x+102960*ax^3*ay^15*cos(a/2)^14*sin(a/2)^18*x+90090*ax^3*ay^17*az^12*sin(a/2)^32*x+90090*ax^3*ay^17*cos(a/2)^12*sin(a/2)^20*x+60060*ax^3*ay^19*az^10*sin(a/2)^32*x+60060*ax^3*ay^19*cos(a/2)^10*sin(a/2)^22*x+30030*ax^3*ay^21*az^8*sin(a/2)^32*x+30030*ax^3*ay^21*cos(a/2)^8*sin(a/2)^24*x+10920*ax^3*ay^23*az^6*sin(a/2)^32*x+10920*ax^3*ay^23*cos(a/2)^6*sin(a/2)^26*x+2730*ax^3*ay^25*az^4*sin(a/2)^32*x+2730*ax^3*ay^25*cos(a/2)^4*sin(a/2)^28*x+420*ax^3*ay^27*az^2*sin(a/2)^32*x+420*ax^3*ay^27*cos(a/2)^2*sin(a/2)^30*x+210*ax^4*ay*az^27*sin(a/2)^32*z-1470*ax^4*ay^2*az^26*sin(a/2)^32*y-1470*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6*y+2730*ax^4*ay^3*az^25*sin(a/2)^32*z-8190*ax^4*ay^4*az^24*sin(a/2)^32*y-8190*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8*y+16380*ax^4*ay^5*az^23*sin(a/2)^32*z-27300*ax^4*ay^6*az^22*sin(a/2)^32*y-27300*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10*y+60060*ax^4*ay^7*az^21*sin(a/2)^32*z-60060*ax^4*ay^8*az^20*sin(a/2)^32*y-60060*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12*y+150150*ax^4*ay^9*az^19*sin(a/2)^32*z-90090*ax^4*ay^10*az^18*sin(a/2)^32*y-90090*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14*y+270270*ax^4*ay^11*az^17*sin(a/2)^32*z-90090*ax^4*ay^12*az^16*sin(a/2)^32*y-90090*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16*y+360360*ax^4*ay^13*az^15*sin(a/2)^32*z-51480*ax^4*ay^14*az^14*sin(a/2)^32*y-51480*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18*y+360360*ax^4*ay^15*az^13*sin(a/2)^32*z+270270*ax^4*ay^17*az^11*sin(a/2)^32*z+30030*ax^4*ay^18*az^10*sin(a/2)^32*y+30030*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22*y+150150*ax^4*ay^19*az^9*sin(a/2)^32*z+30030*ax^4*ay^20*az^8*sin(a/2)^32*y+30030*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24*y+60060*ax^4*ay^21*az^7*sin(a/2)^32*z+16380*ax^4*ay^22*az^6*sin(a/2)^32*y+16380*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26*y+16380*ax^4*ay^23*az^5*sin(a/2)^32*z+5460*ax^4*ay^24*az^4*sin(a/2)^32*y+5460*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28*y+2730*ax^4*ay^25*az^3*sin(a/2)^32*z+1050*ax^4*ay^26*az^2*sin(a/2)^32*y+1050*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30*y+210*ax^4*ay^27*az*sin(a/2)^32*z-1680*ax^4*az^2*cos(a/2)^26*sin(a/2)^6*y-10920*ax^4*az^4*cos(a/2)^24*sin(a/2)^8*y-43680*ax^4*az^6*cos(a/2)^22*sin(a/2)^10*y-120120*ax^4*az^8*cos(a/2)^20*sin(a/2)^12*y-240240*ax^4*az^10*cos(a/2)^18*sin(a/2)^14*y-360360*ax^4*az^12*cos(a/2)^16*sin(a/2)^16*y-411840*ax^4*az^14*cos(a/2)^14*sin(a/2)^18*y-360360*ax^4*az^16*cos(a/2)^12*sin(a/2)^20*y-240240*ax^4*az^18*cos(a/2)^10*sin(a/2)^22*y-120120*ax^4*az^20*cos(a/2)^8*sin(a/2)^24*y-43680*ax^4*az^22*cos(a/2)^6*sin(a/2)^26*y-10920*ax^4*az^24*cos(a/2)^4*sin(a/2)^28*y-1680*ax^4*az^26*cos(a/2)^2*sin(a/2)^30*y+210*ax^5*ay*az^26*sin(a/2)^32*x+210*ax^5*ay*cos(a/2)^26*sin(a/2)^6*x+2730*ax^5*ay^3*az^24*sin(a/2)^32*x+2730*ax^5*ay^3*cos(a/2)^24*sin(a/2)^8*x+16380*ax^5*ay^5*az^22*sin(a/2)^32*x+16380*ax^5*ay^5*cos(a/2)^22*sin(a/2)^10*x+60060*ax^5*ay^7*az^20*sin(a/2)^32*x+60060*ax^5*ay^7*cos(a/2)^20*sin(a/2)^12*x+150150*ax^5*ay^9*az^18*sin(a/2)^32*x+150150*ax^5*ay^9*cos(a/2)^18*sin(a/2)^14*x+270270*ax^5*ay^11*az^16*sin(a/2)^32*x+270270*ax^5*ay^11*cos(a/2)^16*sin(a/2)^16*x+360360*ax^5*ay^13*az^14*sin(a/2)^32*x+360360*ax^5*ay^13*cos(a/2)^14*sin(a/2)^18*x+360360*ax^5*ay^15*az^12*sin(a/2)^32*x+360360*ax^5*ay^15*cos(a/2)^12*sin(a/2)^20*x+270270*ax^5*ay^17*az^10*sin(a/2)^32*x+270270*ax^5*ay^17*cos(a/2)^10*sin(a/2)^22*x+150150*ax^5*ay^19*az^8*sin(a/2)^32*x+150150*ax^5*ay^19*cos(a/2)^8*sin(a/2)^24*x+60060*ax^5*ay^21*az^6*sin(a/2)^32*x+60060*ax^5*ay^21*cos(a/2)^6*sin(a/2)^26*x+16380*ax^5*ay^23*az^4*sin(a/2)^32*x+16380*ax^5*ay^23*cos(a/2)^4*sin(a/2)^28*x+2730*ax^5*ay^25*az^2*sin(a/2)^32*x+2730*ax^5*ay^25*cos(a/2)^2*sin(a/2)^30*x+910*ax^6*ay*az^25*sin(a/2)^32*z-6370*ax^6*ay^2*az^24*sin(a/2)^32*y-6370*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8*y+10920*ax^6*ay^3*az^23*sin(a/2)^32*z-32760*ax^6*ay^4*az^22*sin(a/2)^32*y-32760*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10*y+60060*ax^6*ay^5*az^21*sin(a/2)^32*z-100100*ax^6*ay^6*az^20*sin(a/2)^32*y-100100*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12*y+200200*ax^6*ay^7*az^19*sin(a/2)^32*z-200200*ax^6*ay^8*az^18*sin(a/2)^32*y-200200*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14*y+450450*ax^6*ay^9*az^17*sin(a/2)^32*z-270270*ax^6*ay^10*az^16*sin(a/2)^32*y-270270*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16*y+720720*ax^6*ay^11*az^15*sin(a/2)^32*z-240240*ax^6*ay^12*az^14*sin(a/2)^32*y-240240*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18*y+840840*ax^6*ay^13*az^13*sin(a/2)^32*z-120120*ax^6*ay^14*az^12*sin(a/2)^32*y-120120*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20*y+720720*ax^6*ay^15*az^11*sin(a/2)^32*z+450450*ax^6*ay^17*az^9*sin(a/2)^32*z+50050*ax^6*ay^18*az^8*sin(a/2)^32*y+50050*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24*y+200200*ax^6*ay^19*az^7*sin(a/2)^32*z+40040*ax^6*ay^20*az^6*sin(a/2)^32*y+40040*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26*y+60060*ax^6*ay^21*az^5*sin(a/2)^32*z+16380*ax^6*ay^22*az^4*sin(a/2)^32*y+16380*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28*y+10920*ax^6*ay^23*az^3*sin(a/2)^32*z+3640*ax^6*ay^24*az^2*sin(a/2)^32*y+3640*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30*y+910*ax^6*ay^25*az*sin(a/2)^32*z-7280*ax^6*az^2*cos(a/2)^24*sin(a/2)^8*y-43680*ax^6*az^4*cos(a/2)^22*sin(a/2)^10*y-160160*ax^6*az^6*cos(a/2)^20*sin(a/2)^12*y-400400*ax^6*az^8*cos(a/2)^18*sin(a/2)^14*y-720720*ax^6*az^10*cos(a/2)^16*sin(a/2)^16*y-960960*ax^6*az^12*cos(a/2)^14*sin(a/2)^18*y-960960*ax^6*az^14*cos(a/2)^12*sin(a/2)^20*y-720720*ax^6*az^16*cos(a/2)^10*sin(a/2)^22*y-400400*ax^6*az^18*cos(a/2)^8*sin(a/2)^24*y-160160*ax^6*az^20*cos(a/2)^6*sin(a/2)^26*y-43680*ax^6*az^22*cos(a/2)^4*sin(a/2)^28*y-7280*ax^6*az^24*cos(a/2)^2*sin(a/2)^30*y+910*ax^7*ay*az^24*sin(a/2)^32*x+910*ax^7*ay*cos(a/2)^24*sin(a/2)^8*x+10920*ax^7*ay^3*az^22*sin(a/2)^32*x+10920*ax^7*ay^3*cos(a/2)^22*sin(a/2)^10*x+60060*ax^7*ay^5*az^20*sin(a/2)^32*x+60060*ax^7*ay^5*cos(a/2)^20*sin(a/2)^12*x+200200*ax^7*ay^7*az^18*sin(a/2)^32*x+200200*ax^7*ay^7*cos(a/2)^18*sin(a/2)^14*x+450450*ax^7*ay^9*az^16*sin(a/2)^32*x+450450*ax^7*ay^9*cos(a/2)^16*sin(a/2)^16*x+720720*ax^7*ay^11*az^14*sin(a/2)^32*x+720720*ax^7*ay^11*cos(a/2)^14*sin(a/2)^18*x+840840*ax^7*ay^13*az^12*sin(a/2)^32*x+840840*ax^7*ay^13*cos(a/2)^12*sin(a/2)^20*x+720720*ax^7*ay^15*az^10*sin(a/2)^32*x+720720*ax^7*ay^15*cos(a/2)^10*sin(a/2)^22*x+450450*ax^7*ay^17*az^8*sin(a/2)^32*x+450450*ax^7*ay^17*cos(a/2)^8*sin(a/2)^24*x+200200*ax^7*ay^19*az^6*sin(a/2)^32*x+200200*ax^7*ay^19*cos(a/2)^6*sin(a/2)^26*x+60060*ax^7*ay^21*az^4*sin(a/2)^32*x+60060*ax^7*ay^21*cos(a/2)^4*sin(a/2)^28*x+10920*ax^7*ay^23*az^2*sin(a/2)^32*x+10920*ax^7*ay^23*cos(a/2)^2*sin(a/2)^30*x+2730*ax^8*ay*az^23*sin(a/2)^32*z-19110*ax^8*ay^2*az^22*sin(a/2)^32*y-19110*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10*y+30030*ax^8*ay^3*az^21*sin(a/2)^32*z-90090*ax^8*ay^4*az^20*sin(a/2)^32*y-90090*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12*y+150150*ax^8*ay^5*az^19*sin(a/2)^32*z-250250*ax^8*ay^6*az^18*sin(a/2)^32*y-250250*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14*y+450450*ax^8*ay^7*az^17*sin(a/2)^32*z-450450*ax^8*ay^8*az^16*sin(a/2)^32*y-450450*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16*y+900900*ax^8*ay^9*az^15*sin(a/2)^32*z-540540*ax^8*ay^10*az^14*sin(a/2)^32*y-540540*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^8*ay^11*az^13*sin(a/2)^32*z-420420*ax^8*ay^12*az^12*sin(a/2)^32*y-420420*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^8*ay^13*az^11*sin(a/2)^32*z-180180*ax^8*ay^14*az^10*sin(a/2)^32*y-180180*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22*y+900900*ax^8*ay^15*az^9*sin(a/2)^32*z+450450*ax^8*ay^17*az^7*sin(a/2)^32*z+50050*ax^8*ay^18*az^6*sin(a/2)^32*y+50050*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26*y+150150*ax^8*ay^19*az^5*sin(a/2)^32*z+30030*ax^8*ay^20*az^4*sin(a/2)^32*y+30030*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28*y+30030*ax^8*ay^21*az^3*sin(a/2)^32*z+8190*ax^8*ay^22*az^2*sin(a/2)^32*y+8190*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30*y+2730*ax^8*ay^23*az*sin(a/2)^32*z-21840*ax^8*az^2*cos(a/2)^22*sin(a/2)^10*y-120120*ax^8*az^4*cos(a/2)^20*sin(a/2)^12*y-400400*ax^8*az^6*cos(a/2)^18*sin(a/2)^14*y-900900*ax^8*az^8*cos(a/2)^16*sin(a/2)^16*y-1441440*ax^8*az^10*cos(a/2)^14*sin(a/2)^18*y-1681680*ax^8*az^12*cos(a/2)^12*sin(a/2)^20*y-1441440*ax^8*az^14*cos(a/2)^10*sin(a/2)^22*y-900900*ax^8*az^16*cos(a/2)^8*sin(a/2)^24*y-400400*ax^8*az^18*cos(a/2)^6*sin(a/2)^26*y-120120*ax^8*az^20*cos(a/2)^4*sin(a/2)^28*y-21840*ax^8*az^22*cos(a/2)^2*sin(a/2)^30*y+2730*ax^9*ay*az^22*sin(a/2)^32*x+2730*ax^9*ay*cos(a/2)^22*sin(a/2)^10*x+30030*ax^9*ay^3*az^20*sin(a/2)^32*x+30030*ax^9*ay^3*cos(a/2)^20*sin(a/2)^12*x+150150*ax^9*ay^5*az^18*sin(a/2)^32*x+150150*ax^9*ay^5*cos(a/2)^18*sin(a/2)^14*x+450450*ax^9*ay^7*az^16*sin(a/2)^32*x+450450*ax^9*ay^7*cos(a/2)^16*sin(a/2)^16*x+900900*ax^9*ay^9*az^14*sin(a/2)^32*x+900900*ax^9*ay^9*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^9*ay^11*az^12*sin(a/2)^32*x+1261260*ax^9*ay^11*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^9*ay^13*az^10*sin(a/2)^32*x+1261260*ax^9*ay^13*cos(a/2)^10*sin(a/2)^22*x+900900*ax^9*ay^15*az^8*sin(a/2)^32*x+900900*ax^9*ay^15*cos(a/2)^8*sin(a/2)^24*x+450450*ax^9*ay^17*az^6*sin(a/2)^32*x+450450*ax^9*ay^17*cos(a/2)^6*sin(a/2)^26*x+150150*ax^9*ay^19*az^4*sin(a/2)^32*x+150150*ax^9*ay^19*cos(a/2)^4*sin(a/2)^28*x+30030*ax^9*ay^21*az^2*sin(a/2)^32*x+30030*ax^9*ay^21*cos(a/2)^2*sin(a/2)^30*x+6006*ax^10*ay*az^21*sin(a/2)^32*z-42042*ax^10*ay^2*az^20*sin(a/2)^32*y-42042*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12*y+60060*ax^10*ay^3*az^19*sin(a/2)^32*z-180180*ax^10*ay^4*az^18*sin(a/2)^32*y-180180*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14*y+270270*ax^10*ay^5*az^17*sin(a/2)^32*z-450450*ax^10*ay^6*az^16*sin(a/2)^32*y-450450*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16*y+720720*ax^10*ay^7*az^15*sin(a/2)^32*z-720720*ax^10*ay^8*az^14*sin(a/2)^32*y-720720*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^10*ay^9*az^13*sin(a/2)^32*z-756756*ax^10*ay^10*az^12*sin(a/2)^32*y-756756*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20*y+1513512*ax^10*ay^11*az^11*sin(a/2)^32*z-504504*ax^10*ay^12*az^10*sin(a/2)^32*y-504504*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^10*ay^13*az^9*sin(a/2)^32*z-180180*ax^10*ay^14*az^8*sin(a/2)^32*y-180180*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24*y+720720*ax^10*ay^15*az^7*sin(a/2)^32*z+270270*ax^10*ay^17*az^5*sin(a/2)^32*z+30030*ax^10*ay^18*az^4*sin(a/2)^32*y+30030*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28*y+60060*ax^10*ay^19*az^3*sin(a/2)^32*z+12012*ax^10*ay^20*az^2*sin(a/2)^32*y+12012*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30*y+6006*ax^10*ay^21*az*sin(a/2)^32*z-48048*ax^10*az^2*cos(a/2)^20*sin(a/2)^12*y-240240*ax^10*az^4*cos(a/2)^18*sin(a/2)^14*y-720720*ax^10*az^6*cos(a/2)^16*sin(a/2)^16*y-1441440*ax^10*az^8*cos(a/2)^14*sin(a/2)^18*y-2018016*ax^10*az^10*cos(a/2)^12*sin(a/2)^20*y-2018016*ax^10*az^12*cos(a/2)^10*sin(a/2)^22*y-1441440*ax^10*az^14*cos(a/2)^8*sin(a/2)^24*y-720720*ax^10*az^16*cos(a/2)^6*sin(a/2)^26*y-240240*ax^10*az^18*cos(a/2)^4*sin(a/2)^28*y-48048*ax^10*az^20*cos(a/2)^2*sin(a/2)^30*y+6006*ax^11*ay*az^20*sin(a/2)^32*x+6006*ax^11*ay*cos(a/2)^20*sin(a/2)^12*x+60060*ax^11*ay^3*az^18*sin(a/2)^32*x+60060*ax^11*ay^3*cos(a/2)^18*sin(a/2)^14*x+270270*ax^11*ay^5*az^16*sin(a/2)^32*x+270270*ax^11*ay^5*cos(a/2)^16*sin(a/2)^16*x+720720*ax^11*ay^7*az^14*sin(a/2)^32*x+720720*ax^11*ay^7*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^11*ay^9*az^12*sin(a/2)^32*x+1261260*ax^11*ay^9*cos(a/2)^12*sin(a/2)^20*x+1513512*ax^11*ay^11*az^10*sin(a/2)^32*x+1513512*ax^11*ay^11*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^11*ay^13*az^8*sin(a/2)^32*x+1261260*ax^11*ay^13*cos(a/2)^8*sin(a/2)^24*x+720720*ax^11*ay^15*az^6*sin(a/2)^32*x+720720*ax^11*ay^15*cos(a/2)^6*sin(a/2)^26*x+270270*ax^11*ay^17*az^4*sin(a/2)^32*x+270270*ax^11*ay^17*cos(a/2)^4*sin(a/2)^28*x+60060*ax^11*ay^19*az^2*sin(a/2)^32*x+60060*ax^11*ay^19*cos(a/2)^2*sin(a/2)^30*x+10010*ax^12*ay*az^19*sin(a/2)^32*z-70070*ax^12*ay^2*az^18*sin(a/2)^32*y-70070*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14*y+90090*ax^12*ay^3*az^17*sin(a/2)^32*z-270270*ax^12*ay^4*az^16*sin(a/2)^32*y-270270*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16*y+360360*ax^12*ay^5*az^15*sin(a/2)^32*z-600600*ax^12*ay^6*az^14*sin(a/2)^32*y-600600*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18*y+840840*ax^12*ay^7*az^13*sin(a/2)^32*z-840840*ax^12*ay^8*az^12*sin(a/2)^32*y-840840*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^12*ay^9*az^11*sin(a/2)^32*z-756756*ax^12*ay^10*az^10*sin(a/2)^32*y-756756*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^12*ay^11*az^9*sin(a/2)^32*z-420420*ax^12*ay^12*az^8*sin(a/2)^32*y-420420*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24*y+840840*ax^12*ay^13*az^7*sin(a/2)^32*z-120120*ax^12*ay^14*az^6*sin(a/2)^32*y-120120*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26*y+360360*ax^12*ay^15*az^5*sin(a/2)^32*z+90090*ax^12*ay^17*az^3*sin(a/2)^32*z+10010*ax^12*ay^18*az^2*sin(a/2)^32*y+10010*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30*y+10010*ax^12*ay^19*az*sin(a/2)^32*z-80080*ax^12*az^2*cos(a/2)^18*sin(a/2)^14*y-360360*ax^12*az^4*cos(a/2)^16*sin(a/2)^16*y-960960*ax^12*az^6*cos(a/2)^14*sin(a/2)^18*y-1681680*ax^12*az^8*cos(a/2)^12*sin(a/2)^20*y-2018016*ax^12*az^10*cos(a/2)^10*sin(a/2)^22*y-1681680*ax^12*az^12*cos(a/2)^8*sin(a/2)^24*y-960960*ax^12*az^14*cos(a/2)^6*sin(a/2)^26*y-360360*ax^12*az^16*cos(a/2)^4*sin(a/2)^28*y-80080*ax^12*az^18*cos(a/2)^2*sin(a/2)^30*y+10010*ax^13*ay*az^18*sin(a/2)^32*x+10010*ax^13*ay*cos(a/2)^18*sin(a/2)^14*x+90090*ax^13*ay^3*az^16*sin(a/2)^32*x+90090*ax^13*ay^3*cos(a/2)^16*sin(a/2)^16*x+360360*ax^13*ay^5*az^14*sin(a/2)^32*x+360360*ax^13*ay^5*cos(a/2)^14*sin(a/2)^18*x+840840*ax^13*ay^7*az^12*sin(a/2)^32*x+840840*ax^13*ay^7*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^13*ay^9*az^10*sin(a/2)^32*x+1261260*ax^13*ay^9*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^13*ay^11*az^8*sin(a/2)^32*x+1261260*ax^13*ay^11*cos(a/2)^8*sin(a/2)^24*x+840840*ax^13*ay^13*az^6*sin(a/2)^32*x+840840*ax^13*ay^13*cos(a/2)^6*sin(a/2)^26*x+360360*ax^13*ay^15*az^4*sin(a/2)^32*x+360360*ax^13*ay^15*cos(a/2)^4*sin(a/2)^28*x+90090*ax^13*ay^17*az^2*sin(a/2)^32*x+90090*ax^13*ay^17*cos(a/2)^2*sin(a/2)^30*x+12870*ax^14*ay*az^17*sin(a/2)^32*z-90090*ax^14*ay^2*az^16*sin(a/2)^32*y-90090*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16*y+102960*ax^14*ay^3*az^15*sin(a/2)^32*z-308880*ax^14*ay^4*az^14*sin(a/2)^32*y-308880*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18*y+360360*ax^14*ay^5*az^13*sin(a/2)^32*z-600600*ax^14*ay^6*az^12*sin(a/2)^32*y-600600*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20*y+720720*ax^14*ay^7*az^11*sin(a/2)^32*z-720720*ax^14*ay^8*az^10*sin(a/2)^32*y-720720*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22*y+900900*ax^14*ay^9*az^9*sin(a/2)^32*z-540540*ax^14*ay^10*az^8*sin(a/2)^32*y-540540*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24*y+720720*ax^14*ay^11*az^7*sin(a/2)^32*z-240240*ax^14*ay^12*az^6*sin(a/2)^32*y-240240*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26*y+360360*ax^14*ay^13*az^5*sin(a/2)^32*z-51480*ax^14*ay^14*az^4*sin(a/2)^32*y-51480*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28*y+102960*ax^14*ay^15*az^3*sin(a/2)^32*z+12870*ax^14*ay^17*az*sin(a/2)^32*z-102960*ax^14*az^2*cos(a/2)^16*sin(a/2)^16*y-411840*ax^14*az^4*cos(a/2)^14*sin(a/2)^18*y-960960*ax^14*az^6*cos(a/2)^12*sin(a/2)^20*y-1441440*ax^14*az^8*cos(a/2)^10*sin(a/2)^22*y-1441440*ax^14*az^10*cos(a/2)^8*sin(a/2)^24*y-960960*ax^14*az^12*cos(a/2)^6*sin(a/2)^26*y-411840*ax^14*az^14*cos(a/2)^4*sin(a/2)^28*y-102960*ax^14*az^16*cos(a/2)^2*sin(a/2)^30*y+12870*ax^15*ay*az^16*sin(a/2)^32*x+12870*ax^15*ay*cos(a/2)^16*sin(a/2)^16*x+102960*ax^15*ay^3*az^14*sin(a/2)^32*x+102960*ax^15*ay^3*cos(a/2)^14*sin(a/2)^18*x+360360*ax^15*ay^5*az^12*sin(a/2)^32*x+360360*ax^15*ay^5*cos(a/2)^12*sin(a/2)^20*x+720720*ax^15*ay^7*az^10*sin(a/2)^32*x+720720*ax^15*ay^7*cos(a/2)^10*sin(a/2)^22*x+900900*ax^15*ay^9*az^8*sin(a/2)^32*x+900900*ax^15*ay^9*cos(a/2)^8*sin(a/2)^24*x+720720*ax^15*ay^11*az^6*sin(a/2)^32*x+720720*ax^15*ay^11*cos(a/2)^6*sin(a/2)^26*x+360360*ax^15*ay^13*az^4*sin(a/2)^32*x+360360*ax^15*ay^13*cos(a/2)^4*sin(a/2)^28*x+102960*ax^15*ay^15*az^2*sin(a/2)^32*x+102960*ax^15*ay^15*cos(a/2)^2*sin(a/2)^30*x+12870*ax^16*ay*az^15*sin(a/2)^32*z-90090*ax^16*ay^2*az^14*sin(a/2)^32*y-90090*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18*y+90090*ax^16*ay^3*az^13*sin(a/2)^32*z-270270*ax^16*ay^4*az^12*sin(a/2)^32*y-270270*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20*y+270270*ax^16*ay^5*az^11*sin(a/2)^32*z-450450*ax^16*ay^6*az^10*sin(a/2)^32*y-450450*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22*y+450450*ax^16*ay^7*az^9*sin(a/2)^32*z-450450*ax^16*ay^8*az^8*sin(a/2)^32*y-450450*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24*y+450450*ax^16*ay^9*az^7*sin(a/2)^32*z-270270*ax^16*ay^10*az^6*sin(a/2)^32*y-270270*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26*y+270270*ax^16*ay^11*az^5*sin(a/2)^32*z-90090*ax^16*ay^12*az^4*sin(a/2)^32*y-90090*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28*y+90090*ax^16*ay^13*az^3*sin(a/2)^32*z-12870*ax^16*ay^14*az^2*sin(a/2)^32*y-12870*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30*y+12870*ax^16*ay^15*az*sin(a/2)^32*z-102960*ax^16*az^2*cos(a/2)^14*sin(a/2)^18*y-360360*ax^16*az^4*cos(a/2)^12*sin(a/2)^20*y-720720*ax^16*az^6*cos(a/2)^10*sin(a/2)^22*y-900900*ax^16*az^8*cos(a/2)^8*sin(a/2)^24*y-720720*ax^16*az^10*cos(a/2)^6*sin(a/2)^26*y-360360*ax^16*az^12*cos(a/2)^4*sin(a/2)^28*y-102960*ax^16*az^14*cos(a/2)^2*sin(a/2)^30*y+12870*ax^17*ay*az^14*sin(a/2)^32*x+12870*ax^17*ay*cos(a/2)^14*sin(a/2)^18*x+90090*ax^17*ay^3*az^12*sin(a/2)^32*x+90090*ax^17*ay^3*cos(a/2)^12*sin(a/2)^20*x+270270*ax^17*ay^5*az^10*sin(a/2)^32*x+270270*ax^17*ay^5*cos(a/2)^10*sin(a/2)^22*x+450450*ax^17*ay^7*az^8*sin(a/2)^32*x+450450*ax^17*ay^7*cos(a/2)^8*sin(a/2)^24*x+450450*ax^17*ay^9*az^6*sin(a/2)^32*x+450450*ax^17*ay^9*cos(a/2)^6*sin(a/2)^26*x+270270*ax^17*ay^11*az^4*sin(a/2)^32*x+270270*ax^17*ay^11*cos(a/2)^4*sin(a/2)^28*x+90090*ax^17*ay^13*az^2*sin(a/2)^32*x+90090*ax^17*ay^13*cos(a/2)^2*sin(a/2)^30*x+10010*ax^18*ay*az^13*sin(a/2)^32*z-70070*ax^18*ay^2*az^12*sin(a/2)^32*y-70070*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20*y+60060*ax^18*ay^3*az^11*sin(a/2)^32*z-180180*ax^18*ay^4*az^10*sin(a/2)^32*y-180180*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22*y+150150*ax^18*ay^5*az^9*sin(a/2)^32*z-250250*ax^18*ay^6*az^8*sin(a/2)^32*y-250250*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24*y+200200*ax^18*ay^7*az^7*sin(a/2)^32*z-200200*ax^18*ay^8*az^6*sin(a/2)^32*y-200200*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26*y+150150*ax^18*ay^9*az^5*sin(a/2)^32*z-90090*ax^18*ay^10*az^4*sin(a/2)^32*y-90090*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28*y+60060*ax^18*ay^11*az^3*sin(a/2)^32*z-20020*ax^18*ay^12*az^2*sin(a/2)^32*y-20020*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30*y+10010*ax^18*ay^13*az*sin(a/2)^32*z-80080*ax^18*az^2*cos(a/2)^12*sin(a/2)^20*y-240240*ax^18*az^4*cos(a/2)^10*sin(a/2)^22*y-400400*ax^18*az^6*cos(a/2)^8*sin(a/2)^24*y-400400*ax^18*az^8*cos(a/2)^6*sin(a/2)^26*y-240240*ax^18*az^10*cos(a/2)^4*sin(a/2)^28*y-80080*ax^18*az^12*cos(a/2)^2*sin(a/2)^30*y+10010*ax^19*ay*az^12*sin(a/2)^32*x+10010*ax^19*ay*cos(a/2)^12*sin(a/2)^20*x+60060*ax^19*ay^3*az^10*sin(a/2)^32*x+60060*ax^19*ay^3*cos(a/2)^10*sin(a/2)^22*x+150150*ax^19*ay^5*az^8*sin(a/2)^32*x+150150*ax^19*ay^5*cos(a/2)^8*sin(a/2)^24*x+200200*ax^19*ay^7*az^6*sin(a/2)^32*x+200200*ax^19*ay^7*cos(a/2)^6*sin(a/2)^26*x+150150*ax^19*ay^9*az^4*sin(a/2)^32*x+150150*ax^19*ay^9*cos(a/2)^4*sin(a/2)^28*x+60060*ax^19*ay^11*az^2*sin(a/2)^32*x+60060*ax^19*ay^11*cos(a/2)^2*sin(a/2)^30*x+6006*ax^20*ay*az^11*sin(a/2)^32*z-42042*ax^20*ay^2*az^10*sin(a/2)^32*y-42042*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22*y+30030*ax^20*ay^3*az^9*sin(a/2)^32*z-90090*ax^20*ay^4*az^8*sin(a/2)^32*y-90090*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24*y+60060*ax^20*ay^5*az^7*sin(a/2)^32*z-100100*ax^20*ay^6*az^6*sin(a/2)^32*y-100100*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26*y+60060*ax^20*ay^7*az^5*sin(a/2)^32*z-60060*ax^20*ay^8*az^4*sin(a/2)^32*y-60060*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28*y+30030*ax^20*ay^9*az^3*sin(a/2)^32*z-18018*ax^20*ay^10*az^2*sin(a/2)^32*y-18018*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30*y+6006*ax^20*ay^11*az*sin(a/2)^32*z-48048*ax^20*az^2*cos(a/2)^10*sin(a/2)^22*y-120120*ax^20*az^4*cos(a/2)^8*sin(a/2)^24*y-160160*ax^20*az^6*cos(a/2)^6*sin(a/2)^26*y-120120*ax^20*az^8*cos(a/2)^4*sin(a/2)^28*y-48048*ax^20*az^10*cos(a/2)^2*sin(a/2)^30*y+6006*ax^21*ay*az^10*sin(a/2)^32*x+6006*ax^21*ay*cos(a/2)^10*sin(a/2)^22*x+30030*ax^21*ay^3*az^8*sin(a/2)^32*x+30030*ax^21*ay^3*cos(a/2)^8*sin(a/2)^24*x+60060*ax^21*ay^5*az^6*sin(a/2)^32*x+60060*ax^21*ay^5*cos(a/2)^6*sin(a/2)^26*x+60060*ax^21*ay^7*az^4*sin(a/2)^32*x+60060*ax^21*ay^7*cos(a/2)^4*sin(a/2)^28*x+30030*ax^21*ay^9*az^2*sin(a/2)^32*x+30030*ax^21*ay^9*cos(a/2)^2*sin(a/2)^30*x+2730*ax^22*ay*az^9*sin(a/2)^32*z-19110*ax^22*ay^2*az^8*sin(a/2)^32*y-19110*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24*y+10920*ax^22*ay^3*az^7*sin(a/2)^32*z-32760*ax^22*ay^4*az^6*sin(a/2)^32*y-32760*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26*y+16380*ax^22*ay^5*az^5*sin(a/2)^32*z-27300*ax^22*ay^6*az^4*sin(a/2)^32*y-27300*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28*y+10920*ax^22*ay^7*az^3*sin(a/2)^32*z-10920*ax^22*ay^8*az^2*sin(a/2)^32*y-10920*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30*y+2730*ax^22*ay^9*az*sin(a/2)^32*z-21840*ax^22*az^2*cos(a/2)^8*sin(a/2)^24*y-43680*ax^22*az^4*cos(a/2)^6*sin(a/2)^26*y-43680*ax^22*az^6*cos(a/2)^4*sin(a/2)^28*y-21840*ax^22*az^8*cos(a/2)^2*sin(a/2)^30*y+2730*ax^23*ay*az^8*sin(a/2)^32*x+2730*ax^23*ay*cos(a/2)^8*sin(a/2)^24*x+10920*ax^23*ay^3*az^6*sin(a/2)^32*x+10920*ax^23*ay^3*cos(a/2)^6*sin(a/2)^26*x+16380*ax^23*ay^5*az^4*sin(a/2)^32*x+16380*ax^23*ay^5*cos(a/2)^4*sin(a/2)^28*x+10920*ax^23*ay^7*az^2*sin(a/2)^32*x+10920*ax^23*ay^7*cos(a/2)^2*sin(a/2)^30*x+910*ax^24*ay*az^7*sin(a/2)^32*z-6370*ax^24*ay^2*az^6*sin(a/2)^32*y-6370*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26*y+2730*ax^24*ay^3*az^5*sin(a/2)^32*z-8190*ax^24*ay^4*az^4*sin(a/2)^32*y-8190*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28*y+2730*ax^24*ay^5*az^3*sin(a/2)^32*z-4550*ax^24*ay^6*az^2*sin(a/2)^32*y-4550*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30*y+910*ax^24*ay^7*az*sin(a/2)^32*z-7280*ax^24*az^2*cos(a/2)^6*sin(a/2)^26*y-10920*ax^24*az^4*cos(a/2)^4*sin(a/2)^28*y-7280*ax^24*az^6*cos(a/2)^2*sin(a/2)^30*y+910*ax^25*ay*az^6*sin(a/2)^32*x+910*ax^25*ay*cos(a/2)^6*sin(a/2)^26*x+2730*ax^25*ay^3*az^4*sin(a/2)^32*x+2730*ax^25*ay^3*cos(a/2)^4*sin(a/2)^28*x+2730*ax^25*ay^5*az^2*sin(a/2)^32*x+2730*ax^25*ay^5*cos(a/2)^2*sin(a/2)^30*x+210*ax^26*ay*az^5*sin(a/2)^32*z-1470*ax^26*ay^2*az^4*sin(a/2)^32*y-1470*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28*y+420*ax^26*ay^3*az^3*sin(a/2)^32*z-1260*ax^26*ay^4*az^2*sin(a/2)^32*y-1260*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30*y+210*ax^26*ay^5*az*sin(a/2)^32*z-1680*ax^26*az^2*cos(a/2)^4*sin(a/2)^28*y-1680*ax^26*az^4*cos(a/2)^2*sin(a/2)^30*y+210*ax^27*ay*az^4*sin(a/2)^32*x+210*ax^27*ay*cos(a/2)^4*sin(a/2)^28*x+420*ax^27*ay^3*az^2*sin(a/2)^32*x+420*ax^27*ay^3*cos(a/2)^2*sin(a/2)^30*x+30*ax^28*ay*az^3*sin(a/2)^32*z-210*ax^28*ay^2*az^2*sin(a/2)^32*y-210*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30*y+30*ax^28*ay^3*az*sin(a/2)^32*z-240*ax^28*az^2*cos(a/2)^2*sin(a/2)^30*y+30*ax^29*ay*az^2*sin(a/2)^32*x+30*ax^29*ay*cos(a/2)^2*sin(a/2)^30*x+2*ax^30*ay*az*sin(a/2)^32*z+2*ay*az*cos(a/2)^30*sin(a/2)^2*z+30*ay*az^3*cos(a/2)^28*sin(a/2)^4*z+210*ay*az^5*cos(a/2)^26*sin(a/2)^6*z+910*ay*az^7*cos(a/2)^24*sin(a/2)^8*z+2730*ay*az^9*cos(a/2)^22*sin(a/2)^10*z+6006*ay*az^11*cos(a/2)^20*sin(a/2)^12*z+10010*ay*az^13*cos(a/2)^18*sin(a/2)^14*z+12870*ay*az^15*cos(a/2)^16*sin(a/2)^16*z+12870*ay*az^17*cos(a/2)^14*sin(a/2)^18*z+10010*ay*az^19*cos(a/2)^12*sin(a/2)^20*z+6006*ay*az^21*cos(a/2)^10*sin(a/2)^22*z+2730*ay*az^23*cos(a/2)^8*sin(a/2)^24*z+910*ay*az^25*cos(a/2)^6*sin(a/2)^26*z+210*ay*az^27*cos(a/2)^4*sin(a/2)^28*z+30*ay*az^29*cos(a/2)^2*sin(a/2)^30*z-210*ay^2*az^2*cos(a/2)^28*sin(a/2)^4*y-1470*ay^2*az^4*cos(a/2)^26*sin(a/2)^6*y-6370*ay^2*az^6*cos(a/2)^24*sin(a/2)^8*y-19110*ay^2*az^8*cos(a/2)^22*sin(a/2)^10*y-42042*ay^2*az^10*cos(a/2)^20*sin(a/2)^12*y-70070*ay^2*az^12*cos(a/2)^18*sin(a/2)^14*y-90090*ay^2*az^14*cos(a/2)^16*sin(a/2)^16*y-90090*ay^2*az^16*cos(a/2)^14*sin(a/2)^18*y-70070*ay^2*az^18*cos(a/2)^12*sin(a/2)^20*y-42042*ay^2*az^20*cos(a/2)^10*sin(a/2)^22*y-19110*ay^2*az^22*cos(a/2)^8*sin(a/2)^24*y-6370*ay^2*az^24*cos(a/2)^6*sin(a/2)^26*y-1470*ay^2*az^26*cos(a/2)^4*sin(a/2)^28*y-210*ay^2*az^28*cos(a/2)^2*sin(a/2)^30*y+30*ay^3*az*cos(a/2)^28*sin(a/2)^4*z+420*ay^3*az^3*cos(a/2)^26*sin(a/2)^6*z+2730*ay^3*az^5*cos(a/2)^24*sin(a/2)^8*z+10920*ay^3*az^7*cos(a/2)^22*sin(a/2)^10*z+30030*ay^3*az^9*cos(a/2)^20*sin(a/2)^12*z+60060*ay^3*az^11*cos(a/2)^18*sin(a/2)^14*z+90090*ay^3*az^13*cos(a/2)^16*sin(a/2)^16*z+102960*ay^3*az^15*cos(a/2)^14*sin(a/2)^18*z+90090*ay^3*az^17*cos(a/2)^12*sin(a/2)^20*z+60060*ay^3*az^19*cos(a/2)^10*sin(a/2)^22*z+30030*ay^3*az^21*cos(a/2)^8*sin(a/2)^24*z+10920*ay^3*az^23*cos(a/2)^6*sin(a/2)^26*z+2730*ay^3*az^25*cos(a/2)^4*sin(a/2)^28*z+420*ay^3*az^27*cos(a/2)^2*sin(a/2)^30*z-1260*ay^4*az^2*cos(a/2)^26*sin(a/2)^6*y-8190*ay^4*az^4*cos(a/2)^24*sin(a/2)^8*y-32760*ay^4*az^6*cos(a/2)^22*sin(a/2)^10*y-90090*ay^4*az^8*cos(a/2)^20*sin(a/2)^12*y-180180*ay^4*az^10*cos(a/2)^18*sin(a/2)^14*y-270270*ay^4*az^12*cos(a/2)^16*sin(a/2)^16*y-308880*ay^4*az^14*cos(a/2)^14*sin(a/2)^18*y-270270*ay^4*az^16*cos(a/2)^12*sin(a/2)^20*y-180180*ay^4*az^18*cos(a/2)^10*sin(a/2)^22*y-90090*ay^4*az^20*cos(a/2)^8*sin(a/2)^24*y-32760*ay^4*az^22*cos(a/2)^6*sin(a/2)^26*y-8190*ay^4*az^24*cos(a/2)^4*sin(a/2)^28*y-1260*ay^4*az^26*cos(a/2)^2*sin(a/2)^30*y+210*ay^5*az*cos(a/2)^26*sin(a/2)^6*z+2730*ay^5*az^3*cos(a/2)^24*sin(a/2)^8*z+16380*ay^5*az^5*cos(a/2)^22*sin(a/2)^10*z+60060*ay^5*az^7*cos(a/2)^20*sin(a/2)^12*z+150150*ay^5*az^9*cos(a/2)^18*sin(a/2)^14*z+270270*ay^5*az^11*cos(a/2)^16*sin(a/2)^16*z+360360*ay^5*az^13*cos(a/2)^14*sin(a/2)^18*z+360360*ay^5*az^15*cos(a/2)^12*sin(a/2)^20*z+270270*ay^5*az^17*cos(a/2)^10*sin(a/2)^22*z+150150*ay^5*az^19*cos(a/2)^8*sin(a/2)^24*z+60060*ay^5*az^21*cos(a/2)^6*sin(a/2)^26*z+16380*ay^5*az^23*cos(a/2)^4*sin(a/2)^28*z+2730*ay^5*az^25*cos(a/2)^2*sin(a/2)^30*z-4550*ay^6*az^2*cos(a/2)^24*sin(a/2)^8*y-27300*ay^6*az^4*cos(a/2)^22*sin(a/2)^10*y-100100*ay^6*az^6*cos(a/2)^20*sin(a/2)^12*y-250250*ay^6*az^8*cos(a/2)^18*sin(a/2)^14*y-450450*ay^6*az^10*cos(a/2)^16*sin(a/2)^16*y-600600*ay^6*az^12*cos(a/2)^14*sin(a/2)^18*y-600600*ay^6*az^14*cos(a/2)^12*sin(a/2)^20*y-450450*ay^6*az^16*cos(a/2)^10*sin(a/2)^22*y-250250*ay^6*az^18*cos(a/2)^8*sin(a/2)^24*y-100100*ay^6*az^20*cos(a/2)^6*sin(a/2)^26*y-27300*ay^6*az^22*cos(a/2)^4*sin(a/2)^28*y-4550*ay^6*az^24*cos(a/2)^2*sin(a/2)^30*y+910*ay^7*az*cos(a/2)^24*sin(a/2)^8*z+10920*ay^7*az^3*cos(a/2)^22*sin(a/2)^10*z+60060*ay^7*az^5*cos(a/2)^20*sin(a/2)^12*z+200200*ay^7*az^7*cos(a/2)^18*sin(a/2)^14*z+450450*ay^7*az^9*cos(a/2)^16*sin(a/2)^16*z+720720*ay^7*az^11*cos(a/2)^14*sin(a/2)^18*z+840840*ay^7*az^13*cos(a/2)^12*sin(a/2)^20*z+720720*ay^7*az^15*cos(a/2)^10*sin(a/2)^22*z+450450*ay^7*az^17*cos(a/2)^8*sin(a/2)^24*z+200200*ay^7*az^19*cos(a/2)^6*sin(a/2)^26*z+60060*ay^7*az^21*cos(a/2)^4*sin(a/2)^28*z+10920*ay^7*az^23*cos(a/2)^2*sin(a/2)^30*z-10920*ay^8*az^2*cos(a/2)^22*sin(a/2)^10*y-60060*ay^8*az^4*cos(a/2)^20*sin(a/2)^12*y-200200*ay^8*az^6*cos(a/2)^18*sin(a/2)^14*y-450450*ay^8*az^8*cos(a/2)^16*sin(a/2)^16*y-720720*ay^8*az^10*cos(a/2)^14*sin(a/2)^18*y-840840*ay^8*az^12*cos(a/2)^12*sin(a/2)^20*y-720720*ay^8*az^14*cos(a/2)^10*sin(a/2)^22*y-450450*ay^8*az^16*cos(a/2)^8*sin(a/2)^24*y-200200*ay^8*az^18*cos(a/2)^6*sin(a/2)^26*y-60060*ay^8*az^20*cos(a/2)^4*sin(a/2)^28*y-10920*ay^8*az^22*cos(a/2)^2*sin(a/2)^30*y+2730*ay^9*az*cos(a/2)^22*sin(a/2)^10*z+30030*ay^9*az^3*cos(a/2)^20*sin(a/2)^12*z+150150*ay^9*az^5*cos(a/2)^18*sin(a/2)^14*z+450450*ay^9*az^7*cos(a/2)^16*sin(a/2)^16*z+900900*ay^9*az^9*cos(a/2)^14*sin(a/2)^18*z+1261260*ay^9*az^11*cos(a/2)^12*sin(a/2)^20*z+1261260*ay^9*az^13*cos(a/2)^10*sin(a/2)^22*z+900900*ay^9*az^15*cos(a/2)^8*sin(a/2)^24*z+450450*ay^9*az^17*cos(a/2)^6*sin(a/2)^26*z+150150*ay^9*az^19*cos(a/2)^4*sin(a/2)^28*z+30030*ay^9*az^21*cos(a/2)^2*sin(a/2)^30*z-18018*ay^10*az^2*cos(a/2)^20*sin(a/2)^12*y-90090*ay^10*az^4*cos(a/2)^18*sin(a/2)^14*y-270270*ay^10*az^6*cos(a/2)^16*sin(a/2)^16*y-540540*ay^10*az^8*cos(a/2)^14*sin(a/2)^18*y-756756*ay^10*az^10*cos(a/2)^12*sin(a/2)^20*y-756756*ay^10*az^12*cos(a/2)^10*sin(a/2)^22*y-540540*ay^10*az^14*cos(a/2)^8*sin(a/2)^24*y-270270*ay^10*az^16*cos(a/2)^6*sin(a/2)^26*y-90090*ay^10*az^18*cos(a/2)^4*sin(a/2)^28*y-18018*ay^10*az^20*cos(a/2)^2*sin(a/2)^30*y+6006*ay^11*az*cos(a/2)^20*sin(a/2)^12*z+60060*ay^11*az^3*cos(a/2)^18*sin(a/2)^14*z+270270*ay^11*az^5*cos(a/2)^16*sin(a/2)^16*z+720720*ay^11*az^7*cos(a/2)^14*sin(a/2)^18*z+1261260*ay^11*az^9*cos(a/2)^12*sin(a/2)^20*z+1513512*ay^11*az^11*cos(a/2)^10*sin(a/2)^22*z+1261260*ay^11*az^13*cos(a/2)^8*sin(a/2)^24*z+720720*ay^11*az^15*cos(a/2)^6*sin(a/2)^26*z+270270*ay^11*az^17*cos(a/2)^4*sin(a/2)^28*z+60060*ay^11*az^19*cos(a/2)^2*sin(a/2)^30*z-20020*ay^12*az^2*cos(a/2)^18*sin(a/2)^14*y-90090*ay^12*az^4*cos(a/2)^16*sin(a/2)^16*y-240240*ay^12*az^6*cos(a/2)^14*sin(a/2)^18*y-420420*ay^12*az^8*cos(a/2)^12*sin(a/2)^20*y-504504*ay^12*az^10*cos(a/2)^10*sin(a/2)^22*y-420420*ay^12*az^12*cos(a/2)^8*sin(a/2)^24*y-240240*ay^12*az^14*cos(a/2)^6*sin(a/2)^26*y-90090*ay^12*az^16*cos(a/2)^4*sin(a/2)^28*y-20020*ay^12*az^18*cos(a/2)^2*sin(a/2)^30*y+10010*ay^13*az*cos(a/2)^18*sin(a/2)^14*z+90090*ay^13*az^3*cos(a/2)^16*sin(a/2)^16*z+360360*ay^13*az^5*cos(a/2)^14*sin(a/2)^18*z+840840*ay^13*az^7*cos(a/2)^12*sin(a/2)^20*z+1261260*ay^13*az^9*cos(a/2)^10*sin(a/2)^22*z+1261260*ay^13*az^11*cos(a/2)^8*sin(a/2)^24*z+840840*ay^13*az^13*cos(a/2)^6*sin(a/2)^26*z+360360*ay^13*az^15*cos(a/2)^4*sin(a/2)^28*z+90090*ay^13*az^17*cos(a/2)^2*sin(a/2)^30*z-12870*ay^14*az^2*cos(a/2)^16*sin(a/2)^16*y-51480*ay^14*az^4*cos(a/2)^14*sin(a/2)^18*y-120120*ay^14*az^6*cos(a/2)^12*sin(a/2)^20*y-180180*ay^14*az^8*cos(a/2)^10*sin(a/2)^22*y-180180*ay^14*az^10*cos(a/2)^8*sin(a/2)^24*y-120120*ay^14*az^12*cos(a/2)^6*sin(a/2)^26*y-51480*ay^14*az^14*cos(a/2)^4*sin(a/2)^28*y-12870*ay^14*az^16*cos(a/2)^2*sin(a/2)^30*y+12870*ay^15*az*cos(a/2)^16*sin(a/2)^16*z+102960*ay^15*az^3*cos(a/2)^14*sin(a/2)^18*z+360360*ay^15*az^5*cos(a/2)^12*sin(a/2)^20*z+720720*ay^15*az^7*cos(a/2)^10*sin(a/2)^22*z+900900*ay^15*az^9*cos(a/2)^8*sin(a/2)^24*z+720720*ay^15*az^11*cos(a/2)^6*sin(a/2)^26*z+360360*ay^15*az^13*cos(a/2)^4*sin(a/2)^28*z+102960*ay^15*az^15*cos(a/2)^2*sin(a/2)^30*z+12870*ay^17*az*cos(a/2)^14*sin(a/2)^18*z+90090*ay^17*az^3*cos(a/2)^12*sin(a/2)^20*z+270270*ay^17*az^5*cos(a/2)^10*sin(a/2)^22*z+450450*ay^17*az^7*cos(a/2)^8*sin(a/2)^24*z+450450*ay^17*az^9*cos(a/2)^6*sin(a/2)^26*z+270270*ay^17*az^11*cos(a/2)^4*sin(a/2)^28*z+90090*ay^17*az^13*cos(a/2)^2*sin(a/2)^30*z+10010*ay^18*az^2*cos(a/2)^12*sin(a/2)^20*y+30030*ay^18*az^4*cos(a/2)^10*sin(a/2)^22*y+50050*ay^18*az^6*cos(a/2)^8*sin(a/2)^24*y+50050*ay^18*az^8*cos(a/2)^6*sin(a/2)^26*y+30030*ay^18*az^10*cos(a/2)^4*sin(a/2)^28*y+10010*ay^18*az^12*cos(a/2)^2*sin(a/2)^30*y+10010*ay^19*az*cos(a/2)^12*sin(a/2)^20*z+60060*ay^19*az^3*cos(a/2)^10*sin(a/2)^22*z+150150*ay^19*az^5*cos(a/2)^8*sin(a/2)^24*z+200200*ay^19*az^7*cos(a/2)^6*sin(a/2)^26*z+150150*ay^19*az^9*cos(a/2)^4*sin(a/2)^28*z+60060*ay^19*az^11*cos(a/2)^2*sin(a/2)^30*z+12012*ay^20*az^2*cos(a/2)^10*sin(a/2)^22*y+30030*ay^20*az^4*cos(a/2)^8*sin(a/2)^24*y+40040*ay^20*az^6*cos(a/2)^6*sin(a/2)^26*y+30030*ay^20*az^8*cos(a/2)^4*sin(a/2)^28*y+12012*ay^20*az^10*cos(a/2)^2*sin(a/2)^30*y+6006*ay^21*az*cos(a/2)^10*sin(a/2)^22*z+30030*ay^21*az^3*cos(a/2)^8*sin(a/2)^24*z+60060*ay^21*az^5*cos(a/2)^6*sin(a/2)^26*z+60060*ay^21*az^7*cos(a/2)^4*sin(a/2)^28*z+30030*ay^21*az^9*cos(a/2)^2*sin(a/2)^30*z+8190*ay^22*az^2*cos(a/2)^8*sin(a/2)^24*y+16380*ay^22*az^4*cos(a/2)^6*sin(a/2)^26*y+16380*ay^22*az^6*cos(a/2)^4*sin(a/2)^28*y+8190*ay^22*az^8*cos(a/2)^2*sin(a/2)^30*y+2730*ay^23*az*cos(a/2)^8*sin(a/2)^24*z+10920*ay^23*az^3*cos(a/2)^6*sin(a/2)^26*z+16380*ay^23*az^5*cos(a/2)^4*sin(a/2)^28*z+10920*ay^23*az^7*cos(a/2)^2*sin(a/2)^30*z+3640*ay^24*az^2*cos(a/2)^6*sin(a/2)^26*y+5460*ay^24*az^4*cos(a/2)^4*sin(a/2)^28*y+3640*ay^24*az^6*cos(a/2)^2*sin(a/2)^30*y+910*ay^25*az*cos(a/2)^6*sin(a/2)^26*z+2730*ay^25*az^3*cos(a/2)^4*sin(a/2)^28*z+2730*ay^25*az^5*cos(a/2)^2*sin(a/2)^30*z+1050*ay^26*az^2*cos(a/2)^4*sin(a/2)^28*y+1050*ay^26*az^4*cos(a/2)^2*sin(a/2)^30*y+210*ay^27*az*cos(a/2)^4*sin(a/2)^28*z+420*ay^27*az^3*cos(a/2)^2*sin(a/2)^30*z+180*ay^28*az^2*cos(a/2)^2*sin(a/2)^30*y+30*ay^29*az*cos(a/2)^2*sin(a/2)^30*z+30*ax*ay*az^2*cos(a/2)^28*sin(a/2)^4*x+210*ax*ay*az^4*cos(a/2)^26*sin(a/2)^6*x+910*ax*ay*az^6*cos(a/2)^24*sin(a/2)^8*x+2730*ax*ay*az^8*cos(a/2)^22*sin(a/2)^10*x+6006*ax*ay*az^10*cos(a/2)^20*sin(a/2)^12*x+10010*ax*ay*az^12*cos(a/2)^18*sin(a/2)^14*x+12870*ax*ay*az^14*cos(a/2)^16*sin(a/2)^16*x+12870*ax*ay*az^16*cos(a/2)^14*sin(a/2)^18*x+10010*ax*ay*az^18*cos(a/2)^12*sin(a/2)^20*x+6006*ax*ay*az^20*cos(a/2)^10*sin(a/2)^22*x+2730*ax*ay*az^22*cos(a/2)^8*sin(a/2)^24*x+910*ax*ay*az^24*cos(a/2)^6*sin(a/2)^26*x+210*ax*ay*az^26*cos(a/2)^4*sin(a/2)^28*x+30*ax*ay*az^28*cos(a/2)^2*sin(a/2)^30*x+420*ax*ay^3*az^2*cos(a/2)^26*sin(a/2)^6*x+2730*ax*ay^3*az^4*cos(a/2)^24*sin(a/2)^8*x+10920*ax*ay^3*az^6*cos(a/2)^22*sin(a/2)^10*x+30030*ax*ay^3*az^8*cos(a/2)^20*sin(a/2)^12*x+60060*ax*ay^3*az^10*cos(a/2)^18*sin(a/2)^14*x+90090*ax*ay^3*az^12*cos(a/2)^16*sin(a/2)^16*x+102960*ax*ay^3*az^14*cos(a/2)^14*sin(a/2)^18*x+90090*ax*ay^3*az^16*cos(a/2)^12*sin(a/2)^20*x+60060*ax*ay^3*az^18*cos(a/2)^10*sin(a/2)^22*x+30030*ax*ay^3*az^20*cos(a/2)^8*sin(a/2)^24*x+10920*ax*ay^3*az^22*cos(a/2)^6*sin(a/2)^26*x+2730*ax*ay^3*az^24*cos(a/2)^4*sin(a/2)^28*x+420*ax*ay^3*az^26*cos(a/2)^2*sin(a/2)^30*x+2730*ax*ay^5*az^2*cos(a/2)^24*sin(a/2)^8*x+16380*ax*ay^5*az^4*cos(a/2)^22*sin(a/2)^10*x+60060*ax*ay^5*az^6*cos(a/2)^20*sin(a/2)^12*x+150150*ax*ay^5*az^8*cos(a/2)^18*sin(a/2)^14*x+270270*ax*ay^5*az^10*cos(a/2)^16*sin(a/2)^16*x+360360*ax*ay^5*az^12*cos(a/2)^14*sin(a/2)^18*x+360360*ax*ay^5*az^14*cos(a/2)^12*sin(a/2)^20*x+270270*ax*ay^5*az^16*cos(a/2)^10*sin(a/2)^22*x+150150*ax*ay^5*az^18*cos(a/2)^8*sin(a/2)^24*x+60060*ax*ay^5*az^20*cos(a/2)^6*sin(a/2)^26*x+16380*ax*ay^5*az^22*cos(a/2)^4*sin(a/2)^28*x+2730*ax*ay^5*az^24*cos(a/2)^2*sin(a/2)^30*x+10920*ax*ay^7*az^2*cos(a/2)^22*sin(a/2)^10*x+60060*ax*ay^7*az^4*cos(a/2)^20*sin(a/2)^12*x+200200*ax*ay^7*az^6*cos(a/2)^18*sin(a/2)^14*x+450450*ax*ay^7*az^8*cos(a/2)^16*sin(a/2)^16*x+720720*ax*ay^7*az^10*cos(a/2)^14*sin(a/2)^18*x+840840*ax*ay^7*az^12*cos(a/2)^12*sin(a/2)^20*x+720720*ax*ay^7*az^14*cos(a/2)^10*sin(a/2)^22*x+450450*ax*ay^7*az^16*cos(a/2)^8*sin(a/2)^24*x+200200*ax*ay^7*az^18*cos(a/2)^6*sin(a/2)^26*x+60060*ax*ay^7*az^20*cos(a/2)^4*sin(a/2)^28*x+10920*ax*ay^7*az^22*cos(a/2)^2*sin(a/2)^30*x+30030*ax*ay^9*az^2*cos(a/2)^20*sin(a/2)^12*x+150150*ax*ay^9*az^4*cos(a/2)^18*sin(a/2)^14*x+450450*ax*ay^9*az^6*cos(a/2)^16*sin(a/2)^16*x+900900*ax*ay^9*az^8*cos(a/2)^14*sin(a/2)^18*x+1261260*ax*ay^9*az^10*cos(a/2)^12*sin(a/2)^20*x+1261260*ax*ay^9*az^12*cos(a/2)^10*sin(a/2)^22*x+900900*ax*ay^9*az^14*cos(a/2)^8*sin(a/2)^24*x+450450*ax*ay^9*az^16*cos(a/2)^6*sin(a/2)^26*x+150150*ax*ay^9*az^18*cos(a/2)^4*sin(a/2)^28*x+30030*ax*ay^9*az^20*cos(a/2)^2*sin(a/2)^30*x+60060*ax*ay^11*az^2*cos(a/2)^18*sin(a/2)^14*x+270270*ax*ay^11*az^4*cos(a/2)^16*sin(a/2)^16*x+720720*ax*ay^11*az^6*cos(a/2)^14*sin(a/2)^18*x+1261260*ax*ay^11*az^8*cos(a/2)^12*sin(a/2)^20*x+1513512*ax*ay^11*az^10*cos(a/2)^10*sin(a/2)^22*x+1261260*ax*ay^11*az^12*cos(a/2)^8*sin(a/2)^24*x+720720*ax*ay^11*az^14*cos(a/2)^6*sin(a/2)^26*x+270270*ax*ay^11*az^16*cos(a/2)^4*sin(a/2)^28*x+60060*ax*ay^11*az^18*cos(a/2)^2*sin(a/2)^30*x+90090*ax*ay^13*az^2*cos(a/2)^16*sin(a/2)^16*x+360360*ax*ay^13*az^4*cos(a/2)^14*sin(a/2)^18*x+840840*ax*ay^13*az^6*cos(a/2)^12*sin(a/2)^20*x+1261260*ax*ay^13*az^8*cos(a/2)^10*sin(a/2)^22*x+1261260*ax*ay^13*az^10*cos(a/2)^8*sin(a/2)^24*x+840840*ax*ay^13*az^12*cos(a/2)^6*sin(a/2)^26*x+360360*ax*ay^13*az^14*cos(a/2)^4*sin(a/2)^28*x+90090*ax*ay^13*az^16*cos(a/2)^2*sin(a/2)^30*x+102960*ax*ay^15*az^2*cos(a/2)^14*sin(a/2)^18*x+360360*ax*ay^15*az^4*cos(a/2)^12*sin(a/2)^20*x+720720*ax*ay^15*az^6*cos(a/2)^10*sin(a/2)^22*x+900900*ax*ay^15*az^8*cos(a/2)^8*sin(a/2)^24*x+720720*ax*ay^15*az^10*cos(a/2)^6*sin(a/2)^26*x+360360*ax*ay^15*az^12*cos(a/2)^4*sin(a/2)^28*x+102960*ax*ay^15*az^14*cos(a/2)^2*sin(a/2)^30*x+90090*ax*ay^17*az^2*cos(a/2)^12*sin(a/2)^20*x+270270*ax*ay^17*az^4*cos(a/2)^10*sin(a/2)^22*x+450450*ax*ay^17*az^6*cos(a/2)^8*sin(a/2)^24*x+450450*ax*ay^17*az^8*cos(a/2)^6*sin(a/2)^26*x+270270*ax*ay^17*az^10*cos(a/2)^4*sin(a/2)^28*x+90090*ax*ay^17*az^12*cos(a/2)^2*sin(a/2)^30*x+60060*ax*ay^19*az^2*cos(a/2)^10*sin(a/2)^22*x+150150*ax*ay^19*az^4*cos(a/2)^8*sin(a/2)^24*x+200200*ax*ay^19*az^6*cos(a/2)^6*sin(a/2)^26*x+150150*ax*ay^19*az^8*cos(a/2)^4*sin(a/2)^28*x+60060*ax*ay^19*az^10*cos(a/2)^2*sin(a/2)^30*x+30030*ax*ay^21*az^2*cos(a/2)^8*sin(a/2)^24*x+60060*ax*ay^21*az^4*cos(a/2)^6*sin(a/2)^26*x+60060*ax*ay^21*az^6*cos(a/2)^4*sin(a/2)^28*x+30030*ax*ay^21*az^8*cos(a/2)^2*sin(a/2)^30*x+10920*ax*ay^23*az^2*cos(a/2)^6*sin(a/2)^26*x+16380*ax*ay^23*az^4*cos(a/2)^4*sin(a/2)^28*x+10920*ax*ay^23*az^6*cos(a/2)^2*sin(a/2)^30*x+2730*ax*ay^25*az^2*cos(a/2)^4*sin(a/2)^28*x+2730*ax*ay^25*az^4*cos(a/2)^2*sin(a/2)^30*x+420*ax*ay^27*az^2*cos(a/2)^2*sin(a/2)^30*x+30*ax^2*ay*az*cos(a/2)^28*sin(a/2)^4*z+420*ax^2*ay*az^3*cos(a/2)^26*sin(a/2)^6*z+2730*ax^2*ay*az^5*cos(a/2)^24*sin(a/2)^8*z+10920*ax^2*ay*az^7*cos(a/2)^22*sin(a/2)^10*z+30030*ax^2*ay*az^9*cos(a/2)^20*sin(a/2)^12*z+60060*ax^2*ay*az^11*cos(a/2)^18*sin(a/2)^14*z+90090*ax^2*ay*az^13*cos(a/2)^16*sin(a/2)^16*z+102960*ax^2*ay*az^15*cos(a/2)^14*sin(a/2)^18*z+90090*ax^2*ay*az^17*cos(a/2)^12*sin(a/2)^20*z+60060*ax^2*ay*az^19*cos(a/2)^10*sin(a/2)^22*z+30030*ax^2*ay*az^21*cos(a/2)^8*sin(a/2)^24*z+10920*ax^2*ay*az^23*cos(a/2)^6*sin(a/2)^26*z+2730*ax^2*ay*az^25*cos(a/2)^4*sin(a/2)^28*z+420*ax^2*ay*az^27*cos(a/2)^2*sin(a/2)^30*z-2940*ax^2*ay^2*az^2*cos(a/2)^26*sin(a/2)^6*y-19110*ax^2*ay^2*az^4*cos(a/2)^24*sin(a/2)^8*y-76440*ax^2*ay^2*az^6*cos(a/2)^22*sin(a/2)^10*y-210210*ax^2*ay^2*az^8*cos(a/2)^20*sin(a/2)^12*y-420420*ax^2*ay^2*az^10*cos(a/2)^18*sin(a/2)^14*y-630630*ax^2*ay^2*az^12*cos(a/2)^16*sin(a/2)^16*y-720720*ax^2*ay^2*az^14*cos(a/2)^14*sin(a/2)^18*y-630630*ax^2*ay^2*az^16*cos(a/2)^12*sin(a/2)^20*y-420420*ax^2*ay^2*az^18*cos(a/2)^10*sin(a/2)^22*y-210210*ax^2*ay^2*az^20*cos(a/2)^8*sin(a/2)^24*y-76440*ax^2*ay^2*az^22*cos(a/2)^6*sin(a/2)^26*y-19110*ax^2*ay^2*az^24*cos(a/2)^4*sin(a/2)^28*y-2940*ax^2*ay^2*az^26*cos(a/2)^2*sin(a/2)^30*y+420*ax^2*ay^3*az*cos(a/2)^26*sin(a/2)^6*z+5460*ax^2*ay^3*az^3*cos(a/2)^24*sin(a/2)^8*z+32760*ax^2*ay^3*az^5*cos(a/2)^22*sin(a/2)^10*z+120120*ax^2*ay^3*az^7*cos(a/2)^20*sin(a/2)^12*z+300300*ax^2*ay^3*az^9*cos(a/2)^18*sin(a/2)^14*z+540540*ax^2*ay^3*az^11*cos(a/2)^16*sin(a/2)^16*z+720720*ax^2*ay^3*az^13*cos(a/2)^14*sin(a/2)^18*z+720720*ax^2*ay^3*az^15*cos(a/2)^12*sin(a/2)^20*z+540540*ax^2*ay^3*az^17*cos(a/2)^10*sin(a/2)^22*z+300300*ax^2*ay^3*az^19*cos(a/2)^8*sin(a/2)^24*z+120120*ax^2*ay^3*az^21*cos(a/2)^6*sin(a/2)^26*z+32760*ax^2*ay^3*az^23*cos(a/2)^4*sin(a/2)^28*z+5460*ax^2*ay^3*az^25*cos(a/2)^2*sin(a/2)^30*z-16380*ax^2*ay^4*az^2*cos(a/2)^24*sin(a/2)^8*y-98280*ax^2*ay^4*az^4*cos(a/2)^22*sin(a/2)^10*y-360360*ax^2*ay^4*az^6*cos(a/2)^20*sin(a/2)^12*y-900900*ax^2*ay^4*az^8*cos(a/2)^18*sin(a/2)^14*y-1621620*ax^2*ay^4*az^10*cos(a/2)^16*sin(a/2)^16*y-2162160*ax^2*ay^4*az^12*cos(a/2)^14*sin(a/2)^18*y-2162160*ax^2*ay^4*az^14*cos(a/2)^12*sin(a/2)^20*y-1621620*ax^2*ay^4*az^16*cos(a/2)^10*sin(a/2)^22*y-900900*ax^2*ay^4*az^18*cos(a/2)^8*sin(a/2)^24*y-360360*ax^2*ay^4*az^20*cos(a/2)^6*sin(a/2)^26*y-98280*ax^2*ay^4*az^22*cos(a/2)^4*sin(a/2)^28*y-16380*ax^2*ay^4*az^24*cos(a/2)^2*sin(a/2)^30*y+2730*ax^2*ay^5*az*cos(a/2)^24*sin(a/2)^8*z+32760*ax^2*ay^5*az^3*cos(a/2)^22*sin(a/2)^10*z+180180*ax^2*ay^5*az^5*cos(a/2)^20*sin(a/2)^12*z+600600*ax^2*ay^5*az^7*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^2*ay^5*az^9*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^2*ay^5*az^11*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^2*ay^5*az^13*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^2*ay^5*az^15*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^2*ay^5*az^17*cos(a/2)^8*sin(a/2)^24*z+600600*ax^2*ay^5*az^19*cos(a/2)^6*sin(a/2)^26*z+180180*ax^2*ay^5*az^21*cos(a/2)^4*sin(a/2)^28*z+32760*ax^2*ay^5*az^23*cos(a/2)^2*sin(a/2)^30*z-54600*ax^2*ay^6*az^2*cos(a/2)^22*sin(a/2)^10*y-300300*ax^2*ay^6*az^4*cos(a/2)^20*sin(a/2)^12*y-1001000*ax^2*ay^6*az^6*cos(a/2)^18*sin(a/2)^14*y-2252250*ax^2*ay^6*az^8*cos(a/2)^16*sin(a/2)^16*y-3603600*ax^2*ay^6*az^10*cos(a/2)^14*sin(a/2)^18*y-4204200*ax^2*ay^6*az^12*cos(a/2)^12*sin(a/2)^20*y-3603600*ax^2*ay^6*az^14*cos(a/2)^10*sin(a/2)^22*y-2252250*ax^2*ay^6*az^16*cos(a/2)^8*sin(a/2)^24*y-1001000*ax^2*ay^6*az^18*cos(a/2)^6*sin(a/2)^26*y-300300*ax^2*ay^6*az^20*cos(a/2)^4*sin(a/2)^28*y-54600*ax^2*ay^6*az^22*cos(a/2)^2*sin(a/2)^30*y+10920*ax^2*ay^7*az*cos(a/2)^22*sin(a/2)^10*z+120120*ax^2*ay^7*az^3*cos(a/2)^20*sin(a/2)^12*z+600600*ax^2*ay^7*az^5*cos(a/2)^18*sin(a/2)^14*z+1801800*ax^2*ay^7*az^7*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^2*ay^7*az^9*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^2*ay^7*az^11*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^2*ay^7*az^13*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^2*ay^7*az^15*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^2*ay^7*az^17*cos(a/2)^6*sin(a/2)^26*z+600600*ax^2*ay^7*az^19*cos(a/2)^4*sin(a/2)^28*z+120120*ax^2*ay^7*az^21*cos(a/2)^2*sin(a/2)^30*z-120120*ax^2*ay^8*az^2*cos(a/2)^20*sin(a/2)^12*y-600600*ax^2*ay^8*az^4*cos(a/2)^18*sin(a/2)^14*y-1801800*ax^2*ay^8*az^6*cos(a/2)^16*sin(a/2)^16*y-3603600*ax^2*ay^8*az^8*cos(a/2)^14*sin(a/2)^18*y-5045040*ax^2*ay^8*az^10*cos(a/2)^12*sin(a/2)^20*y-5045040*ax^2*ay^8*az^12*cos(a/2)^10*sin(a/2)^22*y-3603600*ax^2*ay^8*az^14*cos(a/2)^8*sin(a/2)^24*y-1801800*ax^2*ay^8*az^16*cos(a/2)^6*sin(a/2)^26*y-600600*ax^2*ay^8*az^18*cos(a/2)^4*sin(a/2)^28*y-120120*ax^2*ay^8*az^20*cos(a/2)^2*sin(a/2)^30*y+30030*ax^2*ay^9*az*cos(a/2)^20*sin(a/2)^12*z+300300*ax^2*ay^9*az^3*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^2*ay^9*az^5*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^2*ay^9*az^7*cos(a/2)^14*sin(a/2)^18*z+6306300*ax^2*ay^9*az^9*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^2*ay^9*az^11*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^2*ay^9*az^13*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^2*ay^9*az^15*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^2*ay^9*az^17*cos(a/2)^4*sin(a/2)^28*z+300300*ax^2*ay^9*az^19*cos(a/2)^2*sin(a/2)^30*z-180180*ax^2*ay^10*az^2*cos(a/2)^18*sin(a/2)^14*y-810810*ax^2*ay^10*az^4*cos(a/2)^16*sin(a/2)^16*y-2162160*ax^2*ay^10*az^6*cos(a/2)^14*sin(a/2)^18*y-3783780*ax^2*ay^10*az^8*cos(a/2)^12*sin(a/2)^20*y-4540536*ax^2*ay^10*az^10*cos(a/2)^10*sin(a/2)^22*y-3783780*ax^2*ay^10*az^12*cos(a/2)^8*sin(a/2)^24*y-2162160*ax^2*ay^10*az^14*cos(a/2)^6*sin(a/2)^26*y-810810*ax^2*ay^10*az^16*cos(a/2)^4*sin(a/2)^28*y-180180*ax^2*ay^10*az^18*cos(a/2)^2*sin(a/2)^30*y+60060*ax^2*ay^11*az*cos(a/2)^18*sin(a/2)^14*z+540540*ax^2*ay^11*az^3*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^2*ay^11*az^5*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^2*ay^11*az^7*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^2*ay^11*az^9*cos(a/2)^10*sin(a/2)^22*z+7567560*ax^2*ay^11*az^11*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^2*ay^11*az^13*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^2*ay^11*az^15*cos(a/2)^4*sin(a/2)^28*z+540540*ax^2*ay^11*az^17*cos(a/2)^2*sin(a/2)^30*z-180180*ax^2*ay^12*az^2*cos(a/2)^16*sin(a/2)^16*y-720720*ax^2*ay^12*az^4*cos(a/2)^14*sin(a/2)^18*y-1681680*ax^2*ay^12*az^6*cos(a/2)^12*sin(a/2)^20*y-2522520*ax^2*ay^12*az^8*cos(a/2)^10*sin(a/2)^22*y-2522520*ax^2*ay^12*az^10*cos(a/2)^8*sin(a/2)^24*y-1681680*ax^2*ay^12*az^12*cos(a/2)^6*sin(a/2)^26*y-720720*ax^2*ay^12*az^14*cos(a/2)^4*sin(a/2)^28*y-180180*ax^2*ay^12*az^16*cos(a/2)^2*sin(a/2)^30*y+90090*ax^2*ay^13*az*cos(a/2)^16*sin(a/2)^16*z+720720*ax^2*ay^13*az^3*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^2*ay^13*az^5*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^2*ay^13*az^7*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^2*ay^13*az^9*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^2*ay^13*az^11*cos(a/2)^6*sin(a/2)^26*z+2522520*ax^2*ay^13*az^13*cos(a/2)^4*sin(a/2)^28*z+720720*ax^2*ay^13*az^15*cos(a/2)^2*sin(a/2)^30*z-102960*ax^2*ay^14*az^2*cos(a/2)^14*sin(a/2)^18*y-360360*ax^2*ay^14*az^4*cos(a/2)^12*sin(a/2)^20*y-720720*ax^2*ay^14*az^6*cos(a/2)^10*sin(a/2)^22*y-900900*ax^2*ay^14*az^8*cos(a/2)^8*sin(a/2)^24*y-720720*ax^2*ay^14*az^10*cos(a/2)^6*sin(a/2)^26*y-360360*ax^2*ay^14*az^12*cos(a/2)^4*sin(a/2)^28*y-102960*ax^2*ay^14*az^14*cos(a/2)^2*sin(a/2)^30*y+102960*ax^2*ay^15*az*cos(a/2)^14*sin(a/2)^18*z+720720*ax^2*ay^15*az^3*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^2*ay^15*az^5*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^2*ay^15*az^7*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^2*ay^15*az^9*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^2*ay^15*az^11*cos(a/2)^4*sin(a/2)^28*z+720720*ax^2*ay^15*az^13*cos(a/2)^2*sin(a/2)^30*z+90090*ax^2*ay^17*az*cos(a/2)^12*sin(a/2)^20*z+540540*ax^2*ay^17*az^3*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^2*ay^17*az^5*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^2*ay^17*az^7*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^2*ay^17*az^9*cos(a/2)^4*sin(a/2)^28*z+540540*ax^2*ay^17*az^11*cos(a/2)^2*sin(a/2)^30*z+60060*ax^2*ay^18*az^2*cos(a/2)^10*sin(a/2)^22*y+150150*ax^2*ay^18*az^4*cos(a/2)^8*sin(a/2)^24*y+200200*ax^2*ay^18*az^6*cos(a/2)^6*sin(a/2)^26*y+150150*ax^2*ay^18*az^8*cos(a/2)^4*sin(a/2)^28*y+60060*ax^2*ay^18*az^10*cos(a/2)^2*sin(a/2)^30*y+60060*ax^2*ay^19*az*cos(a/2)^10*sin(a/2)^22*z+300300*ax^2*ay^19*az^3*cos(a/2)^8*sin(a/2)^24*z+600600*ax^2*ay^19*az^5*cos(a/2)^6*sin(a/2)^26*z+600600*ax^2*ay^19*az^7*cos(a/2)^4*sin(a/2)^28*z+300300*ax^2*ay^19*az^9*cos(a/2)^2*sin(a/2)^30*z+60060*ax^2*ay^20*az^2*cos(a/2)^8*sin(a/2)^24*y+120120*ax^2*ay^20*az^4*cos(a/2)^6*sin(a/2)^26*y+120120*ax^2*ay^20*az^6*cos(a/2)^4*sin(a/2)^28*y+60060*ax^2*ay^20*az^8*cos(a/2)^2*sin(a/2)^30*y+30030*ax^2*ay^21*az*cos(a/2)^8*sin(a/2)^24*z+120120*ax^2*ay^21*az^3*cos(a/2)^6*sin(a/2)^26*z+180180*ax^2*ay^21*az^5*cos(a/2)^4*sin(a/2)^28*z+120120*ax^2*ay^21*az^7*cos(a/2)^2*sin(a/2)^30*z+32760*ax^2*ay^22*az^2*cos(a/2)^6*sin(a/2)^26*y+49140*ax^2*ay^22*az^4*cos(a/2)^4*sin(a/2)^28*y+32760*ax^2*ay^22*az^6*cos(a/2)^2*sin(a/2)^30*y+10920*ax^2*ay^23*az*cos(a/2)^6*sin(a/2)^26*z+32760*ax^2*ay^23*az^3*cos(a/2)^4*sin(a/2)^28*z+32760*ax^2*ay^23*az^5*cos(a/2)^2*sin(a/2)^30*z+10920*ax^2*ay^24*az^2*cos(a/2)^4*sin(a/2)^28*y+10920*ax^2*ay^24*az^4*cos(a/2)^2*sin(a/2)^30*y+2730*ax^2*ay^25*az*cos(a/2)^4*sin(a/2)^28*z+5460*ax^2*ay^25*az^3*cos(a/2)^2*sin(a/2)^30*z+2100*ax^2*ay^26*az^2*cos(a/2)^2*sin(a/2)^30*y+420*ax^2*ay^27*az*cos(a/2)^2*sin(a/2)^30*z+420*ax^3*ay*az^2*cos(a/2)^26*sin(a/2)^6*x+2730*ax^3*ay*az^4*cos(a/2)^24*sin(a/2)^8*x+10920*ax^3*ay*az^6*cos(a/2)^22*sin(a/2)^10*x+30030*ax^3*ay*az^8*cos(a/2)^20*sin(a/2)^12*x+60060*ax^3*ay*az^10*cos(a/2)^18*sin(a/2)^14*x+90090*ax^3*ay*az^12*cos(a/2)^16*sin(a/2)^16*x+102960*ax^3*ay*az^14*cos(a/2)^14*sin(a/2)^18*x+90090*ax^3*ay*az^16*cos(a/2)^12*sin(a/2)^20*x+60060*ax^3*ay*az^18*cos(a/2)^10*sin(a/2)^22*x+30030*ax^3*ay*az^20*cos(a/2)^8*sin(a/2)^24*x+10920*ax^3*ay*az^22*cos(a/2)^6*sin(a/2)^26*x+2730*ax^3*ay*az^24*cos(a/2)^4*sin(a/2)^28*x+420*ax^3*ay*az^26*cos(a/2)^2*sin(a/2)^30*x+5460*ax^3*ay^3*az^2*cos(a/2)^24*sin(a/2)^8*x+32760*ax^3*ay^3*az^4*cos(a/2)^22*sin(a/2)^10*x+120120*ax^3*ay^3*az^6*cos(a/2)^20*sin(a/2)^12*x+300300*ax^3*ay^3*az^8*cos(a/2)^18*sin(a/2)^14*x+540540*ax^3*ay^3*az^10*cos(a/2)^16*sin(a/2)^16*x+720720*ax^3*ay^3*az^12*cos(a/2)^14*sin(a/2)^18*x+720720*ax^3*ay^3*az^14*cos(a/2)^12*sin(a/2)^20*x+540540*ax^3*ay^3*az^16*cos(a/2)^10*sin(a/2)^22*x+300300*ax^3*ay^3*az^18*cos(a/2)^8*sin(a/2)^24*x+120120*ax^3*ay^3*az^20*cos(a/2)^6*sin(a/2)^26*x+32760*ax^3*ay^3*az^22*cos(a/2)^4*sin(a/2)^28*x+5460*ax^3*ay^3*az^24*cos(a/2)^2*sin(a/2)^30*x+32760*ax^3*ay^5*az^2*cos(a/2)^22*sin(a/2)^10*x+180180*ax^3*ay^5*az^4*cos(a/2)^20*sin(a/2)^12*x+600600*ax^3*ay^5*az^6*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^3*ay^5*az^8*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^3*ay^5*az^10*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^3*ay^5*az^12*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^3*ay^5*az^14*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^3*ay^5*az^16*cos(a/2)^8*sin(a/2)^24*x+600600*ax^3*ay^5*az^18*cos(a/2)^6*sin(a/2)^26*x+180180*ax^3*ay^5*az^20*cos(a/2)^4*sin(a/2)^28*x+32760*ax^3*ay^5*az^22*cos(a/2)^2*sin(a/2)^30*x+120120*ax^3*ay^7*az^2*cos(a/2)^20*sin(a/2)^12*x+600600*ax^3*ay^7*az^4*cos(a/2)^18*sin(a/2)^14*x+1801800*ax^3*ay^7*az^6*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^3*ay^7*az^8*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^3*ay^7*az^10*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^3*ay^7*az^12*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^3*ay^7*az^14*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^3*ay^7*az^16*cos(a/2)^6*sin(a/2)^26*x+600600*ax^3*ay^7*az^18*cos(a/2)^4*sin(a/2)^28*x+120120*ax^3*ay^7*az^20*cos(a/2)^2*sin(a/2)^30*x+300300*ax^3*ay^9*az^2*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^3*ay^9*az^4*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^3*ay^9*az^6*cos(a/2)^14*sin(a/2)^18*x+6306300*ax^3*ay^9*az^8*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^3*ay^9*az^10*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^3*ay^9*az^12*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^3*ay^9*az^14*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^3*ay^9*az^16*cos(a/2)^4*sin(a/2)^28*x+300300*ax^3*ay^9*az^18*cos(a/2)^2*sin(a/2)^30*x+540540*ax^3*ay^11*az^2*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^3*ay^11*az^4*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^3*ay^11*az^6*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^3*ay^11*az^8*cos(a/2)^10*sin(a/2)^22*x+7567560*ax^3*ay^11*az^10*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^3*ay^11*az^12*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^3*ay^11*az^14*cos(a/2)^4*sin(a/2)^28*x+540540*ax^3*ay^11*az^16*cos(a/2)^2*sin(a/2)^30*x+720720*ax^3*ay^13*az^2*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^3*ay^13*az^4*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^3*ay^13*az^6*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^3*ay^13*az^8*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^3*ay^13*az^10*cos(a/2)^6*sin(a/2)^26*x+2522520*ax^3*ay^13*az^12*cos(a/2)^4*sin(a/2)^28*x+720720*ax^3*ay^13*az^14*cos(a/2)^2*sin(a/2)^30*x+720720*ax^3*ay^15*az^2*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^3*ay^15*az^4*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^3*ay^15*az^6*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^3*ay^15*az^8*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^3*ay^15*az^10*cos(a/2)^4*sin(a/2)^28*x+720720*ax^3*ay^15*az^12*cos(a/2)^2*sin(a/2)^30*x+540540*ax^3*ay^17*az^2*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^3*ay^17*az^4*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^3*ay^17*az^6*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^3*ay^17*az^8*cos(a/2)^4*sin(a/2)^28*x+540540*ax^3*ay^17*az^10*cos(a/2)^2*sin(a/2)^30*x+300300*ax^3*ay^19*az^2*cos(a/2)^8*sin(a/2)^24*x+600600*ax^3*ay^19*az^4*cos(a/2)^6*sin(a/2)^26*x+600600*ax^3*ay^19*az^6*cos(a/2)^4*sin(a/2)^28*x+300300*ax^3*ay^19*az^8*cos(a/2)^2*sin(a/2)^30*x+120120*ax^3*ay^21*az^2*cos(a/2)^6*sin(a/2)^26*x+180180*ax^3*ay^21*az^4*cos(a/2)^4*sin(a/2)^28*x+120120*ax^3*ay^21*az^6*cos(a/2)^2*sin(a/2)^30*x+32760*ax^3*ay^23*az^2*cos(a/2)^4*sin(a/2)^28*x+32760*ax^3*ay^23*az^4*cos(a/2)^2*sin(a/2)^30*x+5460*ax^3*ay^25*az^2*cos(a/2)^2*sin(a/2)^30*x+210*ax^4*ay*az*cos(a/2)^26*sin(a/2)^6*z+2730*ax^4*ay*az^3*cos(a/2)^24*sin(a/2)^8*z+16380*ax^4*ay*az^5*cos(a/2)^22*sin(a/2)^10*z+60060*ax^4*ay*az^7*cos(a/2)^20*sin(a/2)^12*z+150150*ax^4*ay*az^9*cos(a/2)^18*sin(a/2)^14*z+270270*ax^4*ay*az^11*cos(a/2)^16*sin(a/2)^16*z+360360*ax^4*ay*az^13*cos(a/2)^14*sin(a/2)^18*z+360360*ax^4*ay*az^15*cos(a/2)^12*sin(a/2)^20*z+270270*ax^4*ay*az^17*cos(a/2)^10*sin(a/2)^22*z+150150*ax^4*ay*az^19*cos(a/2)^8*sin(a/2)^24*z+60060*ax^4*ay*az^21*cos(a/2)^6*sin(a/2)^26*z+16380*ax^4*ay*az^23*cos(a/2)^4*sin(a/2)^28*z+2730*ax^4*ay*az^25*cos(a/2)^2*sin(a/2)^30*z-19110*ax^4*ay^2*az^2*cos(a/2)^24*sin(a/2)^8*y-114660*ax^4*ay^2*az^4*cos(a/2)^22*sin(a/2)^10*y-420420*ax^4*ay^2*az^6*cos(a/2)^20*sin(a/2)^12*y-1051050*ax^4*ay^2*az^8*cos(a/2)^18*sin(a/2)^14*y-1891890*ax^4*ay^2*az^10*cos(a/2)^16*sin(a/2)^16*y-2522520*ax^4*ay^2*az^12*cos(a/2)^14*sin(a/2)^18*y-2522520*ax^4*ay^2*az^14*cos(a/2)^12*sin(a/2)^20*y-1891890*ax^4*ay^2*az^16*cos(a/2)^10*sin(a/2)^22*y-1051050*ax^4*ay^2*az^18*cos(a/2)^8*sin(a/2)^24*y-420420*ax^4*ay^2*az^20*cos(a/2)^6*sin(a/2)^26*y-114660*ax^4*ay^2*az^22*cos(a/2)^4*sin(a/2)^28*y-19110*ax^4*ay^2*az^24*cos(a/2)^2*sin(a/2)^30*y+2730*ax^4*ay^3*az*cos(a/2)^24*sin(a/2)^8*z+32760*ax^4*ay^3*az^3*cos(a/2)^22*sin(a/2)^10*z+180180*ax^4*ay^3*az^5*cos(a/2)^20*sin(a/2)^12*z+600600*ax^4*ay^3*az^7*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^4*ay^3*az^9*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^4*ay^3*az^11*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^4*ay^3*az^13*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^4*ay^3*az^15*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^4*ay^3*az^17*cos(a/2)^8*sin(a/2)^24*z+600600*ax^4*ay^3*az^19*cos(a/2)^6*sin(a/2)^26*z+180180*ax^4*ay^3*az^21*cos(a/2)^4*sin(a/2)^28*z+32760*ax^4*ay^3*az^23*cos(a/2)^2*sin(a/2)^30*z-98280*ax^4*ay^4*az^2*cos(a/2)^22*sin(a/2)^10*y-540540*ax^4*ay^4*az^4*cos(a/2)^20*sin(a/2)^12*y-1801800*ax^4*ay^4*az^6*cos(a/2)^18*sin(a/2)^14*y-4054050*ax^4*ay^4*az^8*cos(a/2)^16*sin(a/2)^16*y-6486480*ax^4*ay^4*az^10*cos(a/2)^14*sin(a/2)^18*y-7567560*ax^4*ay^4*az^12*cos(a/2)^12*sin(a/2)^20*y-6486480*ax^4*ay^4*az^14*cos(a/2)^10*sin(a/2)^22*y-4054050*ax^4*ay^4*az^16*cos(a/2)^8*sin(a/2)^24*y-1801800*ax^4*ay^4*az^18*cos(a/2)^6*sin(a/2)^26*y-540540*ax^4*ay^4*az^20*cos(a/2)^4*sin(a/2)^28*y-98280*ax^4*ay^4*az^22*cos(a/2)^2*sin(a/2)^30*y+16380*ax^4*ay^5*az*cos(a/2)^22*sin(a/2)^10*z+180180*ax^4*ay^5*az^3*cos(a/2)^20*sin(a/2)^12*z+900900*ax^4*ay^5*az^5*cos(a/2)^18*sin(a/2)^14*z+2702700*ax^4*ay^5*az^7*cos(a/2)^16*sin(a/2)^16*z+5405400*ax^4*ay^5*az^9*cos(a/2)^14*sin(a/2)^18*z+7567560*ax^4*ay^5*az^11*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^4*ay^5*az^13*cos(a/2)^10*sin(a/2)^22*z+5405400*ax^4*ay^5*az^15*cos(a/2)^8*sin(a/2)^24*z+2702700*ax^4*ay^5*az^17*cos(a/2)^6*sin(a/2)^26*z+900900*ax^4*ay^5*az^19*cos(a/2)^4*sin(a/2)^28*z+180180*ax^4*ay^5*az^21*cos(a/2)^2*sin(a/2)^30*z-300300*ax^4*ay^6*az^2*cos(a/2)^20*sin(a/2)^12*y-1501500*ax^4*ay^6*az^4*cos(a/2)^18*sin(a/2)^14*y-4504500*ax^4*ay^6*az^6*cos(a/2)^16*sin(a/2)^16*y-9009000*ax^4*ay^6*az^8*cos(a/2)^14*sin(a/2)^18*y-12612600*ax^4*ay^6*az^10*cos(a/2)^12*sin(a/2)^20*y-12612600*ax^4*ay^6*az^12*cos(a/2)^10*sin(a/2)^22*y-9009000*ax^4*ay^6*az^14*cos(a/2)^8*sin(a/2)^24*y-4504500*ax^4*ay^6*az^16*cos(a/2)^6*sin(a/2)^26*y-1501500*ax^4*ay^6*az^18*cos(a/2)^4*sin(a/2)^28*y-300300*ax^4*ay^6*az^20*cos(a/2)^2*sin(a/2)^30*y+60060*ax^4*ay^7*az*cos(a/2)^20*sin(a/2)^12*z+600600*ax^4*ay^7*az^3*cos(a/2)^18*sin(a/2)^14*z+2702700*ax^4*ay^7*az^5*cos(a/2)^16*sin(a/2)^16*z+7207200*ax^4*ay^7*az^7*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^4*ay^7*az^9*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^4*ay^7*az^11*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^4*ay^7*az^13*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^4*ay^7*az^15*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^4*ay^7*az^17*cos(a/2)^4*sin(a/2)^28*z+600600*ax^4*ay^7*az^19*cos(a/2)^2*sin(a/2)^30*z-600600*ax^4*ay^8*az^2*cos(a/2)^18*sin(a/2)^14*y-2702700*ax^4*ay^8*az^4*cos(a/2)^16*sin(a/2)^16*y-7207200*ax^4*ay^8*az^6*cos(a/2)^14*sin(a/2)^18*y-12612600*ax^4*ay^8*az^8*cos(a/2)^12*sin(a/2)^20*y-15135120*ax^4*ay^8*az^10*cos(a/2)^10*sin(a/2)^22*y-12612600*ax^4*ay^8*az^12*cos(a/2)^8*sin(a/2)^24*y-7207200*ax^4*ay^8*az^14*cos(a/2)^6*sin(a/2)^26*y-2702700*ax^4*ay^8*az^16*cos(a/2)^4*sin(a/2)^28*y-600600*ax^4*ay^8*az^18*cos(a/2)^2*sin(a/2)^30*y+150150*ax^4*ay^9*az*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^4*ay^9*az^3*cos(a/2)^16*sin(a/2)^16*z+5405400*ax^4*ay^9*az^5*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^4*ay^9*az^7*cos(a/2)^12*sin(a/2)^20*z+18918900*ax^4*ay^9*az^9*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^4*ay^9*az^11*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^4*ay^9*az^13*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^4*ay^9*az^15*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^4*ay^9*az^17*cos(a/2)^2*sin(a/2)^30*z-810810*ax^4*ay^10*az^2*cos(a/2)^16*sin(a/2)^16*y-3243240*ax^4*ay^10*az^4*cos(a/2)^14*sin(a/2)^18*y-7567560*ax^4*ay^10*az^6*cos(a/2)^12*sin(a/2)^20*y-11351340*ax^4*ay^10*az^8*cos(a/2)^10*sin(a/2)^22*y-11351340*ax^4*ay^10*az^10*cos(a/2)^8*sin(a/2)^24*y-7567560*ax^4*ay^10*az^12*cos(a/2)^6*sin(a/2)^26*y-3243240*ax^4*ay^10*az^14*cos(a/2)^4*sin(a/2)^28*y-810810*ax^4*ay^10*az^16*cos(a/2)^2*sin(a/2)^30*y+270270*ax^4*ay^11*az*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^4*ay^11*az^3*cos(a/2)^14*sin(a/2)^18*z+7567560*ax^4*ay^11*az^5*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^4*ay^11*az^7*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^4*ay^11*az^9*cos(a/2)^8*sin(a/2)^24*z+15135120*ax^4*ay^11*az^11*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^4*ay^11*az^13*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^4*ay^11*az^15*cos(a/2)^2*sin(a/2)^30*z-720720*ax^4*ay^12*az^2*cos(a/2)^14*sin(a/2)^18*y-2522520*ax^4*ay^12*az^4*cos(a/2)^12*sin(a/2)^20*y-5045040*ax^4*ay^12*az^6*cos(a/2)^10*sin(a/2)^22*y-6306300*ax^4*ay^12*az^8*cos(a/2)^8*sin(a/2)^24*y-5045040*ax^4*ay^12*az^10*cos(a/2)^6*sin(a/2)^26*y-2522520*ax^4*ay^12*az^12*cos(a/2)^4*sin(a/2)^28*y-720720*ax^4*ay^12*az^14*cos(a/2)^2*sin(a/2)^30*y+360360*ax^4*ay^13*az*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^4*ay^13*az^3*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^4*ay^13*az^5*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^4*ay^13*az^7*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^4*ay^13*az^9*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^4*ay^13*az^11*cos(a/2)^4*sin(a/2)^28*z+2522520*ax^4*ay^13*az^13*cos(a/2)^2*sin(a/2)^30*z-360360*ax^4*ay^14*az^2*cos(a/2)^12*sin(a/2)^20*y-1081080*ax^4*ay^14*az^4*cos(a/2)^10*sin(a/2)^22*y-1801800*ax^4*ay^14*az^6*cos(a/2)^8*sin(a/2)^24*y-1801800*ax^4*ay^14*az^8*cos(a/2)^6*sin(a/2)^26*y-1081080*ax^4*ay^14*az^10*cos(a/2)^4*sin(a/2)^28*y-360360*ax^4*ay^14*az^12*cos(a/2)^2*sin(a/2)^30*y+360360*ax^4*ay^15*az*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^4*ay^15*az^3*cos(a/2)^10*sin(a/2)^22*z+5405400*ax^4*ay^15*az^5*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^4*ay^15*az^7*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^4*ay^15*az^9*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^4*ay^15*az^11*cos(a/2)^2*sin(a/2)^30*z+270270*ax^4*ay^17*az*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^4*ay^17*az^3*cos(a/2)^8*sin(a/2)^24*z+2702700*ax^4*ay^17*az^5*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^4*ay^17*az^7*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^4*ay^17*az^9*cos(a/2)^2*sin(a/2)^30*z+150150*ax^4*ay^18*az^2*cos(a/2)^8*sin(a/2)^24*y+300300*ax^4*ay^18*az^4*cos(a/2)^6*sin(a/2)^26*y+300300*ax^4*ay^18*az^6*cos(a/2)^4*sin(a/2)^28*y+150150*ax^4*ay^18*az^8*cos(a/2)^2*sin(a/2)^30*y+150150*ax^4*ay^19*az*cos(a/2)^8*sin(a/2)^24*z+600600*ax^4*ay^19*az^3*cos(a/2)^6*sin(a/2)^26*z+900900*ax^4*ay^19*az^5*cos(a/2)^4*sin(a/2)^28*z+600600*ax^4*ay^19*az^7*cos(a/2)^2*sin(a/2)^30*z+120120*ax^4*ay^20*az^2*cos(a/2)^6*sin(a/2)^26*y+180180*ax^4*ay^20*az^4*cos(a/2)^4*sin(a/2)^28*y+120120*ax^4*ay^20*az^6*cos(a/2)^2*sin(a/2)^30*y+60060*ax^4*ay^21*az*cos(a/2)^6*sin(a/2)^26*z+180180*ax^4*ay^21*az^3*cos(a/2)^4*sin(a/2)^28*z+180180*ax^4*ay^21*az^5*cos(a/2)^2*sin(a/2)^30*z+49140*ax^4*ay^22*az^2*cos(a/2)^4*sin(a/2)^28*y+49140*ax^4*ay^22*az^4*cos(a/2)^2*sin(a/2)^30*y+16380*ax^4*ay^23*az*cos(a/2)^4*sin(a/2)^28*z+32760*ax^4*ay^23*az^3*cos(a/2)^2*sin(a/2)^30*z+10920*ax^4*ay^24*az^2*cos(a/2)^2*sin(a/2)^30*y+2730*ax^4*ay^25*az*cos(a/2)^2*sin(a/2)^30*z+2730*ax^5*ay*az^2*cos(a/2)^24*sin(a/2)^8*x+16380*ax^5*ay*az^4*cos(a/2)^22*sin(a/2)^10*x+60060*ax^5*ay*az^6*cos(a/2)^20*sin(a/2)^12*x+150150*ax^5*ay*az^8*cos(a/2)^18*sin(a/2)^14*x+270270*ax^5*ay*az^10*cos(a/2)^16*sin(a/2)^16*x+360360*ax^5*ay*az^12*cos(a/2)^14*sin(a/2)^18*x+360360*ax^5*ay*az^14*cos(a/2)^12*sin(a/2)^20*x+270270*ax^5*ay*az^16*cos(a/2)^10*sin(a/2)^22*x+150150*ax^5*ay*az^18*cos(a/2)^8*sin(a/2)^24*x+60060*ax^5*ay*az^20*cos(a/2)^6*sin(a/2)^26*x+16380*ax^5*ay*az^22*cos(a/2)^4*sin(a/2)^28*x+2730*ax^5*ay*az^24*cos(a/2)^2*sin(a/2)^30*x+32760*ax^5*ay^3*az^2*cos(a/2)^22*sin(a/2)^10*x+180180*ax^5*ay^3*az^4*cos(a/2)^20*sin(a/2)^12*x+600600*ax^5*ay^3*az^6*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^5*ay^3*az^8*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^5*ay^3*az^10*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^5*ay^3*az^12*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^5*ay^3*az^14*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^5*ay^3*az^16*cos(a/2)^8*sin(a/2)^24*x+600600*ax^5*ay^3*az^18*cos(a/2)^6*sin(a/2)^26*x+180180*ax^5*ay^3*az^20*cos(a/2)^4*sin(a/2)^28*x+32760*ax^5*ay^3*az^22*cos(a/2)^2*sin(a/2)^30*x+180180*ax^5*ay^5*az^2*cos(a/2)^20*sin(a/2)^12*x+900900*ax^5*ay^5*az^4*cos(a/2)^18*sin(a/2)^14*x+2702700*ax^5*ay^5*az^6*cos(a/2)^16*sin(a/2)^16*x+5405400*ax^5*ay^5*az^8*cos(a/2)^14*sin(a/2)^18*x+7567560*ax^5*ay^5*az^10*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^5*ay^5*az^12*cos(a/2)^10*sin(a/2)^22*x+5405400*ax^5*ay^5*az^14*cos(a/2)^8*sin(a/2)^24*x+2702700*ax^5*ay^5*az^16*cos(a/2)^6*sin(a/2)^26*x+900900*ax^5*ay^5*az^18*cos(a/2)^4*sin(a/2)^28*x+180180*ax^5*ay^5*az^20*cos(a/2)^2*sin(a/2)^30*x+600600*ax^5*ay^7*az^2*cos(a/2)^18*sin(a/2)^14*x+2702700*ax^5*ay^7*az^4*cos(a/2)^16*sin(a/2)^16*x+7207200*ax^5*ay^7*az^6*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^5*ay^7*az^8*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^5*ay^7*az^10*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^5*ay^7*az^12*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^5*ay^7*az^14*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^5*ay^7*az^16*cos(a/2)^4*sin(a/2)^28*x+600600*ax^5*ay^7*az^18*cos(a/2)^2*sin(a/2)^30*x+1351350*ax^5*ay^9*az^2*cos(a/2)^16*sin(a/2)^16*x+5405400*ax^5*ay^9*az^4*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^5*ay^9*az^6*cos(a/2)^12*sin(a/2)^20*x+18918900*ax^5*ay^9*az^8*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^5*ay^9*az^10*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^5*ay^9*az^12*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^5*ay^9*az^14*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^5*ay^9*az^16*cos(a/2)^2*sin(a/2)^30*x+2162160*ax^5*ay^11*az^2*cos(a/2)^14*sin(a/2)^18*x+7567560*ax^5*ay^11*az^4*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^5*ay^11*az^6*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^5*ay^11*az^8*cos(a/2)^8*sin(a/2)^24*x+15135120*ax^5*ay^11*az^10*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^5*ay^11*az^12*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^5*ay^11*az^14*cos(a/2)^2*sin(a/2)^30*x+2522520*ax^5*ay^13*az^2*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^5*ay^13*az^4*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^5*ay^13*az^6*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^5*ay^13*az^8*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^5*ay^13*az^10*cos(a/2)^4*sin(a/2)^28*x+2522520*ax^5*ay^13*az^12*cos(a/2)^2*sin(a/2)^30*x+2162160*ax^5*ay^15*az^2*cos(a/2)^10*sin(a/2)^22*x+5405400*ax^5*ay^15*az^4*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^5*ay^15*az^6*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^5*ay^15*az^8*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^5*ay^15*az^10*cos(a/2)^2*sin(a/2)^30*x+1351350*ax^5*ay^17*az^2*cos(a/2)^8*sin(a/2)^24*x+2702700*ax^5*ay^17*az^4*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^5*ay^17*az^6*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^5*ay^17*az^8*cos(a/2)^2*sin(a/2)^30*x+600600*ax^5*ay^19*az^2*cos(a/2)^6*sin(a/2)^26*x+900900*ax^5*ay^19*az^4*cos(a/2)^4*sin(a/2)^28*x+600600*ax^5*ay^19*az^6*cos(a/2)^2*sin(a/2)^30*x+180180*ax^5*ay^21*az^2*cos(a/2)^4*sin(a/2)^28*x+180180*ax^5*ay^21*az^4*cos(a/2)^2*sin(a/2)^30*x+32760*ax^5*ay^23*az^2*cos(a/2)^2*sin(a/2)^30*x+910*ax^6*ay*az*cos(a/2)^24*sin(a/2)^8*z+10920*ax^6*ay*az^3*cos(a/2)^22*sin(a/2)^10*z+60060*ax^6*ay*az^5*cos(a/2)^20*sin(a/2)^12*z+200200*ax^6*ay*az^7*cos(a/2)^18*sin(a/2)^14*z+450450*ax^6*ay*az^9*cos(a/2)^16*sin(a/2)^16*z+720720*ax^6*ay*az^11*cos(a/2)^14*sin(a/2)^18*z+840840*ax^6*ay*az^13*cos(a/2)^12*sin(a/2)^20*z+720720*ax^6*ay*az^15*cos(a/2)^10*sin(a/2)^22*z+450450*ax^6*ay*az^17*cos(a/2)^8*sin(a/2)^24*z+200200*ax^6*ay*az^19*cos(a/2)^6*sin(a/2)^26*z+60060*ax^6*ay*az^21*cos(a/2)^4*sin(a/2)^28*z+10920*ax^6*ay*az^23*cos(a/2)^2*sin(a/2)^30*z-76440*ax^6*ay^2*az^2*cos(a/2)^22*sin(a/2)^10*y-420420*ax^6*ay^2*az^4*cos(a/2)^20*sin(a/2)^12*y-1401400*ax^6*ay^2*az^6*cos(a/2)^18*sin(a/2)^14*y-3153150*ax^6*ay^2*az^8*cos(a/2)^16*sin(a/2)^16*y-5045040*ax^6*ay^2*az^10*cos(a/2)^14*sin(a/2)^18*y-5885880*ax^6*ay^2*az^12*cos(a/2)^12*sin(a/2)^20*y-5045040*ax^6*ay^2*az^14*cos(a/2)^10*sin(a/2)^22*y-3153150*ax^6*ay^2*az^16*cos(a/2)^8*sin(a/2)^24*y-1401400*ax^6*ay^2*az^18*cos(a/2)^6*sin(a/2)^26*y-420420*ax^6*ay^2*az^20*cos(a/2)^4*sin(a/2)^28*y-76440*ax^6*ay^2*az^22*cos(a/2)^2*sin(a/2)^30*y+10920*ax^6*ay^3*az*cos(a/2)^22*sin(a/2)^10*z+120120*ax^6*ay^3*az^3*cos(a/2)^20*sin(a/2)^12*z+600600*ax^6*ay^3*az^5*cos(a/2)^18*sin(a/2)^14*z+1801800*ax^6*ay^3*az^7*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^6*ay^3*az^9*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^6*ay^3*az^11*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^6*ay^3*az^13*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^6*ay^3*az^15*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^6*ay^3*az^17*cos(a/2)^6*sin(a/2)^26*z+600600*ax^6*ay^3*az^19*cos(a/2)^4*sin(a/2)^28*z+120120*ax^6*ay^3*az^21*cos(a/2)^2*sin(a/2)^30*z-360360*ax^6*ay^4*az^2*cos(a/2)^20*sin(a/2)^12*y-1801800*ax^6*ay^4*az^4*cos(a/2)^18*sin(a/2)^14*y-5405400*ax^6*ay^4*az^6*cos(a/2)^16*sin(a/2)^16*y-10810800*ax^6*ay^4*az^8*cos(a/2)^14*sin(a/2)^18*y-15135120*ax^6*ay^4*az^10*cos(a/2)^12*sin(a/2)^20*y-15135120*ax^6*ay^4*az^12*cos(a/2)^10*sin(a/2)^22*y-10810800*ax^6*ay^4*az^14*cos(a/2)^8*sin(a/2)^24*y-5405400*ax^6*ay^4*az^16*cos(a/2)^6*sin(a/2)^26*y-1801800*ax^6*ay^4*az^18*cos(a/2)^4*sin(a/2)^28*y-360360*ax^6*ay^4*az^20*cos(a/2)^2*sin(a/2)^30*y+60060*ax^6*ay^5*az*cos(a/2)^20*sin(a/2)^12*z+600600*ax^6*ay^5*az^3*cos(a/2)^18*sin(a/2)^14*z+2702700*ax^6*ay^5*az^5*cos(a/2)^16*sin(a/2)^16*z+7207200*ax^6*ay^5*az^7*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^6*ay^5*az^9*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^6*ay^5*az^11*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^6*ay^5*az^13*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^6*ay^5*az^15*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^6*ay^5*az^17*cos(a/2)^4*sin(a/2)^28*z+600600*ax^6*ay^5*az^19*cos(a/2)^2*sin(a/2)^30*z-1001000*ax^6*ay^6*az^2*cos(a/2)^18*sin(a/2)^14*y-4504500*ax^6*ay^6*az^4*cos(a/2)^16*sin(a/2)^16*y-12012000*ax^6*ay^6*az^6*cos(a/2)^14*sin(a/2)^18*y-21021000*ax^6*ay^6*az^8*cos(a/2)^12*sin(a/2)^20*y-25225200*ax^6*ay^6*az^10*cos(a/2)^10*sin(a/2)^22*y-21021000*ax^6*ay^6*az^12*cos(a/2)^8*sin(a/2)^24*y-12012000*ax^6*ay^6*az^14*cos(a/2)^6*sin(a/2)^26*y-4504500*ax^6*ay^6*az^16*cos(a/2)^4*sin(a/2)^28*y-1001000*ax^6*ay^6*az^18*cos(a/2)^2*sin(a/2)^30*y+200200*ax^6*ay^7*az*cos(a/2)^18*sin(a/2)^14*z+1801800*ax^6*ay^7*az^3*cos(a/2)^16*sin(a/2)^16*z+7207200*ax^6*ay^7*az^5*cos(a/2)^14*sin(a/2)^18*z+16816800*ax^6*ay^7*az^7*cos(a/2)^12*sin(a/2)^20*z+25225200*ax^6*ay^7*az^9*cos(a/2)^10*sin(a/2)^22*z+25225200*ax^6*ay^7*az^11*cos(a/2)^8*sin(a/2)^24*z+16816800*ax^6*ay^7*az^13*cos(a/2)^6*sin(a/2)^26*z+7207200*ax^6*ay^7*az^15*cos(a/2)^4*sin(a/2)^28*z+1801800*ax^6*ay^7*az^17*cos(a/2)^2*sin(a/2)^30*z-1801800*ax^6*ay^8*az^2*cos(a/2)^16*sin(a/2)^16*y-7207200*ax^6*ay^8*az^4*cos(a/2)^14*sin(a/2)^18*y-16816800*ax^6*ay^8*az^6*cos(a/2)^12*sin(a/2)^20*y-25225200*ax^6*ay^8*az^8*cos(a/2)^10*sin(a/2)^22*y-25225200*ax^6*ay^8*az^10*cos(a/2)^8*sin(a/2)^24*y-16816800*ax^6*ay^8*az^12*cos(a/2)^6*sin(a/2)^26*y-7207200*ax^6*ay^8*az^14*cos(a/2)^4*sin(a/2)^28*y-1801800*ax^6*ay^8*az^16*cos(a/2)^2*sin(a/2)^30*y+450450*ax^6*ay^9*az*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^6*ay^9*az^3*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^6*ay^9*az^5*cos(a/2)^12*sin(a/2)^20*z+25225200*ax^6*ay^9*az^7*cos(a/2)^10*sin(a/2)^22*z+31531500*ax^6*ay^9*az^9*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^6*ay^9*az^11*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^6*ay^9*az^13*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^6*ay^9*az^15*cos(a/2)^2*sin(a/2)^30*z-2162160*ax^6*ay^10*az^2*cos(a/2)^14*sin(a/2)^18*y-7567560*ax^6*ay^10*az^4*cos(a/2)^12*sin(a/2)^20*y-15135120*ax^6*ay^10*az^6*cos(a/2)^10*sin(a/2)^22*y-18918900*ax^6*ay^10*az^8*cos(a/2)^8*sin(a/2)^24*y-15135120*ax^6*ay^10*az^10*cos(a/2)^6*sin(a/2)^26*y-7567560*ax^6*ay^10*az^12*cos(a/2)^4*sin(a/2)^28*y-2162160*ax^6*ay^10*az^14*cos(a/2)^2*sin(a/2)^30*y+720720*ax^6*ay^11*az*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^6*ay^11*az^3*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^6*ay^11*az^5*cos(a/2)^10*sin(a/2)^22*z+25225200*ax^6*ay^11*az^7*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^6*ay^11*az^9*cos(a/2)^6*sin(a/2)^26*z+15135120*ax^6*ay^11*az^11*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^6*ay^11*az^13*cos(a/2)^2*sin(a/2)^30*z-1681680*ax^6*ay^12*az^2*cos(a/2)^12*sin(a/2)^20*y-5045040*ax^6*ay^12*az^4*cos(a/2)^10*sin(a/2)^22*y-8408400*ax^6*ay^12*az^6*cos(a/2)^8*sin(a/2)^24*y-8408400*ax^6*ay^12*az^8*cos(a/2)^6*sin(a/2)^26*y-5045040*ax^6*ay^12*az^10*cos(a/2)^4*sin(a/2)^28*y-1681680*ax^6*ay^12*az^12*cos(a/2)^2*sin(a/2)^30*y+840840*ax^6*ay^13*az*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^6*ay^13*az^3*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^6*ay^13*az^5*cos(a/2)^8*sin(a/2)^24*z+16816800*ax^6*ay^13*az^7*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^6*ay^13*az^9*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^6*ay^13*az^11*cos(a/2)^2*sin(a/2)^30*z-720720*ax^6*ay^14*az^2*cos(a/2)^10*sin(a/2)^22*y-1801800*ax^6*ay^14*az^4*cos(a/2)^8*sin(a/2)^24*y-2402400*ax^6*ay^14*az^6*cos(a/2)^6*sin(a/2)^26*y-1801800*ax^6*ay^14*az^8*cos(a/2)^4*sin(a/2)^28*y-720720*ax^6*ay^14*az^10*cos(a/2)^2*sin(a/2)^30*y+720720*ax^6*ay^15*az*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^6*ay^15*az^3*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^6*ay^15*az^5*cos(a/2)^6*sin(a/2)^26*z+7207200*ax^6*ay^15*az^7*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^6*ay^15*az^9*cos(a/2)^2*sin(a/2)^30*z+450450*ax^6*ay^17*az*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^6*ay^17*az^3*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^6*ay^17*az^5*cos(a/2)^4*sin(a/2)^28*z+1801800*ax^6*ay^17*az^7*cos(a/2)^2*sin(a/2)^30*z+200200*ax^6*ay^18*az^2*cos(a/2)^6*sin(a/2)^26*y+300300*ax^6*ay^18*az^4*cos(a/2)^4*sin(a/2)^28*y+200200*ax^6*ay^18*az^6*cos(a/2)^2*sin(a/2)^30*y+200200*ax^6*ay^19*az*cos(a/2)^6*sin(a/2)^26*z+600600*ax^6*ay^19*az^3*cos(a/2)^4*sin(a/2)^28*z+600600*ax^6*ay^19*az^5*cos(a/2)^2*sin(a/2)^30*z+120120*ax^6*ay^20*az^2*cos(a/2)^4*sin(a/2)^28*y+120120*ax^6*ay^20*az^4*cos(a/2)^2*sin(a/2)^30*y+60060*ax^6*ay^21*az*cos(a/2)^4*sin(a/2)^28*z+120120*ax^6*ay^21*az^3*cos(a/2)^2*sin(a/2)^30*z+32760*ax^6*ay^22*az^2*cos(a/2)^2*sin(a/2)^30*y+10920*ax^6*ay^23*az*cos(a/2)^2*sin(a/2)^30*z+10920*ax^7*ay*az^2*cos(a/2)^22*sin(a/2)^10*x+60060*ax^7*ay*az^4*cos(a/2)^20*sin(a/2)^12*x+200200*ax^7*ay*az^6*cos(a/2)^18*sin(a/2)^14*x+450450*ax^7*ay*az^8*cos(a/2)^16*sin(a/2)^16*x+720720*ax^7*ay*az^10*cos(a/2)^14*sin(a/2)^18*x+840840*ax^7*ay*az^12*cos(a/2)^12*sin(a/2)^20*x+720720*ax^7*ay*az^14*cos(a/2)^10*sin(a/2)^22*x+450450*ax^7*ay*az^16*cos(a/2)^8*sin(a/2)^24*x+200200*ax^7*ay*az^18*cos(a/2)^6*sin(a/2)^26*x+60060*ax^7*ay*az^20*cos(a/2)^4*sin(a/2)^28*x+10920*ax^7*ay*az^22*cos(a/2)^2*sin(a/2)^30*x+120120*ax^7*ay^3*az^2*cos(a/2)^20*sin(a/2)^12*x+600600*ax^7*ay^3*az^4*cos(a/2)^18*sin(a/2)^14*x+1801800*ax^7*ay^3*az^6*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^7*ay^3*az^8*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^7*ay^3*az^10*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^7*ay^3*az^12*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^7*ay^3*az^14*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^7*ay^3*az^16*cos(a/2)^6*sin(a/2)^26*x+600600*ax^7*ay^3*az^18*cos(a/2)^4*sin(a/2)^28*x+120120*ax^7*ay^3*az^20*cos(a/2)^2*sin(a/2)^30*x+600600*ax^7*ay^5*az^2*cos(a/2)^18*sin(a/2)^14*x+2702700*ax^7*ay^5*az^4*cos(a/2)^16*sin(a/2)^16*x+7207200*ax^7*ay^5*az^6*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^7*ay^5*az^8*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^7*ay^5*az^10*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^7*ay^5*az^12*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^7*ay^5*az^14*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^7*ay^5*az^16*cos(a/2)^4*sin(a/2)^28*x+600600*ax^7*ay^5*az^18*cos(a/2)^2*sin(a/2)^30*x+1801800*ax^7*ay^7*az^2*cos(a/2)^16*sin(a/2)^16*x+7207200*ax^7*ay^7*az^4*cos(a/2)^14*sin(a/2)^18*x+16816800*ax^7*ay^7*az^6*cos(a/2)^12*sin(a/2)^20*x+25225200*ax^7*ay^7*az^8*cos(a/2)^10*sin(a/2)^22*x+25225200*ax^7*ay^7*az^10*cos(a/2)^8*sin(a/2)^24*x+16816800*ax^7*ay^7*az^12*cos(a/2)^6*sin(a/2)^26*x+7207200*ax^7*ay^7*az^14*cos(a/2)^4*sin(a/2)^28*x+1801800*ax^7*ay^7*az^16*cos(a/2)^2*sin(a/2)^30*x+3603600*ax^7*ay^9*az^2*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^7*ay^9*az^4*cos(a/2)^12*sin(a/2)^20*x+25225200*ax^7*ay^9*az^6*cos(a/2)^10*sin(a/2)^22*x+31531500*ax^7*ay^9*az^8*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^7*ay^9*az^10*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^7*ay^9*az^12*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^7*ay^9*az^14*cos(a/2)^2*sin(a/2)^30*x+5045040*ax^7*ay^11*az^2*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^7*ay^11*az^4*cos(a/2)^10*sin(a/2)^22*x+25225200*ax^7*ay^11*az^6*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^7*ay^11*az^8*cos(a/2)^6*sin(a/2)^26*x+15135120*ax^7*ay^11*az^10*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^7*ay^11*az^12*cos(a/2)^2*sin(a/2)^30*x+5045040*ax^7*ay^13*az^2*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^7*ay^13*az^4*cos(a/2)^8*sin(a/2)^24*x+16816800*ax^7*ay^13*az^6*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^7*ay^13*az^8*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^7*ay^13*az^10*cos(a/2)^2*sin(a/2)^30*x+3603600*ax^7*ay^15*az^2*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^7*ay^15*az^4*cos(a/2)^6*sin(a/2)^26*x+7207200*ax^7*ay^15*az^6*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^7*ay^15*az^8*cos(a/2)^2*sin(a/2)^30*x+1801800*ax^7*ay^17*az^2*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^7*ay^17*az^4*cos(a/2)^4*sin(a/2)^28*x+1801800*ax^7*ay^17*az^6*cos(a/2)^2*sin(a/2)^30*x+600600*ax^7*ay^19*az^2*cos(a/2)^4*sin(a/2)^28*x+600600*ax^7*ay^19*az^4*cos(a/2)^2*sin(a/2)^30*x+120120*ax^7*ay^21*az^2*cos(a/2)^2*sin(a/2)^30*x+2730*ax^8*ay*az*cos(a/2)^22*sin(a/2)^10*z+30030*ax^8*ay*az^3*cos(a/2)^20*sin(a/2)^12*z+150150*ax^8*ay*az^5*cos(a/2)^18*sin(a/2)^14*z+450450*ax^8*ay*az^7*cos(a/2)^16*sin(a/2)^16*z+900900*ax^8*ay*az^9*cos(a/2)^14*sin(a/2)^18*z+1261260*ax^8*ay*az^11*cos(a/2)^12*sin(a/2)^20*z+1261260*ax^8*ay*az^13*cos(a/2)^10*sin(a/2)^22*z+900900*ax^8*ay*az^15*cos(a/2)^8*sin(a/2)^24*z+450450*ax^8*ay*az^17*cos(a/2)^6*sin(a/2)^26*z+150150*ax^8*ay*az^19*cos(a/2)^4*sin(a/2)^28*z+30030*ax^8*ay*az^21*cos(a/2)^2*sin(a/2)^30*z-210210*ax^8*ay^2*az^2*cos(a/2)^20*sin(a/2)^12*y-1051050*ax^8*ay^2*az^4*cos(a/2)^18*sin(a/2)^14*y-3153150*ax^8*ay^2*az^6*cos(a/2)^16*sin(a/2)^16*y-6306300*ax^8*ay^2*az^8*cos(a/2)^14*sin(a/2)^18*y-8828820*ax^8*ay^2*az^10*cos(a/2)^12*sin(a/2)^20*y-8828820*ax^8*ay^2*az^12*cos(a/2)^10*sin(a/2)^22*y-6306300*ax^8*ay^2*az^14*cos(a/2)^8*sin(a/2)^24*y-3153150*ax^8*ay^2*az^16*cos(a/2)^6*sin(a/2)^26*y-1051050*ax^8*ay^2*az^18*cos(a/2)^4*sin(a/2)^28*y-210210*ax^8*ay^2*az^20*cos(a/2)^2*sin(a/2)^30*y+30030*ax^8*ay^3*az*cos(a/2)^20*sin(a/2)^12*z+300300*ax^8*ay^3*az^3*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^8*ay^3*az^5*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^8*ay^3*az^7*cos(a/2)^14*sin(a/2)^18*z+6306300*ax^8*ay^3*az^9*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^8*ay^3*az^11*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^8*ay^3*az^13*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^8*ay^3*az^15*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^8*ay^3*az^17*cos(a/2)^4*sin(a/2)^28*z+300300*ax^8*ay^3*az^19*cos(a/2)^2*sin(a/2)^30*z-900900*ax^8*ay^4*az^2*cos(a/2)^18*sin(a/2)^14*y-4054050*ax^8*ay^4*az^4*cos(a/2)^16*sin(a/2)^16*y-10810800*ax^8*ay^4*az^6*cos(a/2)^14*sin(a/2)^18*y-18918900*ax^8*ay^4*az^8*cos(a/2)^12*sin(a/2)^20*y-22702680*ax^8*ay^4*az^10*cos(a/2)^10*sin(a/2)^22*y-18918900*ax^8*ay^4*az^12*cos(a/2)^8*sin(a/2)^24*y-10810800*ax^8*ay^4*az^14*cos(a/2)^6*sin(a/2)^26*y-4054050*ax^8*ay^4*az^16*cos(a/2)^4*sin(a/2)^28*y-900900*ax^8*ay^4*az^18*cos(a/2)^2*sin(a/2)^30*y+150150*ax^8*ay^5*az*cos(a/2)^18*sin(a/2)^14*z+1351350*ax^8*ay^5*az^3*cos(a/2)^16*sin(a/2)^16*z+5405400*ax^8*ay^5*az^5*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^8*ay^5*az^7*cos(a/2)^12*sin(a/2)^20*z+18918900*ax^8*ay^5*az^9*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^8*ay^5*az^11*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^8*ay^5*az^13*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^8*ay^5*az^15*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^8*ay^5*az^17*cos(a/2)^2*sin(a/2)^30*z-2252250*ax^8*ay^6*az^2*cos(a/2)^16*sin(a/2)^16*y-9009000*ax^8*ay^6*az^4*cos(a/2)^14*sin(a/2)^18*y-21021000*ax^8*ay^6*az^6*cos(a/2)^12*sin(a/2)^20*y-31531500*ax^8*ay^6*az^8*cos(a/2)^10*sin(a/2)^22*y-31531500*ax^8*ay^6*az^10*cos(a/2)^8*sin(a/2)^24*y-21021000*ax^8*ay^6*az^12*cos(a/2)^6*sin(a/2)^26*y-9009000*ax^8*ay^6*az^14*cos(a/2)^4*sin(a/2)^28*y-2252250*ax^8*ay^6*az^16*cos(a/2)^2*sin(a/2)^30*y+450450*ax^8*ay^7*az*cos(a/2)^16*sin(a/2)^16*z+3603600*ax^8*ay^7*az^3*cos(a/2)^14*sin(a/2)^18*z+12612600*ax^8*ay^7*az^5*cos(a/2)^12*sin(a/2)^20*z+25225200*ax^8*ay^7*az^7*cos(a/2)^10*sin(a/2)^22*z+31531500*ax^8*ay^7*az^9*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^8*ay^7*az^11*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^8*ay^7*az^13*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^8*ay^7*az^15*cos(a/2)^2*sin(a/2)^30*z-3603600*ax^8*ay^8*az^2*cos(a/2)^14*sin(a/2)^18*y-12612600*ax^8*ay^8*az^4*cos(a/2)^12*sin(a/2)^20*y-25225200*ax^8*ay^8*az^6*cos(a/2)^10*sin(a/2)^22*y-31531500*ax^8*ay^8*az^8*cos(a/2)^8*sin(a/2)^24*y-25225200*ax^8*ay^8*az^10*cos(a/2)^6*sin(a/2)^26*y-12612600*ax^8*ay^8*az^12*cos(a/2)^4*sin(a/2)^28*y-3603600*ax^8*ay^8*az^14*cos(a/2)^2*sin(a/2)^30*y+900900*ax^8*ay^9*az*cos(a/2)^14*sin(a/2)^18*z+6306300*ax^8*ay^9*az^3*cos(a/2)^12*sin(a/2)^20*z+18918900*ax^8*ay^9*az^5*cos(a/2)^10*sin(a/2)^22*z+31531500*ax^8*ay^9*az^7*cos(a/2)^8*sin(a/2)^24*z+31531500*ax^8*ay^9*az^9*cos(a/2)^6*sin(a/2)^26*z+18918900*ax^8*ay^9*az^11*cos(a/2)^4*sin(a/2)^28*z+6306300*ax^8*ay^9*az^13*cos(a/2)^2*sin(a/2)^30*z-3783780*ax^8*ay^10*az^2*cos(a/2)^12*sin(a/2)^20*y-11351340*ax^8*ay^10*az^4*cos(a/2)^10*sin(a/2)^22*y-18918900*ax^8*ay^10*az^6*cos(a/2)^8*sin(a/2)^24*y-18918900*ax^8*ay^10*az^8*cos(a/2)^6*sin(a/2)^26*y-11351340*ax^8*ay^10*az^10*cos(a/2)^4*sin(a/2)^28*y-3783780*ax^8*ay^10*az^12*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^8*ay^11*az*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^8*ay^11*az^3*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^8*ay^11*az^5*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^8*ay^11*az^7*cos(a/2)^6*sin(a/2)^26*z+18918900*ax^8*ay^11*az^9*cos(a/2)^4*sin(a/2)^28*z+7567560*ax^8*ay^11*az^11*cos(a/2)^2*sin(a/2)^30*z-2522520*ax^8*ay^12*az^2*cos(a/2)^10*sin(a/2)^22*y-6306300*ax^8*ay^12*az^4*cos(a/2)^8*sin(a/2)^24*y-8408400*ax^8*ay^12*az^6*cos(a/2)^6*sin(a/2)^26*y-6306300*ax^8*ay^12*az^8*cos(a/2)^4*sin(a/2)^28*y-2522520*ax^8*ay^12*az^10*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^8*ay^13*az*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^8*ay^13*az^3*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^8*ay^13*az^5*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^8*ay^13*az^7*cos(a/2)^4*sin(a/2)^28*z+6306300*ax^8*ay^13*az^9*cos(a/2)^2*sin(a/2)^30*z-900900*ax^8*ay^14*az^2*cos(a/2)^8*sin(a/2)^24*y-1801800*ax^8*ay^14*az^4*cos(a/2)^6*sin(a/2)^26*y-1801800*ax^8*ay^14*az^6*cos(a/2)^4*sin(a/2)^28*y-900900*ax^8*ay^14*az^8*cos(a/2)^2*sin(a/2)^30*y+900900*ax^8*ay^15*az*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^8*ay^15*az^3*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^8*ay^15*az^5*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^8*ay^15*az^7*cos(a/2)^2*sin(a/2)^30*z+450450*ax^8*ay^17*az*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^8*ay^17*az^3*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^8*ay^17*az^5*cos(a/2)^2*sin(a/2)^30*z+150150*ax^8*ay^18*az^2*cos(a/2)^4*sin(a/2)^28*y+150150*ax^8*ay^18*az^4*cos(a/2)^2*sin(a/2)^30*y+150150*ax^8*ay^19*az*cos(a/2)^4*sin(a/2)^28*z+300300*ax^8*ay^19*az^3*cos(a/2)^2*sin(a/2)^30*z+60060*ax^8*ay^20*az^2*cos(a/2)^2*sin(a/2)^30*y+30030*ax^8*ay^21*az*cos(a/2)^2*sin(a/2)^30*z+30030*ax^9*ay*az^2*cos(a/2)^20*sin(a/2)^12*x+150150*ax^9*ay*az^4*cos(a/2)^18*sin(a/2)^14*x+450450*ax^9*ay*az^6*cos(a/2)^16*sin(a/2)^16*x+900900*ax^9*ay*az^8*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^9*ay*az^10*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^9*ay*az^12*cos(a/2)^10*sin(a/2)^22*x+900900*ax^9*ay*az^14*cos(a/2)^8*sin(a/2)^24*x+450450*ax^9*ay*az^16*cos(a/2)^6*sin(a/2)^26*x+150150*ax^9*ay*az^18*cos(a/2)^4*sin(a/2)^28*x+30030*ax^9*ay*az^20*cos(a/2)^2*sin(a/2)^30*x+300300*ax^9*ay^3*az^2*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^9*ay^3*az^4*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^9*ay^3*az^6*cos(a/2)^14*sin(a/2)^18*x+6306300*ax^9*ay^3*az^8*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^9*ay^3*az^10*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^9*ay^3*az^12*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^9*ay^3*az^14*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^9*ay^3*az^16*cos(a/2)^4*sin(a/2)^28*x+300300*ax^9*ay^3*az^18*cos(a/2)^2*sin(a/2)^30*x+1351350*ax^9*ay^5*az^2*cos(a/2)^16*sin(a/2)^16*x+5405400*ax^9*ay^5*az^4*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^9*ay^5*az^6*cos(a/2)^12*sin(a/2)^20*x+18918900*ax^9*ay^5*az^8*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^9*ay^5*az^10*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^9*ay^5*az^12*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^9*ay^5*az^14*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^9*ay^5*az^16*cos(a/2)^2*sin(a/2)^30*x+3603600*ax^9*ay^7*az^2*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^9*ay^7*az^4*cos(a/2)^12*sin(a/2)^20*x+25225200*ax^9*ay^7*az^6*cos(a/2)^10*sin(a/2)^22*x+31531500*ax^9*ay^7*az^8*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^9*ay^7*az^10*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^9*ay^7*az^12*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^9*ay^7*az^14*cos(a/2)^2*sin(a/2)^30*x+6306300*ax^9*ay^9*az^2*cos(a/2)^12*sin(a/2)^20*x+18918900*ax^9*ay^9*az^4*cos(a/2)^10*sin(a/2)^22*x+31531500*ax^9*ay^9*az^6*cos(a/2)^8*sin(a/2)^24*x+31531500*ax^9*ay^9*az^8*cos(a/2)^6*sin(a/2)^26*x+18918900*ax^9*ay^9*az^10*cos(a/2)^4*sin(a/2)^28*x+6306300*ax^9*ay^9*az^12*cos(a/2)^2*sin(a/2)^30*x+7567560*ax^9*ay^11*az^2*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^9*ay^11*az^4*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^9*ay^11*az^6*cos(a/2)^6*sin(a/2)^26*x+18918900*ax^9*ay^11*az^8*cos(a/2)^4*sin(a/2)^28*x+7567560*ax^9*ay^11*az^10*cos(a/2)^2*sin(a/2)^30*x+6306300*ax^9*ay^13*az^2*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^9*ay^13*az^4*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^9*ay^13*az^6*cos(a/2)^4*sin(a/2)^28*x+6306300*ax^9*ay^13*az^8*cos(a/2)^2*sin(a/2)^30*x+3603600*ax^9*ay^15*az^2*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^9*ay^15*az^4*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^9*ay^15*az^6*cos(a/2)^2*sin(a/2)^30*x+1351350*ax^9*ay^17*az^2*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^9*ay^17*az^4*cos(a/2)^2*sin(a/2)^30*x+300300*ax^9*ay^19*az^2*cos(a/2)^2*sin(a/2)^30*x+6006*ax^10*ay*az*cos(a/2)^20*sin(a/2)^12*z+60060*ax^10*ay*az^3*cos(a/2)^18*sin(a/2)^14*z+270270*ax^10*ay*az^5*cos(a/2)^16*sin(a/2)^16*z+720720*ax^10*ay*az^7*cos(a/2)^14*sin(a/2)^18*z+1261260*ax^10*ay*az^9*cos(a/2)^12*sin(a/2)^20*z+1513512*ax^10*ay*az^11*cos(a/2)^10*sin(a/2)^22*z+1261260*ax^10*ay*az^13*cos(a/2)^8*sin(a/2)^24*z+720720*ax^10*ay*az^15*cos(a/2)^6*sin(a/2)^26*z+270270*ax^10*ay*az^17*cos(a/2)^4*sin(a/2)^28*z+60060*ax^10*ay*az^19*cos(a/2)^2*sin(a/2)^30*z-420420*ax^10*ay^2*az^2*cos(a/2)^18*sin(a/2)^14*y-1891890*ax^10*ay^2*az^4*cos(a/2)^16*sin(a/2)^16*y-5045040*ax^10*ay^2*az^6*cos(a/2)^14*sin(a/2)^18*y-8828820*ax^10*ay^2*az^8*cos(a/2)^12*sin(a/2)^20*y-10594584*ax^10*ay^2*az^10*cos(a/2)^10*sin(a/2)^22*y-8828820*ax^10*ay^2*az^12*cos(a/2)^8*sin(a/2)^24*y-5045040*ax^10*ay^2*az^14*cos(a/2)^6*sin(a/2)^26*y-1891890*ax^10*ay^2*az^16*cos(a/2)^4*sin(a/2)^28*y-420420*ax^10*ay^2*az^18*cos(a/2)^2*sin(a/2)^30*y+60060*ax^10*ay^3*az*cos(a/2)^18*sin(a/2)^14*z+540540*ax^10*ay^3*az^3*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^10*ay^3*az^5*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^10*ay^3*az^7*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^10*ay^3*az^9*cos(a/2)^10*sin(a/2)^22*z+7567560*ax^10*ay^3*az^11*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^10*ay^3*az^13*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^10*ay^3*az^15*cos(a/2)^4*sin(a/2)^28*z+540540*ax^10*ay^3*az^17*cos(a/2)^2*sin(a/2)^30*z-1621620*ax^10*ay^4*az^2*cos(a/2)^16*sin(a/2)^16*y-6486480*ax^10*ay^4*az^4*cos(a/2)^14*sin(a/2)^18*y-15135120*ax^10*ay^4*az^6*cos(a/2)^12*sin(a/2)^20*y-22702680*ax^10*ay^4*az^8*cos(a/2)^10*sin(a/2)^22*y-22702680*ax^10*ay^4*az^10*cos(a/2)^8*sin(a/2)^24*y-15135120*ax^10*ay^4*az^12*cos(a/2)^6*sin(a/2)^26*y-6486480*ax^10*ay^4*az^14*cos(a/2)^4*sin(a/2)^28*y-1621620*ax^10*ay^4*az^16*cos(a/2)^2*sin(a/2)^30*y+270270*ax^10*ay^5*az*cos(a/2)^16*sin(a/2)^16*z+2162160*ax^10*ay^5*az^3*cos(a/2)^14*sin(a/2)^18*z+7567560*ax^10*ay^5*az^5*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^10*ay^5*az^7*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^10*ay^5*az^9*cos(a/2)^8*sin(a/2)^24*z+15135120*ax^10*ay^5*az^11*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^10*ay^5*az^13*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^10*ay^5*az^15*cos(a/2)^2*sin(a/2)^30*z-3603600*ax^10*ay^6*az^2*cos(a/2)^14*sin(a/2)^18*y-12612600*ax^10*ay^6*az^4*cos(a/2)^12*sin(a/2)^20*y-25225200*ax^10*ay^6*az^6*cos(a/2)^10*sin(a/2)^22*y-31531500*ax^10*ay^6*az^8*cos(a/2)^8*sin(a/2)^24*y-25225200*ax^10*ay^6*az^10*cos(a/2)^6*sin(a/2)^26*y-12612600*ax^10*ay^6*az^12*cos(a/2)^4*sin(a/2)^28*y-3603600*ax^10*ay^6*az^14*cos(a/2)^2*sin(a/2)^30*y+720720*ax^10*ay^7*az*cos(a/2)^14*sin(a/2)^18*z+5045040*ax^10*ay^7*az^3*cos(a/2)^12*sin(a/2)^20*z+15135120*ax^10*ay^7*az^5*cos(a/2)^10*sin(a/2)^22*z+25225200*ax^10*ay^7*az^7*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^10*ay^7*az^9*cos(a/2)^6*sin(a/2)^26*z+15135120*ax^10*ay^7*az^11*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^10*ay^7*az^13*cos(a/2)^2*sin(a/2)^30*z-5045040*ax^10*ay^8*az^2*cos(a/2)^12*sin(a/2)^20*y-15135120*ax^10*ay^8*az^4*cos(a/2)^10*sin(a/2)^22*y-25225200*ax^10*ay^8*az^6*cos(a/2)^8*sin(a/2)^24*y-25225200*ax^10*ay^8*az^8*cos(a/2)^6*sin(a/2)^26*y-15135120*ax^10*ay^8*az^10*cos(a/2)^4*sin(a/2)^28*y-5045040*ax^10*ay^8*az^12*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^10*ay^9*az*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^10*ay^9*az^3*cos(a/2)^10*sin(a/2)^22*z+18918900*ax^10*ay^9*az^5*cos(a/2)^8*sin(a/2)^24*z+25225200*ax^10*ay^9*az^7*cos(a/2)^6*sin(a/2)^26*z+18918900*ax^10*ay^9*az^9*cos(a/2)^4*sin(a/2)^28*z+7567560*ax^10*ay^9*az^11*cos(a/2)^2*sin(a/2)^30*z-4540536*ax^10*ay^10*az^2*cos(a/2)^10*sin(a/2)^22*y-11351340*ax^10*ay^10*az^4*cos(a/2)^8*sin(a/2)^24*y-15135120*ax^10*ay^10*az^6*cos(a/2)^6*sin(a/2)^26*y-11351340*ax^10*ay^10*az^8*cos(a/2)^4*sin(a/2)^28*y-4540536*ax^10*ay^10*az^10*cos(a/2)^2*sin(a/2)^30*y+1513512*ax^10*ay^11*az*cos(a/2)^10*sin(a/2)^22*z+7567560*ax^10*ay^11*az^3*cos(a/2)^8*sin(a/2)^24*z+15135120*ax^10*ay^11*az^5*cos(a/2)^6*sin(a/2)^26*z+15135120*ax^10*ay^11*az^7*cos(a/2)^4*sin(a/2)^28*z+7567560*ax^10*ay^11*az^9*cos(a/2)^2*sin(a/2)^30*z-2522520*ax^10*ay^12*az^2*cos(a/2)^8*sin(a/2)^24*y-5045040*ax^10*ay^12*az^4*cos(a/2)^6*sin(a/2)^26*y-5045040*ax^10*ay^12*az^6*cos(a/2)^4*sin(a/2)^28*y-2522520*ax^10*ay^12*az^8*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^10*ay^13*az*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^10*ay^13*az^3*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^10*ay^13*az^5*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^10*ay^13*az^7*cos(a/2)^2*sin(a/2)^30*z-720720*ax^10*ay^14*az^2*cos(a/2)^6*sin(a/2)^26*y-1081080*ax^10*ay^14*az^4*cos(a/2)^4*sin(a/2)^28*y-720720*ax^10*ay^14*az^6*cos(a/2)^2*sin(a/2)^30*y+720720*ax^10*ay^15*az*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^10*ay^15*az^3*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^10*ay^15*az^5*cos(a/2)^2*sin(a/2)^30*z+270270*ax^10*ay^17*az*cos(a/2)^4*sin(a/2)^28*z+540540*ax^10*ay^17*az^3*cos(a/2)^2*sin(a/2)^30*z+60060*ax^10*ay^18*az^2*cos(a/2)^2*sin(a/2)^30*y+60060*ax^10*ay^19*az*cos(a/2)^2*sin(a/2)^30*z+60060*ax^11*ay*az^2*cos(a/2)^18*sin(a/2)^14*x+270270*ax^11*ay*az^4*cos(a/2)^16*sin(a/2)^16*x+720720*ax^11*ay*az^6*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^11*ay*az^8*cos(a/2)^12*sin(a/2)^20*x+1513512*ax^11*ay*az^10*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^11*ay*az^12*cos(a/2)^8*sin(a/2)^24*x+720720*ax^11*ay*az^14*cos(a/2)^6*sin(a/2)^26*x+270270*ax^11*ay*az^16*cos(a/2)^4*sin(a/2)^28*x+60060*ax^11*ay*az^18*cos(a/2)^2*sin(a/2)^30*x+540540*ax^11*ay^3*az^2*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^11*ay^3*az^4*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^11*ay^3*az^6*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^11*ay^3*az^8*cos(a/2)^10*sin(a/2)^22*x+7567560*ax^11*ay^3*az^10*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^11*ay^3*az^12*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^11*ay^3*az^14*cos(a/2)^4*sin(a/2)^28*x+540540*ax^11*ay^3*az^16*cos(a/2)^2*sin(a/2)^30*x+2162160*ax^11*ay^5*az^2*cos(a/2)^14*sin(a/2)^18*x+7567560*ax^11*ay^5*az^4*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^11*ay^5*az^6*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^11*ay^5*az^8*cos(a/2)^8*sin(a/2)^24*x+15135120*ax^11*ay^5*az^10*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^11*ay^5*az^12*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^11*ay^5*az^14*cos(a/2)^2*sin(a/2)^30*x+5045040*ax^11*ay^7*az^2*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^11*ay^7*az^4*cos(a/2)^10*sin(a/2)^22*x+25225200*ax^11*ay^7*az^6*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^11*ay^7*az^8*cos(a/2)^6*sin(a/2)^26*x+15135120*ax^11*ay^7*az^10*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^11*ay^7*az^12*cos(a/2)^2*sin(a/2)^30*x+7567560*ax^11*ay^9*az^2*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^11*ay^9*az^4*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^11*ay^9*az^6*cos(a/2)^6*sin(a/2)^26*x+18918900*ax^11*ay^9*az^8*cos(a/2)^4*sin(a/2)^28*x+7567560*ax^11*ay^9*az^10*cos(a/2)^2*sin(a/2)^30*x+7567560*ax^11*ay^11*az^2*cos(a/2)^8*sin(a/2)^24*x+15135120*ax^11*ay^11*az^4*cos(a/2)^6*sin(a/2)^26*x+15135120*ax^11*ay^11*az^6*cos(a/2)^4*sin(a/2)^28*x+7567560*ax^11*ay^11*az^8*cos(a/2)^2*sin(a/2)^30*x+5045040*ax^11*ay^13*az^2*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^11*ay^13*az^4*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^11*ay^13*az^6*cos(a/2)^2*sin(a/2)^30*x+2162160*ax^11*ay^15*az^2*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^11*ay^15*az^4*cos(a/2)^2*sin(a/2)^30*x+540540*ax^11*ay^17*az^2*cos(a/2)^2*sin(a/2)^30*x+10010*ax^12*ay*az*cos(a/2)^18*sin(a/2)^14*z+90090*ax^12*ay*az^3*cos(a/2)^16*sin(a/2)^16*z+360360*ax^12*ay*az^5*cos(a/2)^14*sin(a/2)^18*z+840840*ax^12*ay*az^7*cos(a/2)^12*sin(a/2)^20*z+1261260*ax^12*ay*az^9*cos(a/2)^10*sin(a/2)^22*z+1261260*ax^12*ay*az^11*cos(a/2)^8*sin(a/2)^24*z+840840*ax^12*ay*az^13*cos(a/2)^6*sin(a/2)^26*z+360360*ax^12*ay*az^15*cos(a/2)^4*sin(a/2)^28*z+90090*ax^12*ay*az^17*cos(a/2)^2*sin(a/2)^30*z-630630*ax^12*ay^2*az^2*cos(a/2)^16*sin(a/2)^16*y-2522520*ax^12*ay^2*az^4*cos(a/2)^14*sin(a/2)^18*y-5885880*ax^12*ay^2*az^6*cos(a/2)^12*sin(a/2)^20*y-8828820*ax^12*ay^2*az^8*cos(a/2)^10*sin(a/2)^22*y-8828820*ax^12*ay^2*az^10*cos(a/2)^8*sin(a/2)^24*y-5885880*ax^12*ay^2*az^12*cos(a/2)^6*sin(a/2)^26*y-2522520*ax^12*ay^2*az^14*cos(a/2)^4*sin(a/2)^28*y-630630*ax^12*ay^2*az^16*cos(a/2)^2*sin(a/2)^30*y+90090*ax^12*ay^3*az*cos(a/2)^16*sin(a/2)^16*z+720720*ax^12*ay^3*az^3*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^12*ay^3*az^5*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^12*ay^3*az^7*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^12*ay^3*az^9*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^12*ay^3*az^11*cos(a/2)^6*sin(a/2)^26*z+2522520*ax^12*ay^3*az^13*cos(a/2)^4*sin(a/2)^28*z+720720*ax^12*ay^3*az^15*cos(a/2)^2*sin(a/2)^30*z-2162160*ax^12*ay^4*az^2*cos(a/2)^14*sin(a/2)^18*y-7567560*ax^12*ay^4*az^4*cos(a/2)^12*sin(a/2)^20*y-15135120*ax^12*ay^4*az^6*cos(a/2)^10*sin(a/2)^22*y-18918900*ax^12*ay^4*az^8*cos(a/2)^8*sin(a/2)^24*y-15135120*ax^12*ay^4*az^10*cos(a/2)^6*sin(a/2)^26*y-7567560*ax^12*ay^4*az^12*cos(a/2)^4*sin(a/2)^28*y-2162160*ax^12*ay^4*az^14*cos(a/2)^2*sin(a/2)^30*y+360360*ax^12*ay^5*az*cos(a/2)^14*sin(a/2)^18*z+2522520*ax^12*ay^5*az^3*cos(a/2)^12*sin(a/2)^20*z+7567560*ax^12*ay^5*az^5*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^12*ay^5*az^7*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^12*ay^5*az^9*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^12*ay^5*az^11*cos(a/2)^4*sin(a/2)^28*z+2522520*ax^12*ay^5*az^13*cos(a/2)^2*sin(a/2)^30*z-4204200*ax^12*ay^6*az^2*cos(a/2)^12*sin(a/2)^20*y-12612600*ax^12*ay^6*az^4*cos(a/2)^10*sin(a/2)^22*y-21021000*ax^12*ay^6*az^6*cos(a/2)^8*sin(a/2)^24*y-21021000*ax^12*ay^6*az^8*cos(a/2)^6*sin(a/2)^26*y-12612600*ax^12*ay^6*az^10*cos(a/2)^4*sin(a/2)^28*y-4204200*ax^12*ay^6*az^12*cos(a/2)^2*sin(a/2)^30*y+840840*ax^12*ay^7*az*cos(a/2)^12*sin(a/2)^20*z+5045040*ax^12*ay^7*az^3*cos(a/2)^10*sin(a/2)^22*z+12612600*ax^12*ay^7*az^5*cos(a/2)^8*sin(a/2)^24*z+16816800*ax^12*ay^7*az^7*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^12*ay^7*az^9*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^12*ay^7*az^11*cos(a/2)^2*sin(a/2)^30*z-5045040*ax^12*ay^8*az^2*cos(a/2)^10*sin(a/2)^22*y-12612600*ax^12*ay^8*az^4*cos(a/2)^8*sin(a/2)^24*y-16816800*ax^12*ay^8*az^6*cos(a/2)^6*sin(a/2)^26*y-12612600*ax^12*ay^8*az^8*cos(a/2)^4*sin(a/2)^28*y-5045040*ax^12*ay^8*az^10*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^12*ay^9*az*cos(a/2)^10*sin(a/2)^22*z+6306300*ax^12*ay^9*az^3*cos(a/2)^8*sin(a/2)^24*z+12612600*ax^12*ay^9*az^5*cos(a/2)^6*sin(a/2)^26*z+12612600*ax^12*ay^9*az^7*cos(a/2)^4*sin(a/2)^28*z+6306300*ax^12*ay^9*az^9*cos(a/2)^2*sin(a/2)^30*z-3783780*ax^12*ay^10*az^2*cos(a/2)^8*sin(a/2)^24*y-7567560*ax^12*ay^10*az^4*cos(a/2)^6*sin(a/2)^26*y-7567560*ax^12*ay^10*az^6*cos(a/2)^4*sin(a/2)^28*y-3783780*ax^12*ay^10*az^8*cos(a/2)^2*sin(a/2)^30*y+1261260*ax^12*ay^11*az*cos(a/2)^8*sin(a/2)^24*z+5045040*ax^12*ay^11*az^3*cos(a/2)^6*sin(a/2)^26*z+7567560*ax^12*ay^11*az^5*cos(a/2)^4*sin(a/2)^28*z+5045040*ax^12*ay^11*az^7*cos(a/2)^2*sin(a/2)^30*z-1681680*ax^12*ay^12*az^2*cos(a/2)^6*sin(a/2)^26*y-2522520*ax^12*ay^12*az^4*cos(a/2)^4*sin(a/2)^28*y-1681680*ax^12*ay^12*az^6*cos(a/2)^2*sin(a/2)^30*y+840840*ax^12*ay^13*az*cos(a/2)^6*sin(a/2)^26*z+2522520*ax^12*ay^13*az^3*cos(a/2)^4*sin(a/2)^28*z+2522520*ax^12*ay^13*az^5*cos(a/2)^2*sin(a/2)^30*z-360360*ax^12*ay^14*az^2*cos(a/2)^4*sin(a/2)^28*y-360360*ax^12*ay^14*az^4*cos(a/2)^2*sin(a/2)^30*y+360360*ax^12*ay^15*az*cos(a/2)^4*sin(a/2)^28*z+720720*ax^12*ay^15*az^3*cos(a/2)^2*sin(a/2)^30*z+90090*ax^12*ay^17*az*cos(a/2)^2*sin(a/2)^30*z+90090*ax^13*ay*az^2*cos(a/2)^16*sin(a/2)^16*x+360360*ax^13*ay*az^4*cos(a/2)^14*sin(a/2)^18*x+840840*ax^13*ay*az^6*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^13*ay*az^8*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^13*ay*az^10*cos(a/2)^8*sin(a/2)^24*x+840840*ax^13*ay*az^12*cos(a/2)^6*sin(a/2)^26*x+360360*ax^13*ay*az^14*cos(a/2)^4*sin(a/2)^28*x+90090*ax^13*ay*az^16*cos(a/2)^2*sin(a/2)^30*x+720720*ax^13*ay^3*az^2*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^13*ay^3*az^4*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^13*ay^3*az^6*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^13*ay^3*az^8*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^13*ay^3*az^10*cos(a/2)^6*sin(a/2)^26*x+2522520*ax^13*ay^3*az^12*cos(a/2)^4*sin(a/2)^28*x+720720*ax^13*ay^3*az^14*cos(a/2)^2*sin(a/2)^30*x+2522520*ax^13*ay^5*az^2*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^13*ay^5*az^4*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^13*ay^5*az^6*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^13*ay^5*az^8*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^13*ay^5*az^10*cos(a/2)^4*sin(a/2)^28*x+2522520*ax^13*ay^5*az^12*cos(a/2)^2*sin(a/2)^30*x+5045040*ax^13*ay^7*az^2*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^13*ay^7*az^4*cos(a/2)^8*sin(a/2)^24*x+16816800*ax^13*ay^7*az^6*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^13*ay^7*az^8*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^13*ay^7*az^10*cos(a/2)^2*sin(a/2)^30*x+6306300*ax^13*ay^9*az^2*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^13*ay^9*az^4*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^13*ay^9*az^6*cos(a/2)^4*sin(a/2)^28*x+6306300*ax^13*ay^9*az^8*cos(a/2)^2*sin(a/2)^30*x+5045040*ax^13*ay^11*az^2*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^13*ay^11*az^4*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^13*ay^11*az^6*cos(a/2)^2*sin(a/2)^30*x+2522520*ax^13*ay^13*az^2*cos(a/2)^4*sin(a/2)^28*x+2522520*ax^13*ay^13*az^4*cos(a/2)^2*sin(a/2)^30*x+720720*ax^13*ay^15*az^2*cos(a/2)^2*sin(a/2)^30*x+12870*ax^14*ay*az*cos(a/2)^16*sin(a/2)^16*z+102960*ax^14*ay*az^3*cos(a/2)^14*sin(a/2)^18*z+360360*ax^14*ay*az^5*cos(a/2)^12*sin(a/2)^20*z+720720*ax^14*ay*az^7*cos(a/2)^10*sin(a/2)^22*z+900900*ax^14*ay*az^9*cos(a/2)^8*sin(a/2)^24*z+720720*ax^14*ay*az^11*cos(a/2)^6*sin(a/2)^26*z+360360*ax^14*ay*az^13*cos(a/2)^4*sin(a/2)^28*z+102960*ax^14*ay*az^15*cos(a/2)^2*sin(a/2)^30*z-720720*ax^14*ay^2*az^2*cos(a/2)^14*sin(a/2)^18*y-2522520*ax^14*ay^2*az^4*cos(a/2)^12*sin(a/2)^20*y-5045040*ax^14*ay^2*az^6*cos(a/2)^10*sin(a/2)^22*y-6306300*ax^14*ay^2*az^8*cos(a/2)^8*sin(a/2)^24*y-5045040*ax^14*ay^2*az^10*cos(a/2)^6*sin(a/2)^26*y-2522520*ax^14*ay^2*az^12*cos(a/2)^4*sin(a/2)^28*y-720720*ax^14*ay^2*az^14*cos(a/2)^2*sin(a/2)^30*y+102960*ax^14*ay^3*az*cos(a/2)^14*sin(a/2)^18*z+720720*ax^14*ay^3*az^3*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^14*ay^3*az^5*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^14*ay^3*az^7*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^14*ay^3*az^9*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^14*ay^3*az^11*cos(a/2)^4*sin(a/2)^28*z+720720*ax^14*ay^3*az^13*cos(a/2)^2*sin(a/2)^30*z-2162160*ax^14*ay^4*az^2*cos(a/2)^12*sin(a/2)^20*y-6486480*ax^14*ay^4*az^4*cos(a/2)^10*sin(a/2)^22*y-10810800*ax^14*ay^4*az^6*cos(a/2)^8*sin(a/2)^24*y-10810800*ax^14*ay^4*az^8*cos(a/2)^6*sin(a/2)^26*y-6486480*ax^14*ay^4*az^10*cos(a/2)^4*sin(a/2)^28*y-2162160*ax^14*ay^4*az^12*cos(a/2)^2*sin(a/2)^30*y+360360*ax^14*ay^5*az*cos(a/2)^12*sin(a/2)^20*z+2162160*ax^14*ay^5*az^3*cos(a/2)^10*sin(a/2)^22*z+5405400*ax^14*ay^5*az^5*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^14*ay^5*az^7*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^14*ay^5*az^9*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^14*ay^5*az^11*cos(a/2)^2*sin(a/2)^30*z-3603600*ax^14*ay^6*az^2*cos(a/2)^10*sin(a/2)^22*y-9009000*ax^14*ay^6*az^4*cos(a/2)^8*sin(a/2)^24*y-12012000*ax^14*ay^6*az^6*cos(a/2)^6*sin(a/2)^26*y-9009000*ax^14*ay^6*az^8*cos(a/2)^4*sin(a/2)^28*y-3603600*ax^14*ay^6*az^10*cos(a/2)^2*sin(a/2)^30*y+720720*ax^14*ay^7*az*cos(a/2)^10*sin(a/2)^22*z+3603600*ax^14*ay^7*az^3*cos(a/2)^8*sin(a/2)^24*z+7207200*ax^14*ay^7*az^5*cos(a/2)^6*sin(a/2)^26*z+7207200*ax^14*ay^7*az^7*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^14*ay^7*az^9*cos(a/2)^2*sin(a/2)^30*z-3603600*ax^14*ay^8*az^2*cos(a/2)^8*sin(a/2)^24*y-7207200*ax^14*ay^8*az^4*cos(a/2)^6*sin(a/2)^26*y-7207200*ax^14*ay^8*az^6*cos(a/2)^4*sin(a/2)^28*y-3603600*ax^14*ay^8*az^8*cos(a/2)^2*sin(a/2)^30*y+900900*ax^14*ay^9*az*cos(a/2)^8*sin(a/2)^24*z+3603600*ax^14*ay^9*az^3*cos(a/2)^6*sin(a/2)^26*z+5405400*ax^14*ay^9*az^5*cos(a/2)^4*sin(a/2)^28*z+3603600*ax^14*ay^9*az^7*cos(a/2)^2*sin(a/2)^30*z-2162160*ax^14*ay^10*az^2*cos(a/2)^6*sin(a/2)^26*y-3243240*ax^14*ay^10*az^4*cos(a/2)^4*sin(a/2)^28*y-2162160*ax^14*ay^10*az^6*cos(a/2)^2*sin(a/2)^30*y+720720*ax^14*ay^11*az*cos(a/2)^6*sin(a/2)^26*z+2162160*ax^14*ay^11*az^3*cos(a/2)^4*sin(a/2)^28*z+2162160*ax^14*ay^11*az^5*cos(a/2)^2*sin(a/2)^30*z-720720*ax^14*ay^12*az^2*cos(a/2)^4*sin(a/2)^28*y-720720*ax^14*ay^12*az^4*cos(a/2)^2*sin(a/2)^30*y+360360*ax^14*ay^13*az*cos(a/2)^4*sin(a/2)^28*z+720720*ax^14*ay^13*az^3*cos(a/2)^2*sin(a/2)^30*z-102960*ax^14*ay^14*az^2*cos(a/2)^2*sin(a/2)^30*y+102960*ax^14*ay^15*az*cos(a/2)^2*sin(a/2)^30*z+102960*ax^15*ay*az^2*cos(a/2)^14*sin(a/2)^18*x+360360*ax^15*ay*az^4*cos(a/2)^12*sin(a/2)^20*x+720720*ax^15*ay*az^6*cos(a/2)^10*sin(a/2)^22*x+900900*ax^15*ay*az^8*cos(a/2)^8*sin(a/2)^24*x+720720*ax^15*ay*az^10*cos(a/2)^6*sin(a/2)^26*x+360360*ax^15*ay*az^12*cos(a/2)^4*sin(a/2)^28*x+102960*ax^15*ay*az^14*cos(a/2)^2*sin(a/2)^30*x+720720*ax^15*ay^3*az^2*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^15*ay^3*az^4*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^15*ay^3*az^6*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^15*ay^3*az^8*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^15*ay^3*az^10*cos(a/2)^4*sin(a/2)^28*x+720720*ax^15*ay^3*az^12*cos(a/2)^2*sin(a/2)^30*x+2162160*ax^15*ay^5*az^2*cos(a/2)^10*sin(a/2)^22*x+5405400*ax^15*ay^5*az^4*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^15*ay^5*az^6*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^15*ay^5*az^8*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^15*ay^5*az^10*cos(a/2)^2*sin(a/2)^30*x+3603600*ax^15*ay^7*az^2*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^15*ay^7*az^4*cos(a/2)^6*sin(a/2)^26*x+7207200*ax^15*ay^7*az^6*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^15*ay^7*az^8*cos(a/2)^2*sin(a/2)^30*x+3603600*ax^15*ay^9*az^2*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^15*ay^9*az^4*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^15*ay^9*az^6*cos(a/2)^2*sin(a/2)^30*x+2162160*ax^15*ay^11*az^2*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^15*ay^11*az^4*cos(a/2)^2*sin(a/2)^30*x+720720*ax^15*ay^13*az^2*cos(a/2)^2*sin(a/2)^30*x+12870*ax^16*ay*az*cos(a/2)^14*sin(a/2)^18*z+90090*ax^16*ay*az^3*cos(a/2)^12*sin(a/2)^20*z+270270*ax^16*ay*az^5*cos(a/2)^10*sin(a/2)^22*z+450450*ax^16*ay*az^7*cos(a/2)^8*sin(a/2)^24*z+450450*ax^16*ay*az^9*cos(a/2)^6*sin(a/2)^26*z+270270*ax^16*ay*az^11*cos(a/2)^4*sin(a/2)^28*z+90090*ax^16*ay*az^13*cos(a/2)^2*sin(a/2)^30*z-630630*ax^16*ay^2*az^2*cos(a/2)^12*sin(a/2)^20*y-1891890*ax^16*ay^2*az^4*cos(a/2)^10*sin(a/2)^22*y-3153150*ax^16*ay^2*az^6*cos(a/2)^8*sin(a/2)^24*y-3153150*ax^16*ay^2*az^8*cos(a/2)^6*sin(a/2)^26*y-1891890*ax^16*ay^2*az^10*cos(a/2)^4*sin(a/2)^28*y-630630*ax^16*ay^2*az^12*cos(a/2)^2*sin(a/2)^30*y+90090*ax^16*ay^3*az*cos(a/2)^12*sin(a/2)^20*z+540540*ax^16*ay^3*az^3*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^16*ay^3*az^5*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^16*ay^3*az^7*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^16*ay^3*az^9*cos(a/2)^4*sin(a/2)^28*z+540540*ax^16*ay^3*az^11*cos(a/2)^2*sin(a/2)^30*z-1621620*ax^16*ay^4*az^2*cos(a/2)^10*sin(a/2)^22*y-4054050*ax^16*ay^4*az^4*cos(a/2)^8*sin(a/2)^24*y-5405400*ax^16*ay^4*az^6*cos(a/2)^6*sin(a/2)^26*y-4054050*ax^16*ay^4*az^8*cos(a/2)^4*sin(a/2)^28*y-1621620*ax^16*ay^4*az^10*cos(a/2)^2*sin(a/2)^30*y+270270*ax^16*ay^5*az*cos(a/2)^10*sin(a/2)^22*z+1351350*ax^16*ay^5*az^3*cos(a/2)^8*sin(a/2)^24*z+2702700*ax^16*ay^5*az^5*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^16*ay^5*az^7*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^16*ay^5*az^9*cos(a/2)^2*sin(a/2)^30*z-2252250*ax^16*ay^6*az^2*cos(a/2)^8*sin(a/2)^24*y-4504500*ax^16*ay^6*az^4*cos(a/2)^6*sin(a/2)^26*y-4504500*ax^16*ay^6*az^6*cos(a/2)^4*sin(a/2)^28*y-2252250*ax^16*ay^6*az^8*cos(a/2)^2*sin(a/2)^30*y+450450*ax^16*ay^7*az*cos(a/2)^8*sin(a/2)^24*z+1801800*ax^16*ay^7*az^3*cos(a/2)^6*sin(a/2)^26*z+2702700*ax^16*ay^7*az^5*cos(a/2)^4*sin(a/2)^28*z+1801800*ax^16*ay^7*az^7*cos(a/2)^2*sin(a/2)^30*z-1801800*ax^16*ay^8*az^2*cos(a/2)^6*sin(a/2)^26*y-2702700*ax^16*ay^8*az^4*cos(a/2)^4*sin(a/2)^28*y-1801800*ax^16*ay^8*az^6*cos(a/2)^2*sin(a/2)^30*y+450450*ax^16*ay^9*az*cos(a/2)^6*sin(a/2)^26*z+1351350*ax^16*ay^9*az^3*cos(a/2)^4*sin(a/2)^28*z+1351350*ax^16*ay^9*az^5*cos(a/2)^2*sin(a/2)^30*z-810810*ax^16*ay^10*az^2*cos(a/2)^4*sin(a/2)^28*y-810810*ax^16*ay^10*az^4*cos(a/2)^2*sin(a/2)^30*y+270270*ax^16*ay^11*az*cos(a/2)^4*sin(a/2)^28*z+540540*ax^16*ay^11*az^3*cos(a/2)^2*sin(a/2)^30*z-180180*ax^16*ay^12*az^2*cos(a/2)^2*sin(a/2)^30*y+90090*ax^16*ay^13*az*cos(a/2)^2*sin(a/2)^30*z+90090*ax^17*ay*az^2*cos(a/2)^12*sin(a/2)^20*x+270270*ax^17*ay*az^4*cos(a/2)^10*sin(a/2)^22*x+450450*ax^17*ay*az^6*cos(a/2)^8*sin(a/2)^24*x+450450*ax^17*ay*az^8*cos(a/2)^6*sin(a/2)^26*x+270270*ax^17*ay*az^10*cos(a/2)^4*sin(a/2)^28*x+90090*ax^17*ay*az^12*cos(a/2)^2*sin(a/2)^30*x+540540*ax^17*ay^3*az^2*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^17*ay^3*az^4*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^17*ay^3*az^6*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^17*ay^3*az^8*cos(a/2)^4*sin(a/2)^28*x+540540*ax^17*ay^3*az^10*cos(a/2)^2*sin(a/2)^30*x+1351350*ax^17*ay^5*az^2*cos(a/2)^8*sin(a/2)^24*x+2702700*ax^17*ay^5*az^4*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^17*ay^5*az^6*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^17*ay^5*az^8*cos(a/2)^2*sin(a/2)^30*x+1801800*ax^17*ay^7*az^2*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^17*ay^7*az^4*cos(a/2)^4*sin(a/2)^28*x+1801800*ax^17*ay^7*az^6*cos(a/2)^2*sin(a/2)^30*x+1351350*ax^17*ay^9*az^2*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^17*ay^9*az^4*cos(a/2)^2*sin(a/2)^30*x+540540*ax^17*ay^11*az^2*cos(a/2)^2*sin(a/2)^30*x+10010*ax^18*ay*az*cos(a/2)^12*sin(a/2)^20*z+60060*ax^18*ay*az^3*cos(a/2)^10*sin(a/2)^22*z+150150*ax^18*ay*az^5*cos(a/2)^8*sin(a/2)^24*z+200200*ax^18*ay*az^7*cos(a/2)^6*sin(a/2)^26*z+150150*ax^18*ay*az^9*cos(a/2)^4*sin(a/2)^28*z+60060*ax^18*ay*az^11*cos(a/2)^2*sin(a/2)^30*z-420420*ax^18*ay^2*az^2*cos(a/2)^10*sin(a/2)^22*y-1051050*ax^18*ay^2*az^4*cos(a/2)^8*sin(a/2)^24*y-1401400*ax^18*ay^2*az^6*cos(a/2)^6*sin(a/2)^26*y-1051050*ax^18*ay^2*az^8*cos(a/2)^4*sin(a/2)^28*y-420420*ax^18*ay^2*az^10*cos(a/2)^2*sin(a/2)^30*y+60060*ax^18*ay^3*az*cos(a/2)^10*sin(a/2)^22*z+300300*ax^18*ay^3*az^3*cos(a/2)^8*sin(a/2)^24*z+600600*ax^18*ay^3*az^5*cos(a/2)^6*sin(a/2)^26*z+600600*ax^18*ay^3*az^7*cos(a/2)^4*sin(a/2)^28*z+300300*ax^18*ay^3*az^9*cos(a/2)^2*sin(a/2)^30*z-900900*ax^18*ay^4*az^2*cos(a/2)^8*sin(a/2)^24*y-1801800*ax^18*ay^4*az^4*cos(a/2)^6*sin(a/2)^26*y-1801800*ax^18*ay^4*az^6*cos(a/2)^4*sin(a/2)^28*y-900900*ax^18*ay^4*az^8*cos(a/2)^2*sin(a/2)^30*y+150150*ax^18*ay^5*az*cos(a/2)^8*sin(a/2)^24*z+600600*ax^18*ay^5*az^3*cos(a/2)^6*sin(a/2)^26*z+900900*ax^18*ay^5*az^5*cos(a/2)^4*sin(a/2)^28*z+600600*ax^18*ay^5*az^7*cos(a/2)^2*sin(a/2)^30*z-1001000*ax^18*ay^6*az^2*cos(a/2)^6*sin(a/2)^26*y-1501500*ax^18*ay^6*az^4*cos(a/2)^4*sin(a/2)^28*y-1001000*ax^18*ay^6*az^6*cos(a/2)^2*sin(a/2)^30*y+200200*ax^18*ay^7*az*cos(a/2)^6*sin(a/2)^26*z+600600*ax^18*ay^7*az^3*cos(a/2)^4*sin(a/2)^28*z+600600*ax^18*ay^7*az^5*cos(a/2)^2*sin(a/2)^30*z-600600*ax^18*ay^8*az^2*cos(a/2)^4*sin(a/2)^28*y-600600*ax^18*ay^8*az^4*cos(a/2)^2*sin(a/2)^30*y+150150*ax^18*ay^9*az*cos(a/2)^4*sin(a/2)^28*z+300300*ax^18*ay^9*az^3*cos(a/2)^2*sin(a/2)^30*z-180180*ax^18*ay^10*az^2*cos(a/2)^2*sin(a/2)^30*y+60060*ax^18*ay^11*az*cos(a/2)^2*sin(a/2)^30*z+60060*ax^19*ay*az^2*cos(a/2)^10*sin(a/2)^22*x+150150*ax^19*ay*az^4*cos(a/2)^8*sin(a/2)^24*x+200200*ax^19*ay*az^6*cos(a/2)^6*sin(a/2)^26*x+150150*ax^19*ay*az^8*cos(a/2)^4*sin(a/2)^28*x+60060*ax^19*ay*az^10*cos(a/2)^2*sin(a/2)^30*x+300300*ax^19*ay^3*az^2*cos(a/2)^8*sin(a/2)^24*x+600600*ax^19*ay^3*az^4*cos(a/2)^6*sin(a/2)^26*x+600600*ax^19*ay^3*az^6*cos(a/2)^4*sin(a/2)^28*x+300300*ax^19*ay^3*az^8*cos(a/2)^2*sin(a/2)^30*x+600600*ax^19*ay^5*az^2*cos(a/2)^6*sin(a/2)^26*x+900900*ax^19*ay^5*az^4*cos(a/2)^4*sin(a/2)^28*x+600600*ax^19*ay^5*az^6*cos(a/2)^2*sin(a/2)^30*x+600600*ax^19*ay^7*az^2*cos(a/2)^4*sin(a/2)^28*x+600600*ax^19*ay^7*az^4*cos(a/2)^2*sin(a/2)^30*x+300300*ax^19*ay^9*az^2*cos(a/2)^2*sin(a/2)^30*x+6006*ax^20*ay*az*cos(a/2)^10*sin(a/2)^22*z+30030*ax^20*ay*az^3*cos(a/2)^8*sin(a/2)^24*z+60060*ax^20*ay*az^5*cos(a/2)^6*sin(a/2)^26*z+60060*ax^20*ay*az^7*cos(a/2)^4*sin(a/2)^28*z+30030*ax^20*ay*az^9*cos(a/2)^2*sin(a/2)^30*z-210210*ax^20*ay^2*az^2*cos(a/2)^8*sin(a/2)^24*y-420420*ax^20*ay^2*az^4*cos(a/2)^6*sin(a/2)^26*y-420420*ax^20*ay^2*az^6*cos(a/2)^4*sin(a/2)^28*y-210210*ax^20*ay^2*az^8*cos(a/2)^2*sin(a/2)^30*y+30030*ax^20*ay^3*az*cos(a/2)^8*sin(a/2)^24*z+120120*ax^20*ay^3*az^3*cos(a/2)^6*sin(a/2)^26*z+180180*ax^20*ay^3*az^5*cos(a/2)^4*sin(a/2)^28*z+120120*ax^20*ay^3*az^7*cos(a/2)^2*sin(a/2)^30*z-360360*ax^20*ay^4*az^2*cos(a/2)^6*sin(a/2)^26*y-540540*ax^20*ay^4*az^4*cos(a/2)^4*sin(a/2)^28*y-360360*ax^20*ay^4*az^6*cos(a/2)^2*sin(a/2)^30*y+60060*ax^20*ay^5*az*cos(a/2)^6*sin(a/2)^26*z+180180*ax^20*ay^5*az^3*cos(a/2)^4*sin(a/2)^28*z+180180*ax^20*ay^5*az^5*cos(a/2)^2*sin(a/2)^30*z-300300*ax^20*ay^6*az^2*cos(a/2)^4*sin(a/2)^28*y-300300*ax^20*ay^6*az^4*cos(a/2)^2*sin(a/2)^30*y+60060*ax^20*ay^7*az*cos(a/2)^4*sin(a/2)^28*z+120120*ax^20*ay^7*az^3*cos(a/2)^2*sin(a/2)^30*z-120120*ax^20*ay^8*az^2*cos(a/2)^2*sin(a/2)^30*y+30030*ax^20*ay^9*az*cos(a/2)^2*sin(a/2)^30*z+30030*ax^21*ay*az^2*cos(a/2)^8*sin(a/2)^24*x+60060*ax^21*ay*az^4*cos(a/2)^6*sin(a/2)^26*x+60060*ax^21*ay*az^6*cos(a/2)^4*sin(a/2)^28*x+30030*ax^21*ay*az^8*cos(a/2)^2*sin(a/2)^30*x+120120*ax^21*ay^3*az^2*cos(a/2)^6*sin(a/2)^26*x+180180*ax^21*ay^3*az^4*cos(a/2)^4*sin(a/2)^28*x+120120*ax^21*ay^3*az^6*cos(a/2)^2*sin(a/2)^30*x+180180*ax^21*ay^5*az^2*cos(a/2)^4*sin(a/2)^28*x+180180*ax^21*ay^5*az^4*cos(a/2)^2*sin(a/2)^30*x+120120*ax^21*ay^7*az^2*cos(a/2)^2*sin(a/2)^30*x+2730*ax^22*ay*az*cos(a/2)^8*sin(a/2)^24*z+10920*ax^22*ay*az^3*cos(a/2)^6*sin(a/2)^26*z+16380*ax^22*ay*az^5*cos(a/2)^4*sin(a/2)^28*z+10920*ax^22*ay*az^7*cos(a/2)^2*sin(a/2)^30*z-76440*ax^22*ay^2*az^2*cos(a/2)^6*sin(a/2)^26*y-114660*ax^22*ay^2*az^4*cos(a/2)^4*sin(a/2)^28*y-76440*ax^22*ay^2*az^6*cos(a/2)^2*sin(a/2)^30*y+10920*ax^22*ay^3*az*cos(a/2)^6*sin(a/2)^26*z+32760*ax^22*ay^3*az^3*cos(a/2)^4*sin(a/2)^28*z+32760*ax^22*ay^3*az^5*cos(a/2)^2*sin(a/2)^30*z-98280*ax^22*ay^4*az^2*cos(a/2)^4*sin(a/2)^28*y-98280*ax^22*ay^4*az^4*cos(a/2)^2*sin(a/2)^30*y+16380*ax^22*ay^5*az*cos(a/2)^4*sin(a/2)^28*z+32760*ax^22*ay^5*az^3*cos(a/2)^2*sin(a/2)^30*z-54600*ax^22*ay^6*az^2*cos(a/2)^2*sin(a/2)^30*y+10920*ax^22*ay^7*az*cos(a/2)^2*sin(a/2)^30*z+10920*ax^23*ay*az^2*cos(a/2)^6*sin(a/2)^26*x+16380*ax^23*ay*az^4*cos(a/2)^4*sin(a/2)^28*x+10920*ax^23*ay*az^6*cos(a/2)^2*sin(a/2)^30*x+32760*ax^23*ay^3*az^2*cos(a/2)^4*sin(a/2)^28*x+32760*ax^23*ay^3*az^4*cos(a/2)^2*sin(a/2)^30*x+32760*ax^23*ay^5*az^2*cos(a/2)^2*sin(a/2)^30*x+910*ax^24*ay*az*cos(a/2)^6*sin(a/2)^26*z+2730*ax^24*ay*az^3*cos(a/2)^4*sin(a/2)^28*z+2730*ax^24*ay*az^5*cos(a/2)^2*sin(a/2)^30*z-19110*ax^24*ay^2*az^2*cos(a/2)^4*sin(a/2)^28*y-19110*ax^24*ay^2*az^4*cos(a/2)^2*sin(a/2)^30*y+2730*ax^24*ay^3*az*cos(a/2)^4*sin(a/2)^28*z+5460*ax^24*ay^3*az^3*cos(a/2)^2*sin(a/2)^30*z-16380*ax^24*ay^4*az^2*cos(a/2)^2*sin(a/2)^30*y+2730*ax^24*ay^5*az*cos(a/2)^2*sin(a/2)^30*z+2730*ax^25*ay*az^2*cos(a/2)^4*sin(a/2)^28*x+2730*ax^25*ay*az^4*cos(a/2)^2*sin(a/2)^30*x+5460*ax^25*ay^3*az^2*cos(a/2)^2*sin(a/2)^30*x+210*ax^26*ay*az*cos(a/2)^4*sin(a/2)^28*z+420*ax^26*ay*az^3*cos(a/2)^2*sin(a/2)^30*z-2940*ax^26*ay^2*az^2*cos(a/2)^2*sin(a/2)^30*y+420*ax^26*ay^3*az*cos(a/2)^2*sin(a/2)^30*z+420*ax^27*ay*az^2*cos(a/2)^2*sin(a/2)^30*x+30*ax^28*ay*az*cos(a/2)^2*sin(a/2)^30*z)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+az^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*az^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*az^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*az^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*az^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*az^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*az^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*az^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*az^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*az^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*az^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*az^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*az^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*az^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*az^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*az^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*az^30*sin(a/2)^32+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*az^28*sin(a/2)^32+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*az^26*sin(a/2)^32+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*az^24*sin(a/2)^32+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*az^22*sin(a/2)^32+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*az^20*sin(a/2)^32+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*az^18*sin(a/2)^32+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*az^16*sin(a/2)^32+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*az^14*sin(a/2)^32+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*az^12*sin(a/2)^32+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*az^10*sin(a/2)^32+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*az^8*sin(a/2)^32+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*az^6*sin(a/2)^32+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*az^4*sin(a/2)^32+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*az^2*sin(a/2)^32+16*ay^30*cos(a/2)^2*sin(a/2)^30+16*az^2*cos(a/2)^30*sin(a/2)^2+120*az^4*cos(a/2)^28*sin(a/2)^4+560*az^6*cos(a/2)^26*sin(a/2)^6+1820*az^8*cos(a/2)^24*sin(a/2)^8+4368*az^10*cos(a/2)^22*sin(a/2)^10+8008*az^12*cos(a/2)^20*sin(a/2)^12+11440*az^14*cos(a/2)^18*sin(a/2)^14+12870*az^16*cos(a/2)^16*sin(a/2)^16+11440*az^18*cos(a/2)^14*sin(a/2)^18+8008*az^20*cos(a/2)^12*sin(a/2)^20+4368*az^22*cos(a/2)^10*sin(a/2)^22+1820*az^24*cos(a/2)^8*sin(a/2)^24+560*az^26*cos(a/2)^6*sin(a/2)^26+120*az^28*cos(a/2)^4*sin(a/2)^28+16*az^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*az^28*sin(a/2)^32+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*az^26*sin(a/2)^32+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*az^24*sin(a/2)^32+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*az^22*sin(a/2)^32+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*az^20*sin(a/2)^32+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*az^18*sin(a/2)^32+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*az^16*sin(a/2)^32+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*az^14*sin(a/2)^32+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*az^12*sin(a/2)^32+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*az^10*sin(a/2)^32+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*az^8*sin(a/2)^32+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*az^6*sin(a/2)^32+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*az^4*sin(a/2)^32+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*az^2*sin(a/2)^32+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+240*ax^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*az^26*sin(a/2)^32+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*az^24*sin(a/2)^32+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*az^22*sin(a/2)^32+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*az^20*sin(a/2)^32+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*az^18*sin(a/2)^32+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*az^16*sin(a/2)^32+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*az^14*sin(a/2)^32+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*az^12*sin(a/2)^32+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*az^10*sin(a/2)^32+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*az^8*sin(a/2)^32+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*az^6*sin(a/2)^32+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*az^4*sin(a/2)^32+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*az^2*sin(a/2)^32+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+1680*ax^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*az^24*sin(a/2)^32+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*az^22*sin(a/2)^32+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*az^20*sin(a/2)^32+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*az^18*sin(a/2)^32+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*az^16*sin(a/2)^32+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*az^14*sin(a/2)^32+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*az^12*sin(a/2)^32+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*az^10*sin(a/2)^32+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*az^8*sin(a/2)^32+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*az^6*sin(a/2)^32+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*az^4*sin(a/2)^32+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*az^2*sin(a/2)^32+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+7280*ax^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*az^22*sin(a/2)^32+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*az^20*sin(a/2)^32+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*az^18*sin(a/2)^32+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*az^16*sin(a/2)^32+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*az^14*sin(a/2)^32+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*az^12*sin(a/2)^32+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*az^10*sin(a/2)^32+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*az^8*sin(a/2)^32+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*az^6*sin(a/2)^32+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*az^4*sin(a/2)^32+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*az^2*sin(a/2)^32+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+21840*ax^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*az^20*sin(a/2)^32+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*az^18*sin(a/2)^32+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*az^16*sin(a/2)^32+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*az^14*sin(a/2)^32+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*az^12*sin(a/2)^32+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*az^10*sin(a/2)^32+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*az^8*sin(a/2)^32+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*az^6*sin(a/2)^32+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*az^4*sin(a/2)^32+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*az^2*sin(a/2)^32+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+48048*ax^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*az^18*sin(a/2)^32+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*az^16*sin(a/2)^32+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*az^14*sin(a/2)^32+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*az^12*sin(a/2)^32+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*az^10*sin(a/2)^32+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*az^8*sin(a/2)^32+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*az^6*sin(a/2)^32+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*az^4*sin(a/2)^32+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*az^2*sin(a/2)^32+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+80080*ax^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*az^16*sin(a/2)^32+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*az^14*sin(a/2)^32+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*az^12*sin(a/2)^32+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*az^10*sin(a/2)^32+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*az^8*sin(a/2)^32+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*az^6*sin(a/2)^32+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*az^4*sin(a/2)^32+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*az^2*sin(a/2)^32+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*az^14*sin(a/2)^32+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*az^12*sin(a/2)^32+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*az^10*sin(a/2)^32+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*az^8*sin(a/2)^32+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*az^6*sin(a/2)^32+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*az^4*sin(a/2)^32+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*az^2*sin(a/2)^32+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+102960*ax^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*az^12*sin(a/2)^32+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*az^10*sin(a/2)^32+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*az^8*sin(a/2)^32+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*az^6*sin(a/2)^32+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*az^4*sin(a/2)^32+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*az^2*sin(a/2)^32+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+80080*ax^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*az^10*sin(a/2)^32+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*az^8*sin(a/2)^32+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*az^6*sin(a/2)^32+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*az^4*sin(a/2)^32+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*az^2*sin(a/2)^32+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+48048*ax^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*az^8*sin(a/2)^32+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*az^6*sin(a/2)^32+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*az^4*sin(a/2)^32+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*az^2*sin(a/2)^32+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+21840*ax^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*az^6*sin(a/2)^32+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*az^4*sin(a/2)^32+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*az^2*sin(a/2)^32+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+7280*ax^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*az^4*sin(a/2)^32+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*az^2*sin(a/2)^32+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+1680*ax^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*az^2*sin(a/2)^32+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30+240*ax^28*az^2*cos(a/2)^2*sin(a/2)^30+240*ay^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ay^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ay^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ay^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ay^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ay^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ay^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ay^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ay^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ay^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ay^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ay^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ay^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ay^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ay^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ay^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ay^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ay^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ay^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ay^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ay^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ay^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ay^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ay^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ay^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ay^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ay^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ay^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ay^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ay^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ay^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ay^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ay^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ay^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ay^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ay^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ay^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ay^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ay^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ay^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ay^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ay^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ay^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ay^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ay^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ay^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ay^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ay^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ay^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ay^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ay^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ay^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ay^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ay^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ay^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ay^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ay^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ay^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ay^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ay^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ay^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ay^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ay^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ay^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ay^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ay^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ay^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ay^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ay^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ay^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ay^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ay^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ay^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ay^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ay^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ay^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ay^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ay^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ay^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ay^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ay^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ay^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ay^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ay^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ay^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ay^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ay^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ay^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ay^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ay^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ay^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ay^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ay^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ay^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ay^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ay^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ay^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ay^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ay^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ay^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ay^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ay^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ay^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ay^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ay^28*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^2*az^2*cos(a/2)^26*sin(a/2)^6+21840*ax^2*ay^2*az^4*cos(a/2)^24*sin(a/2)^8+87360*ax^2*ay^2*az^6*cos(a/2)^22*sin(a/2)^10+240240*ax^2*ay^2*az^8*cos(a/2)^20*sin(a/2)^12+480480*ax^2*ay^2*az^10*cos(a/2)^18*sin(a/2)^14+720720*ax^2*ay^2*az^12*cos(a/2)^16*sin(a/2)^16+823680*ax^2*ay^2*az^14*cos(a/2)^14*sin(a/2)^18+720720*ax^2*ay^2*az^16*cos(a/2)^12*sin(a/2)^20+480480*ax^2*ay^2*az^18*cos(a/2)^10*sin(a/2)^22+240240*ax^2*ay^2*az^20*cos(a/2)^8*sin(a/2)^24+87360*ax^2*ay^2*az^22*cos(a/2)^6*sin(a/2)^26+21840*ax^2*ay^2*az^24*cos(a/2)^4*sin(a/2)^28+3360*ax^2*ay^2*az^26*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^4*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^2*ay^4*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^4*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^4*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^4*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^4*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^4*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^4*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^4*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^4*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^4*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^4*az^24*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^6*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^6*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^2*ay^6*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^6*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^6*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^6*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^6*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^6*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^6*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^6*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^6*az^22*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^8*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^8*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^8*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^2*ay^8*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^8*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^8*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^8*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^8*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^8*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^8*az^20*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^10*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^10*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^10*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^10*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^2*ay^10*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^10*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^10*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^10*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^10*az^18*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^12*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^12*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^12*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^12*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^12*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^2*ay^12*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^12*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^12*az^16*cos(a/2)^2*sin(a/2)^30+823680*ax^2*ay^14*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^14*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^14*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^14*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^14*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^14*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^2*ay^14*az^14*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^16*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^16*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^16*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^16*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^16*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^16*az^12*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^18*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^18*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^18*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^18*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^18*az^10*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^20*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^20*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^20*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^20*az^8*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^22*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^22*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^22*az^6*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^24*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^24*az^4*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^26*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^2*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^4*ay^2*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^4*ay^2*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^4*ay^2*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^4*ay^2*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^4*ay^2*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^4*ay^2*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^4*ay^2*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^4*ay^2*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^4*ay^2*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^4*ay^2*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^4*ay^2*az^24*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^4*az^2*cos(a/2)^22*sin(a/2)^10+720720*ax^4*ay^4*az^4*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^4*az^6*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^4*az^8*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^4*az^10*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^4*az^12*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^4*az^14*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^4*az^16*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^4*az^18*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^4*az^20*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^4*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^6*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^6*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^4*ay^6*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^6*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^6*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^6*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^6*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^6*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^6*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^6*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^8*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^8*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^8*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^4*ay^8*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^8*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^8*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^8*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^8*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^8*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^10*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^10*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^10*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^10*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^4*ay^10*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^10*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^10*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^10*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^12*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^12*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^12*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^12*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^12*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^4*ay^12*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^12*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^14*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^14*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^14*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^14*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^14*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^14*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^16*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^16*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^16*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^16*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^16*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^18*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^18*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^18*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^18*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^20*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^20*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^20*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^22*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^22*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^24*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^2*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^6*ay^2*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^6*ay^2*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^6*ay^2*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^6*ay^2*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^6*ay^2*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^6*ay^2*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^6*ay^2*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^6*ay^2*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^6*ay^2*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^6*ay^2*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^4*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^6*ay^4*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^4*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^4*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^4*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^4*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^4*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^4*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^4*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^4*az^20*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^6*az^2*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^6*az^4*cos(a/2)^16*sin(a/2)^16+19219200*ax^6*ay^6*az^6*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^6*az^8*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^6*az^10*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^6*az^12*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^6*az^14*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^6*az^16*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^6*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^8*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^8*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^8*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^6*ay^8*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^8*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^8*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^8*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^8*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^10*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^10*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^10*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^10*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^6*ay^10*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^10*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^10*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^6*ay^12*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^12*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^12*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^12*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^12*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^6*ay^12*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^14*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^14*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^14*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^14*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^14*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^16*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^16*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^16*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^16*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^18*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^18*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^18*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^20*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^20*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^22*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^2*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^8*ay^2*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^8*ay^2*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^8*ay^2*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^8*ay^2*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^8*ay^2*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^8*ay^2*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^8*ay^2*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^8*ay^2*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^8*ay^2*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^4*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^8*ay^4*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^4*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^4*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^4*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^4*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^4*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^4*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^4*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^6*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^6*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^8*ay^6*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^6*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^6*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^6*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^6*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^6*az^16*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^8*az^2*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^8*az^4*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^8*az^6*cos(a/2)^10*sin(a/2)^22+63063000*ax^8*ay^8*az^8*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^8*az^10*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^8*az^12*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^8*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^10*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^10*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^10*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^10*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^8*ay^10*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^10*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^12*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^12*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^12*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^12*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^12*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^14*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^14*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^14*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^14*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^16*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^16*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^16*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^18*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^18*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^20*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^2*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^10*ay^2*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^10*ay^2*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^10*ay^2*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^10*ay^2*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^10*ay^2*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^10*ay^2*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^10*ay^2*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^10*ay^2*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^4*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^10*ay^4*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^4*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^4*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^4*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^4*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^4*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^4*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^6*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^6*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^10*ay^6*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^6*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^6*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^6*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^6*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^8*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^8*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^8*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^10*ay^8*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^8*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^8*az^12*cos(a/2)^2*sin(a/2)^30+12108096*ax^10*ay^10*az^2*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^10*az^4*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^10*az^6*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^10*az^8*cos(a/2)^4*sin(a/2)^28+12108096*ax^10*ay^10*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^12*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^12*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^12*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^12*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^14*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^14*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^14*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^16*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^16*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^18*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^2*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^12*ay^2*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^12*ay^2*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^12*ay^2*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^12*ay^2*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^12*ay^2*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^12*ay^2*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^12*ay^2*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^4*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^12*ay^4*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^4*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^4*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^4*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^4*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^4*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^6*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^6*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^12*ay^6*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^6*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^6*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^6*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^8*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^8*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^8*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^12*ay^8*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^8*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^10*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^10*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^10*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^10*az^8*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^12*az^2*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^12*az^4*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^12*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^14*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^14*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^16*az^2*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^2*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^14*ay^2*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^14*ay^2*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^14*ay^2*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^14*ay^2*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^14*ay^2*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^14*ay^2*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^4*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^14*ay^4*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^4*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^4*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^4*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^4*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^6*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^6*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^14*ay^6*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^6*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^6*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^14*ay^8*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^8*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^8*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^14*ay^8*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^10*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^10*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^10*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^12*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^12*az^4*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^14*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^2*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^16*ay^2*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^16*ay^2*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^16*ay^2*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^16*ay^2*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^16*ay^2*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^4*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^16*ay^4*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^4*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^4*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^4*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^6*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^6*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^16*ay^6*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^6*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^8*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^8*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^8*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^10*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^10*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^12*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^2*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^18*ay^2*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^18*ay^2*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^18*ay^2*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^18*ay^2*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^4*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^18*ay^4*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^4*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^4*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^18*ay^6*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^6*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^18*ay^6*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^8*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^8*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^10*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^2*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^20*ay^2*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^20*ay^2*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^20*ay^2*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^4*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^20*ay^4*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^4*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^6*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^6*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^8*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^2*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^22*ay^2*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^22*ay^2*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^22*ay^4*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^22*ay^4*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^6*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^2*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^24*ay^2*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^4*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^26*ay^2*az^2*cos(a/2)^2*sin(a/2)^30)},{(-2*az*cos(a/2)^7*sin(a/2)-6*az^3*cos(a/2)^5*sin(a/2)^3-6*az^5*cos(a/2)^3*sin(a/2)^5-2*az^7*cos(a/2)*sin(a/2)^7-6*ax^2*az*cos(a/2)^5*sin(a/2)^3-12*ax^2*az^3*cos(a/2)^3*sin(a/2)^5-6*ax^2*az^5*cos(a/2)*sin(a/2)^7-6*ax^4*az*cos(a/2)^3*sin(a/2)^5-6*ax^4*az^3*cos(a/2)*sin(a/2)^7-2*ax^6*az*cos(a/2)*sin(a/2)^7-6*ay^2*az*cos(a/2)^5*sin(a/2)^3-12*ay^2*az^3*cos(a/2)^3*sin(a/2)^5-6*ay^2*az^5*cos(a/2)*sin(a/2)^7-6*ay^4*az*cos(a/2)^3*sin(a/2)^5-6*ay^4*az^3*cos(a/2)*sin(a/2)^7-2*ay^6*az*cos(a/2)*sin(a/2)^7-12*ax^2*ay^2*az*cos(a/2)^3*sin(a/2)^5-12*ax^2*ay^2*az^3*cos(a/2)*sin(a/2)^7-6*ax^2*ay^4*az*cos(a/2)*sin(a/2)^7-6*ax^4*ay^2*az*cos(a/2)*sin(a/2)^7)/(cos(a/2)^8+ax^8*sin(a/2)^8+ay^8*sin(a/2)^8+az^8*sin(a/2)^8+4*ax^2*ay^6*sin(a/2)^8+4*ax^2*az^6*sin(a/2)^8+4*ax^2*cos(a/2)^6*sin(a/2)^2+6*ax^4*ay^4*sin(a/2)^8+6*ax^4*az^4*sin(a/2)^8+6*ax^4*cos(a/2)^4*sin(a/2)^4+4*ax^6*ay^2*sin(a/2)^8+4*ax^6*az^2*sin(a/2)^8+4*ax^6*cos(a/2)^2*sin(a/2)^6+4*ay^2*az^6*sin(a/2)^8+4*ay^2*cos(a/2)^6*sin(a/2)^2+6*ay^4*az^4*sin(a/2)^8+6*ay^4*cos(a/2)^4*sin(a/2)^4+4*ay^6*az^2*sin(a/2)^8+4*ay^6*cos(a/2)^2*sin(a/2)^6+4*az^2*cos(a/2)^6*sin(a/2)^2+6*az^4*cos(a/2)^4*sin(a/2)^4+4*az^6*cos(a/2)^2*sin(a/2)^6+12*ax^2*ay^2*az^4*sin(a/2)^8+12*ax^2*ay^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*ay^4*az^2*sin(a/2)^8+12*ax^2*ay^4*cos(a/2)^2*sin(a/2)^6+12*ax^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ax^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ax^4*ay^2*az^2*sin(a/2)^8+12*ax^4*ay^2*cos(a/2)^2*sin(a/2)^6+12*ax^4*az^2*cos(a/2)^2*sin(a/2)^6+12*ay^2*az^2*cos(a/2)^4*sin(a/2)^4+12*ay^2*az^4*cos(a/2)^2*sin(a/2)^6+12*ay^4*az^2*cos(a/2)^2*sin(a/2)^6+24*ax^2*ay^2*az^2*cos(a/2)^2*sin(a/2)^6),(-cos(a/2)^32*z-ax^32*sin(a/2)^32*z-ay^32*sin(a/2)^32*z+az^32*sin(a/2)^32*z+2*ax*az^31*sin(a/2)^32*x-16*ax^2*ay^30*sin(a/2)^32*z+14*ax^2*az^30*sin(a/2)^32*z-16*ax^2*cos(a/2)^30*sin(a/2)^2*z+30*ax^3*az^29*sin(a/2)^32*x-120*ax^4*ay^28*sin(a/2)^32*z+90*ax^4*az^28*sin(a/2)^32*z-120*ax^4*cos(a/2)^28*sin(a/2)^4*z+210*ax^5*az^27*sin(a/2)^32*x-560*ax^6*ay^26*sin(a/2)^32*z+350*ax^6*az^26*sin(a/2)^32*z-560*ax^6*cos(a/2)^26*sin(a/2)^6*z+910*ax^7*az^25*sin(a/2)^32*x-1820*ax^8*ay^24*sin(a/2)^32*z+910*ax^8*az^24*sin(a/2)^32*z-1820*ax^8*cos(a/2)^24*sin(a/2)^8*z+2730*ax^9*az^23*sin(a/2)^32*x-4368*ax^10*ay^22*sin(a/2)^32*z+1638*ax^10*az^22*sin(a/2)^32*z-4368*ax^10*cos(a/2)^22*sin(a/2)^10*z+6006*ax^11*az^21*sin(a/2)^32*x-8008*ax^12*ay^20*sin(a/2)^32*z+2002*ax^12*az^20*sin(a/2)^32*z-8008*ax^12*cos(a/2)^20*sin(a/2)^12*z+10010*ax^13*az^19*sin(a/2)^32*x-11440*ax^14*ay^18*sin(a/2)^32*z+1430*ax^14*az^18*sin(a/2)^32*z-11440*ax^14*cos(a/2)^18*sin(a/2)^14*z+12870*ax^15*az^17*sin(a/2)^32*x-12870*ax^16*ay^16*sin(a/2)^32*z-12870*ax^16*cos(a/2)^16*sin(a/2)^16*z+12870*ax^17*az^15*sin(a/2)^32*x-11440*ax^18*ay^14*sin(a/2)^32*z-1430*ax^18*az^14*sin(a/2)^32*z-11440*ax^18*cos(a/2)^14*sin(a/2)^18*z+10010*ax^19*az^13*sin(a/2)^32*x-8008*ax^20*ay^12*sin(a/2)^32*z-2002*ax^20*az^12*sin(a/2)^32*z-8008*ax^20*cos(a/2)^12*sin(a/2)^20*z+6006*ax^21*az^11*sin(a/2)^32*x-4368*ax^22*ay^10*sin(a/2)^32*z-1638*ax^22*az^10*sin(a/2)^32*z-4368*ax^22*cos(a/2)^10*sin(a/2)^22*z+2730*ax^23*az^9*sin(a/2)^32*x-1820*ax^24*ay^8*sin(a/2)^32*z-910*ax^24*az^8*sin(a/2)^32*z-1820*ax^24*cos(a/2)^8*sin(a/2)^24*z+910*ax^25*az^7*sin(a/2)^32*x-560*ax^26*ay^6*sin(a/2)^32*z-350*ax^26*az^6*sin(a/2)^32*z-560*ax^26*cos(a/2)^6*sin(a/2)^26*z+210*ax^27*az^5*sin(a/2)^32*x-120*ax^28*ay^4*sin(a/2)^32*z-90*ax^28*az^4*sin(a/2)^32*z-120*ax^28*cos(a/2)^4*sin(a/2)^28*z+30*ax^29*az^3*sin(a/2)^32*x-16*ax^30*ay^2*sin(a/2)^32*z-14*ax^30*az^2*sin(a/2)^32*z-16*ax^30*cos(a/2)^2*sin(a/2)^30*z+2*ax^31*az*sin(a/2)^32*x+2*ay*az^31*sin(a/2)^32*y+14*ay^2*az^30*sin(a/2)^32*z-16*ay^2*cos(a/2)^30*sin(a/2)^2*z+30*ay^3*az^29*sin(a/2)^32*y+90*ay^4*az^28*sin(a/2)^32*z-120*ay^4*cos(a/2)^28*sin(a/2)^4*z+210*ay^5*az^27*sin(a/2)^32*y+350*ay^6*az^26*sin(a/2)^32*z-560*ay^6*cos(a/2)^26*sin(a/2)^6*z+910*ay^7*az^25*sin(a/2)^32*y+910*ay^8*az^24*sin(a/2)^32*z-1820*ay^8*cos(a/2)^24*sin(a/2)^8*z+2730*ay^9*az^23*sin(a/2)^32*y+1638*ay^10*az^22*sin(a/2)^32*z-4368*ay^10*cos(a/2)^22*sin(a/2)^10*z+6006*ay^11*az^21*sin(a/2)^32*y+2002*ay^12*az^20*sin(a/2)^32*z-8008*ay^12*cos(a/2)^20*sin(a/2)^12*z+10010*ay^13*az^19*sin(a/2)^32*y+1430*ay^14*az^18*sin(a/2)^32*z-11440*ay^14*cos(a/2)^18*sin(a/2)^14*z+12870*ay^15*az^17*sin(a/2)^32*y-12870*ay^16*cos(a/2)^16*sin(a/2)^16*z+12870*ay^17*az^15*sin(a/2)^32*y-1430*ay^18*az^14*sin(a/2)^32*z-11440*ay^18*cos(a/2)^14*sin(a/2)^18*z+10010*ay^19*az^13*sin(a/2)^32*y-2002*ay^20*az^12*sin(a/2)^32*z-8008*ay^20*cos(a/2)^12*sin(a/2)^20*z+6006*ay^21*az^11*sin(a/2)^32*y-1638*ay^22*az^10*sin(a/2)^32*z-4368*ay^22*cos(a/2)^10*sin(a/2)^22*z+2730*ay^23*az^9*sin(a/2)^32*y-910*ay^24*az^8*sin(a/2)^32*z-1820*ay^24*cos(a/2)^8*sin(a/2)^24*z+910*ay^25*az^7*sin(a/2)^32*y-350*ay^26*az^6*sin(a/2)^32*z-560*ay^26*cos(a/2)^6*sin(a/2)^26*z+210*ay^27*az^5*sin(a/2)^32*y-90*ay^28*az^4*sin(a/2)^32*z-120*ay^28*cos(a/2)^4*sin(a/2)^28*z+30*ay^29*az^3*sin(a/2)^32*y-14*ay^30*az^2*sin(a/2)^32*z-16*ay^30*cos(a/2)^2*sin(a/2)^30*z+2*ay^31*az*sin(a/2)^32*y-14*az^2*cos(a/2)^30*sin(a/2)^2*z-90*az^4*cos(a/2)^28*sin(a/2)^4*z-350*az^6*cos(a/2)^26*sin(a/2)^6*z-910*az^8*cos(a/2)^24*sin(a/2)^8*z-1638*az^10*cos(a/2)^22*sin(a/2)^10*z-2002*az^12*cos(a/2)^20*sin(a/2)^12*z-1430*az^14*cos(a/2)^18*sin(a/2)^14*z+1430*az^18*cos(a/2)^14*sin(a/2)^18*z+2002*az^20*cos(a/2)^12*sin(a/2)^20*z+1638*az^22*cos(a/2)^10*sin(a/2)^22*z+910*az^24*cos(a/2)^8*sin(a/2)^24*z+350*az^26*cos(a/2)^6*sin(a/2)^26*z+90*az^28*cos(a/2)^4*sin(a/2)^28*z+14*az^30*cos(a/2)^2*sin(a/2)^30*z+30*ax*ay^2*az^29*sin(a/2)^32*x+210*ax*ay^4*az^27*sin(a/2)^32*x+910*ax*ay^6*az^25*sin(a/2)^32*x+2730*ax*ay^8*az^23*sin(a/2)^32*x+6006*ax*ay^10*az^21*sin(a/2)^32*x+10010*ax*ay^12*az^19*sin(a/2)^32*x+12870*ax*ay^14*az^17*sin(a/2)^32*x+12870*ax*ay^16*az^15*sin(a/2)^32*x+10010*ax*ay^18*az^13*sin(a/2)^32*x+6006*ax*ay^20*az^11*sin(a/2)^32*x+2730*ax*ay^22*az^9*sin(a/2)^32*x+910*ax*ay^24*az^7*sin(a/2)^32*x+210*ax*ay^26*az^5*sin(a/2)^32*x+30*ax*ay^28*az^3*sin(a/2)^32*x+2*ax*ay^30*az*sin(a/2)^32*x+2*ax*az*cos(a/2)^30*sin(a/2)^2*x+30*ax*az^3*cos(a/2)^28*sin(a/2)^4*x+210*ax*az^5*cos(a/2)^26*sin(a/2)^6*x+910*ax*az^7*cos(a/2)^24*sin(a/2)^8*x+2730*ax*az^9*cos(a/2)^22*sin(a/2)^10*x+6006*ax*az^11*cos(a/2)^20*sin(a/2)^12*x+10010*ax*az^13*cos(a/2)^18*sin(a/2)^14*x+12870*ax*az^15*cos(a/2)^16*sin(a/2)^16*x+12870*ax*az^17*cos(a/2)^14*sin(a/2)^18*x+10010*ax*az^19*cos(a/2)^12*sin(a/2)^20*x+6006*ax*az^21*cos(a/2)^10*sin(a/2)^22*x+2730*ax*az^23*cos(a/2)^8*sin(a/2)^24*x+910*ax*az^25*cos(a/2)^6*sin(a/2)^26*x+210*ax*az^27*cos(a/2)^4*sin(a/2)^28*x+30*ax*az^29*cos(a/2)^2*sin(a/2)^30*x+30*ax^2*ay*az^29*sin(a/2)^32*y+180*ax^2*ay^2*az^28*sin(a/2)^32*z-240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4*z+420*ax^2*ay^3*az^27*sin(a/2)^32*y+1050*ax^2*ay^4*az^26*sin(a/2)^32*z-1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6*z+2730*ax^2*ay^5*az^25*sin(a/2)^32*y+3640*ax^2*ay^6*az^24*sin(a/2)^32*z-7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8*z+10920*ax^2*ay^7*az^23*sin(a/2)^32*y+8190*ax^2*ay^8*az^22*sin(a/2)^32*z-21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10*z+30030*ax^2*ay^9*az^21*sin(a/2)^32*y+12012*ax^2*ay^10*az^20*sin(a/2)^32*z-48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12*z+60060*ax^2*ay^11*az^19*sin(a/2)^32*y+10010*ax^2*ay^12*az^18*sin(a/2)^32*z-80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14*z+90090*ax^2*ay^13*az^17*sin(a/2)^32*y-102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16*z+102960*ax^2*ay^15*az^15*sin(a/2)^32*y-12870*ax^2*ay^16*az^14*sin(a/2)^32*z-102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18*z+90090*ax^2*ay^17*az^13*sin(a/2)^32*y-20020*ax^2*ay^18*az^12*sin(a/2)^32*z-80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20*z+60060*ax^2*ay^19*az^11*sin(a/2)^32*y-18018*ax^2*ay^20*az^10*sin(a/2)^32*z-48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22*z+30030*ax^2*ay^21*az^9*sin(a/2)^32*y-10920*ax^2*ay^22*az^8*sin(a/2)^32*z-21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24*z+10920*ax^2*ay^23*az^7*sin(a/2)^32*y-4550*ax^2*ay^24*az^6*sin(a/2)^32*z-7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26*z+2730*ax^2*ay^25*az^5*sin(a/2)^32*y-1260*ax^2*ay^26*az^4*sin(a/2)^32*z-1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28*z+420*ax^2*ay^27*az^3*sin(a/2)^32*y-210*ax^2*ay^28*az^2*sin(a/2)^32*z-240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30*z+30*ax^2*ay^29*az*sin(a/2)^32*y-210*ax^2*az^2*cos(a/2)^28*sin(a/2)^4*z-1260*ax^2*az^4*cos(a/2)^26*sin(a/2)^6*z-4550*ax^2*az^6*cos(a/2)^24*sin(a/2)^8*z-10920*ax^2*az^8*cos(a/2)^22*sin(a/2)^10*z-18018*ax^2*az^10*cos(a/2)^20*sin(a/2)^12*z-20020*ax^2*az^12*cos(a/2)^18*sin(a/2)^14*z-12870*ax^2*az^14*cos(a/2)^16*sin(a/2)^16*z+10010*ax^2*az^18*cos(a/2)^12*sin(a/2)^20*z+12012*ax^2*az^20*cos(a/2)^10*sin(a/2)^22*z+8190*ax^2*az^22*cos(a/2)^8*sin(a/2)^24*z+3640*ax^2*az^24*cos(a/2)^6*sin(a/2)^26*z+1050*ax^2*az^26*cos(a/2)^4*sin(a/2)^28*z+180*ax^2*az^28*cos(a/2)^2*sin(a/2)^30*z+420*ax^3*ay^2*az^27*sin(a/2)^32*x+2730*ax^3*ay^4*az^25*sin(a/2)^32*x+10920*ax^3*ay^6*az^23*sin(a/2)^32*x+30030*ax^3*ay^8*az^21*sin(a/2)^32*x+60060*ax^3*ay^10*az^19*sin(a/2)^32*x+90090*ax^3*ay^12*az^17*sin(a/2)^32*x+102960*ax^3*ay^14*az^15*sin(a/2)^32*x+90090*ax^3*ay^16*az^13*sin(a/2)^32*x+60060*ax^3*ay^18*az^11*sin(a/2)^32*x+30030*ax^3*ay^20*az^9*sin(a/2)^32*x+10920*ax^3*ay^22*az^7*sin(a/2)^32*x+2730*ax^3*ay^24*az^5*sin(a/2)^32*x+420*ax^3*ay^26*az^3*sin(a/2)^32*x+30*ax^3*ay^28*az*sin(a/2)^32*x+30*ax^3*az*cos(a/2)^28*sin(a/2)^4*x+420*ax^3*az^3*cos(a/2)^26*sin(a/2)^6*x+2730*ax^3*az^5*cos(a/2)^24*sin(a/2)^8*x+10920*ax^3*az^7*cos(a/2)^22*sin(a/2)^10*x+30030*ax^3*az^9*cos(a/2)^20*sin(a/2)^12*x+60060*ax^3*az^11*cos(a/2)^18*sin(a/2)^14*x+90090*ax^3*az^13*cos(a/2)^16*sin(a/2)^16*x+102960*ax^3*az^15*cos(a/2)^14*sin(a/2)^18*x+90090*ax^3*az^17*cos(a/2)^12*sin(a/2)^20*x+60060*ax^3*az^19*cos(a/2)^10*sin(a/2)^22*x+30030*ax^3*az^21*cos(a/2)^8*sin(a/2)^24*x+10920*ax^3*az^23*cos(a/2)^6*sin(a/2)^26*x+2730*ax^3*az^25*cos(a/2)^4*sin(a/2)^28*x+420*ax^3*az^27*cos(a/2)^2*sin(a/2)^30*x+210*ax^4*ay*az^27*sin(a/2)^32*y+1050*ax^4*ay^2*az^26*sin(a/2)^32*z-1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6*z+2730*ax^4*ay^3*az^25*sin(a/2)^32*y+5460*ax^4*ay^4*az^24*sin(a/2)^32*z-10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8*z+16380*ax^4*ay^5*az^23*sin(a/2)^32*y+16380*ax^4*ay^6*az^22*sin(a/2)^32*z-43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10*z+60060*ax^4*ay^7*az^21*sin(a/2)^32*y+30030*ax^4*ay^8*az^20*sin(a/2)^32*z-120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12*z+150150*ax^4*ay^9*az^19*sin(a/2)^32*y+30030*ax^4*ay^10*az^18*sin(a/2)^32*z-240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14*z+270270*ax^4*ay^11*az^17*sin(a/2)^32*y-360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16*z+360360*ax^4*ay^13*az^15*sin(a/2)^32*y-51480*ax^4*ay^14*az^14*sin(a/2)^32*z-411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18*z+360360*ax^4*ay^15*az^13*sin(a/2)^32*y-90090*ax^4*ay^16*az^12*sin(a/2)^32*z-360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20*z+270270*ax^4*ay^17*az^11*sin(a/2)^32*y-90090*ax^4*ay^18*az^10*sin(a/2)^32*z-240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22*z+150150*ax^4*ay^19*az^9*sin(a/2)^32*y-60060*ax^4*ay^20*az^8*sin(a/2)^32*z-120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24*z+60060*ax^4*ay^21*az^7*sin(a/2)^32*y-27300*ax^4*ay^22*az^6*sin(a/2)^32*z-43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26*z+16380*ax^4*ay^23*az^5*sin(a/2)^32*y-8190*ax^4*ay^24*az^4*sin(a/2)^32*z-10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28*z+2730*ax^4*ay^25*az^3*sin(a/2)^32*y-1470*ax^4*ay^26*az^2*sin(a/2)^32*z-1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30*z+210*ax^4*ay^27*az*sin(a/2)^32*y-1470*ax^4*az^2*cos(a/2)^26*sin(a/2)^6*z-8190*ax^4*az^4*cos(a/2)^24*sin(a/2)^8*z-27300*ax^4*az^6*cos(a/2)^22*sin(a/2)^10*z-60060*ax^4*az^8*cos(a/2)^20*sin(a/2)^12*z-90090*ax^4*az^10*cos(a/2)^18*sin(a/2)^14*z-90090*ax^4*az^12*cos(a/2)^16*sin(a/2)^16*z-51480*ax^4*az^14*cos(a/2)^14*sin(a/2)^18*z+30030*ax^4*az^18*cos(a/2)^10*sin(a/2)^22*z+30030*ax^4*az^20*cos(a/2)^8*sin(a/2)^24*z+16380*ax^4*az^22*cos(a/2)^6*sin(a/2)^26*z+5460*ax^4*az^24*cos(a/2)^4*sin(a/2)^28*z+1050*ax^4*az^26*cos(a/2)^2*sin(a/2)^30*z+2730*ax^5*ay^2*az^25*sin(a/2)^32*x+16380*ax^5*ay^4*az^23*sin(a/2)^32*x+60060*ax^5*ay^6*az^21*sin(a/2)^32*x+150150*ax^5*ay^8*az^19*sin(a/2)^32*x+270270*ax^5*ay^10*az^17*sin(a/2)^32*x+360360*ax^5*ay^12*az^15*sin(a/2)^32*x+360360*ax^5*ay^14*az^13*sin(a/2)^32*x+270270*ax^5*ay^16*az^11*sin(a/2)^32*x+150150*ax^5*ay^18*az^9*sin(a/2)^32*x+60060*ax^5*ay^20*az^7*sin(a/2)^32*x+16380*ax^5*ay^22*az^5*sin(a/2)^32*x+2730*ax^5*ay^24*az^3*sin(a/2)^32*x+210*ax^5*ay^26*az*sin(a/2)^32*x+210*ax^5*az*cos(a/2)^26*sin(a/2)^6*x+2730*ax^5*az^3*cos(a/2)^24*sin(a/2)^8*x+16380*ax^5*az^5*cos(a/2)^22*sin(a/2)^10*x+60060*ax^5*az^7*cos(a/2)^20*sin(a/2)^12*x+150150*ax^5*az^9*cos(a/2)^18*sin(a/2)^14*x+270270*ax^5*az^11*cos(a/2)^16*sin(a/2)^16*x+360360*ax^5*az^13*cos(a/2)^14*sin(a/2)^18*x+360360*ax^5*az^15*cos(a/2)^12*sin(a/2)^20*x+270270*ax^5*az^17*cos(a/2)^10*sin(a/2)^22*x+150150*ax^5*az^19*cos(a/2)^8*sin(a/2)^24*x+60060*ax^5*az^21*cos(a/2)^6*sin(a/2)^26*x+16380*ax^5*az^23*cos(a/2)^4*sin(a/2)^28*x+2730*ax^5*az^25*cos(a/2)^2*sin(a/2)^30*x+910*ax^6*ay*az^25*sin(a/2)^32*y+3640*ax^6*ay^2*az^24*sin(a/2)^32*z-7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8*z+10920*ax^6*ay^3*az^23*sin(a/2)^32*y+16380*ax^6*ay^4*az^22*sin(a/2)^32*z-43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10*z+60060*ax^6*ay^5*az^21*sin(a/2)^32*y+40040*ax^6*ay^6*az^20*sin(a/2)^32*z-160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12*z+200200*ax^6*ay^7*az^19*sin(a/2)^32*y+50050*ax^6*ay^8*az^18*sin(a/2)^32*z-400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14*z+450450*ax^6*ay^9*az^17*sin(a/2)^32*y-720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16*z+720720*ax^6*ay^11*az^15*sin(a/2)^32*y-120120*ax^6*ay^12*az^14*sin(a/2)^32*z-960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18*z+840840*ax^6*ay^13*az^13*sin(a/2)^32*y-240240*ax^6*ay^14*az^12*sin(a/2)^32*z-960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20*z+720720*ax^6*ay^15*az^11*sin(a/2)^32*y-270270*ax^6*ay^16*az^10*sin(a/2)^32*z-720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22*z+450450*ax^6*ay^17*az^9*sin(a/2)^32*y-200200*ax^6*ay^18*az^8*sin(a/2)^32*z-400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24*z+200200*ax^6*ay^19*az^7*sin(a/2)^32*y-100100*ax^6*ay^20*az^6*sin(a/2)^32*z-160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26*z+60060*ax^6*ay^21*az^5*sin(a/2)^32*y-32760*ax^6*ay^22*az^4*sin(a/2)^32*z-43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28*z+10920*ax^6*ay^23*az^3*sin(a/2)^32*y-6370*ax^6*ay^24*az^2*sin(a/2)^32*z-7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30*z+910*ax^6*ay^25*az*sin(a/2)^32*y-6370*ax^6*az^2*cos(a/2)^24*sin(a/2)^8*z-32760*ax^6*az^4*cos(a/2)^22*sin(a/2)^10*z-100100*ax^6*az^6*cos(a/2)^20*sin(a/2)^12*z-200200*ax^6*az^8*cos(a/2)^18*sin(a/2)^14*z-270270*ax^6*az^10*cos(a/2)^16*sin(a/2)^16*z-240240*ax^6*az^12*cos(a/2)^14*sin(a/2)^18*z-120120*ax^6*az^14*cos(a/2)^12*sin(a/2)^20*z+50050*ax^6*az^18*cos(a/2)^8*sin(a/2)^24*z+40040*ax^6*az^20*cos(a/2)^6*sin(a/2)^26*z+16380*ax^6*az^22*cos(a/2)^4*sin(a/2)^28*z+3640*ax^6*az^24*cos(a/2)^2*sin(a/2)^30*z+10920*ax^7*ay^2*az^23*sin(a/2)^32*x+60060*ax^7*ay^4*az^21*sin(a/2)^32*x+200200*ax^7*ay^6*az^19*sin(a/2)^32*x+450450*ax^7*ay^8*az^17*sin(a/2)^32*x+720720*ax^7*ay^10*az^15*sin(a/2)^32*x+840840*ax^7*ay^12*az^13*sin(a/2)^32*x+720720*ax^7*ay^14*az^11*sin(a/2)^32*x+450450*ax^7*ay^16*az^9*sin(a/2)^32*x+200200*ax^7*ay^18*az^7*sin(a/2)^32*x+60060*ax^7*ay^20*az^5*sin(a/2)^32*x+10920*ax^7*ay^22*az^3*sin(a/2)^32*x+910*ax^7*ay^24*az*sin(a/2)^32*x+910*ax^7*az*cos(a/2)^24*sin(a/2)^8*x+10920*ax^7*az^3*cos(a/2)^22*sin(a/2)^10*x+60060*ax^7*az^5*cos(a/2)^20*sin(a/2)^12*x+200200*ax^7*az^7*cos(a/2)^18*sin(a/2)^14*x+450450*ax^7*az^9*cos(a/2)^16*sin(a/2)^16*x+720720*ax^7*az^11*cos(a/2)^14*sin(a/2)^18*x+840840*ax^7*az^13*cos(a/2)^12*sin(a/2)^20*x+720720*ax^7*az^15*cos(a/2)^10*sin(a/2)^22*x+450450*ax^7*az^17*cos(a/2)^8*sin(a/2)^24*x+200200*ax^7*az^19*cos(a/2)^6*sin(a/2)^26*x+60060*ax^7*az^21*cos(a/2)^4*sin(a/2)^28*x+10920*ax^7*az^23*cos(a/2)^2*sin(a/2)^30*x+2730*ax^8*ay*az^23*sin(a/2)^32*y+8190*ax^8*ay^2*az^22*sin(a/2)^32*z-21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10*z+30030*ax^8*ay^3*az^21*sin(a/2)^32*y+30030*ax^8*ay^4*az^20*sin(a/2)^32*z-120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12*z+150150*ax^8*ay^5*az^19*sin(a/2)^32*y+50050*ax^8*ay^6*az^18*sin(a/2)^32*z-400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14*z+450450*ax^8*ay^7*az^17*sin(a/2)^32*y-900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16*z+900900*ax^8*ay^9*az^15*sin(a/2)^32*y-180180*ax^8*ay^10*az^14*sin(a/2)^32*z-1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18*z+1261260*ax^8*ay^11*az^13*sin(a/2)^32*y-420420*ax^8*ay^12*az^12*sin(a/2)^32*z-1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20*z+1261260*ax^8*ay^13*az^11*sin(a/2)^32*y-540540*ax^8*ay^14*az^10*sin(a/2)^32*z-1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22*z+900900*ax^8*ay^15*az^9*sin(a/2)^32*y-450450*ax^8*ay^16*az^8*sin(a/2)^32*z-900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24*z+450450*ax^8*ay^17*az^7*sin(a/2)^32*y-250250*ax^8*ay^18*az^6*sin(a/2)^32*z-400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26*z+150150*ax^8*ay^19*az^5*sin(a/2)^32*y-90090*ax^8*ay^20*az^4*sin(a/2)^32*z-120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28*z+30030*ax^8*ay^21*az^3*sin(a/2)^32*y-19110*ax^8*ay^22*az^2*sin(a/2)^32*z-21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30*z+2730*ax^8*ay^23*az*sin(a/2)^32*y-19110*ax^8*az^2*cos(a/2)^22*sin(a/2)^10*z-90090*ax^8*az^4*cos(a/2)^20*sin(a/2)^12*z-250250*ax^8*az^6*cos(a/2)^18*sin(a/2)^14*z-450450*ax^8*az^8*cos(a/2)^16*sin(a/2)^16*z-540540*ax^8*az^10*cos(a/2)^14*sin(a/2)^18*z-420420*ax^8*az^12*cos(a/2)^12*sin(a/2)^20*z-180180*ax^8*az^14*cos(a/2)^10*sin(a/2)^22*z+50050*ax^8*az^18*cos(a/2)^6*sin(a/2)^26*z+30030*ax^8*az^20*cos(a/2)^4*sin(a/2)^28*z+8190*ax^8*az^22*cos(a/2)^2*sin(a/2)^30*z+30030*ax^9*ay^2*az^21*sin(a/2)^32*x+150150*ax^9*ay^4*az^19*sin(a/2)^32*x+450450*ax^9*ay^6*az^17*sin(a/2)^32*x+900900*ax^9*ay^8*az^15*sin(a/2)^32*x+1261260*ax^9*ay^10*az^13*sin(a/2)^32*x+1261260*ax^9*ay^12*az^11*sin(a/2)^32*x+900900*ax^9*ay^14*az^9*sin(a/2)^32*x+450450*ax^9*ay^16*az^7*sin(a/2)^32*x+150150*ax^9*ay^18*az^5*sin(a/2)^32*x+30030*ax^9*ay^20*az^3*sin(a/2)^32*x+2730*ax^9*ay^22*az*sin(a/2)^32*x+2730*ax^9*az*cos(a/2)^22*sin(a/2)^10*x+30030*ax^9*az^3*cos(a/2)^20*sin(a/2)^12*x+150150*ax^9*az^5*cos(a/2)^18*sin(a/2)^14*x+450450*ax^9*az^7*cos(a/2)^16*sin(a/2)^16*x+900900*ax^9*az^9*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^9*az^11*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^9*az^13*cos(a/2)^10*sin(a/2)^22*x+900900*ax^9*az^15*cos(a/2)^8*sin(a/2)^24*x+450450*ax^9*az^17*cos(a/2)^6*sin(a/2)^26*x+150150*ax^9*az^19*cos(a/2)^4*sin(a/2)^28*x+30030*ax^9*az^21*cos(a/2)^2*sin(a/2)^30*x+6006*ax^10*ay*az^21*sin(a/2)^32*y+12012*ax^10*ay^2*az^20*sin(a/2)^32*z-48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12*z+60060*ax^10*ay^3*az^19*sin(a/2)^32*y+30030*ax^10*ay^4*az^18*sin(a/2)^32*z-240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14*z+270270*ax^10*ay^5*az^17*sin(a/2)^32*y-720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16*z+720720*ax^10*ay^7*az^15*sin(a/2)^32*y-180180*ax^10*ay^8*az^14*sin(a/2)^32*z-1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18*z+1261260*ax^10*ay^9*az^13*sin(a/2)^32*y-504504*ax^10*ay^10*az^12*sin(a/2)^32*z-2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20*z+1513512*ax^10*ay^11*az^11*sin(a/2)^32*y-756756*ax^10*ay^12*az^10*sin(a/2)^32*z-2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22*z+1261260*ax^10*ay^13*az^9*sin(a/2)^32*y-720720*ax^10*ay^14*az^8*sin(a/2)^32*z-1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24*z+720720*ax^10*ay^15*az^7*sin(a/2)^32*y-450450*ax^10*ay^16*az^6*sin(a/2)^32*z-720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26*z+270270*ax^10*ay^17*az^5*sin(a/2)^32*y-180180*ax^10*ay^18*az^4*sin(a/2)^32*z-240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28*z+60060*ax^10*ay^19*az^3*sin(a/2)^32*y-42042*ax^10*ay^20*az^2*sin(a/2)^32*z-48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30*z+6006*ax^10*ay^21*az*sin(a/2)^32*y-42042*ax^10*az^2*cos(a/2)^20*sin(a/2)^12*z-180180*ax^10*az^4*cos(a/2)^18*sin(a/2)^14*z-450450*ax^10*az^6*cos(a/2)^16*sin(a/2)^16*z-720720*ax^10*az^8*cos(a/2)^14*sin(a/2)^18*z-756756*ax^10*az^10*cos(a/2)^12*sin(a/2)^20*z-504504*ax^10*az^12*cos(a/2)^10*sin(a/2)^22*z-180180*ax^10*az^14*cos(a/2)^8*sin(a/2)^24*z+30030*ax^10*az^18*cos(a/2)^4*sin(a/2)^28*z+12012*ax^10*az^20*cos(a/2)^2*sin(a/2)^30*z+60060*ax^11*ay^2*az^19*sin(a/2)^32*x+270270*ax^11*ay^4*az^17*sin(a/2)^32*x+720720*ax^11*ay^6*az^15*sin(a/2)^32*x+1261260*ax^11*ay^8*az^13*sin(a/2)^32*x+1513512*ax^11*ay^10*az^11*sin(a/2)^32*x+1261260*ax^11*ay^12*az^9*sin(a/2)^32*x+720720*ax^11*ay^14*az^7*sin(a/2)^32*x+270270*ax^11*ay^16*az^5*sin(a/2)^32*x+60060*ax^11*ay^18*az^3*sin(a/2)^32*x+6006*ax^11*ay^20*az*sin(a/2)^32*x+6006*ax^11*az*cos(a/2)^20*sin(a/2)^12*x+60060*ax^11*az^3*cos(a/2)^18*sin(a/2)^14*x+270270*ax^11*az^5*cos(a/2)^16*sin(a/2)^16*x+720720*ax^11*az^7*cos(a/2)^14*sin(a/2)^18*x+1261260*ax^11*az^9*cos(a/2)^12*sin(a/2)^20*x+1513512*ax^11*az^11*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^11*az^13*cos(a/2)^8*sin(a/2)^24*x+720720*ax^11*az^15*cos(a/2)^6*sin(a/2)^26*x+270270*ax^11*az^17*cos(a/2)^4*sin(a/2)^28*x+60060*ax^11*az^19*cos(a/2)^2*sin(a/2)^30*x+10010*ax^12*ay*az^19*sin(a/2)^32*y+10010*ax^12*ay^2*az^18*sin(a/2)^32*z-80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14*z+90090*ax^12*ay^3*az^17*sin(a/2)^32*y-360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16*z+360360*ax^12*ay^5*az^15*sin(a/2)^32*y-120120*ax^12*ay^6*az^14*sin(a/2)^32*z-960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18*z+840840*ax^12*ay^7*az^13*sin(a/2)^32*y-420420*ax^12*ay^8*az^12*sin(a/2)^32*z-1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20*z+1261260*ax^12*ay^9*az^11*sin(a/2)^32*y-756756*ax^12*ay^10*az^10*sin(a/2)^32*z-2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22*z+1261260*ax^12*ay^11*az^9*sin(a/2)^32*y-840840*ax^12*ay^12*az^8*sin(a/2)^32*z-1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24*z+840840*ax^12*ay^13*az^7*sin(a/2)^32*y-600600*ax^12*ay^14*az^6*sin(a/2)^32*z-960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26*z+360360*ax^12*ay^15*az^5*sin(a/2)^32*y-270270*ax^12*ay^16*az^4*sin(a/2)^32*z-360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28*z+90090*ax^12*ay^17*az^3*sin(a/2)^32*y-70070*ax^12*ay^18*az^2*sin(a/2)^32*z-80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30*z+10010*ax^12*ay^19*az*sin(a/2)^32*y-70070*ax^12*az^2*cos(a/2)^18*sin(a/2)^14*z-270270*ax^12*az^4*cos(a/2)^16*sin(a/2)^16*z-600600*ax^12*az^6*cos(a/2)^14*sin(a/2)^18*z-840840*ax^12*az^8*cos(a/2)^12*sin(a/2)^20*z-756756*ax^12*az^10*cos(a/2)^10*sin(a/2)^22*z-420420*ax^12*az^12*cos(a/2)^8*sin(a/2)^24*z-120120*ax^12*az^14*cos(a/2)^6*sin(a/2)^26*z+10010*ax^12*az^18*cos(a/2)^2*sin(a/2)^30*z+90090*ax^13*ay^2*az^17*sin(a/2)^32*x+360360*ax^13*ay^4*az^15*sin(a/2)^32*x+840840*ax^13*ay^6*az^13*sin(a/2)^32*x+1261260*ax^13*ay^8*az^11*sin(a/2)^32*x+1261260*ax^13*ay^10*az^9*sin(a/2)^32*x+840840*ax^13*ay^12*az^7*sin(a/2)^32*x+360360*ax^13*ay^14*az^5*sin(a/2)^32*x+90090*ax^13*ay^16*az^3*sin(a/2)^32*x+10010*ax^13*ay^18*az*sin(a/2)^32*x+10010*ax^13*az*cos(a/2)^18*sin(a/2)^14*x+90090*ax^13*az^3*cos(a/2)^16*sin(a/2)^16*x+360360*ax^13*az^5*cos(a/2)^14*sin(a/2)^18*x+840840*ax^13*az^7*cos(a/2)^12*sin(a/2)^20*x+1261260*ax^13*az^9*cos(a/2)^10*sin(a/2)^22*x+1261260*ax^13*az^11*cos(a/2)^8*sin(a/2)^24*x+840840*ax^13*az^13*cos(a/2)^6*sin(a/2)^26*x+360360*ax^13*az^15*cos(a/2)^4*sin(a/2)^28*x+90090*ax^13*az^17*cos(a/2)^2*sin(a/2)^30*x+12870*ax^14*ay*az^17*sin(a/2)^32*y-102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16*z+102960*ax^14*ay^3*az^15*sin(a/2)^32*y-51480*ax^14*ay^4*az^14*sin(a/2)^32*z-411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18*z+360360*ax^14*ay^5*az^13*sin(a/2)^32*y-240240*ax^14*ay^6*az^12*sin(a/2)^32*z-960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20*z+720720*ax^14*ay^7*az^11*sin(a/2)^32*y-540540*ax^14*ay^8*az^10*sin(a/2)^32*z-1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22*z+900900*ax^14*ay^9*az^9*sin(a/2)^32*y-720720*ax^14*ay^10*az^8*sin(a/2)^32*z-1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24*z+720720*ax^14*ay^11*az^7*sin(a/2)^32*y-600600*ax^14*ay^12*az^6*sin(a/2)^32*z-960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26*z+360360*ax^14*ay^13*az^5*sin(a/2)^32*y-308880*ax^14*ay^14*az^4*sin(a/2)^32*z-411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28*z+102960*ax^14*ay^15*az^3*sin(a/2)^32*y-90090*ax^14*ay^16*az^2*sin(a/2)^32*z-102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30*z+12870*ax^14*ay^17*az*sin(a/2)^32*y-90090*ax^14*az^2*cos(a/2)^16*sin(a/2)^16*z-308880*ax^14*az^4*cos(a/2)^14*sin(a/2)^18*z-600600*ax^14*az^6*cos(a/2)^12*sin(a/2)^20*z-720720*ax^14*az^8*cos(a/2)^10*sin(a/2)^22*z-540540*ax^14*az^10*cos(a/2)^8*sin(a/2)^24*z-240240*ax^14*az^12*cos(a/2)^6*sin(a/2)^26*z-51480*ax^14*az^14*cos(a/2)^4*sin(a/2)^28*z+102960*ax^15*ay^2*az^15*sin(a/2)^32*x+360360*ax^15*ay^4*az^13*sin(a/2)^32*x+720720*ax^15*ay^6*az^11*sin(a/2)^32*x+900900*ax^15*ay^8*az^9*sin(a/2)^32*x+720720*ax^15*ay^10*az^7*sin(a/2)^32*x+360360*ax^15*ay^12*az^5*sin(a/2)^32*x+102960*ax^15*ay^14*az^3*sin(a/2)^32*x+12870*ax^15*ay^16*az*sin(a/2)^32*x+12870*ax^15*az*cos(a/2)^16*sin(a/2)^16*x+102960*ax^15*az^3*cos(a/2)^14*sin(a/2)^18*x+360360*ax^15*az^5*cos(a/2)^12*sin(a/2)^20*x+720720*ax^15*az^7*cos(a/2)^10*sin(a/2)^22*x+900900*ax^15*az^9*cos(a/2)^8*sin(a/2)^24*x+720720*ax^15*az^11*cos(a/2)^6*sin(a/2)^26*x+360360*ax^15*az^13*cos(a/2)^4*sin(a/2)^28*x+102960*ax^15*az^15*cos(a/2)^2*sin(a/2)^30*x+12870*ax^16*ay*az^15*sin(a/2)^32*y-12870*ax^16*ay^2*az^14*sin(a/2)^32*z-102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18*z+90090*ax^16*ay^3*az^13*sin(a/2)^32*y-90090*ax^16*ay^4*az^12*sin(a/2)^32*z-360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20*z+270270*ax^16*ay^5*az^11*sin(a/2)^32*y-270270*ax^16*ay^6*az^10*sin(a/2)^32*z-720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22*z+450450*ax^16*ay^7*az^9*sin(a/2)^32*y-450450*ax^16*ay^8*az^8*sin(a/2)^32*z-900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24*z+450450*ax^16*ay^9*az^7*sin(a/2)^32*y-450450*ax^16*ay^10*az^6*sin(a/2)^32*z-720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26*z+270270*ax^16*ay^11*az^5*sin(a/2)^32*y-270270*ax^16*ay^12*az^4*sin(a/2)^32*z-360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28*z+90090*ax^16*ay^13*az^3*sin(a/2)^32*y-90090*ax^16*ay^14*az^2*sin(a/2)^32*z-102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30*z+12870*ax^16*ay^15*az*sin(a/2)^32*y-90090*ax^16*az^2*cos(a/2)^14*sin(a/2)^18*z-270270*ax^16*az^4*cos(a/2)^12*sin(a/2)^20*z-450450*ax^16*az^6*cos(a/2)^10*sin(a/2)^22*z-450450*ax^16*az^8*cos(a/2)^8*sin(a/2)^24*z-270270*ax^16*az^10*cos(a/2)^6*sin(a/2)^26*z-90090*ax^16*az^12*cos(a/2)^4*sin(a/2)^28*z-12870*ax^16*az^14*cos(a/2)^2*sin(a/2)^30*z+90090*ax^17*ay^2*az^13*sin(a/2)^32*x+270270*ax^17*ay^4*az^11*sin(a/2)^32*x+450450*ax^17*ay^6*az^9*sin(a/2)^32*x+450450*ax^17*ay^8*az^7*sin(a/2)^32*x+270270*ax^17*ay^10*az^5*sin(a/2)^32*x+90090*ax^17*ay^12*az^3*sin(a/2)^32*x+12870*ax^17*ay^14*az*sin(a/2)^32*x+12870*ax^17*az*cos(a/2)^14*sin(a/2)^18*x+90090*ax^17*az^3*cos(a/2)^12*sin(a/2)^20*x+270270*ax^17*az^5*cos(a/2)^10*sin(a/2)^22*x+450450*ax^17*az^7*cos(a/2)^8*sin(a/2)^24*x+450450*ax^17*az^9*cos(a/2)^6*sin(a/2)^26*x+270270*ax^17*az^11*cos(a/2)^4*sin(a/2)^28*x+90090*ax^17*az^13*cos(a/2)^2*sin(a/2)^30*x+10010*ax^18*ay*az^13*sin(a/2)^32*y-20020*ax^18*ay^2*az^12*sin(a/2)^32*z-80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20*z+60060*ax^18*ay^3*az^11*sin(a/2)^32*y-90090*ax^18*ay^4*az^10*sin(a/2)^32*z-240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22*z+150150*ax^18*ay^5*az^9*sin(a/2)^32*y-200200*ax^18*ay^6*az^8*sin(a/2)^32*z-400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24*z+200200*ax^18*ay^7*az^7*sin(a/2)^32*y-250250*ax^18*ay^8*az^6*sin(a/2)^32*z-400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26*z+150150*ax^18*ay^9*az^5*sin(a/2)^32*y-180180*ax^18*ay^10*az^4*sin(a/2)^32*z-240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28*z+60060*ax^18*ay^11*az^3*sin(a/2)^32*y-70070*ax^18*ay^12*az^2*sin(a/2)^32*z-80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30*z+10010*ax^18*ay^13*az*sin(a/2)^32*y-70070*ax^18*az^2*cos(a/2)^12*sin(a/2)^20*z-180180*ax^18*az^4*cos(a/2)^10*sin(a/2)^22*z-250250*ax^18*az^6*cos(a/2)^8*sin(a/2)^24*z-200200*ax^18*az^8*cos(a/2)^6*sin(a/2)^26*z-90090*ax^18*az^10*cos(a/2)^4*sin(a/2)^28*z-20020*ax^18*az^12*cos(a/2)^2*sin(a/2)^30*z+60060*ax^19*ay^2*az^11*sin(a/2)^32*x+150150*ax^19*ay^4*az^9*sin(a/2)^32*x+200200*ax^19*ay^6*az^7*sin(a/2)^32*x+150150*ax^19*ay^8*az^5*sin(a/2)^32*x+60060*ax^19*ay^10*az^3*sin(a/2)^32*x+10010*ax^19*ay^12*az*sin(a/2)^32*x+10010*ax^19*az*cos(a/2)^12*sin(a/2)^20*x+60060*ax^19*az^3*cos(a/2)^10*sin(a/2)^22*x+150150*ax^19*az^5*cos(a/2)^8*sin(a/2)^24*x+200200*ax^19*az^7*cos(a/2)^6*sin(a/2)^26*x+150150*ax^19*az^9*cos(a/2)^4*sin(a/2)^28*x+60060*ax^19*az^11*cos(a/2)^2*sin(a/2)^30*x+6006*ax^20*ay*az^11*sin(a/2)^32*y-18018*ax^20*ay^2*az^10*sin(a/2)^32*z-48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22*z+30030*ax^20*ay^3*az^9*sin(a/2)^32*y-60060*ax^20*ay^4*az^8*sin(a/2)^32*z-120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24*z+60060*ax^20*ay^5*az^7*sin(a/2)^32*y-100100*ax^20*ay^6*az^6*sin(a/2)^32*z-160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26*z+60060*ax^20*ay^7*az^5*sin(a/2)^32*y-90090*ax^20*ay^8*az^4*sin(a/2)^32*z-120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28*z+30030*ax^20*ay^9*az^3*sin(a/2)^32*y-42042*ax^20*ay^10*az^2*sin(a/2)^32*z-48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30*z+6006*ax^20*ay^11*az*sin(a/2)^32*y-42042*ax^20*az^2*cos(a/2)^10*sin(a/2)^22*z-90090*ax^20*az^4*cos(a/2)^8*sin(a/2)^24*z-100100*ax^20*az^6*cos(a/2)^6*sin(a/2)^26*z-60060*ax^20*az^8*cos(a/2)^4*sin(a/2)^28*z-18018*ax^20*az^10*cos(a/2)^2*sin(a/2)^30*z+30030*ax^21*ay^2*az^9*sin(a/2)^32*x+60060*ax^21*ay^4*az^7*sin(a/2)^32*x+60060*ax^21*ay^6*az^5*sin(a/2)^32*x+30030*ax^21*ay^8*az^3*sin(a/2)^32*x+6006*ax^21*ay^10*az*sin(a/2)^32*x+6006*ax^21*az*cos(a/2)^10*sin(a/2)^22*x+30030*ax^21*az^3*cos(a/2)^8*sin(a/2)^24*x+60060*ax^21*az^5*cos(a/2)^6*sin(a/2)^26*x+60060*ax^21*az^7*cos(a/2)^4*sin(a/2)^28*x+30030*ax^21*az^9*cos(a/2)^2*sin(a/2)^30*x+2730*ax^22*ay*az^9*sin(a/2)^32*y-10920*ax^22*ay^2*az^8*sin(a/2)^32*z-21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24*z+10920*ax^22*ay^3*az^7*sin(a/2)^32*y-27300*ax^22*ay^4*az^6*sin(a/2)^32*z-43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26*z+16380*ax^22*ay^5*az^5*sin(a/2)^32*y-32760*ax^22*ay^6*az^4*sin(a/2)^32*z-43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28*z+10920*ax^22*ay^7*az^3*sin(a/2)^32*y-19110*ax^22*ay^8*az^2*sin(a/2)^32*z-21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30*z+2730*ax^22*ay^9*az*sin(a/2)^32*y-19110*ax^22*az^2*cos(a/2)^8*sin(a/2)^24*z-32760*ax^22*az^4*cos(a/2)^6*sin(a/2)^26*z-27300*ax^22*az^6*cos(a/2)^4*sin(a/2)^28*z-10920*ax^22*az^8*cos(a/2)^2*sin(a/2)^30*z+10920*ax^23*ay^2*az^7*sin(a/2)^32*x+16380*ax^23*ay^4*az^5*sin(a/2)^32*x+10920*ax^23*ay^6*az^3*sin(a/2)^32*x+2730*ax^23*ay^8*az*sin(a/2)^32*x+2730*ax^23*az*cos(a/2)^8*sin(a/2)^24*x+10920*ax^23*az^3*cos(a/2)^6*sin(a/2)^26*x+16380*ax^23*az^5*cos(a/2)^4*sin(a/2)^28*x+10920*ax^23*az^7*cos(a/2)^2*sin(a/2)^30*x+910*ax^24*ay*az^7*sin(a/2)^32*y-4550*ax^24*ay^2*az^6*sin(a/2)^32*z-7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26*z+2730*ax^24*ay^3*az^5*sin(a/2)^32*y-8190*ax^24*ay^4*az^4*sin(a/2)^32*z-10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28*z+2730*ax^24*ay^5*az^3*sin(a/2)^32*y-6370*ax^24*ay^6*az^2*sin(a/2)^32*z-7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30*z+910*ax^24*ay^7*az*sin(a/2)^32*y-6370*ax^24*az^2*cos(a/2)^6*sin(a/2)^26*z-8190*ax^24*az^4*cos(a/2)^4*sin(a/2)^28*z-4550*ax^24*az^6*cos(a/2)^2*sin(a/2)^30*z+2730*ax^25*ay^2*az^5*sin(a/2)^32*x+2730*ax^25*ay^4*az^3*sin(a/2)^32*x+910*ax^25*ay^6*az*sin(a/2)^32*x+910*ax^25*az*cos(a/2)^6*sin(a/2)^26*x+2730*ax^25*az^3*cos(a/2)^4*sin(a/2)^28*x+2730*ax^25*az^5*cos(a/2)^2*sin(a/2)^30*x+210*ax^26*ay*az^5*sin(a/2)^32*y-1260*ax^26*ay^2*az^4*sin(a/2)^32*z-1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28*z+420*ax^26*ay^3*az^3*sin(a/2)^32*y-1470*ax^26*ay^4*az^2*sin(a/2)^32*z-1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30*z+210*ax^26*ay^5*az*sin(a/2)^32*y-1470*ax^26*az^2*cos(a/2)^4*sin(a/2)^28*z-1260*ax^26*az^4*cos(a/2)^2*sin(a/2)^30*z+420*ax^27*ay^2*az^3*sin(a/2)^32*x+210*ax^27*ay^4*az*sin(a/2)^32*x+210*ax^27*az*cos(a/2)^4*sin(a/2)^28*x+420*ax^27*az^3*cos(a/2)^2*sin(a/2)^30*x+30*ax^28*ay*az^3*sin(a/2)^32*y-210*ax^28*ay^2*az^2*sin(a/2)^32*z-240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30*z+30*ax^28*ay^3*az*sin(a/2)^32*y-210*ax^28*az^2*cos(a/2)^2*sin(a/2)^30*z+30*ax^29*ay^2*az*sin(a/2)^32*x+30*ax^29*az*cos(a/2)^2*sin(a/2)^30*x+2*ax^30*ay*az*sin(a/2)^32*y+2*ay*az*cos(a/2)^30*sin(a/2)^2*y+30*ay*az^3*cos(a/2)^28*sin(a/2)^4*y+210*ay*az^5*cos(a/2)^26*sin(a/2)^6*y+910*ay*az^7*cos(a/2)^24*sin(a/2)^8*y+2730*ay*az^9*cos(a/2)^22*sin(a/2)^10*y+6006*ay*az^11*cos(a/2)^20*sin(a/2)^12*y+10010*ay*az^13*cos(a/2)^18*sin(a/2)^14*y+12870*ay*az^15*cos(a/2)^16*sin(a/2)^16*y+12870*ay*az^17*cos(a/2)^14*sin(a/2)^18*y+10010*ay*az^19*cos(a/2)^12*sin(a/2)^20*y+6006*ay*az^21*cos(a/2)^10*sin(a/2)^22*y+2730*ay*az^23*cos(a/2)^8*sin(a/2)^24*y+910*ay*az^25*cos(a/2)^6*sin(a/2)^26*y+210*ay*az^27*cos(a/2)^4*sin(a/2)^28*y+30*ay*az^29*cos(a/2)^2*sin(a/2)^30*y-210*ay^2*az^2*cos(a/2)^28*sin(a/2)^4*z-1260*ay^2*az^4*cos(a/2)^26*sin(a/2)^6*z-4550*ay^2*az^6*cos(a/2)^24*sin(a/2)^8*z-10920*ay^2*az^8*cos(a/2)^22*sin(a/2)^10*z-18018*ay^2*az^10*cos(a/2)^20*sin(a/2)^12*z-20020*ay^2*az^12*cos(a/2)^18*sin(a/2)^14*z-12870*ay^2*az^14*cos(a/2)^16*sin(a/2)^16*z+10010*ay^2*az^18*cos(a/2)^12*sin(a/2)^20*z+12012*ay^2*az^20*cos(a/2)^10*sin(a/2)^22*z+8190*ay^2*az^22*cos(a/2)^8*sin(a/2)^24*z+3640*ay^2*az^24*cos(a/2)^6*sin(a/2)^26*z+1050*ay^2*az^26*cos(a/2)^4*sin(a/2)^28*z+180*ay^2*az^28*cos(a/2)^2*sin(a/2)^30*z+30*ay^3*az*cos(a/2)^28*sin(a/2)^4*y+420*ay^3*az^3*cos(a/2)^26*sin(a/2)^6*y+2730*ay^3*az^5*cos(a/2)^24*sin(a/2)^8*y+10920*ay^3*az^7*cos(a/2)^22*sin(a/2)^10*y+30030*ay^3*az^9*cos(a/2)^20*sin(a/2)^12*y+60060*ay^3*az^11*cos(a/2)^18*sin(a/2)^14*y+90090*ay^3*az^13*cos(a/2)^16*sin(a/2)^16*y+102960*ay^3*az^15*cos(a/2)^14*sin(a/2)^18*y+90090*ay^3*az^17*cos(a/2)^12*sin(a/2)^20*y+60060*ay^3*az^19*cos(a/2)^10*sin(a/2)^22*y+30030*ay^3*az^21*cos(a/2)^8*sin(a/2)^24*y+10920*ay^3*az^23*cos(a/2)^6*sin(a/2)^26*y+2730*ay^3*az^25*cos(a/2)^4*sin(a/2)^28*y+420*ay^3*az^27*cos(a/2)^2*sin(a/2)^30*y-1470*ay^4*az^2*cos(a/2)^26*sin(a/2)^6*z-8190*ay^4*az^4*cos(a/2)^24*sin(a/2)^8*z-27300*ay^4*az^6*cos(a/2)^22*sin(a/2)^10*z-60060*ay^4*az^8*cos(a/2)^20*sin(a/2)^12*z-90090*ay^4*az^10*cos(a/2)^18*sin(a/2)^14*z-90090*ay^4*az^12*cos(a/2)^16*sin(a/2)^16*z-51480*ay^4*az^14*cos(a/2)^14*sin(a/2)^18*z+30030*ay^4*az^18*cos(a/2)^10*sin(a/2)^22*z+30030*ay^4*az^20*cos(a/2)^8*sin(a/2)^24*z+16380*ay^4*az^22*cos(a/2)^6*sin(a/2)^26*z+5460*ay^4*az^24*cos(a/2)^4*sin(a/2)^28*z+1050*ay^4*az^26*cos(a/2)^2*sin(a/2)^30*z+210*ay^5*az*cos(a/2)^26*sin(a/2)^6*y+2730*ay^5*az^3*cos(a/2)^24*sin(a/2)^8*y+16380*ay^5*az^5*cos(a/2)^22*sin(a/2)^10*y+60060*ay^5*az^7*cos(a/2)^20*sin(a/2)^12*y+150150*ay^5*az^9*cos(a/2)^18*sin(a/2)^14*y+270270*ay^5*az^11*cos(a/2)^16*sin(a/2)^16*y+360360*ay^5*az^13*cos(a/2)^14*sin(a/2)^18*y+360360*ay^5*az^15*cos(a/2)^12*sin(a/2)^20*y+270270*ay^5*az^17*cos(a/2)^10*sin(a/2)^22*y+150150*ay^5*az^19*cos(a/2)^8*sin(a/2)^24*y+60060*ay^5*az^21*cos(a/2)^6*sin(a/2)^26*y+16380*ay^5*az^23*cos(a/2)^4*sin(a/2)^28*y+2730*ay^5*az^25*cos(a/2)^2*sin(a/2)^30*y-6370*ay^6*az^2*cos(a/2)^24*sin(a/2)^8*z-32760*ay^6*az^4*cos(a/2)^22*sin(a/2)^10*z-100100*ay^6*az^6*cos(a/2)^20*sin(a/2)^12*z-200200*ay^6*az^8*cos(a/2)^18*sin(a/2)^14*z-270270*ay^6*az^10*cos(a/2)^16*sin(a/2)^16*z-240240*ay^6*az^12*cos(a/2)^14*sin(a/2)^18*z-120120*ay^6*az^14*cos(a/2)^12*sin(a/2)^20*z+50050*ay^6*az^18*cos(a/2)^8*sin(a/2)^24*z+40040*ay^6*az^20*cos(a/2)^6*sin(a/2)^26*z+16380*ay^6*az^22*cos(a/2)^4*sin(a/2)^28*z+3640*ay^6*az^24*cos(a/2)^2*sin(a/2)^30*z+910*ay^7*az*cos(a/2)^24*sin(a/2)^8*y+10920*ay^7*az^3*cos(a/2)^22*sin(a/2)^10*y+60060*ay^7*az^5*cos(a/2)^20*sin(a/2)^12*y+200200*ay^7*az^7*cos(a/2)^18*sin(a/2)^14*y+450450*ay^7*az^9*cos(a/2)^16*sin(a/2)^16*y+720720*ay^7*az^11*cos(a/2)^14*sin(a/2)^18*y+840840*ay^7*az^13*cos(a/2)^12*sin(a/2)^20*y+720720*ay^7*az^15*cos(a/2)^10*sin(a/2)^22*y+450450*ay^7*az^17*cos(a/2)^8*sin(a/2)^24*y+200200*ay^7*az^19*cos(a/2)^6*sin(a/2)^26*y+60060*ay^7*az^21*cos(a/2)^4*sin(a/2)^28*y+10920*ay^7*az^23*cos(a/2)^2*sin(a/2)^30*y-19110*ay^8*az^2*cos(a/2)^22*sin(a/2)^10*z-90090*ay^8*az^4*cos(a/2)^20*sin(a/2)^12*z-250250*ay^8*az^6*cos(a/2)^18*sin(a/2)^14*z-450450*ay^8*az^8*cos(a/2)^16*sin(a/2)^16*z-540540*ay^8*az^10*cos(a/2)^14*sin(a/2)^18*z-420420*ay^8*az^12*cos(a/2)^12*sin(a/2)^20*z-180180*ay^8*az^14*cos(a/2)^10*sin(a/2)^22*z+50050*ay^8*az^18*cos(a/2)^6*sin(a/2)^26*z+30030*ay^8*az^20*cos(a/2)^4*sin(a/2)^28*z+8190*ay^8*az^22*cos(a/2)^2*sin(a/2)^30*z+2730*ay^9*az*cos(a/2)^22*sin(a/2)^10*y+30030*ay^9*az^3*cos(a/2)^20*sin(a/2)^12*y+150150*ay^9*az^5*cos(a/2)^18*sin(a/2)^14*y+450450*ay^9*az^7*cos(a/2)^16*sin(a/2)^16*y+900900*ay^9*az^9*cos(a/2)^14*sin(a/2)^18*y+1261260*ay^9*az^11*cos(a/2)^12*sin(a/2)^20*y+1261260*ay^9*az^13*cos(a/2)^10*sin(a/2)^22*y+900900*ay^9*az^15*cos(a/2)^8*sin(a/2)^24*y+450450*ay^9*az^17*cos(a/2)^6*sin(a/2)^26*y+150150*ay^9*az^19*cos(a/2)^4*sin(a/2)^28*y+30030*ay^9*az^21*cos(a/2)^2*sin(a/2)^30*y-42042*ay^10*az^2*cos(a/2)^20*sin(a/2)^12*z-180180*ay^10*az^4*cos(a/2)^18*sin(a/2)^14*z-450450*ay^10*az^6*cos(a/2)^16*sin(a/2)^16*z-720720*ay^10*az^8*cos(a/2)^14*sin(a/2)^18*z-756756*ay^10*az^10*cos(a/2)^12*sin(a/2)^20*z-504504*ay^10*az^12*cos(a/2)^10*sin(a/2)^22*z-180180*ay^10*az^14*cos(a/2)^8*sin(a/2)^24*z+30030*ay^10*az^18*cos(a/2)^4*sin(a/2)^28*z+12012*ay^10*az^20*cos(a/2)^2*sin(a/2)^30*z+6006*ay^11*az*cos(a/2)^20*sin(a/2)^12*y+60060*ay^11*az^3*cos(a/2)^18*sin(a/2)^14*y+270270*ay^11*az^5*cos(a/2)^16*sin(a/2)^16*y+720720*ay^11*az^7*cos(a/2)^14*sin(a/2)^18*y+1261260*ay^11*az^9*cos(a/2)^12*sin(a/2)^20*y+1513512*ay^11*az^11*cos(a/2)^10*sin(a/2)^22*y+1261260*ay^11*az^13*cos(a/2)^8*sin(a/2)^24*y+720720*ay^11*az^15*cos(a/2)^6*sin(a/2)^26*y+270270*ay^11*az^17*cos(a/2)^4*sin(a/2)^28*y+60060*ay^11*az^19*cos(a/2)^2*sin(a/2)^30*y-70070*ay^12*az^2*cos(a/2)^18*sin(a/2)^14*z-270270*ay^12*az^4*cos(a/2)^16*sin(a/2)^16*z-600600*ay^12*az^6*cos(a/2)^14*sin(a/2)^18*z-840840*ay^12*az^8*cos(a/2)^12*sin(a/2)^20*z-756756*ay^12*az^10*cos(a/2)^10*sin(a/2)^22*z-420420*ay^12*az^12*cos(a/2)^8*sin(a/2)^24*z-120120*ay^12*az^14*cos(a/2)^6*sin(a/2)^26*z+10010*ay^12*az^18*cos(a/2)^2*sin(a/2)^30*z+10010*ay^13*az*cos(a/2)^18*sin(a/2)^14*y+90090*ay^13*az^3*cos(a/2)^16*sin(a/2)^16*y+360360*ay^13*az^5*cos(a/2)^14*sin(a/2)^18*y+840840*ay^13*az^7*cos(a/2)^12*sin(a/2)^20*y+1261260*ay^13*az^9*cos(a/2)^10*sin(a/2)^22*y+1261260*ay^13*az^11*cos(a/2)^8*sin(a/2)^24*y+840840*ay^13*az^13*cos(a/2)^6*sin(a/2)^26*y+360360*ay^13*az^15*cos(a/2)^4*sin(a/2)^28*y+90090*ay^13*az^17*cos(a/2)^2*sin(a/2)^30*y-90090*ay^14*az^2*cos(a/2)^16*sin(a/2)^16*z-308880*ay^14*az^4*cos(a/2)^14*sin(a/2)^18*z-600600*ay^14*az^6*cos(a/2)^12*sin(a/2)^20*z-720720*ay^14*az^8*cos(a/2)^10*sin(a/2)^22*z-540540*ay^14*az^10*cos(a/2)^8*sin(a/2)^24*z-240240*ay^14*az^12*cos(a/2)^6*sin(a/2)^26*z-51480*ay^14*az^14*cos(a/2)^4*sin(a/2)^28*z+12870*ay^15*az*cos(a/2)^16*sin(a/2)^16*y+102960*ay^15*az^3*cos(a/2)^14*sin(a/2)^18*y+360360*ay^15*az^5*cos(a/2)^12*sin(a/2)^20*y+720720*ay^15*az^7*cos(a/2)^10*sin(a/2)^22*y+900900*ay^15*az^9*cos(a/2)^8*sin(a/2)^24*y+720720*ay^15*az^11*cos(a/2)^6*sin(a/2)^26*y+360360*ay^15*az^13*cos(a/2)^4*sin(a/2)^28*y+102960*ay^15*az^15*cos(a/2)^2*sin(a/2)^30*y-90090*ay^16*az^2*cos(a/2)^14*sin(a/2)^18*z-270270*ay^16*az^4*cos(a/2)^12*sin(a/2)^20*z-450450*ay^16*az^6*cos(a/2)^10*sin(a/2)^22*z-450450*ay^16*az^8*cos(a/2)^8*sin(a/2)^24*z-270270*ay^16*az^10*cos(a/2)^6*sin(a/2)^26*z-90090*ay^16*az^12*cos(a/2)^4*sin(a/2)^28*z-12870*ay^16*az^14*cos(a/2)^2*sin(a/2)^30*z+12870*ay^17*az*cos(a/2)^14*sin(a/2)^18*y+90090*ay^17*az^3*cos(a/2)^12*sin(a/2)^20*y+270270*ay^17*az^5*cos(a/2)^10*sin(a/2)^22*y+450450*ay^17*az^7*cos(a/2)^8*sin(a/2)^24*y+450450*ay^17*az^9*cos(a/2)^6*sin(a/2)^26*y+270270*ay^17*az^11*cos(a/2)^4*sin(a/2)^28*y+90090*ay^17*az^13*cos(a/2)^2*sin(a/2)^30*y-70070*ay^18*az^2*cos(a/2)^12*sin(a/2)^20*z-180180*ay^18*az^4*cos(a/2)^10*sin(a/2)^22*z-250250*ay^18*az^6*cos(a/2)^8*sin(a/2)^24*z-200200*ay^18*az^8*cos(a/2)^6*sin(a/2)^26*z-90090*ay^18*az^10*cos(a/2)^4*sin(a/2)^28*z-20020*ay^18*az^12*cos(a/2)^2*sin(a/2)^30*z+10010*ay^19*az*cos(a/2)^12*sin(a/2)^20*y+60060*ay^19*az^3*cos(a/2)^10*sin(a/2)^22*y+150150*ay^19*az^5*cos(a/2)^8*sin(a/2)^24*y+200200*ay^19*az^7*cos(a/2)^6*sin(a/2)^26*y+150150*ay^19*az^9*cos(a/2)^4*sin(a/2)^28*y+60060*ay^19*az^11*cos(a/2)^2*sin(a/2)^30*y-42042*ay^20*az^2*cos(a/2)^10*sin(a/2)^22*z-90090*ay^20*az^4*cos(a/2)^8*sin(a/2)^24*z-100100*ay^20*az^6*cos(a/2)^6*sin(a/2)^26*z-60060*ay^20*az^8*cos(a/2)^4*sin(a/2)^28*z-18018*ay^20*az^10*cos(a/2)^2*sin(a/2)^30*z+6006*ay^21*az*cos(a/2)^10*sin(a/2)^22*y+30030*ay^21*az^3*cos(a/2)^8*sin(a/2)^24*y+60060*ay^21*az^5*cos(a/2)^6*sin(a/2)^26*y+60060*ay^21*az^7*cos(a/2)^4*sin(a/2)^28*y+30030*ay^21*az^9*cos(a/2)^2*sin(a/2)^30*y-19110*ay^22*az^2*cos(a/2)^8*sin(a/2)^24*z-32760*ay^22*az^4*cos(a/2)^6*sin(a/2)^26*z-27300*ay^22*az^6*cos(a/2)^4*sin(a/2)^28*z-10920*ay^22*az^8*cos(a/2)^2*sin(a/2)^30*z+2730*ay^23*az*cos(a/2)^8*sin(a/2)^24*y+10920*ay^23*az^3*cos(a/2)^6*sin(a/2)^26*y+16380*ay^23*az^5*cos(a/2)^4*sin(a/2)^28*y+10920*ay^23*az^7*cos(a/2)^2*sin(a/2)^30*y-6370*ay^24*az^2*cos(a/2)^6*sin(a/2)^26*z-8190*ay^24*az^4*cos(a/2)^4*sin(a/2)^28*z-4550*ay^24*az^6*cos(a/2)^2*sin(a/2)^30*z+910*ay^25*az*cos(a/2)^6*sin(a/2)^26*y+2730*ay^25*az^3*cos(a/2)^4*sin(a/2)^28*y+2730*ay^25*az^5*cos(a/2)^2*sin(a/2)^30*y-1470*ay^26*az^2*cos(a/2)^4*sin(a/2)^28*z-1260*ay^26*az^4*cos(a/2)^2*sin(a/2)^30*z+210*ay^27*az*cos(a/2)^4*sin(a/2)^28*y+420*ay^27*az^3*cos(a/2)^2*sin(a/2)^30*y-210*ay^28*az^2*cos(a/2)^2*sin(a/2)^30*z+30*ay^29*az*cos(a/2)^2*sin(a/2)^30*y+30*ax*ay^2*az*cos(a/2)^28*sin(a/2)^4*x+420*ax*ay^2*az^3*cos(a/2)^26*sin(a/2)^6*x+2730*ax*ay^2*az^5*cos(a/2)^24*sin(a/2)^8*x+10920*ax*ay^2*az^7*cos(a/2)^22*sin(a/2)^10*x+30030*ax*ay^2*az^9*cos(a/2)^20*sin(a/2)^12*x+60060*ax*ay^2*az^11*cos(a/2)^18*sin(a/2)^14*x+90090*ax*ay^2*az^13*cos(a/2)^16*sin(a/2)^16*x+102960*ax*ay^2*az^15*cos(a/2)^14*sin(a/2)^18*x+90090*ax*ay^2*az^17*cos(a/2)^12*sin(a/2)^20*x+60060*ax*ay^2*az^19*cos(a/2)^10*sin(a/2)^22*x+30030*ax*ay^2*az^21*cos(a/2)^8*sin(a/2)^24*x+10920*ax*ay^2*az^23*cos(a/2)^6*sin(a/2)^26*x+2730*ax*ay^2*az^25*cos(a/2)^4*sin(a/2)^28*x+420*ax*ay^2*az^27*cos(a/2)^2*sin(a/2)^30*x+210*ax*ay^4*az*cos(a/2)^26*sin(a/2)^6*x+2730*ax*ay^4*az^3*cos(a/2)^24*sin(a/2)^8*x+16380*ax*ay^4*az^5*cos(a/2)^22*sin(a/2)^10*x+60060*ax*ay^4*az^7*cos(a/2)^20*sin(a/2)^12*x+150150*ax*ay^4*az^9*cos(a/2)^18*sin(a/2)^14*x+270270*ax*ay^4*az^11*cos(a/2)^16*sin(a/2)^16*x+360360*ax*ay^4*az^13*cos(a/2)^14*sin(a/2)^18*x+360360*ax*ay^4*az^15*cos(a/2)^12*sin(a/2)^20*x+270270*ax*ay^4*az^17*cos(a/2)^10*sin(a/2)^22*x+150150*ax*ay^4*az^19*cos(a/2)^8*sin(a/2)^24*x+60060*ax*ay^4*az^21*cos(a/2)^6*sin(a/2)^26*x+16380*ax*ay^4*az^23*cos(a/2)^4*sin(a/2)^28*x+2730*ax*ay^4*az^25*cos(a/2)^2*sin(a/2)^30*x+910*ax*ay^6*az*cos(a/2)^24*sin(a/2)^8*x+10920*ax*ay^6*az^3*cos(a/2)^22*sin(a/2)^10*x+60060*ax*ay^6*az^5*cos(a/2)^20*sin(a/2)^12*x+200200*ax*ay^6*az^7*cos(a/2)^18*sin(a/2)^14*x+450450*ax*ay^6*az^9*cos(a/2)^16*sin(a/2)^16*x+720720*ax*ay^6*az^11*cos(a/2)^14*sin(a/2)^18*x+840840*ax*ay^6*az^13*cos(a/2)^12*sin(a/2)^20*x+720720*ax*ay^6*az^15*cos(a/2)^10*sin(a/2)^22*x+450450*ax*ay^6*az^17*cos(a/2)^8*sin(a/2)^24*x+200200*ax*ay^6*az^19*cos(a/2)^6*sin(a/2)^26*x+60060*ax*ay^6*az^21*cos(a/2)^4*sin(a/2)^28*x+10920*ax*ay^6*az^23*cos(a/2)^2*sin(a/2)^30*x+2730*ax*ay^8*az*cos(a/2)^22*sin(a/2)^10*x+30030*ax*ay^8*az^3*cos(a/2)^20*sin(a/2)^12*x+150150*ax*ay^8*az^5*cos(a/2)^18*sin(a/2)^14*x+450450*ax*ay^8*az^7*cos(a/2)^16*sin(a/2)^16*x+900900*ax*ay^8*az^9*cos(a/2)^14*sin(a/2)^18*x+1261260*ax*ay^8*az^11*cos(a/2)^12*sin(a/2)^20*x+1261260*ax*ay^8*az^13*cos(a/2)^10*sin(a/2)^22*x+900900*ax*ay^8*az^15*cos(a/2)^8*sin(a/2)^24*x+450450*ax*ay^8*az^17*cos(a/2)^6*sin(a/2)^26*x+150150*ax*ay^8*az^19*cos(a/2)^4*sin(a/2)^28*x+30030*ax*ay^8*az^21*cos(a/2)^2*sin(a/2)^30*x+6006*ax*ay^10*az*cos(a/2)^20*sin(a/2)^12*x+60060*ax*ay^10*az^3*cos(a/2)^18*sin(a/2)^14*x+270270*ax*ay^10*az^5*cos(a/2)^16*sin(a/2)^16*x+720720*ax*ay^10*az^7*cos(a/2)^14*sin(a/2)^18*x+1261260*ax*ay^10*az^9*cos(a/2)^12*sin(a/2)^20*x+1513512*ax*ay^10*az^11*cos(a/2)^10*sin(a/2)^22*x+1261260*ax*ay^10*az^13*cos(a/2)^8*sin(a/2)^24*x+720720*ax*ay^10*az^15*cos(a/2)^6*sin(a/2)^26*x+270270*ax*ay^10*az^17*cos(a/2)^4*sin(a/2)^28*x+60060*ax*ay^10*az^19*cos(a/2)^2*sin(a/2)^30*x+10010*ax*ay^12*az*cos(a/2)^18*sin(a/2)^14*x+90090*ax*ay^12*az^3*cos(a/2)^16*sin(a/2)^16*x+360360*ax*ay^12*az^5*cos(a/2)^14*sin(a/2)^18*x+840840*ax*ay^12*az^7*cos(a/2)^12*sin(a/2)^20*x+1261260*ax*ay^12*az^9*cos(a/2)^10*sin(a/2)^22*x+1261260*ax*ay^12*az^11*cos(a/2)^8*sin(a/2)^24*x+840840*ax*ay^12*az^13*cos(a/2)^6*sin(a/2)^26*x+360360*ax*ay^12*az^15*cos(a/2)^4*sin(a/2)^28*x+90090*ax*ay^12*az^17*cos(a/2)^2*sin(a/2)^30*x+12870*ax*ay^14*az*cos(a/2)^16*sin(a/2)^16*x+102960*ax*ay^14*az^3*cos(a/2)^14*sin(a/2)^18*x+360360*ax*ay^14*az^5*cos(a/2)^12*sin(a/2)^20*x+720720*ax*ay^14*az^7*cos(a/2)^10*sin(a/2)^22*x+900900*ax*ay^14*az^9*cos(a/2)^8*sin(a/2)^24*x+720720*ax*ay^14*az^11*cos(a/2)^6*sin(a/2)^26*x+360360*ax*ay^14*az^13*cos(a/2)^4*sin(a/2)^28*x+102960*ax*ay^14*az^15*cos(a/2)^2*sin(a/2)^30*x+12870*ax*ay^16*az*cos(a/2)^14*sin(a/2)^18*x+90090*ax*ay^16*az^3*cos(a/2)^12*sin(a/2)^20*x+270270*ax*ay^16*az^5*cos(a/2)^10*sin(a/2)^22*x+450450*ax*ay^16*az^7*cos(a/2)^8*sin(a/2)^24*x+450450*ax*ay^16*az^9*cos(a/2)^6*sin(a/2)^26*x+270270*ax*ay^16*az^11*cos(a/2)^4*sin(a/2)^28*x+90090*ax*ay^16*az^13*cos(a/2)^2*sin(a/2)^30*x+10010*ax*ay^18*az*cos(a/2)^12*sin(a/2)^20*x+60060*ax*ay^18*az^3*cos(a/2)^10*sin(a/2)^22*x+150150*ax*ay^18*az^5*cos(a/2)^8*sin(a/2)^24*x+200200*ax*ay^18*az^7*cos(a/2)^6*sin(a/2)^26*x+150150*ax*ay^18*az^9*cos(a/2)^4*sin(a/2)^28*x+60060*ax*ay^18*az^11*cos(a/2)^2*sin(a/2)^30*x+6006*ax*ay^20*az*cos(a/2)^10*sin(a/2)^22*x+30030*ax*ay^20*az^3*cos(a/2)^8*sin(a/2)^24*x+60060*ax*ay^20*az^5*cos(a/2)^6*sin(a/2)^26*x+60060*ax*ay^20*az^7*cos(a/2)^4*sin(a/2)^28*x+30030*ax*ay^20*az^9*cos(a/2)^2*sin(a/2)^30*x+2730*ax*ay^22*az*cos(a/2)^8*sin(a/2)^24*x+10920*ax*ay^22*az^3*cos(a/2)^6*sin(a/2)^26*x+16380*ax*ay^22*az^5*cos(a/2)^4*sin(a/2)^28*x+10920*ax*ay^22*az^7*cos(a/2)^2*sin(a/2)^30*x+910*ax*ay^24*az*cos(a/2)^6*sin(a/2)^26*x+2730*ax*ay^24*az^3*cos(a/2)^4*sin(a/2)^28*x+2730*ax*ay^24*az^5*cos(a/2)^2*sin(a/2)^30*x+210*ax*ay^26*az*cos(a/2)^4*sin(a/2)^28*x+420*ax*ay^26*az^3*cos(a/2)^2*sin(a/2)^30*x+30*ax*ay^28*az*cos(a/2)^2*sin(a/2)^30*x+30*ax^2*ay*az*cos(a/2)^28*sin(a/2)^4*y+420*ax^2*ay*az^3*cos(a/2)^26*sin(a/2)^6*y+2730*ax^2*ay*az^5*cos(a/2)^24*sin(a/2)^8*y+10920*ax^2*ay*az^7*cos(a/2)^22*sin(a/2)^10*y+30030*ax^2*ay*az^9*cos(a/2)^20*sin(a/2)^12*y+60060*ax^2*ay*az^11*cos(a/2)^18*sin(a/2)^14*y+90090*ax^2*ay*az^13*cos(a/2)^16*sin(a/2)^16*y+102960*ax^2*ay*az^15*cos(a/2)^14*sin(a/2)^18*y+90090*ax^2*ay*az^17*cos(a/2)^12*sin(a/2)^20*y+60060*ax^2*ay*az^19*cos(a/2)^10*sin(a/2)^22*y+30030*ax^2*ay*az^21*cos(a/2)^8*sin(a/2)^24*y+10920*ax^2*ay*az^23*cos(a/2)^6*sin(a/2)^26*y+2730*ax^2*ay*az^25*cos(a/2)^4*sin(a/2)^28*y+420*ax^2*ay*az^27*cos(a/2)^2*sin(a/2)^30*y-2940*ax^2*ay^2*az^2*cos(a/2)^26*sin(a/2)^6*z-16380*ax^2*ay^2*az^4*cos(a/2)^24*sin(a/2)^8*z-54600*ax^2*ay^2*az^6*cos(a/2)^22*sin(a/2)^10*z-120120*ax^2*ay^2*az^8*cos(a/2)^20*sin(a/2)^12*z-180180*ax^2*ay^2*az^10*cos(a/2)^18*sin(a/2)^14*z-180180*ax^2*ay^2*az^12*cos(a/2)^16*sin(a/2)^16*z-102960*ax^2*ay^2*az^14*cos(a/2)^14*sin(a/2)^18*z+60060*ax^2*ay^2*az^18*cos(a/2)^10*sin(a/2)^22*z+60060*ax^2*ay^2*az^20*cos(a/2)^8*sin(a/2)^24*z+32760*ax^2*ay^2*az^22*cos(a/2)^6*sin(a/2)^26*z+10920*ax^2*ay^2*az^24*cos(a/2)^4*sin(a/2)^28*z+2100*ax^2*ay^2*az^26*cos(a/2)^2*sin(a/2)^30*z+420*ax^2*ay^3*az*cos(a/2)^26*sin(a/2)^6*y+5460*ax^2*ay^3*az^3*cos(a/2)^24*sin(a/2)^8*y+32760*ax^2*ay^3*az^5*cos(a/2)^22*sin(a/2)^10*y+120120*ax^2*ay^3*az^7*cos(a/2)^20*sin(a/2)^12*y+300300*ax^2*ay^3*az^9*cos(a/2)^18*sin(a/2)^14*y+540540*ax^2*ay^3*az^11*cos(a/2)^16*sin(a/2)^16*y+720720*ax^2*ay^3*az^13*cos(a/2)^14*sin(a/2)^18*y+720720*ax^2*ay^3*az^15*cos(a/2)^12*sin(a/2)^20*y+540540*ax^2*ay^3*az^17*cos(a/2)^10*sin(a/2)^22*y+300300*ax^2*ay^3*az^19*cos(a/2)^8*sin(a/2)^24*y+120120*ax^2*ay^3*az^21*cos(a/2)^6*sin(a/2)^26*y+32760*ax^2*ay^3*az^23*cos(a/2)^4*sin(a/2)^28*y+5460*ax^2*ay^3*az^25*cos(a/2)^2*sin(a/2)^30*y-19110*ax^2*ay^4*az^2*cos(a/2)^24*sin(a/2)^8*z-98280*ax^2*ay^4*az^4*cos(a/2)^22*sin(a/2)^10*z-300300*ax^2*ay^4*az^6*cos(a/2)^20*sin(a/2)^12*z-600600*ax^2*ay^4*az^8*cos(a/2)^18*sin(a/2)^14*z-810810*ax^2*ay^4*az^10*cos(a/2)^16*sin(a/2)^16*z-720720*ax^2*ay^4*az^12*cos(a/2)^14*sin(a/2)^18*z-360360*ax^2*ay^4*az^14*cos(a/2)^12*sin(a/2)^20*z+150150*ax^2*ay^4*az^18*cos(a/2)^8*sin(a/2)^24*z+120120*ax^2*ay^4*az^20*cos(a/2)^6*sin(a/2)^26*z+49140*ax^2*ay^4*az^22*cos(a/2)^4*sin(a/2)^28*z+10920*ax^2*ay^4*az^24*cos(a/2)^2*sin(a/2)^30*z+2730*ax^2*ay^5*az*cos(a/2)^24*sin(a/2)^8*y+32760*ax^2*ay^5*az^3*cos(a/2)^22*sin(a/2)^10*y+180180*ax^2*ay^5*az^5*cos(a/2)^20*sin(a/2)^12*y+600600*ax^2*ay^5*az^7*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^2*ay^5*az^9*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^2*ay^5*az^11*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^2*ay^5*az^13*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^2*ay^5*az^15*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^2*ay^5*az^17*cos(a/2)^8*sin(a/2)^24*y+600600*ax^2*ay^5*az^19*cos(a/2)^6*sin(a/2)^26*y+180180*ax^2*ay^5*az^21*cos(a/2)^4*sin(a/2)^28*y+32760*ax^2*ay^5*az^23*cos(a/2)^2*sin(a/2)^30*y-76440*ax^2*ay^6*az^2*cos(a/2)^22*sin(a/2)^10*z-360360*ax^2*ay^6*az^4*cos(a/2)^20*sin(a/2)^12*z-1001000*ax^2*ay^6*az^6*cos(a/2)^18*sin(a/2)^14*z-1801800*ax^2*ay^6*az^8*cos(a/2)^16*sin(a/2)^16*z-2162160*ax^2*ay^6*az^10*cos(a/2)^14*sin(a/2)^18*z-1681680*ax^2*ay^6*az^12*cos(a/2)^12*sin(a/2)^20*z-720720*ax^2*ay^6*az^14*cos(a/2)^10*sin(a/2)^22*z+200200*ax^2*ay^6*az^18*cos(a/2)^6*sin(a/2)^26*z+120120*ax^2*ay^6*az^20*cos(a/2)^4*sin(a/2)^28*z+32760*ax^2*ay^6*az^22*cos(a/2)^2*sin(a/2)^30*z+10920*ax^2*ay^7*az*cos(a/2)^22*sin(a/2)^10*y+120120*ax^2*ay^7*az^3*cos(a/2)^20*sin(a/2)^12*y+600600*ax^2*ay^7*az^5*cos(a/2)^18*sin(a/2)^14*y+1801800*ax^2*ay^7*az^7*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^2*ay^7*az^9*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^2*ay^7*az^11*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^2*ay^7*az^13*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^2*ay^7*az^15*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^2*ay^7*az^17*cos(a/2)^6*sin(a/2)^26*y+600600*ax^2*ay^7*az^19*cos(a/2)^4*sin(a/2)^28*y+120120*ax^2*ay^7*az^21*cos(a/2)^2*sin(a/2)^30*y-210210*ax^2*ay^8*az^2*cos(a/2)^20*sin(a/2)^12*z-900900*ax^2*ay^8*az^4*cos(a/2)^18*sin(a/2)^14*z-2252250*ax^2*ay^8*az^6*cos(a/2)^16*sin(a/2)^16*z-3603600*ax^2*ay^8*az^8*cos(a/2)^14*sin(a/2)^18*z-3783780*ax^2*ay^8*az^10*cos(a/2)^12*sin(a/2)^20*z-2522520*ax^2*ay^8*az^12*cos(a/2)^10*sin(a/2)^22*z-900900*ax^2*ay^8*az^14*cos(a/2)^8*sin(a/2)^24*z+150150*ax^2*ay^8*az^18*cos(a/2)^4*sin(a/2)^28*z+60060*ax^2*ay^8*az^20*cos(a/2)^2*sin(a/2)^30*z+30030*ax^2*ay^9*az*cos(a/2)^20*sin(a/2)^12*y+300300*ax^2*ay^9*az^3*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^2*ay^9*az^5*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^2*ay^9*az^7*cos(a/2)^14*sin(a/2)^18*y+6306300*ax^2*ay^9*az^9*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^2*ay^9*az^11*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^2*ay^9*az^13*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^2*ay^9*az^15*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^2*ay^9*az^17*cos(a/2)^4*sin(a/2)^28*y+300300*ax^2*ay^9*az^19*cos(a/2)^2*sin(a/2)^30*y-420420*ax^2*ay^10*az^2*cos(a/2)^18*sin(a/2)^14*z-1621620*ax^2*ay^10*az^4*cos(a/2)^16*sin(a/2)^16*z-3603600*ax^2*ay^10*az^6*cos(a/2)^14*sin(a/2)^18*z-5045040*ax^2*ay^10*az^8*cos(a/2)^12*sin(a/2)^20*z-4540536*ax^2*ay^10*az^10*cos(a/2)^10*sin(a/2)^22*z-2522520*ax^2*ay^10*az^12*cos(a/2)^8*sin(a/2)^24*z-720720*ax^2*ay^10*az^14*cos(a/2)^6*sin(a/2)^26*z+60060*ax^2*ay^10*az^18*cos(a/2)^2*sin(a/2)^30*z+60060*ax^2*ay^11*az*cos(a/2)^18*sin(a/2)^14*y+540540*ax^2*ay^11*az^3*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^2*ay^11*az^5*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^2*ay^11*az^7*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^2*ay^11*az^9*cos(a/2)^10*sin(a/2)^22*y+7567560*ax^2*ay^11*az^11*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^2*ay^11*az^13*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^2*ay^11*az^15*cos(a/2)^4*sin(a/2)^28*y+540540*ax^2*ay^11*az^17*cos(a/2)^2*sin(a/2)^30*y-630630*ax^2*ay^12*az^2*cos(a/2)^16*sin(a/2)^16*z-2162160*ax^2*ay^12*az^4*cos(a/2)^14*sin(a/2)^18*z-4204200*ax^2*ay^12*az^6*cos(a/2)^12*sin(a/2)^20*z-5045040*ax^2*ay^12*az^8*cos(a/2)^10*sin(a/2)^22*z-3783780*ax^2*ay^12*az^10*cos(a/2)^8*sin(a/2)^24*z-1681680*ax^2*ay^12*az^12*cos(a/2)^6*sin(a/2)^26*z-360360*ax^2*ay^12*az^14*cos(a/2)^4*sin(a/2)^28*z+90090*ax^2*ay^13*az*cos(a/2)^16*sin(a/2)^16*y+720720*ax^2*ay^13*az^3*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^2*ay^13*az^5*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^2*ay^13*az^7*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^2*ay^13*az^9*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^2*ay^13*az^11*cos(a/2)^6*sin(a/2)^26*y+2522520*ax^2*ay^13*az^13*cos(a/2)^4*sin(a/2)^28*y+720720*ax^2*ay^13*az^15*cos(a/2)^2*sin(a/2)^30*y-720720*ax^2*ay^14*az^2*cos(a/2)^14*sin(a/2)^18*z-2162160*ax^2*ay^14*az^4*cos(a/2)^12*sin(a/2)^20*z-3603600*ax^2*ay^14*az^6*cos(a/2)^10*sin(a/2)^22*z-3603600*ax^2*ay^14*az^8*cos(a/2)^8*sin(a/2)^24*z-2162160*ax^2*ay^14*az^10*cos(a/2)^6*sin(a/2)^26*z-720720*ax^2*ay^14*az^12*cos(a/2)^4*sin(a/2)^28*z-102960*ax^2*ay^14*az^14*cos(a/2)^2*sin(a/2)^30*z+102960*ax^2*ay^15*az*cos(a/2)^14*sin(a/2)^18*y+720720*ax^2*ay^15*az^3*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^2*ay^15*az^5*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^2*ay^15*az^7*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^2*ay^15*az^9*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^2*ay^15*az^11*cos(a/2)^4*sin(a/2)^28*y+720720*ax^2*ay^15*az^13*cos(a/2)^2*sin(a/2)^30*y-630630*ax^2*ay^16*az^2*cos(a/2)^12*sin(a/2)^20*z-1621620*ax^2*ay^16*az^4*cos(a/2)^10*sin(a/2)^22*z-2252250*ax^2*ay^16*az^6*cos(a/2)^8*sin(a/2)^24*z-1801800*ax^2*ay^16*az^8*cos(a/2)^6*sin(a/2)^26*z-810810*ax^2*ay^16*az^10*cos(a/2)^4*sin(a/2)^28*z-180180*ax^2*ay^16*az^12*cos(a/2)^2*sin(a/2)^30*z+90090*ax^2*ay^17*az*cos(a/2)^12*sin(a/2)^20*y+540540*ax^2*ay^17*az^3*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^2*ay^17*az^5*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^2*ay^17*az^7*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^2*ay^17*az^9*cos(a/2)^4*sin(a/2)^28*y+540540*ax^2*ay^17*az^11*cos(a/2)^2*sin(a/2)^30*y-420420*ax^2*ay^18*az^2*cos(a/2)^10*sin(a/2)^22*z-900900*ax^2*ay^18*az^4*cos(a/2)^8*sin(a/2)^24*z-1001000*ax^2*ay^18*az^6*cos(a/2)^6*sin(a/2)^26*z-600600*ax^2*ay^18*az^8*cos(a/2)^4*sin(a/2)^28*z-180180*ax^2*ay^18*az^10*cos(a/2)^2*sin(a/2)^30*z+60060*ax^2*ay^19*az*cos(a/2)^10*sin(a/2)^22*y+300300*ax^2*ay^19*az^3*cos(a/2)^8*sin(a/2)^24*y+600600*ax^2*ay^19*az^5*cos(a/2)^6*sin(a/2)^26*y+600600*ax^2*ay^19*az^7*cos(a/2)^4*sin(a/2)^28*y+300300*ax^2*ay^19*az^9*cos(a/2)^2*sin(a/2)^30*y-210210*ax^2*ay^20*az^2*cos(a/2)^8*sin(a/2)^24*z-360360*ax^2*ay^20*az^4*cos(a/2)^6*sin(a/2)^26*z-300300*ax^2*ay^20*az^6*cos(a/2)^4*sin(a/2)^28*z-120120*ax^2*ay^20*az^8*cos(a/2)^2*sin(a/2)^30*z+30030*ax^2*ay^21*az*cos(a/2)^8*sin(a/2)^24*y+120120*ax^2*ay^21*az^3*cos(a/2)^6*sin(a/2)^26*y+180180*ax^2*ay^21*az^5*cos(a/2)^4*sin(a/2)^28*y+120120*ax^2*ay^21*az^7*cos(a/2)^2*sin(a/2)^30*y-76440*ax^2*ay^22*az^2*cos(a/2)^6*sin(a/2)^26*z-98280*ax^2*ay^22*az^4*cos(a/2)^4*sin(a/2)^28*z-54600*ax^2*ay^22*az^6*cos(a/2)^2*sin(a/2)^30*z+10920*ax^2*ay^23*az*cos(a/2)^6*sin(a/2)^26*y+32760*ax^2*ay^23*az^3*cos(a/2)^4*sin(a/2)^28*y+32760*ax^2*ay^23*az^5*cos(a/2)^2*sin(a/2)^30*y-19110*ax^2*ay^24*az^2*cos(a/2)^4*sin(a/2)^28*z-16380*ax^2*ay^24*az^4*cos(a/2)^2*sin(a/2)^30*z+2730*ax^2*ay^25*az*cos(a/2)^4*sin(a/2)^28*y+5460*ax^2*ay^25*az^3*cos(a/2)^2*sin(a/2)^30*y-2940*ax^2*ay^26*az^2*cos(a/2)^2*sin(a/2)^30*z+420*ax^2*ay^27*az*cos(a/2)^2*sin(a/2)^30*y+420*ax^3*ay^2*az*cos(a/2)^26*sin(a/2)^6*x+5460*ax^3*ay^2*az^3*cos(a/2)^24*sin(a/2)^8*x+32760*ax^3*ay^2*az^5*cos(a/2)^22*sin(a/2)^10*x+120120*ax^3*ay^2*az^7*cos(a/2)^20*sin(a/2)^12*x+300300*ax^3*ay^2*az^9*cos(a/2)^18*sin(a/2)^14*x+540540*ax^3*ay^2*az^11*cos(a/2)^16*sin(a/2)^16*x+720720*ax^3*ay^2*az^13*cos(a/2)^14*sin(a/2)^18*x+720720*ax^3*ay^2*az^15*cos(a/2)^12*sin(a/2)^20*x+540540*ax^3*ay^2*az^17*cos(a/2)^10*sin(a/2)^22*x+300300*ax^3*ay^2*az^19*cos(a/2)^8*sin(a/2)^24*x+120120*ax^3*ay^2*az^21*cos(a/2)^6*sin(a/2)^26*x+32760*ax^3*ay^2*az^23*cos(a/2)^4*sin(a/2)^28*x+5460*ax^3*ay^2*az^25*cos(a/2)^2*sin(a/2)^30*x+2730*ax^3*ay^4*az*cos(a/2)^24*sin(a/2)^8*x+32760*ax^3*ay^4*az^3*cos(a/2)^22*sin(a/2)^10*x+180180*ax^3*ay^4*az^5*cos(a/2)^20*sin(a/2)^12*x+600600*ax^3*ay^4*az^7*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^3*ay^4*az^9*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^3*ay^4*az^11*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^3*ay^4*az^13*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^3*ay^4*az^15*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^3*ay^4*az^17*cos(a/2)^8*sin(a/2)^24*x+600600*ax^3*ay^4*az^19*cos(a/2)^6*sin(a/2)^26*x+180180*ax^3*ay^4*az^21*cos(a/2)^4*sin(a/2)^28*x+32760*ax^3*ay^4*az^23*cos(a/2)^2*sin(a/2)^30*x+10920*ax^3*ay^6*az*cos(a/2)^22*sin(a/2)^10*x+120120*ax^3*ay^6*az^3*cos(a/2)^20*sin(a/2)^12*x+600600*ax^3*ay^6*az^5*cos(a/2)^18*sin(a/2)^14*x+1801800*ax^3*ay^6*az^7*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^3*ay^6*az^9*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^3*ay^6*az^11*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^3*ay^6*az^13*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^3*ay^6*az^15*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^3*ay^6*az^17*cos(a/2)^6*sin(a/2)^26*x+600600*ax^3*ay^6*az^19*cos(a/2)^4*sin(a/2)^28*x+120120*ax^3*ay^6*az^21*cos(a/2)^2*sin(a/2)^30*x+30030*ax^3*ay^8*az*cos(a/2)^20*sin(a/2)^12*x+300300*ax^3*ay^8*az^3*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^3*ay^8*az^5*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^3*ay^8*az^7*cos(a/2)^14*sin(a/2)^18*x+6306300*ax^3*ay^8*az^9*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^3*ay^8*az^11*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^3*ay^8*az^13*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^3*ay^8*az^15*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^3*ay^8*az^17*cos(a/2)^4*sin(a/2)^28*x+300300*ax^3*ay^8*az^19*cos(a/2)^2*sin(a/2)^30*x+60060*ax^3*ay^10*az*cos(a/2)^18*sin(a/2)^14*x+540540*ax^3*ay^10*az^3*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^3*ay^10*az^5*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^3*ay^10*az^7*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^3*ay^10*az^9*cos(a/2)^10*sin(a/2)^22*x+7567560*ax^3*ay^10*az^11*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^3*ay^10*az^13*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^3*ay^10*az^15*cos(a/2)^4*sin(a/2)^28*x+540540*ax^3*ay^10*az^17*cos(a/2)^2*sin(a/2)^30*x+90090*ax^3*ay^12*az*cos(a/2)^16*sin(a/2)^16*x+720720*ax^3*ay^12*az^3*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^3*ay^12*az^5*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^3*ay^12*az^7*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^3*ay^12*az^9*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^3*ay^12*az^11*cos(a/2)^6*sin(a/2)^26*x+2522520*ax^3*ay^12*az^13*cos(a/2)^4*sin(a/2)^28*x+720720*ax^3*ay^12*az^15*cos(a/2)^2*sin(a/2)^30*x+102960*ax^3*ay^14*az*cos(a/2)^14*sin(a/2)^18*x+720720*ax^3*ay^14*az^3*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^3*ay^14*az^5*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^3*ay^14*az^7*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^3*ay^14*az^9*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^3*ay^14*az^11*cos(a/2)^4*sin(a/2)^28*x+720720*ax^3*ay^14*az^13*cos(a/2)^2*sin(a/2)^30*x+90090*ax^3*ay^16*az*cos(a/2)^12*sin(a/2)^20*x+540540*ax^3*ay^16*az^3*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^3*ay^16*az^5*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^3*ay^16*az^7*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^3*ay^16*az^9*cos(a/2)^4*sin(a/2)^28*x+540540*ax^3*ay^16*az^11*cos(a/2)^2*sin(a/2)^30*x+60060*ax^3*ay^18*az*cos(a/2)^10*sin(a/2)^22*x+300300*ax^3*ay^18*az^3*cos(a/2)^8*sin(a/2)^24*x+600600*ax^3*ay^18*az^5*cos(a/2)^6*sin(a/2)^26*x+600600*ax^3*ay^18*az^7*cos(a/2)^4*sin(a/2)^28*x+300300*ax^3*ay^18*az^9*cos(a/2)^2*sin(a/2)^30*x+30030*ax^3*ay^20*az*cos(a/2)^8*sin(a/2)^24*x+120120*ax^3*ay^20*az^3*cos(a/2)^6*sin(a/2)^26*x+180180*ax^3*ay^20*az^5*cos(a/2)^4*sin(a/2)^28*x+120120*ax^3*ay^20*az^7*cos(a/2)^2*sin(a/2)^30*x+10920*ax^3*ay^22*az*cos(a/2)^6*sin(a/2)^26*x+32760*ax^3*ay^22*az^3*cos(a/2)^4*sin(a/2)^28*x+32760*ax^3*ay^22*az^5*cos(a/2)^2*sin(a/2)^30*x+2730*ax^3*ay^24*az*cos(a/2)^4*sin(a/2)^28*x+5460*ax^3*ay^24*az^3*cos(a/2)^2*sin(a/2)^30*x+420*ax^3*ay^26*az*cos(a/2)^2*sin(a/2)^30*x+210*ax^4*ay*az*cos(a/2)^26*sin(a/2)^6*y+2730*ax^4*ay*az^3*cos(a/2)^24*sin(a/2)^8*y+16380*ax^4*ay*az^5*cos(a/2)^22*sin(a/2)^10*y+60060*ax^4*ay*az^7*cos(a/2)^20*sin(a/2)^12*y+150150*ax^4*ay*az^9*cos(a/2)^18*sin(a/2)^14*y+270270*ax^4*ay*az^11*cos(a/2)^16*sin(a/2)^16*y+360360*ax^4*ay*az^13*cos(a/2)^14*sin(a/2)^18*y+360360*ax^4*ay*az^15*cos(a/2)^12*sin(a/2)^20*y+270270*ax^4*ay*az^17*cos(a/2)^10*sin(a/2)^22*y+150150*ax^4*ay*az^19*cos(a/2)^8*sin(a/2)^24*y+60060*ax^4*ay*az^21*cos(a/2)^6*sin(a/2)^26*y+16380*ax^4*ay*az^23*cos(a/2)^4*sin(a/2)^28*y+2730*ax^4*ay*az^25*cos(a/2)^2*sin(a/2)^30*y-19110*ax^4*ay^2*az^2*cos(a/2)^24*sin(a/2)^8*z-98280*ax^4*ay^2*az^4*cos(a/2)^22*sin(a/2)^10*z-300300*ax^4*ay^2*az^6*cos(a/2)^20*sin(a/2)^12*z-600600*ax^4*ay^2*az^8*cos(a/2)^18*sin(a/2)^14*z-810810*ax^4*ay^2*az^10*cos(a/2)^16*sin(a/2)^16*z-720720*ax^4*ay^2*az^12*cos(a/2)^14*sin(a/2)^18*z-360360*ax^4*ay^2*az^14*cos(a/2)^12*sin(a/2)^20*z+150150*ax^4*ay^2*az^18*cos(a/2)^8*sin(a/2)^24*z+120120*ax^4*ay^2*az^20*cos(a/2)^6*sin(a/2)^26*z+49140*ax^4*ay^2*az^22*cos(a/2)^4*sin(a/2)^28*z+10920*ax^4*ay^2*az^24*cos(a/2)^2*sin(a/2)^30*z+2730*ax^4*ay^3*az*cos(a/2)^24*sin(a/2)^8*y+32760*ax^4*ay^3*az^3*cos(a/2)^22*sin(a/2)^10*y+180180*ax^4*ay^3*az^5*cos(a/2)^20*sin(a/2)^12*y+600600*ax^4*ay^3*az^7*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^4*ay^3*az^9*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^4*ay^3*az^11*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^4*ay^3*az^13*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^4*ay^3*az^15*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^4*ay^3*az^17*cos(a/2)^8*sin(a/2)^24*y+600600*ax^4*ay^3*az^19*cos(a/2)^6*sin(a/2)^26*y+180180*ax^4*ay^3*az^21*cos(a/2)^4*sin(a/2)^28*y+32760*ax^4*ay^3*az^23*cos(a/2)^2*sin(a/2)^30*y-114660*ax^4*ay^4*az^2*cos(a/2)^22*sin(a/2)^10*z-540540*ax^4*ay^4*az^4*cos(a/2)^20*sin(a/2)^12*z-1501500*ax^4*ay^4*az^6*cos(a/2)^18*sin(a/2)^14*z-2702700*ax^4*ay^4*az^8*cos(a/2)^16*sin(a/2)^16*z-3243240*ax^4*ay^4*az^10*cos(a/2)^14*sin(a/2)^18*z-2522520*ax^4*ay^4*az^12*cos(a/2)^12*sin(a/2)^20*z-1081080*ax^4*ay^4*az^14*cos(a/2)^10*sin(a/2)^22*z+300300*ax^4*ay^4*az^18*cos(a/2)^6*sin(a/2)^26*z+180180*ax^4*ay^4*az^20*cos(a/2)^4*sin(a/2)^28*z+49140*ax^4*ay^4*az^22*cos(a/2)^2*sin(a/2)^30*z+16380*ax^4*ay^5*az*cos(a/2)^22*sin(a/2)^10*y+180180*ax^4*ay^5*az^3*cos(a/2)^20*sin(a/2)^12*y+900900*ax^4*ay^5*az^5*cos(a/2)^18*sin(a/2)^14*y+2702700*ax^4*ay^5*az^7*cos(a/2)^16*sin(a/2)^16*y+5405400*ax^4*ay^5*az^9*cos(a/2)^14*sin(a/2)^18*y+7567560*ax^4*ay^5*az^11*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^4*ay^5*az^13*cos(a/2)^10*sin(a/2)^22*y+5405400*ax^4*ay^5*az^15*cos(a/2)^8*sin(a/2)^24*y+2702700*ax^4*ay^5*az^17*cos(a/2)^6*sin(a/2)^26*y+900900*ax^4*ay^5*az^19*cos(a/2)^4*sin(a/2)^28*y+180180*ax^4*ay^5*az^21*cos(a/2)^2*sin(a/2)^30*y-420420*ax^4*ay^6*az^2*cos(a/2)^20*sin(a/2)^12*z-1801800*ax^4*ay^6*az^4*cos(a/2)^18*sin(a/2)^14*z-4504500*ax^4*ay^6*az^6*cos(a/2)^16*sin(a/2)^16*z-7207200*ax^4*ay^6*az^8*cos(a/2)^14*sin(a/2)^18*z-7567560*ax^4*ay^6*az^10*cos(a/2)^12*sin(a/2)^20*z-5045040*ax^4*ay^6*az^12*cos(a/2)^10*sin(a/2)^22*z-1801800*ax^4*ay^6*az^14*cos(a/2)^8*sin(a/2)^24*z+300300*ax^4*ay^6*az^18*cos(a/2)^4*sin(a/2)^28*z+120120*ax^4*ay^6*az^20*cos(a/2)^2*sin(a/2)^30*z+60060*ax^4*ay^7*az*cos(a/2)^20*sin(a/2)^12*y+600600*ax^4*ay^7*az^3*cos(a/2)^18*sin(a/2)^14*y+2702700*ax^4*ay^7*az^5*cos(a/2)^16*sin(a/2)^16*y+7207200*ax^4*ay^7*az^7*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^4*ay^7*az^9*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^4*ay^7*az^11*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^4*ay^7*az^13*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^4*ay^7*az^15*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^4*ay^7*az^17*cos(a/2)^4*sin(a/2)^28*y+600600*ax^4*ay^7*az^19*cos(a/2)^2*sin(a/2)^30*y-1051050*ax^4*ay^8*az^2*cos(a/2)^18*sin(a/2)^14*z-4054050*ax^4*ay^8*az^4*cos(a/2)^16*sin(a/2)^16*z-9009000*ax^4*ay^8*az^6*cos(a/2)^14*sin(a/2)^18*z-12612600*ax^4*ay^8*az^8*cos(a/2)^12*sin(a/2)^20*z-11351340*ax^4*ay^8*az^10*cos(a/2)^10*sin(a/2)^22*z-6306300*ax^4*ay^8*az^12*cos(a/2)^8*sin(a/2)^24*z-1801800*ax^4*ay^8*az^14*cos(a/2)^6*sin(a/2)^26*z+150150*ax^4*ay^8*az^18*cos(a/2)^2*sin(a/2)^30*z+150150*ax^4*ay^9*az*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^4*ay^9*az^3*cos(a/2)^16*sin(a/2)^16*y+5405400*ax^4*ay^9*az^5*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^4*ay^9*az^7*cos(a/2)^12*sin(a/2)^20*y+18918900*ax^4*ay^9*az^9*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^4*ay^9*az^11*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^4*ay^9*az^13*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^4*ay^9*az^15*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^4*ay^9*az^17*cos(a/2)^2*sin(a/2)^30*y-1891890*ax^4*ay^10*az^2*cos(a/2)^16*sin(a/2)^16*z-6486480*ax^4*ay^10*az^4*cos(a/2)^14*sin(a/2)^18*z-12612600*ax^4*ay^10*az^6*cos(a/2)^12*sin(a/2)^20*z-15135120*ax^4*ay^10*az^8*cos(a/2)^10*sin(a/2)^22*z-11351340*ax^4*ay^10*az^10*cos(a/2)^8*sin(a/2)^24*z-5045040*ax^4*ay^10*az^12*cos(a/2)^6*sin(a/2)^26*z-1081080*ax^4*ay^10*az^14*cos(a/2)^4*sin(a/2)^28*z+270270*ax^4*ay^11*az*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^4*ay^11*az^3*cos(a/2)^14*sin(a/2)^18*y+7567560*ax^4*ay^11*az^5*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^4*ay^11*az^7*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^4*ay^11*az^9*cos(a/2)^8*sin(a/2)^24*y+15135120*ax^4*ay^11*az^11*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^4*ay^11*az^13*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^4*ay^11*az^15*cos(a/2)^2*sin(a/2)^30*y-2522520*ax^4*ay^12*az^2*cos(a/2)^14*sin(a/2)^18*z-7567560*ax^4*ay^12*az^4*cos(a/2)^12*sin(a/2)^20*z-12612600*ax^4*ay^12*az^6*cos(a/2)^10*sin(a/2)^22*z-12612600*ax^4*ay^12*az^8*cos(a/2)^8*sin(a/2)^24*z-7567560*ax^4*ay^12*az^10*cos(a/2)^6*sin(a/2)^26*z-2522520*ax^4*ay^12*az^12*cos(a/2)^4*sin(a/2)^28*z-360360*ax^4*ay^12*az^14*cos(a/2)^2*sin(a/2)^30*z+360360*ax^4*ay^13*az*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^4*ay^13*az^3*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^4*ay^13*az^5*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^4*ay^13*az^7*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^4*ay^13*az^9*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^4*ay^13*az^11*cos(a/2)^4*sin(a/2)^28*y+2522520*ax^4*ay^13*az^13*cos(a/2)^2*sin(a/2)^30*y-2522520*ax^4*ay^14*az^2*cos(a/2)^12*sin(a/2)^20*z-6486480*ax^4*ay^14*az^4*cos(a/2)^10*sin(a/2)^22*z-9009000*ax^4*ay^14*az^6*cos(a/2)^8*sin(a/2)^24*z-7207200*ax^4*ay^14*az^8*cos(a/2)^6*sin(a/2)^26*z-3243240*ax^4*ay^14*az^10*cos(a/2)^4*sin(a/2)^28*z-720720*ax^4*ay^14*az^12*cos(a/2)^2*sin(a/2)^30*z+360360*ax^4*ay^15*az*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^4*ay^15*az^3*cos(a/2)^10*sin(a/2)^22*y+5405400*ax^4*ay^15*az^5*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^4*ay^15*az^7*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^4*ay^15*az^9*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^4*ay^15*az^11*cos(a/2)^2*sin(a/2)^30*y-1891890*ax^4*ay^16*az^2*cos(a/2)^10*sin(a/2)^22*z-4054050*ax^4*ay^16*az^4*cos(a/2)^8*sin(a/2)^24*z-4504500*ax^4*ay^16*az^6*cos(a/2)^6*sin(a/2)^26*z-2702700*ax^4*ay^16*az^8*cos(a/2)^4*sin(a/2)^28*z-810810*ax^4*ay^16*az^10*cos(a/2)^2*sin(a/2)^30*z+270270*ax^4*ay^17*az*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^4*ay^17*az^3*cos(a/2)^8*sin(a/2)^24*y+2702700*ax^4*ay^17*az^5*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^4*ay^17*az^7*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^4*ay^17*az^9*cos(a/2)^2*sin(a/2)^30*y-1051050*ax^4*ay^18*az^2*cos(a/2)^8*sin(a/2)^24*z-1801800*ax^4*ay^18*az^4*cos(a/2)^6*sin(a/2)^26*z-1501500*ax^4*ay^18*az^6*cos(a/2)^4*sin(a/2)^28*z-600600*ax^4*ay^18*az^8*cos(a/2)^2*sin(a/2)^30*z+150150*ax^4*ay^19*az*cos(a/2)^8*sin(a/2)^24*y+600600*ax^4*ay^19*az^3*cos(a/2)^6*sin(a/2)^26*y+900900*ax^4*ay^19*az^5*cos(a/2)^4*sin(a/2)^28*y+600600*ax^4*ay^19*az^7*cos(a/2)^2*sin(a/2)^30*y-420420*ax^4*ay^20*az^2*cos(a/2)^6*sin(a/2)^26*z-540540*ax^4*ay^20*az^4*cos(a/2)^4*sin(a/2)^28*z-300300*ax^4*ay^20*az^6*cos(a/2)^2*sin(a/2)^30*z+60060*ax^4*ay^21*az*cos(a/2)^6*sin(a/2)^26*y+180180*ax^4*ay^21*az^3*cos(a/2)^4*sin(a/2)^28*y+180180*ax^4*ay^21*az^5*cos(a/2)^2*sin(a/2)^30*y-114660*ax^4*ay^22*az^2*cos(a/2)^4*sin(a/2)^28*z-98280*ax^4*ay^22*az^4*cos(a/2)^2*sin(a/2)^30*z+16380*ax^4*ay^23*az*cos(a/2)^4*sin(a/2)^28*y+32760*ax^4*ay^23*az^3*cos(a/2)^2*sin(a/2)^30*y-19110*ax^4*ay^24*az^2*cos(a/2)^2*sin(a/2)^30*z+2730*ax^4*ay^25*az*cos(a/2)^2*sin(a/2)^30*y+2730*ax^5*ay^2*az*cos(a/2)^24*sin(a/2)^8*x+32760*ax^5*ay^2*az^3*cos(a/2)^22*sin(a/2)^10*x+180180*ax^5*ay^2*az^5*cos(a/2)^20*sin(a/2)^12*x+600600*ax^5*ay^2*az^7*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^5*ay^2*az^9*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^5*ay^2*az^11*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^5*ay^2*az^13*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^5*ay^2*az^15*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^5*ay^2*az^17*cos(a/2)^8*sin(a/2)^24*x+600600*ax^5*ay^2*az^19*cos(a/2)^6*sin(a/2)^26*x+180180*ax^5*ay^2*az^21*cos(a/2)^4*sin(a/2)^28*x+32760*ax^5*ay^2*az^23*cos(a/2)^2*sin(a/2)^30*x+16380*ax^5*ay^4*az*cos(a/2)^22*sin(a/2)^10*x+180180*ax^5*ay^4*az^3*cos(a/2)^20*sin(a/2)^12*x+900900*ax^5*ay^4*az^5*cos(a/2)^18*sin(a/2)^14*x+2702700*ax^5*ay^4*az^7*cos(a/2)^16*sin(a/2)^16*x+5405400*ax^5*ay^4*az^9*cos(a/2)^14*sin(a/2)^18*x+7567560*ax^5*ay^4*az^11*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^5*ay^4*az^13*cos(a/2)^10*sin(a/2)^22*x+5405400*ax^5*ay^4*az^15*cos(a/2)^8*sin(a/2)^24*x+2702700*ax^5*ay^4*az^17*cos(a/2)^6*sin(a/2)^26*x+900900*ax^5*ay^4*az^19*cos(a/2)^4*sin(a/2)^28*x+180180*ax^5*ay^4*az^21*cos(a/2)^2*sin(a/2)^30*x+60060*ax^5*ay^6*az*cos(a/2)^20*sin(a/2)^12*x+600600*ax^5*ay^6*az^3*cos(a/2)^18*sin(a/2)^14*x+2702700*ax^5*ay^6*az^5*cos(a/2)^16*sin(a/2)^16*x+7207200*ax^5*ay^6*az^7*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^5*ay^6*az^9*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^5*ay^6*az^11*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^5*ay^6*az^13*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^5*ay^6*az^15*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^5*ay^6*az^17*cos(a/2)^4*sin(a/2)^28*x+600600*ax^5*ay^6*az^19*cos(a/2)^2*sin(a/2)^30*x+150150*ax^5*ay^8*az*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^5*ay^8*az^3*cos(a/2)^16*sin(a/2)^16*x+5405400*ax^5*ay^8*az^5*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^5*ay^8*az^7*cos(a/2)^12*sin(a/2)^20*x+18918900*ax^5*ay^8*az^9*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^5*ay^8*az^11*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^5*ay^8*az^13*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^5*ay^8*az^15*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^5*ay^8*az^17*cos(a/2)^2*sin(a/2)^30*x+270270*ax^5*ay^10*az*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^5*ay^10*az^3*cos(a/2)^14*sin(a/2)^18*x+7567560*ax^5*ay^10*az^5*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^5*ay^10*az^7*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^5*ay^10*az^9*cos(a/2)^8*sin(a/2)^24*x+15135120*ax^5*ay^10*az^11*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^5*ay^10*az^13*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^5*ay^10*az^15*cos(a/2)^2*sin(a/2)^30*x+360360*ax^5*ay^12*az*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^5*ay^12*az^3*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^5*ay^12*az^5*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^5*ay^12*az^7*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^5*ay^12*az^9*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^5*ay^12*az^11*cos(a/2)^4*sin(a/2)^28*x+2522520*ax^5*ay^12*az^13*cos(a/2)^2*sin(a/2)^30*x+360360*ax^5*ay^14*az*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^5*ay^14*az^3*cos(a/2)^10*sin(a/2)^22*x+5405400*ax^5*ay^14*az^5*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^5*ay^14*az^7*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^5*ay^14*az^9*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^5*ay^14*az^11*cos(a/2)^2*sin(a/2)^30*x+270270*ax^5*ay^16*az*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^5*ay^16*az^3*cos(a/2)^8*sin(a/2)^24*x+2702700*ax^5*ay^16*az^5*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^5*ay^16*az^7*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^5*ay^16*az^9*cos(a/2)^2*sin(a/2)^30*x+150150*ax^5*ay^18*az*cos(a/2)^8*sin(a/2)^24*x+600600*ax^5*ay^18*az^3*cos(a/2)^6*sin(a/2)^26*x+900900*ax^5*ay^18*az^5*cos(a/2)^4*sin(a/2)^28*x+600600*ax^5*ay^18*az^7*cos(a/2)^2*sin(a/2)^30*x+60060*ax^5*ay^20*az*cos(a/2)^6*sin(a/2)^26*x+180180*ax^5*ay^20*az^3*cos(a/2)^4*sin(a/2)^28*x+180180*ax^5*ay^20*az^5*cos(a/2)^2*sin(a/2)^30*x+16380*ax^5*ay^22*az*cos(a/2)^4*sin(a/2)^28*x+32760*ax^5*ay^22*az^3*cos(a/2)^2*sin(a/2)^30*x+2730*ax^5*ay^24*az*cos(a/2)^2*sin(a/2)^30*x+910*ax^6*ay*az*cos(a/2)^24*sin(a/2)^8*y+10920*ax^6*ay*az^3*cos(a/2)^22*sin(a/2)^10*y+60060*ax^6*ay*az^5*cos(a/2)^20*sin(a/2)^12*y+200200*ax^6*ay*az^7*cos(a/2)^18*sin(a/2)^14*y+450450*ax^6*ay*az^9*cos(a/2)^16*sin(a/2)^16*y+720720*ax^6*ay*az^11*cos(a/2)^14*sin(a/2)^18*y+840840*ax^6*ay*az^13*cos(a/2)^12*sin(a/2)^20*y+720720*ax^6*ay*az^15*cos(a/2)^10*sin(a/2)^22*y+450450*ax^6*ay*az^17*cos(a/2)^8*sin(a/2)^24*y+200200*ax^6*ay*az^19*cos(a/2)^6*sin(a/2)^26*y+60060*ax^6*ay*az^21*cos(a/2)^4*sin(a/2)^28*y+10920*ax^6*ay*az^23*cos(a/2)^2*sin(a/2)^30*y-76440*ax^6*ay^2*az^2*cos(a/2)^22*sin(a/2)^10*z-360360*ax^6*ay^2*az^4*cos(a/2)^20*sin(a/2)^12*z-1001000*ax^6*ay^2*az^6*cos(a/2)^18*sin(a/2)^14*z-1801800*ax^6*ay^2*az^8*cos(a/2)^16*sin(a/2)^16*z-2162160*ax^6*ay^2*az^10*cos(a/2)^14*sin(a/2)^18*z-1681680*ax^6*ay^2*az^12*cos(a/2)^12*sin(a/2)^20*z-720720*ax^6*ay^2*az^14*cos(a/2)^10*sin(a/2)^22*z+200200*ax^6*ay^2*az^18*cos(a/2)^6*sin(a/2)^26*z+120120*ax^6*ay^2*az^20*cos(a/2)^4*sin(a/2)^28*z+32760*ax^6*ay^2*az^22*cos(a/2)^2*sin(a/2)^30*z+10920*ax^6*ay^3*az*cos(a/2)^22*sin(a/2)^10*y+120120*ax^6*ay^3*az^3*cos(a/2)^20*sin(a/2)^12*y+600600*ax^6*ay^3*az^5*cos(a/2)^18*sin(a/2)^14*y+1801800*ax^6*ay^3*az^7*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^6*ay^3*az^9*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^6*ay^3*az^11*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^6*ay^3*az^13*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^6*ay^3*az^15*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^6*ay^3*az^17*cos(a/2)^6*sin(a/2)^26*y+600600*ax^6*ay^3*az^19*cos(a/2)^4*sin(a/2)^28*y+120120*ax^6*ay^3*az^21*cos(a/2)^2*sin(a/2)^30*y-420420*ax^6*ay^4*az^2*cos(a/2)^20*sin(a/2)^12*z-1801800*ax^6*ay^4*az^4*cos(a/2)^18*sin(a/2)^14*z-4504500*ax^6*ay^4*az^6*cos(a/2)^16*sin(a/2)^16*z-7207200*ax^6*ay^4*az^8*cos(a/2)^14*sin(a/2)^18*z-7567560*ax^6*ay^4*az^10*cos(a/2)^12*sin(a/2)^20*z-5045040*ax^6*ay^4*az^12*cos(a/2)^10*sin(a/2)^22*z-1801800*ax^6*ay^4*az^14*cos(a/2)^8*sin(a/2)^24*z+300300*ax^6*ay^4*az^18*cos(a/2)^4*sin(a/2)^28*z+120120*ax^6*ay^4*az^20*cos(a/2)^2*sin(a/2)^30*z+60060*ax^6*ay^5*az*cos(a/2)^20*sin(a/2)^12*y+600600*ax^6*ay^5*az^3*cos(a/2)^18*sin(a/2)^14*y+2702700*ax^6*ay^5*az^5*cos(a/2)^16*sin(a/2)^16*y+7207200*ax^6*ay^5*az^7*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^6*ay^5*az^9*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^6*ay^5*az^11*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^6*ay^5*az^13*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^6*ay^5*az^15*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^6*ay^5*az^17*cos(a/2)^4*sin(a/2)^28*y+600600*ax^6*ay^5*az^19*cos(a/2)^2*sin(a/2)^30*y-1401400*ax^6*ay^6*az^2*cos(a/2)^18*sin(a/2)^14*z-5405400*ax^6*ay^6*az^4*cos(a/2)^16*sin(a/2)^16*z-12012000*ax^6*ay^6*az^6*cos(a/2)^14*sin(a/2)^18*z-16816800*ax^6*ay^6*az^8*cos(a/2)^12*sin(a/2)^20*z-15135120*ax^6*ay^6*az^10*cos(a/2)^10*sin(a/2)^22*z-8408400*ax^6*ay^6*az^12*cos(a/2)^8*sin(a/2)^24*z-2402400*ax^6*ay^6*az^14*cos(a/2)^6*sin(a/2)^26*z+200200*ax^6*ay^6*az^18*cos(a/2)^2*sin(a/2)^30*z+200200*ax^6*ay^7*az*cos(a/2)^18*sin(a/2)^14*y+1801800*ax^6*ay^7*az^3*cos(a/2)^16*sin(a/2)^16*y+7207200*ax^6*ay^7*az^5*cos(a/2)^14*sin(a/2)^18*y+16816800*ax^6*ay^7*az^7*cos(a/2)^12*sin(a/2)^20*y+25225200*ax^6*ay^7*az^9*cos(a/2)^10*sin(a/2)^22*y+25225200*ax^6*ay^7*az^11*cos(a/2)^8*sin(a/2)^24*y+16816800*ax^6*ay^7*az^13*cos(a/2)^6*sin(a/2)^26*y+7207200*ax^6*ay^7*az^15*cos(a/2)^4*sin(a/2)^28*y+1801800*ax^6*ay^7*az^17*cos(a/2)^2*sin(a/2)^30*y-3153150*ax^6*ay^8*az^2*cos(a/2)^16*sin(a/2)^16*z-10810800*ax^6*ay^8*az^4*cos(a/2)^14*sin(a/2)^18*z-21021000*ax^6*ay^8*az^6*cos(a/2)^12*sin(a/2)^20*z-25225200*ax^6*ay^8*az^8*cos(a/2)^10*sin(a/2)^22*z-18918900*ax^6*ay^8*az^10*cos(a/2)^8*sin(a/2)^24*z-8408400*ax^6*ay^8*az^12*cos(a/2)^6*sin(a/2)^26*z-1801800*ax^6*ay^8*az^14*cos(a/2)^4*sin(a/2)^28*z+450450*ax^6*ay^9*az*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^6*ay^9*az^3*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^6*ay^9*az^5*cos(a/2)^12*sin(a/2)^20*y+25225200*ax^6*ay^9*az^7*cos(a/2)^10*sin(a/2)^22*y+31531500*ax^6*ay^9*az^9*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^6*ay^9*az^11*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^6*ay^9*az^13*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^6*ay^9*az^15*cos(a/2)^2*sin(a/2)^30*y-5045040*ax^6*ay^10*az^2*cos(a/2)^14*sin(a/2)^18*z-15135120*ax^6*ay^10*az^4*cos(a/2)^12*sin(a/2)^20*z-25225200*ax^6*ay^10*az^6*cos(a/2)^10*sin(a/2)^22*z-25225200*ax^6*ay^10*az^8*cos(a/2)^8*sin(a/2)^24*z-15135120*ax^6*ay^10*az^10*cos(a/2)^6*sin(a/2)^26*z-5045040*ax^6*ay^10*az^12*cos(a/2)^4*sin(a/2)^28*z-720720*ax^6*ay^10*az^14*cos(a/2)^2*sin(a/2)^30*z+720720*ax^6*ay^11*az*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^6*ay^11*az^3*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^6*ay^11*az^5*cos(a/2)^10*sin(a/2)^22*y+25225200*ax^6*ay^11*az^7*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^6*ay^11*az^9*cos(a/2)^6*sin(a/2)^26*y+15135120*ax^6*ay^11*az^11*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^6*ay^11*az^13*cos(a/2)^2*sin(a/2)^30*y-5885880*ax^6*ay^12*az^2*cos(a/2)^12*sin(a/2)^20*z-15135120*ax^6*ay^12*az^4*cos(a/2)^10*sin(a/2)^22*z-21021000*ax^6*ay^12*az^6*cos(a/2)^8*sin(a/2)^24*z-16816800*ax^6*ay^12*az^8*cos(a/2)^6*sin(a/2)^26*z-7567560*ax^6*ay^12*az^10*cos(a/2)^4*sin(a/2)^28*z-1681680*ax^6*ay^12*az^12*cos(a/2)^2*sin(a/2)^30*z+840840*ax^6*ay^13*az*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^6*ay^13*az^3*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^6*ay^13*az^5*cos(a/2)^8*sin(a/2)^24*y+16816800*ax^6*ay^13*az^7*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^6*ay^13*az^9*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^6*ay^13*az^11*cos(a/2)^2*sin(a/2)^30*y-5045040*ax^6*ay^14*az^2*cos(a/2)^10*sin(a/2)^22*z-10810800*ax^6*ay^14*az^4*cos(a/2)^8*sin(a/2)^24*z-12012000*ax^6*ay^14*az^6*cos(a/2)^6*sin(a/2)^26*z-7207200*ax^6*ay^14*az^8*cos(a/2)^4*sin(a/2)^28*z-2162160*ax^6*ay^14*az^10*cos(a/2)^2*sin(a/2)^30*z+720720*ax^6*ay^15*az*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^6*ay^15*az^3*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^6*ay^15*az^5*cos(a/2)^6*sin(a/2)^26*y+7207200*ax^6*ay^15*az^7*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^6*ay^15*az^9*cos(a/2)^2*sin(a/2)^30*y-3153150*ax^6*ay^16*az^2*cos(a/2)^8*sin(a/2)^24*z-5405400*ax^6*ay^16*az^4*cos(a/2)^6*sin(a/2)^26*z-4504500*ax^6*ay^16*az^6*cos(a/2)^4*sin(a/2)^28*z-1801800*ax^6*ay^16*az^8*cos(a/2)^2*sin(a/2)^30*z+450450*ax^6*ay^17*az*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^6*ay^17*az^3*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^6*ay^17*az^5*cos(a/2)^4*sin(a/2)^28*y+1801800*ax^6*ay^17*az^7*cos(a/2)^2*sin(a/2)^30*y-1401400*ax^6*ay^18*az^2*cos(a/2)^6*sin(a/2)^26*z-1801800*ax^6*ay^18*az^4*cos(a/2)^4*sin(a/2)^28*z-1001000*ax^6*ay^18*az^6*cos(a/2)^2*sin(a/2)^30*z+200200*ax^6*ay^19*az*cos(a/2)^6*sin(a/2)^26*y+600600*ax^6*ay^19*az^3*cos(a/2)^4*sin(a/2)^28*y+600600*ax^6*ay^19*az^5*cos(a/2)^2*sin(a/2)^30*y-420420*ax^6*ay^20*az^2*cos(a/2)^4*sin(a/2)^28*z-360360*ax^6*ay^20*az^4*cos(a/2)^2*sin(a/2)^30*z+60060*ax^6*ay^21*az*cos(a/2)^4*sin(a/2)^28*y+120120*ax^6*ay^21*az^3*cos(a/2)^2*sin(a/2)^30*y-76440*ax^6*ay^22*az^2*cos(a/2)^2*sin(a/2)^30*z+10920*ax^6*ay^23*az*cos(a/2)^2*sin(a/2)^30*y+10920*ax^7*ay^2*az*cos(a/2)^22*sin(a/2)^10*x+120120*ax^7*ay^2*az^3*cos(a/2)^20*sin(a/2)^12*x+600600*ax^7*ay^2*az^5*cos(a/2)^18*sin(a/2)^14*x+1801800*ax^7*ay^2*az^7*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^7*ay^2*az^9*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^7*ay^2*az^11*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^7*ay^2*az^13*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^7*ay^2*az^15*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^7*ay^2*az^17*cos(a/2)^6*sin(a/2)^26*x+600600*ax^7*ay^2*az^19*cos(a/2)^4*sin(a/2)^28*x+120120*ax^7*ay^2*az^21*cos(a/2)^2*sin(a/2)^30*x+60060*ax^7*ay^4*az*cos(a/2)^20*sin(a/2)^12*x+600600*ax^7*ay^4*az^3*cos(a/2)^18*sin(a/2)^14*x+2702700*ax^7*ay^4*az^5*cos(a/2)^16*sin(a/2)^16*x+7207200*ax^7*ay^4*az^7*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^7*ay^4*az^9*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^7*ay^4*az^11*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^7*ay^4*az^13*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^7*ay^4*az^15*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^7*ay^4*az^17*cos(a/2)^4*sin(a/2)^28*x+600600*ax^7*ay^4*az^19*cos(a/2)^2*sin(a/2)^30*x+200200*ax^7*ay^6*az*cos(a/2)^18*sin(a/2)^14*x+1801800*ax^7*ay^6*az^3*cos(a/2)^16*sin(a/2)^16*x+7207200*ax^7*ay^6*az^5*cos(a/2)^14*sin(a/2)^18*x+16816800*ax^7*ay^6*az^7*cos(a/2)^12*sin(a/2)^20*x+25225200*ax^7*ay^6*az^9*cos(a/2)^10*sin(a/2)^22*x+25225200*ax^7*ay^6*az^11*cos(a/2)^8*sin(a/2)^24*x+16816800*ax^7*ay^6*az^13*cos(a/2)^6*sin(a/2)^26*x+7207200*ax^7*ay^6*az^15*cos(a/2)^4*sin(a/2)^28*x+1801800*ax^7*ay^6*az^17*cos(a/2)^2*sin(a/2)^30*x+450450*ax^7*ay^8*az*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^7*ay^8*az^3*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^7*ay^8*az^5*cos(a/2)^12*sin(a/2)^20*x+25225200*ax^7*ay^8*az^7*cos(a/2)^10*sin(a/2)^22*x+31531500*ax^7*ay^8*az^9*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^7*ay^8*az^11*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^7*ay^8*az^13*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^7*ay^8*az^15*cos(a/2)^2*sin(a/2)^30*x+720720*ax^7*ay^10*az*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^7*ay^10*az^3*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^7*ay^10*az^5*cos(a/2)^10*sin(a/2)^22*x+25225200*ax^7*ay^10*az^7*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^7*ay^10*az^9*cos(a/2)^6*sin(a/2)^26*x+15135120*ax^7*ay^10*az^11*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^7*ay^10*az^13*cos(a/2)^2*sin(a/2)^30*x+840840*ax^7*ay^12*az*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^7*ay^12*az^3*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^7*ay^12*az^5*cos(a/2)^8*sin(a/2)^24*x+16816800*ax^7*ay^12*az^7*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^7*ay^12*az^9*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^7*ay^12*az^11*cos(a/2)^2*sin(a/2)^30*x+720720*ax^7*ay^14*az*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^7*ay^14*az^3*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^7*ay^14*az^5*cos(a/2)^6*sin(a/2)^26*x+7207200*ax^7*ay^14*az^7*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^7*ay^14*az^9*cos(a/2)^2*sin(a/2)^30*x+450450*ax^7*ay^16*az*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^7*ay^16*az^3*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^7*ay^16*az^5*cos(a/2)^4*sin(a/2)^28*x+1801800*ax^7*ay^16*az^7*cos(a/2)^2*sin(a/2)^30*x+200200*ax^7*ay^18*az*cos(a/2)^6*sin(a/2)^26*x+600600*ax^7*ay^18*az^3*cos(a/2)^4*sin(a/2)^28*x+600600*ax^7*ay^18*az^5*cos(a/2)^2*sin(a/2)^30*x+60060*ax^7*ay^20*az*cos(a/2)^4*sin(a/2)^28*x+120120*ax^7*ay^20*az^3*cos(a/2)^2*sin(a/2)^30*x+10920*ax^7*ay^22*az*cos(a/2)^2*sin(a/2)^30*x+2730*ax^8*ay*az*cos(a/2)^22*sin(a/2)^10*y+30030*ax^8*ay*az^3*cos(a/2)^20*sin(a/2)^12*y+150150*ax^8*ay*az^5*cos(a/2)^18*sin(a/2)^14*y+450450*ax^8*ay*az^7*cos(a/2)^16*sin(a/2)^16*y+900900*ax^8*ay*az^9*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^8*ay*az^11*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^8*ay*az^13*cos(a/2)^10*sin(a/2)^22*y+900900*ax^8*ay*az^15*cos(a/2)^8*sin(a/2)^24*y+450450*ax^8*ay*az^17*cos(a/2)^6*sin(a/2)^26*y+150150*ax^8*ay*az^19*cos(a/2)^4*sin(a/2)^28*y+30030*ax^8*ay*az^21*cos(a/2)^2*sin(a/2)^30*y-210210*ax^8*ay^2*az^2*cos(a/2)^20*sin(a/2)^12*z-900900*ax^8*ay^2*az^4*cos(a/2)^18*sin(a/2)^14*z-2252250*ax^8*ay^2*az^6*cos(a/2)^16*sin(a/2)^16*z-3603600*ax^8*ay^2*az^8*cos(a/2)^14*sin(a/2)^18*z-3783780*ax^8*ay^2*az^10*cos(a/2)^12*sin(a/2)^20*z-2522520*ax^8*ay^2*az^12*cos(a/2)^10*sin(a/2)^22*z-900900*ax^8*ay^2*az^14*cos(a/2)^8*sin(a/2)^24*z+150150*ax^8*ay^2*az^18*cos(a/2)^4*sin(a/2)^28*z+60060*ax^8*ay^2*az^20*cos(a/2)^2*sin(a/2)^30*z+30030*ax^8*ay^3*az*cos(a/2)^20*sin(a/2)^12*y+300300*ax^8*ay^3*az^3*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^8*ay^3*az^5*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^8*ay^3*az^7*cos(a/2)^14*sin(a/2)^18*y+6306300*ax^8*ay^3*az^9*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^8*ay^3*az^11*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^8*ay^3*az^13*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^8*ay^3*az^15*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^8*ay^3*az^17*cos(a/2)^4*sin(a/2)^28*y+300300*ax^8*ay^3*az^19*cos(a/2)^2*sin(a/2)^30*y-1051050*ax^8*ay^4*az^2*cos(a/2)^18*sin(a/2)^14*z-4054050*ax^8*ay^4*az^4*cos(a/2)^16*sin(a/2)^16*z-9009000*ax^8*ay^4*az^6*cos(a/2)^14*sin(a/2)^18*z-12612600*ax^8*ay^4*az^8*cos(a/2)^12*sin(a/2)^20*z-11351340*ax^8*ay^4*az^10*cos(a/2)^10*sin(a/2)^22*z-6306300*ax^8*ay^4*az^12*cos(a/2)^8*sin(a/2)^24*z-1801800*ax^8*ay^4*az^14*cos(a/2)^6*sin(a/2)^26*z+150150*ax^8*ay^4*az^18*cos(a/2)^2*sin(a/2)^30*z+150150*ax^8*ay^5*az*cos(a/2)^18*sin(a/2)^14*y+1351350*ax^8*ay^5*az^3*cos(a/2)^16*sin(a/2)^16*y+5405400*ax^8*ay^5*az^5*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^8*ay^5*az^7*cos(a/2)^12*sin(a/2)^20*y+18918900*ax^8*ay^5*az^9*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^8*ay^5*az^11*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^8*ay^5*az^13*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^8*ay^5*az^15*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^8*ay^5*az^17*cos(a/2)^2*sin(a/2)^30*y-3153150*ax^8*ay^6*az^2*cos(a/2)^16*sin(a/2)^16*z-10810800*ax^8*ay^6*az^4*cos(a/2)^14*sin(a/2)^18*z-21021000*ax^8*ay^6*az^6*cos(a/2)^12*sin(a/2)^20*z-25225200*ax^8*ay^6*az^8*cos(a/2)^10*sin(a/2)^22*z-18918900*ax^8*ay^6*az^10*cos(a/2)^8*sin(a/2)^24*z-8408400*ax^8*ay^6*az^12*cos(a/2)^6*sin(a/2)^26*z-1801800*ax^8*ay^6*az^14*cos(a/2)^4*sin(a/2)^28*z+450450*ax^8*ay^7*az*cos(a/2)^16*sin(a/2)^16*y+3603600*ax^8*ay^7*az^3*cos(a/2)^14*sin(a/2)^18*y+12612600*ax^8*ay^7*az^5*cos(a/2)^12*sin(a/2)^20*y+25225200*ax^8*ay^7*az^7*cos(a/2)^10*sin(a/2)^22*y+31531500*ax^8*ay^7*az^9*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^8*ay^7*az^11*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^8*ay^7*az^13*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^8*ay^7*az^15*cos(a/2)^2*sin(a/2)^30*y-6306300*ax^8*ay^8*az^2*cos(a/2)^14*sin(a/2)^18*z-18918900*ax^8*ay^8*az^4*cos(a/2)^12*sin(a/2)^20*z-31531500*ax^8*ay^8*az^6*cos(a/2)^10*sin(a/2)^22*z-31531500*ax^8*ay^8*az^8*cos(a/2)^8*sin(a/2)^24*z-18918900*ax^8*ay^8*az^10*cos(a/2)^6*sin(a/2)^26*z-6306300*ax^8*ay^8*az^12*cos(a/2)^4*sin(a/2)^28*z-900900*ax^8*ay^8*az^14*cos(a/2)^2*sin(a/2)^30*z+900900*ax^8*ay^9*az*cos(a/2)^14*sin(a/2)^18*y+6306300*ax^8*ay^9*az^3*cos(a/2)^12*sin(a/2)^20*y+18918900*ax^8*ay^9*az^5*cos(a/2)^10*sin(a/2)^22*y+31531500*ax^8*ay^9*az^7*cos(a/2)^8*sin(a/2)^24*y+31531500*ax^8*ay^9*az^9*cos(a/2)^6*sin(a/2)^26*y+18918900*ax^8*ay^9*az^11*cos(a/2)^4*sin(a/2)^28*y+6306300*ax^8*ay^9*az^13*cos(a/2)^2*sin(a/2)^30*y-8828820*ax^8*ay^10*az^2*cos(a/2)^12*sin(a/2)^20*z-22702680*ax^8*ay^10*az^4*cos(a/2)^10*sin(a/2)^22*z-31531500*ax^8*ay^10*az^6*cos(a/2)^8*sin(a/2)^24*z-25225200*ax^8*ay^10*az^8*cos(a/2)^6*sin(a/2)^26*z-11351340*ax^8*ay^10*az^10*cos(a/2)^4*sin(a/2)^28*z-2522520*ax^8*ay^10*az^12*cos(a/2)^2*sin(a/2)^30*z+1261260*ax^8*ay^11*az*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^8*ay^11*az^3*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^8*ay^11*az^5*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^8*ay^11*az^7*cos(a/2)^6*sin(a/2)^26*y+18918900*ax^8*ay^11*az^9*cos(a/2)^4*sin(a/2)^28*y+7567560*ax^8*ay^11*az^11*cos(a/2)^2*sin(a/2)^30*y-8828820*ax^8*ay^12*az^2*cos(a/2)^10*sin(a/2)^22*z-18918900*ax^8*ay^12*az^4*cos(a/2)^8*sin(a/2)^24*z-21021000*ax^8*ay^12*az^6*cos(a/2)^6*sin(a/2)^26*z-12612600*ax^8*ay^12*az^8*cos(a/2)^4*sin(a/2)^28*z-3783780*ax^8*ay^12*az^10*cos(a/2)^2*sin(a/2)^30*z+1261260*ax^8*ay^13*az*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^8*ay^13*az^3*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^8*ay^13*az^5*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^8*ay^13*az^7*cos(a/2)^4*sin(a/2)^28*y+6306300*ax^8*ay^13*az^9*cos(a/2)^2*sin(a/2)^30*y-6306300*ax^8*ay^14*az^2*cos(a/2)^8*sin(a/2)^24*z-10810800*ax^8*ay^14*az^4*cos(a/2)^6*sin(a/2)^26*z-9009000*ax^8*ay^14*az^6*cos(a/2)^4*sin(a/2)^28*z-3603600*ax^8*ay^14*az^8*cos(a/2)^2*sin(a/2)^30*z+900900*ax^8*ay^15*az*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^8*ay^15*az^3*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^8*ay^15*az^5*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^8*ay^15*az^7*cos(a/2)^2*sin(a/2)^30*y-3153150*ax^8*ay^16*az^2*cos(a/2)^6*sin(a/2)^26*z-4054050*ax^8*ay^16*az^4*cos(a/2)^4*sin(a/2)^28*z-2252250*ax^8*ay^16*az^6*cos(a/2)^2*sin(a/2)^30*z+450450*ax^8*ay^17*az*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^8*ay^17*az^3*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^8*ay^17*az^5*cos(a/2)^2*sin(a/2)^30*y-1051050*ax^8*ay^18*az^2*cos(a/2)^4*sin(a/2)^28*z-900900*ax^8*ay^18*az^4*cos(a/2)^2*sin(a/2)^30*z+150150*ax^8*ay^19*az*cos(a/2)^4*sin(a/2)^28*y+300300*ax^8*ay^19*az^3*cos(a/2)^2*sin(a/2)^30*y-210210*ax^8*ay^20*az^2*cos(a/2)^2*sin(a/2)^30*z+30030*ax^8*ay^21*az*cos(a/2)^2*sin(a/2)^30*y+30030*ax^9*ay^2*az*cos(a/2)^20*sin(a/2)^12*x+300300*ax^9*ay^2*az^3*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^9*ay^2*az^5*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^9*ay^2*az^7*cos(a/2)^14*sin(a/2)^18*x+6306300*ax^9*ay^2*az^9*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^9*ay^2*az^11*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^9*ay^2*az^13*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^9*ay^2*az^15*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^9*ay^2*az^17*cos(a/2)^4*sin(a/2)^28*x+300300*ax^9*ay^2*az^19*cos(a/2)^2*sin(a/2)^30*x+150150*ax^9*ay^4*az*cos(a/2)^18*sin(a/2)^14*x+1351350*ax^9*ay^4*az^3*cos(a/2)^16*sin(a/2)^16*x+5405400*ax^9*ay^4*az^5*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^9*ay^4*az^7*cos(a/2)^12*sin(a/2)^20*x+18918900*ax^9*ay^4*az^9*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^9*ay^4*az^11*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^9*ay^4*az^13*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^9*ay^4*az^15*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^9*ay^4*az^17*cos(a/2)^2*sin(a/2)^30*x+450450*ax^9*ay^6*az*cos(a/2)^16*sin(a/2)^16*x+3603600*ax^9*ay^6*az^3*cos(a/2)^14*sin(a/2)^18*x+12612600*ax^9*ay^6*az^5*cos(a/2)^12*sin(a/2)^20*x+25225200*ax^9*ay^6*az^7*cos(a/2)^10*sin(a/2)^22*x+31531500*ax^9*ay^6*az^9*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^9*ay^6*az^11*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^9*ay^6*az^13*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^9*ay^6*az^15*cos(a/2)^2*sin(a/2)^30*x+900900*ax^9*ay^8*az*cos(a/2)^14*sin(a/2)^18*x+6306300*ax^9*ay^8*az^3*cos(a/2)^12*sin(a/2)^20*x+18918900*ax^9*ay^8*az^5*cos(a/2)^10*sin(a/2)^22*x+31531500*ax^9*ay^8*az^7*cos(a/2)^8*sin(a/2)^24*x+31531500*ax^9*ay^8*az^9*cos(a/2)^6*sin(a/2)^26*x+18918900*ax^9*ay^8*az^11*cos(a/2)^4*sin(a/2)^28*x+6306300*ax^9*ay^8*az^13*cos(a/2)^2*sin(a/2)^30*x+1261260*ax^9*ay^10*az*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^9*ay^10*az^3*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^9*ay^10*az^5*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^9*ay^10*az^7*cos(a/2)^6*sin(a/2)^26*x+18918900*ax^9*ay^10*az^9*cos(a/2)^4*sin(a/2)^28*x+7567560*ax^9*ay^10*az^11*cos(a/2)^2*sin(a/2)^30*x+1261260*ax^9*ay^12*az*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^9*ay^12*az^3*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^9*ay^12*az^5*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^9*ay^12*az^7*cos(a/2)^4*sin(a/2)^28*x+6306300*ax^9*ay^12*az^9*cos(a/2)^2*sin(a/2)^30*x+900900*ax^9*ay^14*az*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^9*ay^14*az^3*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^9*ay^14*az^5*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^9*ay^14*az^7*cos(a/2)^2*sin(a/2)^30*x+450450*ax^9*ay^16*az*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^9*ay^16*az^3*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^9*ay^16*az^5*cos(a/2)^2*sin(a/2)^30*x+150150*ax^9*ay^18*az*cos(a/2)^4*sin(a/2)^28*x+300300*ax^9*ay^18*az^3*cos(a/2)^2*sin(a/2)^30*x+30030*ax^9*ay^20*az*cos(a/2)^2*sin(a/2)^30*x+6006*ax^10*ay*az*cos(a/2)^20*sin(a/2)^12*y+60060*ax^10*ay*az^3*cos(a/2)^18*sin(a/2)^14*y+270270*ax^10*ay*az^5*cos(a/2)^16*sin(a/2)^16*y+720720*ax^10*ay*az^7*cos(a/2)^14*sin(a/2)^18*y+1261260*ax^10*ay*az^9*cos(a/2)^12*sin(a/2)^20*y+1513512*ax^10*ay*az^11*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^10*ay*az^13*cos(a/2)^8*sin(a/2)^24*y+720720*ax^10*ay*az^15*cos(a/2)^6*sin(a/2)^26*y+270270*ax^10*ay*az^17*cos(a/2)^4*sin(a/2)^28*y+60060*ax^10*ay*az^19*cos(a/2)^2*sin(a/2)^30*y-420420*ax^10*ay^2*az^2*cos(a/2)^18*sin(a/2)^14*z-1621620*ax^10*ay^2*az^4*cos(a/2)^16*sin(a/2)^16*z-3603600*ax^10*ay^2*az^6*cos(a/2)^14*sin(a/2)^18*z-5045040*ax^10*ay^2*az^8*cos(a/2)^12*sin(a/2)^20*z-4540536*ax^10*ay^2*az^10*cos(a/2)^10*sin(a/2)^22*z-2522520*ax^10*ay^2*az^12*cos(a/2)^8*sin(a/2)^24*z-720720*ax^10*ay^2*az^14*cos(a/2)^6*sin(a/2)^26*z+60060*ax^10*ay^2*az^18*cos(a/2)^2*sin(a/2)^30*z+60060*ax^10*ay^3*az*cos(a/2)^18*sin(a/2)^14*y+540540*ax^10*ay^3*az^3*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^10*ay^3*az^5*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^10*ay^3*az^7*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^10*ay^3*az^9*cos(a/2)^10*sin(a/2)^22*y+7567560*ax^10*ay^3*az^11*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^10*ay^3*az^13*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^10*ay^3*az^15*cos(a/2)^4*sin(a/2)^28*y+540540*ax^10*ay^3*az^17*cos(a/2)^2*sin(a/2)^30*y-1891890*ax^10*ay^4*az^2*cos(a/2)^16*sin(a/2)^16*z-6486480*ax^10*ay^4*az^4*cos(a/2)^14*sin(a/2)^18*z-12612600*ax^10*ay^4*az^6*cos(a/2)^12*sin(a/2)^20*z-15135120*ax^10*ay^4*az^8*cos(a/2)^10*sin(a/2)^22*z-11351340*ax^10*ay^4*az^10*cos(a/2)^8*sin(a/2)^24*z-5045040*ax^10*ay^4*az^12*cos(a/2)^6*sin(a/2)^26*z-1081080*ax^10*ay^4*az^14*cos(a/2)^4*sin(a/2)^28*z+270270*ax^10*ay^5*az*cos(a/2)^16*sin(a/2)^16*y+2162160*ax^10*ay^5*az^3*cos(a/2)^14*sin(a/2)^18*y+7567560*ax^10*ay^5*az^5*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^10*ay^5*az^7*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^10*ay^5*az^9*cos(a/2)^8*sin(a/2)^24*y+15135120*ax^10*ay^5*az^11*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^10*ay^5*az^13*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^10*ay^5*az^15*cos(a/2)^2*sin(a/2)^30*y-5045040*ax^10*ay^6*az^2*cos(a/2)^14*sin(a/2)^18*z-15135120*ax^10*ay^6*az^4*cos(a/2)^12*sin(a/2)^20*z-25225200*ax^10*ay^6*az^6*cos(a/2)^10*sin(a/2)^22*z-25225200*ax^10*ay^6*az^8*cos(a/2)^8*sin(a/2)^24*z-15135120*ax^10*ay^6*az^10*cos(a/2)^6*sin(a/2)^26*z-5045040*ax^10*ay^6*az^12*cos(a/2)^4*sin(a/2)^28*z-720720*ax^10*ay^6*az^14*cos(a/2)^2*sin(a/2)^30*z+720720*ax^10*ay^7*az*cos(a/2)^14*sin(a/2)^18*y+5045040*ax^10*ay^7*az^3*cos(a/2)^12*sin(a/2)^20*y+15135120*ax^10*ay^7*az^5*cos(a/2)^10*sin(a/2)^22*y+25225200*ax^10*ay^7*az^7*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^10*ay^7*az^9*cos(a/2)^6*sin(a/2)^26*y+15135120*ax^10*ay^7*az^11*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^10*ay^7*az^13*cos(a/2)^2*sin(a/2)^30*y-8828820*ax^10*ay^8*az^2*cos(a/2)^12*sin(a/2)^20*z-22702680*ax^10*ay^8*az^4*cos(a/2)^10*sin(a/2)^22*z-31531500*ax^10*ay^8*az^6*cos(a/2)^8*sin(a/2)^24*z-25225200*ax^10*ay^8*az^8*cos(a/2)^6*sin(a/2)^26*z-11351340*ax^10*ay^8*az^10*cos(a/2)^4*sin(a/2)^28*z-2522520*ax^10*ay^8*az^12*cos(a/2)^2*sin(a/2)^30*z+1261260*ax^10*ay^9*az*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^10*ay^9*az^3*cos(a/2)^10*sin(a/2)^22*y+18918900*ax^10*ay^9*az^5*cos(a/2)^8*sin(a/2)^24*y+25225200*ax^10*ay^9*az^7*cos(a/2)^6*sin(a/2)^26*y+18918900*ax^10*ay^9*az^9*cos(a/2)^4*sin(a/2)^28*y+7567560*ax^10*ay^9*az^11*cos(a/2)^2*sin(a/2)^30*y-10594584*ax^10*ay^10*az^2*cos(a/2)^10*sin(a/2)^22*z-22702680*ax^10*ay^10*az^4*cos(a/2)^8*sin(a/2)^24*z-25225200*ax^10*ay^10*az^6*cos(a/2)^6*sin(a/2)^26*z-15135120*ax^10*ay^10*az^8*cos(a/2)^4*sin(a/2)^28*z-4540536*ax^10*ay^10*az^10*cos(a/2)^2*sin(a/2)^30*z+1513512*ax^10*ay^11*az*cos(a/2)^10*sin(a/2)^22*y+7567560*ax^10*ay^11*az^3*cos(a/2)^8*sin(a/2)^24*y+15135120*ax^10*ay^11*az^5*cos(a/2)^6*sin(a/2)^26*y+15135120*ax^10*ay^11*az^7*cos(a/2)^4*sin(a/2)^28*y+7567560*ax^10*ay^11*az^9*cos(a/2)^2*sin(a/2)^30*y-8828820*ax^10*ay^12*az^2*cos(a/2)^8*sin(a/2)^24*z-15135120*ax^10*ay^12*az^4*cos(a/2)^6*sin(a/2)^26*z-12612600*ax^10*ay^12*az^6*cos(a/2)^4*sin(a/2)^28*z-5045040*ax^10*ay^12*az^8*cos(a/2)^2*sin(a/2)^30*z+1261260*ax^10*ay^13*az*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^10*ay^13*az^3*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^10*ay^13*az^5*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^10*ay^13*az^7*cos(a/2)^2*sin(a/2)^30*y-5045040*ax^10*ay^14*az^2*cos(a/2)^6*sin(a/2)^26*z-6486480*ax^10*ay^14*az^4*cos(a/2)^4*sin(a/2)^28*z-3603600*ax^10*ay^14*az^6*cos(a/2)^2*sin(a/2)^30*z+720720*ax^10*ay^15*az*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^10*ay^15*az^3*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^10*ay^15*az^5*cos(a/2)^2*sin(a/2)^30*y-1891890*ax^10*ay^16*az^2*cos(a/2)^4*sin(a/2)^28*z-1621620*ax^10*ay^16*az^4*cos(a/2)^2*sin(a/2)^30*z+270270*ax^10*ay^17*az*cos(a/2)^4*sin(a/2)^28*y+540540*ax^10*ay^17*az^3*cos(a/2)^2*sin(a/2)^30*y-420420*ax^10*ay^18*az^2*cos(a/2)^2*sin(a/2)^30*z+60060*ax^10*ay^19*az*cos(a/2)^2*sin(a/2)^30*y+60060*ax^11*ay^2*az*cos(a/2)^18*sin(a/2)^14*x+540540*ax^11*ay^2*az^3*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^11*ay^2*az^5*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^11*ay^2*az^7*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^11*ay^2*az^9*cos(a/2)^10*sin(a/2)^22*x+7567560*ax^11*ay^2*az^11*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^11*ay^2*az^13*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^11*ay^2*az^15*cos(a/2)^4*sin(a/2)^28*x+540540*ax^11*ay^2*az^17*cos(a/2)^2*sin(a/2)^30*x+270270*ax^11*ay^4*az*cos(a/2)^16*sin(a/2)^16*x+2162160*ax^11*ay^4*az^3*cos(a/2)^14*sin(a/2)^18*x+7567560*ax^11*ay^4*az^5*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^11*ay^4*az^7*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^11*ay^4*az^9*cos(a/2)^8*sin(a/2)^24*x+15135120*ax^11*ay^4*az^11*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^11*ay^4*az^13*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^11*ay^4*az^15*cos(a/2)^2*sin(a/2)^30*x+720720*ax^11*ay^6*az*cos(a/2)^14*sin(a/2)^18*x+5045040*ax^11*ay^6*az^3*cos(a/2)^12*sin(a/2)^20*x+15135120*ax^11*ay^6*az^5*cos(a/2)^10*sin(a/2)^22*x+25225200*ax^11*ay^6*az^7*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^11*ay^6*az^9*cos(a/2)^6*sin(a/2)^26*x+15135120*ax^11*ay^6*az^11*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^11*ay^6*az^13*cos(a/2)^2*sin(a/2)^30*x+1261260*ax^11*ay^8*az*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^11*ay^8*az^3*cos(a/2)^10*sin(a/2)^22*x+18918900*ax^11*ay^8*az^5*cos(a/2)^8*sin(a/2)^24*x+25225200*ax^11*ay^8*az^7*cos(a/2)^6*sin(a/2)^26*x+18918900*ax^11*ay^8*az^9*cos(a/2)^4*sin(a/2)^28*x+7567560*ax^11*ay^8*az^11*cos(a/2)^2*sin(a/2)^30*x+1513512*ax^11*ay^10*az*cos(a/2)^10*sin(a/2)^22*x+7567560*ax^11*ay^10*az^3*cos(a/2)^8*sin(a/2)^24*x+15135120*ax^11*ay^10*az^5*cos(a/2)^6*sin(a/2)^26*x+15135120*ax^11*ay^10*az^7*cos(a/2)^4*sin(a/2)^28*x+7567560*ax^11*ay^10*az^9*cos(a/2)^2*sin(a/2)^30*x+1261260*ax^11*ay^12*az*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^11*ay^12*az^3*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^11*ay^12*az^5*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^11*ay^12*az^7*cos(a/2)^2*sin(a/2)^30*x+720720*ax^11*ay^14*az*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^11*ay^14*az^3*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^11*ay^14*az^5*cos(a/2)^2*sin(a/2)^30*x+270270*ax^11*ay^16*az*cos(a/2)^4*sin(a/2)^28*x+540540*ax^11*ay^16*az^3*cos(a/2)^2*sin(a/2)^30*x+60060*ax^11*ay^18*az*cos(a/2)^2*sin(a/2)^30*x+10010*ax^12*ay*az*cos(a/2)^18*sin(a/2)^14*y+90090*ax^12*ay*az^3*cos(a/2)^16*sin(a/2)^16*y+360360*ax^12*ay*az^5*cos(a/2)^14*sin(a/2)^18*y+840840*ax^12*ay*az^7*cos(a/2)^12*sin(a/2)^20*y+1261260*ax^12*ay*az^9*cos(a/2)^10*sin(a/2)^22*y+1261260*ax^12*ay*az^11*cos(a/2)^8*sin(a/2)^24*y+840840*ax^12*ay*az^13*cos(a/2)^6*sin(a/2)^26*y+360360*ax^12*ay*az^15*cos(a/2)^4*sin(a/2)^28*y+90090*ax^12*ay*az^17*cos(a/2)^2*sin(a/2)^30*y-630630*ax^12*ay^2*az^2*cos(a/2)^16*sin(a/2)^16*z-2162160*ax^12*ay^2*az^4*cos(a/2)^14*sin(a/2)^18*z-4204200*ax^12*ay^2*az^6*cos(a/2)^12*sin(a/2)^20*z-5045040*ax^12*ay^2*az^8*cos(a/2)^10*sin(a/2)^22*z-3783780*ax^12*ay^2*az^10*cos(a/2)^8*sin(a/2)^24*z-1681680*ax^12*ay^2*az^12*cos(a/2)^6*sin(a/2)^26*z-360360*ax^12*ay^2*az^14*cos(a/2)^4*sin(a/2)^28*z+90090*ax^12*ay^3*az*cos(a/2)^16*sin(a/2)^16*y+720720*ax^12*ay^3*az^3*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^12*ay^3*az^5*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^12*ay^3*az^7*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^12*ay^3*az^9*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^12*ay^3*az^11*cos(a/2)^6*sin(a/2)^26*y+2522520*ax^12*ay^3*az^13*cos(a/2)^4*sin(a/2)^28*y+720720*ax^12*ay^3*az^15*cos(a/2)^2*sin(a/2)^30*y-2522520*ax^12*ay^4*az^2*cos(a/2)^14*sin(a/2)^18*z-7567560*ax^12*ay^4*az^4*cos(a/2)^12*sin(a/2)^20*z-12612600*ax^12*ay^4*az^6*cos(a/2)^10*sin(a/2)^22*z-12612600*ax^12*ay^4*az^8*cos(a/2)^8*sin(a/2)^24*z-7567560*ax^12*ay^4*az^10*cos(a/2)^6*sin(a/2)^26*z-2522520*ax^12*ay^4*az^12*cos(a/2)^4*sin(a/2)^28*z-360360*ax^12*ay^4*az^14*cos(a/2)^2*sin(a/2)^30*z+360360*ax^12*ay^5*az*cos(a/2)^14*sin(a/2)^18*y+2522520*ax^12*ay^5*az^3*cos(a/2)^12*sin(a/2)^20*y+7567560*ax^12*ay^5*az^5*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^12*ay^5*az^7*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^12*ay^5*az^9*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^12*ay^5*az^11*cos(a/2)^4*sin(a/2)^28*y+2522520*ax^12*ay^5*az^13*cos(a/2)^2*sin(a/2)^30*y-5885880*ax^12*ay^6*az^2*cos(a/2)^12*sin(a/2)^20*z-15135120*ax^12*ay^6*az^4*cos(a/2)^10*sin(a/2)^22*z-21021000*ax^12*ay^6*az^6*cos(a/2)^8*sin(a/2)^24*z-16816800*ax^12*ay^6*az^8*cos(a/2)^6*sin(a/2)^26*z-7567560*ax^12*ay^6*az^10*cos(a/2)^4*sin(a/2)^28*z-1681680*ax^12*ay^6*az^12*cos(a/2)^2*sin(a/2)^30*z+840840*ax^12*ay^7*az*cos(a/2)^12*sin(a/2)^20*y+5045040*ax^12*ay^7*az^3*cos(a/2)^10*sin(a/2)^22*y+12612600*ax^12*ay^7*az^5*cos(a/2)^8*sin(a/2)^24*y+16816800*ax^12*ay^7*az^7*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^12*ay^7*az^9*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^12*ay^7*az^11*cos(a/2)^2*sin(a/2)^30*y-8828820*ax^12*ay^8*az^2*cos(a/2)^10*sin(a/2)^22*z-18918900*ax^12*ay^8*az^4*cos(a/2)^8*sin(a/2)^24*z-21021000*ax^12*ay^8*az^6*cos(a/2)^6*sin(a/2)^26*z-12612600*ax^12*ay^8*az^8*cos(a/2)^4*sin(a/2)^28*z-3783780*ax^12*ay^8*az^10*cos(a/2)^2*sin(a/2)^30*z+1261260*ax^12*ay^9*az*cos(a/2)^10*sin(a/2)^22*y+6306300*ax^12*ay^9*az^3*cos(a/2)^8*sin(a/2)^24*y+12612600*ax^12*ay^9*az^5*cos(a/2)^6*sin(a/2)^26*y+12612600*ax^12*ay^9*az^7*cos(a/2)^4*sin(a/2)^28*y+6306300*ax^12*ay^9*az^9*cos(a/2)^2*sin(a/2)^30*y-8828820*ax^12*ay^10*az^2*cos(a/2)^8*sin(a/2)^24*z-15135120*ax^12*ay^10*az^4*cos(a/2)^6*sin(a/2)^26*z-12612600*ax^12*ay^10*az^6*cos(a/2)^4*sin(a/2)^28*z-5045040*ax^12*ay^10*az^8*cos(a/2)^2*sin(a/2)^30*z+1261260*ax^12*ay^11*az*cos(a/2)^8*sin(a/2)^24*y+5045040*ax^12*ay^11*az^3*cos(a/2)^6*sin(a/2)^26*y+7567560*ax^12*ay^11*az^5*cos(a/2)^4*sin(a/2)^28*y+5045040*ax^12*ay^11*az^7*cos(a/2)^2*sin(a/2)^30*y-5885880*ax^12*ay^12*az^2*cos(a/2)^6*sin(a/2)^26*z-7567560*ax^12*ay^12*az^4*cos(a/2)^4*sin(a/2)^28*z-4204200*ax^12*ay^12*az^6*cos(a/2)^2*sin(a/2)^30*z+840840*ax^12*ay^13*az*cos(a/2)^6*sin(a/2)^26*y+2522520*ax^12*ay^13*az^3*cos(a/2)^4*sin(a/2)^28*y+2522520*ax^12*ay^13*az^5*cos(a/2)^2*sin(a/2)^30*y-2522520*ax^12*ay^14*az^2*cos(a/2)^4*sin(a/2)^28*z-2162160*ax^12*ay^14*az^4*cos(a/2)^2*sin(a/2)^30*z+360360*ax^12*ay^15*az*cos(a/2)^4*sin(a/2)^28*y+720720*ax^12*ay^15*az^3*cos(a/2)^2*sin(a/2)^30*y-630630*ax^12*ay^16*az^2*cos(a/2)^2*sin(a/2)^30*z+90090*ax^12*ay^17*az*cos(a/2)^2*sin(a/2)^30*y+90090*ax^13*ay^2*az*cos(a/2)^16*sin(a/2)^16*x+720720*ax^13*ay^2*az^3*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^13*ay^2*az^5*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^13*ay^2*az^7*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^13*ay^2*az^9*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^13*ay^2*az^11*cos(a/2)^6*sin(a/2)^26*x+2522520*ax^13*ay^2*az^13*cos(a/2)^4*sin(a/2)^28*x+720720*ax^13*ay^2*az^15*cos(a/2)^2*sin(a/2)^30*x+360360*ax^13*ay^4*az*cos(a/2)^14*sin(a/2)^18*x+2522520*ax^13*ay^4*az^3*cos(a/2)^12*sin(a/2)^20*x+7567560*ax^13*ay^4*az^5*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^13*ay^4*az^7*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^13*ay^4*az^9*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^13*ay^4*az^11*cos(a/2)^4*sin(a/2)^28*x+2522520*ax^13*ay^4*az^13*cos(a/2)^2*sin(a/2)^30*x+840840*ax^13*ay^6*az*cos(a/2)^12*sin(a/2)^20*x+5045040*ax^13*ay^6*az^3*cos(a/2)^10*sin(a/2)^22*x+12612600*ax^13*ay^6*az^5*cos(a/2)^8*sin(a/2)^24*x+16816800*ax^13*ay^6*az^7*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^13*ay^6*az^9*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^13*ay^6*az^11*cos(a/2)^2*sin(a/2)^30*x+1261260*ax^13*ay^8*az*cos(a/2)^10*sin(a/2)^22*x+6306300*ax^13*ay^8*az^3*cos(a/2)^8*sin(a/2)^24*x+12612600*ax^13*ay^8*az^5*cos(a/2)^6*sin(a/2)^26*x+12612600*ax^13*ay^8*az^7*cos(a/2)^4*sin(a/2)^28*x+6306300*ax^13*ay^8*az^9*cos(a/2)^2*sin(a/2)^30*x+1261260*ax^13*ay^10*az*cos(a/2)^8*sin(a/2)^24*x+5045040*ax^13*ay^10*az^3*cos(a/2)^6*sin(a/2)^26*x+7567560*ax^13*ay^10*az^5*cos(a/2)^4*sin(a/2)^28*x+5045040*ax^13*ay^10*az^7*cos(a/2)^2*sin(a/2)^30*x+840840*ax^13*ay^12*az*cos(a/2)^6*sin(a/2)^26*x+2522520*ax^13*ay^12*az^3*cos(a/2)^4*sin(a/2)^28*x+2522520*ax^13*ay^12*az^5*cos(a/2)^2*sin(a/2)^30*x+360360*ax^13*ay^14*az*cos(a/2)^4*sin(a/2)^28*x+720720*ax^13*ay^14*az^3*cos(a/2)^2*sin(a/2)^30*x+90090*ax^13*ay^16*az*cos(a/2)^2*sin(a/2)^30*x+12870*ax^14*ay*az*cos(a/2)^16*sin(a/2)^16*y+102960*ax^14*ay*az^3*cos(a/2)^14*sin(a/2)^18*y+360360*ax^14*ay*az^5*cos(a/2)^12*sin(a/2)^20*y+720720*ax^14*ay*az^7*cos(a/2)^10*sin(a/2)^22*y+900900*ax^14*ay*az^9*cos(a/2)^8*sin(a/2)^24*y+720720*ax^14*ay*az^11*cos(a/2)^6*sin(a/2)^26*y+360360*ax^14*ay*az^13*cos(a/2)^4*sin(a/2)^28*y+102960*ax^14*ay*az^15*cos(a/2)^2*sin(a/2)^30*y-720720*ax^14*ay^2*az^2*cos(a/2)^14*sin(a/2)^18*z-2162160*ax^14*ay^2*az^4*cos(a/2)^12*sin(a/2)^20*z-3603600*ax^14*ay^2*az^6*cos(a/2)^10*sin(a/2)^22*z-3603600*ax^14*ay^2*az^8*cos(a/2)^8*sin(a/2)^24*z-2162160*ax^14*ay^2*az^10*cos(a/2)^6*sin(a/2)^26*z-720720*ax^14*ay^2*az^12*cos(a/2)^4*sin(a/2)^28*z-102960*ax^14*ay^2*az^14*cos(a/2)^2*sin(a/2)^30*z+102960*ax^14*ay^3*az*cos(a/2)^14*sin(a/2)^18*y+720720*ax^14*ay^3*az^3*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^14*ay^3*az^5*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^14*ay^3*az^7*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^14*ay^3*az^9*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^14*ay^3*az^11*cos(a/2)^4*sin(a/2)^28*y+720720*ax^14*ay^3*az^13*cos(a/2)^2*sin(a/2)^30*y-2522520*ax^14*ay^4*az^2*cos(a/2)^12*sin(a/2)^20*z-6486480*ax^14*ay^4*az^4*cos(a/2)^10*sin(a/2)^22*z-9009000*ax^14*ay^4*az^6*cos(a/2)^8*sin(a/2)^24*z-7207200*ax^14*ay^4*az^8*cos(a/2)^6*sin(a/2)^26*z-3243240*ax^14*ay^4*az^10*cos(a/2)^4*sin(a/2)^28*z-720720*ax^14*ay^4*az^12*cos(a/2)^2*sin(a/2)^30*z+360360*ax^14*ay^5*az*cos(a/2)^12*sin(a/2)^20*y+2162160*ax^14*ay^5*az^3*cos(a/2)^10*sin(a/2)^22*y+5405400*ax^14*ay^5*az^5*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^14*ay^5*az^7*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^14*ay^5*az^9*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^14*ay^5*az^11*cos(a/2)^2*sin(a/2)^30*y-5045040*ax^14*ay^6*az^2*cos(a/2)^10*sin(a/2)^22*z-10810800*ax^14*ay^6*az^4*cos(a/2)^8*sin(a/2)^24*z-12012000*ax^14*ay^6*az^6*cos(a/2)^6*sin(a/2)^26*z-7207200*ax^14*ay^6*az^8*cos(a/2)^4*sin(a/2)^28*z-2162160*ax^14*ay^6*az^10*cos(a/2)^2*sin(a/2)^30*z+720720*ax^14*ay^7*az*cos(a/2)^10*sin(a/2)^22*y+3603600*ax^14*ay^7*az^3*cos(a/2)^8*sin(a/2)^24*y+7207200*ax^14*ay^7*az^5*cos(a/2)^6*sin(a/2)^26*y+7207200*ax^14*ay^7*az^7*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^14*ay^7*az^9*cos(a/2)^2*sin(a/2)^30*y-6306300*ax^14*ay^8*az^2*cos(a/2)^8*sin(a/2)^24*z-10810800*ax^14*ay^8*az^4*cos(a/2)^6*sin(a/2)^26*z-9009000*ax^14*ay^8*az^6*cos(a/2)^4*sin(a/2)^28*z-3603600*ax^14*ay^8*az^8*cos(a/2)^2*sin(a/2)^30*z+900900*ax^14*ay^9*az*cos(a/2)^8*sin(a/2)^24*y+3603600*ax^14*ay^9*az^3*cos(a/2)^6*sin(a/2)^26*y+5405400*ax^14*ay^9*az^5*cos(a/2)^4*sin(a/2)^28*y+3603600*ax^14*ay^9*az^7*cos(a/2)^2*sin(a/2)^30*y-5045040*ax^14*ay^10*az^2*cos(a/2)^6*sin(a/2)^26*z-6486480*ax^14*ay^10*az^4*cos(a/2)^4*sin(a/2)^28*z-3603600*ax^14*ay^10*az^6*cos(a/2)^2*sin(a/2)^30*z+720720*ax^14*ay^11*az*cos(a/2)^6*sin(a/2)^26*y+2162160*ax^14*ay^11*az^3*cos(a/2)^4*sin(a/2)^28*y+2162160*ax^14*ay^11*az^5*cos(a/2)^2*sin(a/2)^30*y-2522520*ax^14*ay^12*az^2*cos(a/2)^4*sin(a/2)^28*z-2162160*ax^14*ay^12*az^4*cos(a/2)^2*sin(a/2)^30*z+360360*ax^14*ay^13*az*cos(a/2)^4*sin(a/2)^28*y+720720*ax^14*ay^13*az^3*cos(a/2)^2*sin(a/2)^30*y-720720*ax^14*ay^14*az^2*cos(a/2)^2*sin(a/2)^30*z+102960*ax^14*ay^15*az*cos(a/2)^2*sin(a/2)^30*y+102960*ax^15*ay^2*az*cos(a/2)^14*sin(a/2)^18*x+720720*ax^15*ay^2*az^3*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^15*ay^2*az^5*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^15*ay^2*az^7*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^15*ay^2*az^9*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^15*ay^2*az^11*cos(a/2)^4*sin(a/2)^28*x+720720*ax^15*ay^2*az^13*cos(a/2)^2*sin(a/2)^30*x+360360*ax^15*ay^4*az*cos(a/2)^12*sin(a/2)^20*x+2162160*ax^15*ay^4*az^3*cos(a/2)^10*sin(a/2)^22*x+5405400*ax^15*ay^4*az^5*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^15*ay^4*az^7*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^15*ay^4*az^9*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^15*ay^4*az^11*cos(a/2)^2*sin(a/2)^30*x+720720*ax^15*ay^6*az*cos(a/2)^10*sin(a/2)^22*x+3603600*ax^15*ay^6*az^3*cos(a/2)^8*sin(a/2)^24*x+7207200*ax^15*ay^6*az^5*cos(a/2)^6*sin(a/2)^26*x+7207200*ax^15*ay^6*az^7*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^15*ay^6*az^9*cos(a/2)^2*sin(a/2)^30*x+900900*ax^15*ay^8*az*cos(a/2)^8*sin(a/2)^24*x+3603600*ax^15*ay^8*az^3*cos(a/2)^6*sin(a/2)^26*x+5405400*ax^15*ay^8*az^5*cos(a/2)^4*sin(a/2)^28*x+3603600*ax^15*ay^8*az^7*cos(a/2)^2*sin(a/2)^30*x+720720*ax^15*ay^10*az*cos(a/2)^6*sin(a/2)^26*x+2162160*ax^15*ay^10*az^3*cos(a/2)^4*sin(a/2)^28*x+2162160*ax^15*ay^10*az^5*cos(a/2)^2*sin(a/2)^30*x+360360*ax^15*ay^12*az*cos(a/2)^4*sin(a/2)^28*x+720720*ax^15*ay^12*az^3*cos(a/2)^2*sin(a/2)^30*x+102960*ax^15*ay^14*az*cos(a/2)^2*sin(a/2)^30*x+12870*ax^16*ay*az*cos(a/2)^14*sin(a/2)^18*y+90090*ax^16*ay*az^3*cos(a/2)^12*sin(a/2)^20*y+270270*ax^16*ay*az^5*cos(a/2)^10*sin(a/2)^22*y+450450*ax^16*ay*az^7*cos(a/2)^8*sin(a/2)^24*y+450450*ax^16*ay*az^9*cos(a/2)^6*sin(a/2)^26*y+270270*ax^16*ay*az^11*cos(a/2)^4*sin(a/2)^28*y+90090*ax^16*ay*az^13*cos(a/2)^2*sin(a/2)^30*y-630630*ax^16*ay^2*az^2*cos(a/2)^12*sin(a/2)^20*z-1621620*ax^16*ay^2*az^4*cos(a/2)^10*sin(a/2)^22*z-2252250*ax^16*ay^2*az^6*cos(a/2)^8*sin(a/2)^24*z-1801800*ax^16*ay^2*az^8*cos(a/2)^6*sin(a/2)^26*z-810810*ax^16*ay^2*az^10*cos(a/2)^4*sin(a/2)^28*z-180180*ax^16*ay^2*az^12*cos(a/2)^2*sin(a/2)^30*z+90090*ax^16*ay^3*az*cos(a/2)^12*sin(a/2)^20*y+540540*ax^16*ay^3*az^3*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^16*ay^3*az^5*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^16*ay^3*az^7*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^16*ay^3*az^9*cos(a/2)^4*sin(a/2)^28*y+540540*ax^16*ay^3*az^11*cos(a/2)^2*sin(a/2)^30*y-1891890*ax^16*ay^4*az^2*cos(a/2)^10*sin(a/2)^22*z-4054050*ax^16*ay^4*az^4*cos(a/2)^8*sin(a/2)^24*z-4504500*ax^16*ay^4*az^6*cos(a/2)^6*sin(a/2)^26*z-2702700*ax^16*ay^4*az^8*cos(a/2)^4*sin(a/2)^28*z-810810*ax^16*ay^4*az^10*cos(a/2)^2*sin(a/2)^30*z+270270*ax^16*ay^5*az*cos(a/2)^10*sin(a/2)^22*y+1351350*ax^16*ay^5*az^3*cos(a/2)^8*sin(a/2)^24*y+2702700*ax^16*ay^5*az^5*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^16*ay^5*az^7*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^16*ay^5*az^9*cos(a/2)^2*sin(a/2)^30*y-3153150*ax^16*ay^6*az^2*cos(a/2)^8*sin(a/2)^24*z-5405400*ax^16*ay^6*az^4*cos(a/2)^6*sin(a/2)^26*z-4504500*ax^16*ay^6*az^6*cos(a/2)^4*sin(a/2)^28*z-1801800*ax^16*ay^6*az^8*cos(a/2)^2*sin(a/2)^30*z+450450*ax^16*ay^7*az*cos(a/2)^8*sin(a/2)^24*y+1801800*ax^16*ay^7*az^3*cos(a/2)^6*sin(a/2)^26*y+2702700*ax^16*ay^7*az^5*cos(a/2)^4*sin(a/2)^28*y+1801800*ax^16*ay^7*az^7*cos(a/2)^2*sin(a/2)^30*y-3153150*ax^16*ay^8*az^2*cos(a/2)^6*sin(a/2)^26*z-4054050*ax^16*ay^8*az^4*cos(a/2)^4*sin(a/2)^28*z-2252250*ax^16*ay^8*az^6*cos(a/2)^2*sin(a/2)^30*z+450450*ax^16*ay^9*az*cos(a/2)^6*sin(a/2)^26*y+1351350*ax^16*ay^9*az^3*cos(a/2)^4*sin(a/2)^28*y+1351350*ax^16*ay^9*az^5*cos(a/2)^2*sin(a/2)^30*y-1891890*ax^16*ay^10*az^2*cos(a/2)^4*sin(a/2)^28*z-1621620*ax^16*ay^10*az^4*cos(a/2)^2*sin(a/2)^30*z+270270*ax^16*ay^11*az*cos(a/2)^4*sin(a/2)^28*y+540540*ax^16*ay^11*az^3*cos(a/2)^2*sin(a/2)^30*y-630630*ax^16*ay^12*az^2*cos(a/2)^2*sin(a/2)^30*z+90090*ax^16*ay^13*az*cos(a/2)^2*sin(a/2)^30*y+90090*ax^17*ay^2*az*cos(a/2)^12*sin(a/2)^20*x+540540*ax^17*ay^2*az^3*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^17*ay^2*az^5*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^17*ay^2*az^7*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^17*ay^2*az^9*cos(a/2)^4*sin(a/2)^28*x+540540*ax^17*ay^2*az^11*cos(a/2)^2*sin(a/2)^30*x+270270*ax^17*ay^4*az*cos(a/2)^10*sin(a/2)^22*x+1351350*ax^17*ay^4*az^3*cos(a/2)^8*sin(a/2)^24*x+2702700*ax^17*ay^4*az^5*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^17*ay^4*az^7*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^17*ay^4*az^9*cos(a/2)^2*sin(a/2)^30*x+450450*ax^17*ay^6*az*cos(a/2)^8*sin(a/2)^24*x+1801800*ax^17*ay^6*az^3*cos(a/2)^6*sin(a/2)^26*x+2702700*ax^17*ay^6*az^5*cos(a/2)^4*sin(a/2)^28*x+1801800*ax^17*ay^6*az^7*cos(a/2)^2*sin(a/2)^30*x+450450*ax^17*ay^8*az*cos(a/2)^6*sin(a/2)^26*x+1351350*ax^17*ay^8*az^3*cos(a/2)^4*sin(a/2)^28*x+1351350*ax^17*ay^8*az^5*cos(a/2)^2*sin(a/2)^30*x+270270*ax^17*ay^10*az*cos(a/2)^4*sin(a/2)^28*x+540540*ax^17*ay^10*az^3*cos(a/2)^2*sin(a/2)^30*x+90090*ax^17*ay^12*az*cos(a/2)^2*sin(a/2)^30*x+10010*ax^18*ay*az*cos(a/2)^12*sin(a/2)^20*y+60060*ax^18*ay*az^3*cos(a/2)^10*sin(a/2)^22*y+150150*ax^18*ay*az^5*cos(a/2)^8*sin(a/2)^24*y+200200*ax^18*ay*az^7*cos(a/2)^6*sin(a/2)^26*y+150150*ax^18*ay*az^9*cos(a/2)^4*sin(a/2)^28*y+60060*ax^18*ay*az^11*cos(a/2)^2*sin(a/2)^30*y-420420*ax^18*ay^2*az^2*cos(a/2)^10*sin(a/2)^22*z-900900*ax^18*ay^2*az^4*cos(a/2)^8*sin(a/2)^24*z-1001000*ax^18*ay^2*az^6*cos(a/2)^6*sin(a/2)^26*z-600600*ax^18*ay^2*az^8*cos(a/2)^4*sin(a/2)^28*z-180180*ax^18*ay^2*az^10*cos(a/2)^2*sin(a/2)^30*z+60060*ax^18*ay^3*az*cos(a/2)^10*sin(a/2)^22*y+300300*ax^18*ay^3*az^3*cos(a/2)^8*sin(a/2)^24*y+600600*ax^18*ay^3*az^5*cos(a/2)^6*sin(a/2)^26*y+600600*ax^18*ay^3*az^7*cos(a/2)^4*sin(a/2)^28*y+300300*ax^18*ay^3*az^9*cos(a/2)^2*sin(a/2)^30*y-1051050*ax^18*ay^4*az^2*cos(a/2)^8*sin(a/2)^24*z-1801800*ax^18*ay^4*az^4*cos(a/2)^6*sin(a/2)^26*z-1501500*ax^18*ay^4*az^6*cos(a/2)^4*sin(a/2)^28*z-600600*ax^18*ay^4*az^8*cos(a/2)^2*sin(a/2)^30*z+150150*ax^18*ay^5*az*cos(a/2)^8*sin(a/2)^24*y+600600*ax^18*ay^5*az^3*cos(a/2)^6*sin(a/2)^26*y+900900*ax^18*ay^5*az^5*cos(a/2)^4*sin(a/2)^28*y+600600*ax^18*ay^5*az^7*cos(a/2)^2*sin(a/2)^30*y-1401400*ax^18*ay^6*az^2*cos(a/2)^6*sin(a/2)^26*z-1801800*ax^18*ay^6*az^4*cos(a/2)^4*sin(a/2)^28*z-1001000*ax^18*ay^6*az^6*cos(a/2)^2*sin(a/2)^30*z+200200*ax^18*ay^7*az*cos(a/2)^6*sin(a/2)^26*y+600600*ax^18*ay^7*az^3*cos(a/2)^4*sin(a/2)^28*y+600600*ax^18*ay^7*az^5*cos(a/2)^2*sin(a/2)^30*y-1051050*ax^18*ay^8*az^2*cos(a/2)^4*sin(a/2)^28*z-900900*ax^18*ay^8*az^4*cos(a/2)^2*sin(a/2)^30*z+150150*ax^18*ay^9*az*cos(a/2)^4*sin(a/2)^28*y+300300*ax^18*ay^9*az^3*cos(a/2)^2*sin(a/2)^30*y-420420*ax^18*ay^10*az^2*cos(a/2)^2*sin(a/2)^30*z+60060*ax^18*ay^11*az*cos(a/2)^2*sin(a/2)^30*y+60060*ax^19*ay^2*az*cos(a/2)^10*sin(a/2)^22*x+300300*ax^19*ay^2*az^3*cos(a/2)^8*sin(a/2)^24*x+600600*ax^19*ay^2*az^5*cos(a/2)^6*sin(a/2)^26*x+600600*ax^19*ay^2*az^7*cos(a/2)^4*sin(a/2)^28*x+300300*ax^19*ay^2*az^9*cos(a/2)^2*sin(a/2)^30*x+150150*ax^19*ay^4*az*cos(a/2)^8*sin(a/2)^24*x+600600*ax^19*ay^4*az^3*cos(a/2)^6*sin(a/2)^26*x+900900*ax^19*ay^4*az^5*cos(a/2)^4*sin(a/2)^28*x+600600*ax^19*ay^4*az^7*cos(a/2)^2*sin(a/2)^30*x+200200*ax^19*ay^6*az*cos(a/2)^6*sin(a/2)^26*x+600600*ax^19*ay^6*az^3*cos(a/2)^4*sin(a/2)^28*x+600600*ax^19*ay^6*az^5*cos(a/2)^2*sin(a/2)^30*x+150150*ax^19*ay^8*az*cos(a/2)^4*sin(a/2)^28*x+300300*ax^19*ay^8*az^3*cos(a/2)^2*sin(a/2)^30*x+60060*ax^19*ay^10*az*cos(a/2)^2*sin(a/2)^30*x+6006*ax^20*ay*az*cos(a/2)^10*sin(a/2)^22*y+30030*ax^20*ay*az^3*cos(a/2)^8*sin(a/2)^24*y+60060*ax^20*ay*az^5*cos(a/2)^6*sin(a/2)^26*y+60060*ax^20*ay*az^7*cos(a/2)^4*sin(a/2)^28*y+30030*ax^20*ay*az^9*cos(a/2)^2*sin(a/2)^30*y-210210*ax^20*ay^2*az^2*cos(a/2)^8*sin(a/2)^24*z-360360*ax^20*ay^2*az^4*cos(a/2)^6*sin(a/2)^26*z-300300*ax^20*ay^2*az^6*cos(a/2)^4*sin(a/2)^28*z-120120*ax^20*ay^2*az^8*cos(a/2)^2*sin(a/2)^30*z+30030*ax^20*ay^3*az*cos(a/2)^8*sin(a/2)^24*y+120120*ax^20*ay^3*az^3*cos(a/2)^6*sin(a/2)^26*y+180180*ax^20*ay^3*az^5*cos(a/2)^4*sin(a/2)^28*y+120120*ax^20*ay^3*az^7*cos(a/2)^2*sin(a/2)^30*y-420420*ax^20*ay^4*az^2*cos(a/2)^6*sin(a/2)^26*z-540540*ax^20*ay^4*az^4*cos(a/2)^4*sin(a/2)^28*z-300300*ax^20*ay^4*az^6*cos(a/2)^2*sin(a/2)^30*z+60060*ax^20*ay^5*az*cos(a/2)^6*sin(a/2)^26*y+180180*ax^20*ay^5*az^3*cos(a/2)^4*sin(a/2)^28*y+180180*ax^20*ay^5*az^5*cos(a/2)^2*sin(a/2)^30*y-420420*ax^20*ay^6*az^2*cos(a/2)^4*sin(a/2)^28*z-360360*ax^20*ay^6*az^4*cos(a/2)^2*sin(a/2)^30*z+60060*ax^20*ay^7*az*cos(a/2)^4*sin(a/2)^28*y+120120*ax^20*ay^7*az^3*cos(a/2)^2*sin(a/2)^30*y-210210*ax^20*ay^8*az^2*cos(a/2)^2*sin(a/2)^30*z+30030*ax^20*ay^9*az*cos(a/2)^2*sin(a/2)^30*y+30030*ax^21*ay^2*az*cos(a/2)^8*sin(a/2)^24*x+120120*ax^21*ay^2*az^3*cos(a/2)^6*sin(a/2)^26*x+180180*ax^21*ay^2*az^5*cos(a/2)^4*sin(a/2)^28*x+120120*ax^21*ay^2*az^7*cos(a/2)^2*sin(a/2)^30*x+60060*ax^21*ay^4*az*cos(a/2)^6*sin(a/2)^26*x+180180*ax^21*ay^4*az^3*cos(a/2)^4*sin(a/2)^28*x+180180*ax^21*ay^4*az^5*cos(a/2)^2*sin(a/2)^30*x+60060*ax^21*ay^6*az*cos(a/2)^4*sin(a/2)^28*x+120120*ax^21*ay^6*az^3*cos(a/2)^2*sin(a/2)^30*x+30030*ax^21*ay^8*az*cos(a/2)^2*sin(a/2)^30*x+2730*ax^22*ay*az*cos(a/2)^8*sin(a/2)^24*y+10920*ax^22*ay*az^3*cos(a/2)^6*sin(a/2)^26*y+16380*ax^22*ay*az^5*cos(a/2)^4*sin(a/2)^28*y+10920*ax^22*ay*az^7*cos(a/2)^2*sin(a/2)^30*y-76440*ax^22*ay^2*az^2*cos(a/2)^6*sin(a/2)^26*z-98280*ax^22*ay^2*az^4*cos(a/2)^4*sin(a/2)^28*z-54600*ax^22*ay^2*az^6*cos(a/2)^2*sin(a/2)^30*z+10920*ax^22*ay^3*az*cos(a/2)^6*sin(a/2)^26*y+32760*ax^22*ay^3*az^3*cos(a/2)^4*sin(a/2)^28*y+32760*ax^22*ay^3*az^5*cos(a/2)^2*sin(a/2)^30*y-114660*ax^22*ay^4*az^2*cos(a/2)^4*sin(a/2)^28*z-98280*ax^22*ay^4*az^4*cos(a/2)^2*sin(a/2)^30*z+16380*ax^22*ay^5*az*cos(a/2)^4*sin(a/2)^28*y+32760*ax^22*ay^5*az^3*cos(a/2)^2*sin(a/2)^30*y-76440*ax^22*ay^6*az^2*cos(a/2)^2*sin(a/2)^30*z+10920*ax^22*ay^7*az*cos(a/2)^2*sin(a/2)^30*y+10920*ax^23*ay^2*az*cos(a/2)^6*sin(a/2)^26*x+32760*ax^23*ay^2*az^3*cos(a/2)^4*sin(a/2)^28*x+32760*ax^23*ay^2*az^5*cos(a/2)^2*sin(a/2)^30*x+16380*ax^23*ay^4*az*cos(a/2)^4*sin(a/2)^28*x+32760*ax^23*ay^4*az^3*cos(a/2)^2*sin(a/2)^30*x+10920*ax^23*ay^6*az*cos(a/2)^2*sin(a/2)^30*x+910*ax^24*ay*az*cos(a/2)^6*sin(a/2)^26*y+2730*ax^24*ay*az^3*cos(a/2)^4*sin(a/2)^28*y+2730*ax^24*ay*az^5*cos(a/2)^2*sin(a/2)^30*y-19110*ax^24*ay^2*az^2*cos(a/2)^4*sin(a/2)^28*z-16380*ax^24*ay^2*az^4*cos(a/2)^2*sin(a/2)^30*z+2730*ax^24*ay^3*az*cos(a/2)^4*sin(a/2)^28*y+5460*ax^24*ay^3*az^3*cos(a/2)^2*sin(a/2)^30*y-19110*ax^24*ay^4*az^2*cos(a/2)^2*sin(a/2)^30*z+2730*ax^24*ay^5*az*cos(a/2)^2*sin(a/2)^30*y+2730*ax^25*ay^2*az*cos(a/2)^4*sin(a/2)^28*x+5460*ax^25*ay^2*az^3*cos(a/2)^2*sin(a/2)^30*x+2730*ax^25*ay^4*az*cos(a/2)^2*sin(a/2)^30*x+210*ax^26*ay*az*cos(a/2)^4*sin(a/2)^28*y+420*ax^26*ay*az^3*cos(a/2)^2*sin(a/2)^30*y-2940*ax^26*ay^2*az^2*cos(a/2)^2*sin(a/2)^30*z+420*ax^26*ay^3*az*cos(a/2)^2*sin(a/2)^30*y+420*ax^27*ay^2*az*cos(a/2)^2*sin(a/2)^30*x+30*ax^28*ay*az*cos(a/2)^2*sin(a/2)^30*y)/(cos(a/2)^32+ax^32*sin(a/2)^32+ay^32*sin(a/2)^32+az^32*sin(a/2)^32+16*ax^2*ay^30*sin(a/2)^32+16*ax^2*az^30*sin(a/2)^32+16*ax^2*cos(a/2)^30*sin(a/2)^2+120*ax^4*ay^28*sin(a/2)^32+120*ax^4*az^28*sin(a/2)^32+120*ax^4*cos(a/2)^28*sin(a/2)^4+560*ax^6*ay^26*sin(a/2)^32+560*ax^6*az^26*sin(a/2)^32+560*ax^6*cos(a/2)^26*sin(a/2)^6+1820*ax^8*ay^24*sin(a/2)^32+1820*ax^8*az^24*sin(a/2)^32+1820*ax^8*cos(a/2)^24*sin(a/2)^8+4368*ax^10*ay^22*sin(a/2)^32+4368*ax^10*az^22*sin(a/2)^32+4368*ax^10*cos(a/2)^22*sin(a/2)^10+8008*ax^12*ay^20*sin(a/2)^32+8008*ax^12*az^20*sin(a/2)^32+8008*ax^12*cos(a/2)^20*sin(a/2)^12+11440*ax^14*ay^18*sin(a/2)^32+11440*ax^14*az^18*sin(a/2)^32+11440*ax^14*cos(a/2)^18*sin(a/2)^14+12870*ax^16*ay^16*sin(a/2)^32+12870*ax^16*az^16*sin(a/2)^32+12870*ax^16*cos(a/2)^16*sin(a/2)^16+11440*ax^18*ay^14*sin(a/2)^32+11440*ax^18*az^14*sin(a/2)^32+11440*ax^18*cos(a/2)^14*sin(a/2)^18+8008*ax^20*ay^12*sin(a/2)^32+8008*ax^20*az^12*sin(a/2)^32+8008*ax^20*cos(a/2)^12*sin(a/2)^20+4368*ax^22*ay^10*sin(a/2)^32+4368*ax^22*az^10*sin(a/2)^32+4368*ax^22*cos(a/2)^10*sin(a/2)^22+1820*ax^24*ay^8*sin(a/2)^32+1820*ax^24*az^8*sin(a/2)^32+1820*ax^24*cos(a/2)^8*sin(a/2)^24+560*ax^26*ay^6*sin(a/2)^32+560*ax^26*az^6*sin(a/2)^32+560*ax^26*cos(a/2)^6*sin(a/2)^26+120*ax^28*ay^4*sin(a/2)^32+120*ax^28*az^4*sin(a/2)^32+120*ax^28*cos(a/2)^4*sin(a/2)^28+16*ax^30*ay^2*sin(a/2)^32+16*ax^30*az^2*sin(a/2)^32+16*ax^30*cos(a/2)^2*sin(a/2)^30+16*ay^2*az^30*sin(a/2)^32+16*ay^2*cos(a/2)^30*sin(a/2)^2+120*ay^4*az^28*sin(a/2)^32+120*ay^4*cos(a/2)^28*sin(a/2)^4+560*ay^6*az^26*sin(a/2)^32+560*ay^6*cos(a/2)^26*sin(a/2)^6+1820*ay^8*az^24*sin(a/2)^32+1820*ay^8*cos(a/2)^24*sin(a/2)^8+4368*ay^10*az^22*sin(a/2)^32+4368*ay^10*cos(a/2)^22*sin(a/2)^10+8008*ay^12*az^20*sin(a/2)^32+8008*ay^12*cos(a/2)^20*sin(a/2)^12+11440*ay^14*az^18*sin(a/2)^32+11440*ay^14*cos(a/2)^18*sin(a/2)^14+12870*ay^16*az^16*sin(a/2)^32+12870*ay^16*cos(a/2)^16*sin(a/2)^16+11440*ay^18*az^14*sin(a/2)^32+11440*ay^18*cos(a/2)^14*sin(a/2)^18+8008*ay^20*az^12*sin(a/2)^32+8008*ay^20*cos(a/2)^12*sin(a/2)^20+4368*ay^22*az^10*sin(a/2)^32+4368*ay^22*cos(a/2)^10*sin(a/2)^22+1820*ay^24*az^8*sin(a/2)^32+1820*ay^24*cos(a/2)^8*sin(a/2)^24+560*ay^26*az^6*sin(a/2)^32+560*ay^26*cos(a/2)^6*sin(a/2)^26+120*ay^28*az^4*sin(a/2)^32+120*ay^28*cos(a/2)^4*sin(a/2)^28+16*ay^30*az^2*sin(a/2)^32+16*ay^30*cos(a/2)^2*sin(a/2)^30+16*az^2*cos(a/2)^30*sin(a/2)^2+120*az^4*cos(a/2)^28*sin(a/2)^4+560*az^6*cos(a/2)^26*sin(a/2)^6+1820*az^8*cos(a/2)^24*sin(a/2)^8+4368*az^10*cos(a/2)^22*sin(a/2)^10+8008*az^12*cos(a/2)^20*sin(a/2)^12+11440*az^14*cos(a/2)^18*sin(a/2)^14+12870*az^16*cos(a/2)^16*sin(a/2)^16+11440*az^18*cos(a/2)^14*sin(a/2)^18+8008*az^20*cos(a/2)^12*sin(a/2)^20+4368*az^22*cos(a/2)^10*sin(a/2)^22+1820*az^24*cos(a/2)^8*sin(a/2)^24+560*az^26*cos(a/2)^6*sin(a/2)^26+120*az^28*cos(a/2)^4*sin(a/2)^28+16*az^30*cos(a/2)^2*sin(a/2)^30+240*ax^2*ay^2*az^28*sin(a/2)^32+240*ax^2*ay^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*ay^4*az^26*sin(a/2)^32+1680*ax^2*ay^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*ay^6*az^24*sin(a/2)^32+7280*ax^2*ay^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*ay^8*az^22*sin(a/2)^32+21840*ax^2*ay^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*ay^10*az^20*sin(a/2)^32+48048*ax^2*ay^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*ay^12*az^18*sin(a/2)^32+80080*ax^2*ay^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*ay^14*az^16*sin(a/2)^32+102960*ax^2*ay^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*ay^16*az^14*sin(a/2)^32+102960*ax^2*ay^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*ay^18*az^12*sin(a/2)^32+80080*ax^2*ay^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*ay^20*az^10*sin(a/2)^32+48048*ax^2*ay^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*ay^22*az^8*sin(a/2)^32+21840*ax^2*ay^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*ay^24*az^6*sin(a/2)^32+7280*ax^2*ay^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*ay^26*az^4*sin(a/2)^32+1680*ax^2*ay^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*ay^28*az^2*sin(a/2)^32+240*ax^2*ay^28*cos(a/2)^2*sin(a/2)^30+240*ax^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ax^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ax^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ax^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ax^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ax^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ax^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ax^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ax^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ax^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ax^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ax^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ax^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ax^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ax^4*ay^2*az^26*sin(a/2)^32+1680*ax^4*ay^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*ay^4*az^24*sin(a/2)^32+10920*ax^4*ay^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*ay^6*az^22*sin(a/2)^32+43680*ax^4*ay^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*ay^8*az^20*sin(a/2)^32+120120*ax^4*ay^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*ay^10*az^18*sin(a/2)^32+240240*ax^4*ay^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*ay^12*az^16*sin(a/2)^32+360360*ax^4*ay^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*ay^14*az^14*sin(a/2)^32+411840*ax^4*ay^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*ay^16*az^12*sin(a/2)^32+360360*ax^4*ay^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*ay^18*az^10*sin(a/2)^32+240240*ax^4*ay^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*ay^20*az^8*sin(a/2)^32+120120*ax^4*ay^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*ay^22*az^6*sin(a/2)^32+43680*ax^4*ay^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*ay^24*az^4*sin(a/2)^32+10920*ax^4*ay^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*ay^26*az^2*sin(a/2)^32+1680*ax^4*ay^26*cos(a/2)^2*sin(a/2)^30+1680*ax^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ax^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ax^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ax^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ax^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ax^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ax^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ax^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ax^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ax^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ax^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ax^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ax^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ax^6*ay^2*az^24*sin(a/2)^32+7280*ax^6*ay^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*ay^4*az^22*sin(a/2)^32+43680*ax^6*ay^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*ay^6*az^20*sin(a/2)^32+160160*ax^6*ay^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*ay^8*az^18*sin(a/2)^32+400400*ax^6*ay^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*ay^10*az^16*sin(a/2)^32+720720*ax^6*ay^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*ay^12*az^14*sin(a/2)^32+960960*ax^6*ay^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*ay^14*az^12*sin(a/2)^32+960960*ax^6*ay^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*ay^16*az^10*sin(a/2)^32+720720*ax^6*ay^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*ay^18*az^8*sin(a/2)^32+400400*ax^6*ay^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*ay^20*az^6*sin(a/2)^32+160160*ax^6*ay^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*ay^22*az^4*sin(a/2)^32+43680*ax^6*ay^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*ay^24*az^2*sin(a/2)^32+7280*ax^6*ay^24*cos(a/2)^2*sin(a/2)^30+7280*ax^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ax^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ax^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ax^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ax^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ax^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ax^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ax^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ax^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ax^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ax^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ax^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ax^8*ay^2*az^22*sin(a/2)^32+21840*ax^8*ay^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*ay^4*az^20*sin(a/2)^32+120120*ax^8*ay^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*ay^6*az^18*sin(a/2)^32+400400*ax^8*ay^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*ay^8*az^16*sin(a/2)^32+900900*ax^8*ay^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*ay^10*az^14*sin(a/2)^32+1441440*ax^8*ay^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*ay^12*az^12*sin(a/2)^32+1681680*ax^8*ay^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*ay^14*az^10*sin(a/2)^32+1441440*ax^8*ay^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*ay^16*az^8*sin(a/2)^32+900900*ax^8*ay^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*ay^18*az^6*sin(a/2)^32+400400*ax^8*ay^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*ay^20*az^4*sin(a/2)^32+120120*ax^8*ay^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*ay^22*az^2*sin(a/2)^32+21840*ax^8*ay^22*cos(a/2)^2*sin(a/2)^30+21840*ax^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ax^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ax^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ax^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ax^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ax^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ax^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ax^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ax^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ax^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ax^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ax^10*ay^2*az^20*sin(a/2)^32+48048*ax^10*ay^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*ay^4*az^18*sin(a/2)^32+240240*ax^10*ay^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*ay^6*az^16*sin(a/2)^32+720720*ax^10*ay^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*ay^8*az^14*sin(a/2)^32+1441440*ax^10*ay^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*ay^10*az^12*sin(a/2)^32+2018016*ax^10*ay^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*ay^12*az^10*sin(a/2)^32+2018016*ax^10*ay^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*ay^14*az^8*sin(a/2)^32+1441440*ax^10*ay^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*ay^16*az^6*sin(a/2)^32+720720*ax^10*ay^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*ay^18*az^4*sin(a/2)^32+240240*ax^10*ay^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*ay^20*az^2*sin(a/2)^32+48048*ax^10*ay^20*cos(a/2)^2*sin(a/2)^30+48048*ax^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ax^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ax^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ax^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ax^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ax^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ax^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ax^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ax^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ax^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ax^12*ay^2*az^18*sin(a/2)^32+80080*ax^12*ay^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*ay^4*az^16*sin(a/2)^32+360360*ax^12*ay^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*ay^6*az^14*sin(a/2)^32+960960*ax^12*ay^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*ay^8*az^12*sin(a/2)^32+1681680*ax^12*ay^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*ay^10*az^10*sin(a/2)^32+2018016*ax^12*ay^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*ay^12*az^8*sin(a/2)^32+1681680*ax^12*ay^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*ay^14*az^6*sin(a/2)^32+960960*ax^12*ay^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*ay^16*az^4*sin(a/2)^32+360360*ax^12*ay^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*ay^18*az^2*sin(a/2)^32+80080*ax^12*ay^18*cos(a/2)^2*sin(a/2)^30+80080*ax^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ax^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ax^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ax^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ax^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ax^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ax^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ax^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ax^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ax^14*ay^2*az^16*sin(a/2)^32+102960*ax^14*ay^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*ay^4*az^14*sin(a/2)^32+411840*ax^14*ay^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*ay^6*az^12*sin(a/2)^32+960960*ax^14*ay^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*ay^8*az^10*sin(a/2)^32+1441440*ax^14*ay^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*ay^10*az^8*sin(a/2)^32+1441440*ax^14*ay^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*ay^12*az^6*sin(a/2)^32+960960*ax^14*ay^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*ay^14*az^4*sin(a/2)^32+411840*ax^14*ay^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*ay^16*az^2*sin(a/2)^32+102960*ax^14*ay^16*cos(a/2)^2*sin(a/2)^30+102960*ax^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ax^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ax^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ax^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ax^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ax^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ax^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ax^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ax^16*ay^2*az^14*sin(a/2)^32+102960*ax^16*ay^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*ay^4*az^12*sin(a/2)^32+360360*ax^16*ay^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*ay^6*az^10*sin(a/2)^32+720720*ax^16*ay^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*ay^8*az^8*sin(a/2)^32+900900*ax^16*ay^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*ay^10*az^6*sin(a/2)^32+720720*ax^16*ay^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*ay^12*az^4*sin(a/2)^32+360360*ax^16*ay^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*ay^14*az^2*sin(a/2)^32+102960*ax^16*ay^14*cos(a/2)^2*sin(a/2)^30+102960*ax^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ax^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ax^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ax^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ax^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ax^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ax^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ax^18*ay^2*az^12*sin(a/2)^32+80080*ax^18*ay^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*ay^4*az^10*sin(a/2)^32+240240*ax^18*ay^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*ay^6*az^8*sin(a/2)^32+400400*ax^18*ay^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*ay^8*az^6*sin(a/2)^32+400400*ax^18*ay^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*ay^10*az^4*sin(a/2)^32+240240*ax^18*ay^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*ay^12*az^2*sin(a/2)^32+80080*ax^18*ay^12*cos(a/2)^2*sin(a/2)^30+80080*ax^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ax^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ax^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ax^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ax^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ax^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ax^20*ay^2*az^10*sin(a/2)^32+48048*ax^20*ay^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*ay^4*az^8*sin(a/2)^32+120120*ax^20*ay^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*ay^6*az^6*sin(a/2)^32+160160*ax^20*ay^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*ay^8*az^4*sin(a/2)^32+120120*ax^20*ay^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*ay^10*az^2*sin(a/2)^32+48048*ax^20*ay^10*cos(a/2)^2*sin(a/2)^30+48048*ax^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ax^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ax^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ax^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ax^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ax^22*ay^2*az^8*sin(a/2)^32+21840*ax^22*ay^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*ay^4*az^6*sin(a/2)^32+43680*ax^22*ay^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*ay^6*az^4*sin(a/2)^32+43680*ax^22*ay^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*ay^8*az^2*sin(a/2)^32+21840*ax^22*ay^8*cos(a/2)^2*sin(a/2)^30+21840*ax^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ax^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ax^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ax^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ax^24*ay^2*az^6*sin(a/2)^32+7280*ax^24*ay^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*ay^4*az^4*sin(a/2)^32+10920*ax^24*ay^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*ay^6*az^2*sin(a/2)^32+7280*ax^24*ay^6*cos(a/2)^2*sin(a/2)^30+7280*ax^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ax^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ax^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ax^26*ay^2*az^4*sin(a/2)^32+1680*ax^26*ay^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*ay^4*az^2*sin(a/2)^32+1680*ax^26*ay^4*cos(a/2)^2*sin(a/2)^30+1680*ax^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ax^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ax^28*ay^2*az^2*sin(a/2)^32+240*ax^28*ay^2*cos(a/2)^2*sin(a/2)^30+240*ax^28*az^2*cos(a/2)^2*sin(a/2)^30+240*ay^2*az^2*cos(a/2)^28*sin(a/2)^4+1680*ay^2*az^4*cos(a/2)^26*sin(a/2)^6+7280*ay^2*az^6*cos(a/2)^24*sin(a/2)^8+21840*ay^2*az^8*cos(a/2)^22*sin(a/2)^10+48048*ay^2*az^10*cos(a/2)^20*sin(a/2)^12+80080*ay^2*az^12*cos(a/2)^18*sin(a/2)^14+102960*ay^2*az^14*cos(a/2)^16*sin(a/2)^16+102960*ay^2*az^16*cos(a/2)^14*sin(a/2)^18+80080*ay^2*az^18*cos(a/2)^12*sin(a/2)^20+48048*ay^2*az^20*cos(a/2)^10*sin(a/2)^22+21840*ay^2*az^22*cos(a/2)^8*sin(a/2)^24+7280*ay^2*az^24*cos(a/2)^6*sin(a/2)^26+1680*ay^2*az^26*cos(a/2)^4*sin(a/2)^28+240*ay^2*az^28*cos(a/2)^2*sin(a/2)^30+1680*ay^4*az^2*cos(a/2)^26*sin(a/2)^6+10920*ay^4*az^4*cos(a/2)^24*sin(a/2)^8+43680*ay^4*az^6*cos(a/2)^22*sin(a/2)^10+120120*ay^4*az^8*cos(a/2)^20*sin(a/2)^12+240240*ay^4*az^10*cos(a/2)^18*sin(a/2)^14+360360*ay^4*az^12*cos(a/2)^16*sin(a/2)^16+411840*ay^4*az^14*cos(a/2)^14*sin(a/2)^18+360360*ay^4*az^16*cos(a/2)^12*sin(a/2)^20+240240*ay^4*az^18*cos(a/2)^10*sin(a/2)^22+120120*ay^4*az^20*cos(a/2)^8*sin(a/2)^24+43680*ay^4*az^22*cos(a/2)^6*sin(a/2)^26+10920*ay^4*az^24*cos(a/2)^4*sin(a/2)^28+1680*ay^4*az^26*cos(a/2)^2*sin(a/2)^30+7280*ay^6*az^2*cos(a/2)^24*sin(a/2)^8+43680*ay^6*az^4*cos(a/2)^22*sin(a/2)^10+160160*ay^6*az^6*cos(a/2)^20*sin(a/2)^12+400400*ay^6*az^8*cos(a/2)^18*sin(a/2)^14+720720*ay^6*az^10*cos(a/2)^16*sin(a/2)^16+960960*ay^6*az^12*cos(a/2)^14*sin(a/2)^18+960960*ay^6*az^14*cos(a/2)^12*sin(a/2)^20+720720*ay^6*az^16*cos(a/2)^10*sin(a/2)^22+400400*ay^6*az^18*cos(a/2)^8*sin(a/2)^24+160160*ay^6*az^20*cos(a/2)^6*sin(a/2)^26+43680*ay^6*az^22*cos(a/2)^4*sin(a/2)^28+7280*ay^6*az^24*cos(a/2)^2*sin(a/2)^30+21840*ay^8*az^2*cos(a/2)^22*sin(a/2)^10+120120*ay^8*az^4*cos(a/2)^20*sin(a/2)^12+400400*ay^8*az^6*cos(a/2)^18*sin(a/2)^14+900900*ay^8*az^8*cos(a/2)^16*sin(a/2)^16+1441440*ay^8*az^10*cos(a/2)^14*sin(a/2)^18+1681680*ay^8*az^12*cos(a/2)^12*sin(a/2)^20+1441440*ay^8*az^14*cos(a/2)^10*sin(a/2)^22+900900*ay^8*az^16*cos(a/2)^8*sin(a/2)^24+400400*ay^8*az^18*cos(a/2)^6*sin(a/2)^26+120120*ay^8*az^20*cos(a/2)^4*sin(a/2)^28+21840*ay^8*az^22*cos(a/2)^2*sin(a/2)^30+48048*ay^10*az^2*cos(a/2)^20*sin(a/2)^12+240240*ay^10*az^4*cos(a/2)^18*sin(a/2)^14+720720*ay^10*az^6*cos(a/2)^16*sin(a/2)^16+1441440*ay^10*az^8*cos(a/2)^14*sin(a/2)^18+2018016*ay^10*az^10*cos(a/2)^12*sin(a/2)^20+2018016*ay^10*az^12*cos(a/2)^10*sin(a/2)^22+1441440*ay^10*az^14*cos(a/2)^8*sin(a/2)^24+720720*ay^10*az^16*cos(a/2)^6*sin(a/2)^26+240240*ay^10*az^18*cos(a/2)^4*sin(a/2)^28+48048*ay^10*az^20*cos(a/2)^2*sin(a/2)^30+80080*ay^12*az^2*cos(a/2)^18*sin(a/2)^14+360360*ay^12*az^4*cos(a/2)^16*sin(a/2)^16+960960*ay^12*az^6*cos(a/2)^14*sin(a/2)^18+1681680*ay^12*az^8*cos(a/2)^12*sin(a/2)^20+2018016*ay^12*az^10*cos(a/2)^10*sin(a/2)^22+1681680*ay^12*az^12*cos(a/2)^8*sin(a/2)^24+960960*ay^12*az^14*cos(a/2)^6*sin(a/2)^26+360360*ay^12*az^16*cos(a/2)^4*sin(a/2)^28+80080*ay^12*az^18*cos(a/2)^2*sin(a/2)^30+102960*ay^14*az^2*cos(a/2)^16*sin(a/2)^16+411840*ay^14*az^4*cos(a/2)^14*sin(a/2)^18+960960*ay^14*az^6*cos(a/2)^12*sin(a/2)^20+1441440*ay^14*az^8*cos(a/2)^10*sin(a/2)^22+1441440*ay^14*az^10*cos(a/2)^8*sin(a/2)^24+960960*ay^14*az^12*cos(a/2)^6*sin(a/2)^26+411840*ay^14*az^14*cos(a/2)^4*sin(a/2)^28+102960*ay^14*az^16*cos(a/2)^2*sin(a/2)^30+102960*ay^16*az^2*cos(a/2)^14*sin(a/2)^18+360360*ay^16*az^4*cos(a/2)^12*sin(a/2)^20+720720*ay^16*az^6*cos(a/2)^10*sin(a/2)^22+900900*ay^16*az^8*cos(a/2)^8*sin(a/2)^24+720720*ay^16*az^10*cos(a/2)^6*sin(a/2)^26+360360*ay^16*az^12*cos(a/2)^4*sin(a/2)^28+102960*ay^16*az^14*cos(a/2)^2*sin(a/2)^30+80080*ay^18*az^2*cos(a/2)^12*sin(a/2)^20+240240*ay^18*az^4*cos(a/2)^10*sin(a/2)^22+400400*ay^18*az^6*cos(a/2)^8*sin(a/2)^24+400400*ay^18*az^8*cos(a/2)^6*sin(a/2)^26+240240*ay^18*az^10*cos(a/2)^4*sin(a/2)^28+80080*ay^18*az^12*cos(a/2)^2*sin(a/2)^30+48048*ay^20*az^2*cos(a/2)^10*sin(a/2)^22+120120*ay^20*az^4*cos(a/2)^8*sin(a/2)^24+160160*ay^20*az^6*cos(a/2)^6*sin(a/2)^26+120120*ay^20*az^8*cos(a/2)^4*sin(a/2)^28+48048*ay^20*az^10*cos(a/2)^2*sin(a/2)^30+21840*ay^22*az^2*cos(a/2)^8*sin(a/2)^24+43680*ay^22*az^4*cos(a/2)^6*sin(a/2)^26+43680*ay^22*az^6*cos(a/2)^4*sin(a/2)^28+21840*ay^22*az^8*cos(a/2)^2*sin(a/2)^30+7280*ay^24*az^2*cos(a/2)^6*sin(a/2)^26+10920*ay^24*az^4*cos(a/2)^4*sin(a/2)^28+7280*ay^24*az^6*cos(a/2)^2*sin(a/2)^30+1680*ay^26*az^2*cos(a/2)^4*sin(a/2)^28+1680*ay^26*az^4*cos(a/2)^2*sin(a/2)^30+240*ay^28*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^2*az^2*cos(a/2)^26*sin(a/2)^6+21840*ax^2*ay^2*az^4*cos(a/2)^24*sin(a/2)^8+87360*ax^2*ay^2*az^6*cos(a/2)^22*sin(a/2)^10+240240*ax^2*ay^2*az^8*cos(a/2)^20*sin(a/2)^12+480480*ax^2*ay^2*az^10*cos(a/2)^18*sin(a/2)^14+720720*ax^2*ay^2*az^12*cos(a/2)^16*sin(a/2)^16+823680*ax^2*ay^2*az^14*cos(a/2)^14*sin(a/2)^18+720720*ax^2*ay^2*az^16*cos(a/2)^12*sin(a/2)^20+480480*ax^2*ay^2*az^18*cos(a/2)^10*sin(a/2)^22+240240*ax^2*ay^2*az^20*cos(a/2)^8*sin(a/2)^24+87360*ax^2*ay^2*az^22*cos(a/2)^6*sin(a/2)^26+21840*ax^2*ay^2*az^24*cos(a/2)^4*sin(a/2)^28+3360*ax^2*ay^2*az^26*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^4*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^2*ay^4*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^4*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^4*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^4*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^4*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^4*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^4*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^4*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^4*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^4*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^4*az^24*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^6*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^2*ay^6*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^2*ay^6*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^6*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^6*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^6*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^6*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^6*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^6*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^6*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^6*az^22*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^8*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^2*ay^8*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^2*ay^8*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^2*ay^8*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^8*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^8*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^8*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^8*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^8*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^8*az^20*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^10*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^2*ay^10*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^2*ay^10*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^2*ay^10*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^2*ay^10*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^10*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^10*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^10*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^10*az^18*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^12*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^2*ay^12*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^2*ay^12*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^2*ay^12*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^2*ay^12*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^2*ay^12*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^12*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^12*az^16*cos(a/2)^2*sin(a/2)^30+823680*ax^2*ay^14*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^2*ay^14*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^2*ay^14*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^2*ay^14*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^2*ay^14*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^2*ay^14*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^2*ay^14*az^14*cos(a/2)^2*sin(a/2)^30+720720*ax^2*ay^16*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^2*ay^16*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^2*ay^16*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^2*ay^16*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^2*ay^16*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^2*ay^16*az^12*cos(a/2)^2*sin(a/2)^30+480480*ax^2*ay^18*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^2*ay^18*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^2*ay^18*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^2*ay^18*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^2*ay^18*az^10*cos(a/2)^2*sin(a/2)^30+240240*ax^2*ay^20*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^2*ay^20*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^2*ay^20*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^2*ay^20*az^8*cos(a/2)^2*sin(a/2)^30+87360*ax^2*ay^22*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^2*ay^22*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^2*ay^22*az^6*cos(a/2)^2*sin(a/2)^30+21840*ax^2*ay^24*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^2*ay^24*az^4*cos(a/2)^2*sin(a/2)^30+3360*ax^2*ay^26*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^2*az^2*cos(a/2)^24*sin(a/2)^8+131040*ax^4*ay^2*az^4*cos(a/2)^22*sin(a/2)^10+480480*ax^4*ay^2*az^6*cos(a/2)^20*sin(a/2)^12+1201200*ax^4*ay^2*az^8*cos(a/2)^18*sin(a/2)^14+2162160*ax^4*ay^2*az^10*cos(a/2)^16*sin(a/2)^16+2882880*ax^4*ay^2*az^12*cos(a/2)^14*sin(a/2)^18+2882880*ax^4*ay^2*az^14*cos(a/2)^12*sin(a/2)^20+2162160*ax^4*ay^2*az^16*cos(a/2)^10*sin(a/2)^22+1201200*ax^4*ay^2*az^18*cos(a/2)^8*sin(a/2)^24+480480*ax^4*ay^2*az^20*cos(a/2)^6*sin(a/2)^26+131040*ax^4*ay^2*az^22*cos(a/2)^4*sin(a/2)^28+21840*ax^4*ay^2*az^24*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^4*az^2*cos(a/2)^22*sin(a/2)^10+720720*ax^4*ay^4*az^4*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^4*az^6*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^4*az^8*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^4*az^10*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^4*az^12*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^4*az^14*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^4*az^16*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^4*az^18*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^4*az^20*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^4*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^6*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^4*ay^6*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^4*ay^6*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^6*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^6*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^6*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^6*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^6*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^6*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^6*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^8*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^4*ay^8*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^4*ay^8*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^4*ay^8*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^8*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^8*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^8*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^8*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^8*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^10*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^4*ay^10*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^4*ay^10*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^4*ay^10*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^4*ay^10*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^10*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^10*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^10*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^12*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^4*ay^12*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^4*ay^12*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^4*ay^12*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^4*ay^12*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^4*ay^12*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^12*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^4*ay^14*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^4*ay^14*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^4*ay^14*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^4*ay^14*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^4*ay^14*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^4*ay^14*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^4*ay^16*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^4*ay^16*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^4*ay^16*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^4*ay^16*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^4*ay^16*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^4*ay^18*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^4*ay^18*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^4*ay^18*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^4*ay^18*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^4*ay^20*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^4*ay^20*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^4*ay^20*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^4*ay^22*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^4*ay^22*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^4*ay^24*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^2*az^2*cos(a/2)^22*sin(a/2)^10+480480*ax^6*ay^2*az^4*cos(a/2)^20*sin(a/2)^12+1601600*ax^6*ay^2*az^6*cos(a/2)^18*sin(a/2)^14+3603600*ax^6*ay^2*az^8*cos(a/2)^16*sin(a/2)^16+5765760*ax^6*ay^2*az^10*cos(a/2)^14*sin(a/2)^18+6726720*ax^6*ay^2*az^12*cos(a/2)^12*sin(a/2)^20+5765760*ax^6*ay^2*az^14*cos(a/2)^10*sin(a/2)^22+3603600*ax^6*ay^2*az^16*cos(a/2)^8*sin(a/2)^24+1601600*ax^6*ay^2*az^18*cos(a/2)^6*sin(a/2)^26+480480*ax^6*ay^2*az^20*cos(a/2)^4*sin(a/2)^28+87360*ax^6*ay^2*az^22*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^4*az^2*cos(a/2)^20*sin(a/2)^12+2402400*ax^6*ay^4*az^4*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^4*az^6*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^4*az^8*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^4*az^10*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^4*az^12*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^4*az^14*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^4*az^16*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^4*az^18*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^4*az^20*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^6*az^2*cos(a/2)^18*sin(a/2)^14+7207200*ax^6*ay^6*az^4*cos(a/2)^16*sin(a/2)^16+19219200*ax^6*ay^6*az^6*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^6*az^8*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^6*az^10*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^6*az^12*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^6*az^14*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^6*az^16*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^6*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^8*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^6*ay^8*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^6*ay^8*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^6*ay^8*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^8*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^8*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^8*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^8*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^10*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^6*ay^10*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^6*ay^10*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^6*ay^10*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^6*ay^10*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^10*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^10*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^6*ay^12*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^6*ay^12*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^6*ay^12*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^6*ay^12*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^6*ay^12*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^6*ay^12*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^6*ay^14*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^6*ay^14*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^6*ay^14*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^6*ay^14*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^6*ay^14*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^6*ay^16*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^6*ay^16*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^6*ay^16*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^6*ay^16*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^6*ay^18*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^6*ay^18*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^6*ay^18*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^6*ay^20*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^6*ay^20*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^6*ay^22*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^2*az^2*cos(a/2)^20*sin(a/2)^12+1201200*ax^8*ay^2*az^4*cos(a/2)^18*sin(a/2)^14+3603600*ax^8*ay^2*az^6*cos(a/2)^16*sin(a/2)^16+7207200*ax^8*ay^2*az^8*cos(a/2)^14*sin(a/2)^18+10090080*ax^8*ay^2*az^10*cos(a/2)^12*sin(a/2)^20+10090080*ax^8*ay^2*az^12*cos(a/2)^10*sin(a/2)^22+7207200*ax^8*ay^2*az^14*cos(a/2)^8*sin(a/2)^24+3603600*ax^8*ay^2*az^16*cos(a/2)^6*sin(a/2)^26+1201200*ax^8*ay^2*az^18*cos(a/2)^4*sin(a/2)^28+240240*ax^8*ay^2*az^20*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^4*az^2*cos(a/2)^18*sin(a/2)^14+5405400*ax^8*ay^4*az^4*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^4*az^6*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^4*az^8*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^4*az^10*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^4*az^12*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^4*az^14*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^4*az^16*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^4*az^18*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^6*az^2*cos(a/2)^16*sin(a/2)^16+14414400*ax^8*ay^6*az^4*cos(a/2)^14*sin(a/2)^18+33633600*ax^8*ay^6*az^6*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^6*az^8*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^6*az^10*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^6*az^12*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^6*az^14*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^6*az^16*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^8*az^2*cos(a/2)^14*sin(a/2)^18+25225200*ax^8*ay^8*az^4*cos(a/2)^12*sin(a/2)^20+50450400*ax^8*ay^8*az^6*cos(a/2)^10*sin(a/2)^22+63063000*ax^8*ay^8*az^8*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^8*az^10*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^8*az^12*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^8*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^10*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^8*ay^10*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^8*ay^10*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^8*ay^10*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^8*ay^10*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^10*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^8*ay^12*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^8*ay^12*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^8*ay^12*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^8*ay^12*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^8*ay^12*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^8*ay^14*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^8*ay^14*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^8*ay^14*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^8*ay^14*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^8*ay^16*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^8*ay^16*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^8*ay^16*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^8*ay^18*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^8*ay^18*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^8*ay^20*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^2*az^2*cos(a/2)^18*sin(a/2)^14+2162160*ax^10*ay^2*az^4*cos(a/2)^16*sin(a/2)^16+5765760*ax^10*ay^2*az^6*cos(a/2)^14*sin(a/2)^18+10090080*ax^10*ay^2*az^8*cos(a/2)^12*sin(a/2)^20+12108096*ax^10*ay^2*az^10*cos(a/2)^10*sin(a/2)^22+10090080*ax^10*ay^2*az^12*cos(a/2)^8*sin(a/2)^24+5765760*ax^10*ay^2*az^14*cos(a/2)^6*sin(a/2)^26+2162160*ax^10*ay^2*az^16*cos(a/2)^4*sin(a/2)^28+480480*ax^10*ay^2*az^18*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^4*az^2*cos(a/2)^16*sin(a/2)^16+8648640*ax^10*ay^4*az^4*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^4*az^6*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^4*az^8*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^4*az^10*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^4*az^12*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^4*az^14*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^4*az^16*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^6*az^2*cos(a/2)^14*sin(a/2)^18+20180160*ax^10*ay^6*az^4*cos(a/2)^12*sin(a/2)^20+40360320*ax^10*ay^6*az^6*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^6*az^8*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^6*az^10*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^6*az^12*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^6*az^14*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^8*az^2*cos(a/2)^12*sin(a/2)^20+30270240*ax^10*ay^8*az^4*cos(a/2)^10*sin(a/2)^22+50450400*ax^10*ay^8*az^6*cos(a/2)^8*sin(a/2)^24+50450400*ax^10*ay^8*az^8*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^8*az^10*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^8*az^12*cos(a/2)^2*sin(a/2)^30+12108096*ax^10*ay^10*az^2*cos(a/2)^10*sin(a/2)^22+30270240*ax^10*ay^10*az^4*cos(a/2)^8*sin(a/2)^24+40360320*ax^10*ay^10*az^6*cos(a/2)^6*sin(a/2)^26+30270240*ax^10*ay^10*az^8*cos(a/2)^4*sin(a/2)^28+12108096*ax^10*ay^10*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^10*ay^12*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^10*ay^12*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^10*ay^12*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^10*ay^12*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^10*ay^14*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^10*ay^14*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^10*ay^14*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^10*ay^16*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^10*ay^16*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^10*ay^18*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^2*az^2*cos(a/2)^16*sin(a/2)^16+2882880*ax^12*ay^2*az^4*cos(a/2)^14*sin(a/2)^18+6726720*ax^12*ay^2*az^6*cos(a/2)^12*sin(a/2)^20+10090080*ax^12*ay^2*az^8*cos(a/2)^10*sin(a/2)^22+10090080*ax^12*ay^2*az^10*cos(a/2)^8*sin(a/2)^24+6726720*ax^12*ay^2*az^12*cos(a/2)^6*sin(a/2)^26+2882880*ax^12*ay^2*az^14*cos(a/2)^4*sin(a/2)^28+720720*ax^12*ay^2*az^16*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^4*az^2*cos(a/2)^14*sin(a/2)^18+10090080*ax^12*ay^4*az^4*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^4*az^6*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^4*az^8*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^4*az^10*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^4*az^12*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^4*az^14*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^6*az^2*cos(a/2)^12*sin(a/2)^20+20180160*ax^12*ay^6*az^4*cos(a/2)^10*sin(a/2)^22+33633600*ax^12*ay^6*az^6*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^6*az^8*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^6*az^10*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^6*az^12*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^8*az^2*cos(a/2)^10*sin(a/2)^22+25225200*ax^12*ay^8*az^4*cos(a/2)^8*sin(a/2)^24+33633600*ax^12*ay^8*az^6*cos(a/2)^6*sin(a/2)^26+25225200*ax^12*ay^8*az^8*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^8*az^10*cos(a/2)^2*sin(a/2)^30+10090080*ax^12*ay^10*az^2*cos(a/2)^8*sin(a/2)^24+20180160*ax^12*ay^10*az^4*cos(a/2)^6*sin(a/2)^26+20180160*ax^12*ay^10*az^6*cos(a/2)^4*sin(a/2)^28+10090080*ax^12*ay^10*az^8*cos(a/2)^2*sin(a/2)^30+6726720*ax^12*ay^12*az^2*cos(a/2)^6*sin(a/2)^26+10090080*ax^12*ay^12*az^4*cos(a/2)^4*sin(a/2)^28+6726720*ax^12*ay^12*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^12*ay^14*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^12*ay^14*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^12*ay^16*az^2*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^2*az^2*cos(a/2)^14*sin(a/2)^18+2882880*ax^14*ay^2*az^4*cos(a/2)^12*sin(a/2)^20+5765760*ax^14*ay^2*az^6*cos(a/2)^10*sin(a/2)^22+7207200*ax^14*ay^2*az^8*cos(a/2)^8*sin(a/2)^24+5765760*ax^14*ay^2*az^10*cos(a/2)^6*sin(a/2)^26+2882880*ax^14*ay^2*az^12*cos(a/2)^4*sin(a/2)^28+823680*ax^14*ay^2*az^14*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^4*az^2*cos(a/2)^12*sin(a/2)^20+8648640*ax^14*ay^4*az^4*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^4*az^6*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^4*az^8*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^4*az^10*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^4*az^12*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^6*az^2*cos(a/2)^10*sin(a/2)^22+14414400*ax^14*ay^6*az^4*cos(a/2)^8*sin(a/2)^24+19219200*ax^14*ay^6*az^6*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^6*az^8*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^6*az^10*cos(a/2)^2*sin(a/2)^30+7207200*ax^14*ay^8*az^2*cos(a/2)^8*sin(a/2)^24+14414400*ax^14*ay^8*az^4*cos(a/2)^6*sin(a/2)^26+14414400*ax^14*ay^8*az^6*cos(a/2)^4*sin(a/2)^28+7207200*ax^14*ay^8*az^8*cos(a/2)^2*sin(a/2)^30+5765760*ax^14*ay^10*az^2*cos(a/2)^6*sin(a/2)^26+8648640*ax^14*ay^10*az^4*cos(a/2)^4*sin(a/2)^28+5765760*ax^14*ay^10*az^6*cos(a/2)^2*sin(a/2)^30+2882880*ax^14*ay^12*az^2*cos(a/2)^4*sin(a/2)^28+2882880*ax^14*ay^12*az^4*cos(a/2)^2*sin(a/2)^30+823680*ax^14*ay^14*az^2*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^2*az^2*cos(a/2)^12*sin(a/2)^20+2162160*ax^16*ay^2*az^4*cos(a/2)^10*sin(a/2)^22+3603600*ax^16*ay^2*az^6*cos(a/2)^8*sin(a/2)^24+3603600*ax^16*ay^2*az^8*cos(a/2)^6*sin(a/2)^26+2162160*ax^16*ay^2*az^10*cos(a/2)^4*sin(a/2)^28+720720*ax^16*ay^2*az^12*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^4*az^2*cos(a/2)^10*sin(a/2)^22+5405400*ax^16*ay^4*az^4*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^4*az^6*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^4*az^8*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^4*az^10*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^6*az^2*cos(a/2)^8*sin(a/2)^24+7207200*ax^16*ay^6*az^4*cos(a/2)^6*sin(a/2)^26+7207200*ax^16*ay^6*az^6*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^6*az^8*cos(a/2)^2*sin(a/2)^30+3603600*ax^16*ay^8*az^2*cos(a/2)^6*sin(a/2)^26+5405400*ax^16*ay^8*az^4*cos(a/2)^4*sin(a/2)^28+3603600*ax^16*ay^8*az^6*cos(a/2)^2*sin(a/2)^30+2162160*ax^16*ay^10*az^2*cos(a/2)^4*sin(a/2)^28+2162160*ax^16*ay^10*az^4*cos(a/2)^2*sin(a/2)^30+720720*ax^16*ay^12*az^2*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^2*az^2*cos(a/2)^10*sin(a/2)^22+1201200*ax^18*ay^2*az^4*cos(a/2)^8*sin(a/2)^24+1601600*ax^18*ay^2*az^6*cos(a/2)^6*sin(a/2)^26+1201200*ax^18*ay^2*az^8*cos(a/2)^4*sin(a/2)^28+480480*ax^18*ay^2*az^10*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^4*az^2*cos(a/2)^8*sin(a/2)^24+2402400*ax^18*ay^4*az^4*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^4*az^6*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^4*az^8*cos(a/2)^2*sin(a/2)^30+1601600*ax^18*ay^6*az^2*cos(a/2)^6*sin(a/2)^26+2402400*ax^18*ay^6*az^4*cos(a/2)^4*sin(a/2)^28+1601600*ax^18*ay^6*az^6*cos(a/2)^2*sin(a/2)^30+1201200*ax^18*ay^8*az^2*cos(a/2)^4*sin(a/2)^28+1201200*ax^18*ay^8*az^4*cos(a/2)^2*sin(a/2)^30+480480*ax^18*ay^10*az^2*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^2*az^2*cos(a/2)^8*sin(a/2)^24+480480*ax^20*ay^2*az^4*cos(a/2)^6*sin(a/2)^26+480480*ax^20*ay^2*az^6*cos(a/2)^4*sin(a/2)^28+240240*ax^20*ay^2*az^8*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^4*az^2*cos(a/2)^6*sin(a/2)^26+720720*ax^20*ay^4*az^4*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^4*az^6*cos(a/2)^2*sin(a/2)^30+480480*ax^20*ay^6*az^2*cos(a/2)^4*sin(a/2)^28+480480*ax^20*ay^6*az^4*cos(a/2)^2*sin(a/2)^30+240240*ax^20*ay^8*az^2*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^2*az^2*cos(a/2)^6*sin(a/2)^26+131040*ax^22*ay^2*az^4*cos(a/2)^4*sin(a/2)^28+87360*ax^22*ay^2*az^6*cos(a/2)^2*sin(a/2)^30+131040*ax^22*ay^4*az^2*cos(a/2)^4*sin(a/2)^28+131040*ax^22*ay^4*az^4*cos(a/2)^2*sin(a/2)^30+87360*ax^22*ay^6*az^2*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^2*az^2*cos(a/2)^4*sin(a/2)^28+21840*ax^24*ay^2*az^4*cos(a/2)^2*sin(a/2)^30+21840*ax^24*ay^4*az^2*cos(a/2)^2*sin(a/2)^30+3360*ax^26*ay^2*az^2*cos(a/2)^2*sin(a/2)^30)}}
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestEqualityModule">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>14</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>14</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>14</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,46ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>14</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,48ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestABvsBA">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
MathildaLib.SwapOperator: (+a+b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
MathildaLib.SwapOperator: (+a+b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
MathildaLib.SwapOperator: (+a+b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+b+a)
========
MathildaLib.SwapOperator: (+a+b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDuplicates">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (+(*2*a))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (+(*2*a))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (+(*2*a))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.AddOperator: (+(*2*a))
MathildaLib.MultiplyOneOperator: (*2*a)
MathildaLib.SwapOperator: (*a*2)
========
MathildaLib.SwapOperator: (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestInvertedInequality">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*b*a)
========
MathildaLib.SwapOperator: (/b*a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*30)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*30)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*30)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*30)
MathildaLib.MultiplyOperator: (*2*15)
MathildaLib.SwapOperator: (*15*2)
MathildaLib.MultiplyOperator: (*10*3)
MathildaLib.SwapOperator: (*3*10)
MathildaLib.SwapOperator: (*2*3*5)
MathildaLib.MultiplyOperator: (*6*5)
MathildaLib.SwapOperator: (*5*6)
MathildaLib.SwapOperator: (*3*2*5)
MathildaLib.SwapOperator: (*3*5*2)
MathildaLib.SwapOperator: (*5*3*2)
MathildaLib.SwapOperator: (*5*2*3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiplyNumbers">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
MathildaLib.MultiplyOperator: (*1*2*12)
MathildaLib.MultiplyOperator: (*1*24)
MathildaLib.SwapOperator: (*24*1)
MathildaLib.MultiplyOneOperator: (*2*12)
MathildaLib.SwapOperator: (*12*2)
MathildaLib.SwapOperator: (*1*12*2)
MathildaLib.SwapOperator: (*2*12*1)
MathildaLib.SwapOperator: (*2*1*12)
MathildaLib.SwapOperator: (*12*1*2)
MathildaLib.SwapOperator: (*12*2*1)
MathildaLib.MultiplyOperator: (*1*6*4)
MathildaLib.MultiplyOneOperator: (*6*4)
MathildaLib.SwapOperator: (*4*6)
MathildaLib.SwapOperator: (*1*4*6)
MathildaLib.SwapOperator: (*4*1*6)
MathildaLib.SwapOperator: (*4*6*1)
MathildaLib.SwapOperator: (*6*4*1)
MathildaLib.SwapOperator: (*6*1*4)
MathildaLib.MultiplyOneOperator: (*2*3*4)
MathildaLib.SwapOperator: (*2*4*3)
MathildaLib.MultiplyOperator: (*8*3)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.SwapOperator: (*3*4*2)
MathildaLib.SwapOperator: (*3*2*4)
MathildaLib.SwapOperator: (*4*2*3)
MathildaLib.SwapOperator: (*4*3*2)
MathildaLib.SwapOperator: (*1*2*4*3)
MathildaLib.MultiplyOperator: (*1*8*3)
MathildaLib.SwapOperator: (*1*3*8)
MathildaLib.SwapOperator: (*3*1*8)
MathildaLib.SwapOperator: (*3*8*1)
MathildaLib.SwapOperator: (*8*3*1)
MathildaLib.SwapOperator: (*8*1*3)
MathildaLib.SwapOperator: (*1*3*4*2)
MathildaLib.SwapOperator: (*1*3*2*4)
MathildaLib.SwapOperator: (*1*4*2*3)
MathildaLib.SwapOperator: (*1*4*3*2)
MathildaLib.SwapOperator: (*2*4*3*1)
MathildaLib.SwapOperator: (*2*1*3*4)
MathildaLib.SwapOperator: (*2*1*4*3)
MathildaLib.SwapOperator: (*2*3*4*1)
MathildaLib.SwapOperator: (*2*3*1*4)
MathildaLib.SwapOperator: (*2*4*1*3)
MathildaLib.SwapOperator: (*3*4*1*2)
MathildaLib.SwapOperator: (*3*1*4*2)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*3*2*1*4)
MathildaLib.SwapOperator: (*3*2*4*1)
MathildaLib.SwapOperator: (*3*4*2*1)
MathildaLib.SwapOperator: (*4*3*2*1)
MathildaLib.SwapOperator: (*4*1*2*3)
MathildaLib.SwapOperator: (*4*1*3*2)
MathildaLib.SwapOperator: (*4*2*3*1)
MathildaLib.SwapOperator: (*4*2*1*3)
MathildaLib.SwapOperator: (*4*3*1*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNegativeVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.NegativeVariableOperator: (-a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.NegativeVariableOperator: (-a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.NegativeVariableOperator: (-a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.NegativeVariableOperator: (-a)
MathildaLib.SwapOperator: (*a*-1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNested1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*c)+(*b*c)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*c)+(*b*c)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*c)+(*b*c)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*c)+(*b*c)))
MathildaLib.SumOperator: (+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (*c*(+a+b))
MathildaLib.MultiplyOperator: (*(+(*c*a)+(*c*b)))
MathildaLib.SwapOperator: (*c*(+b+a))
MathildaLib.MultiplyOperator: (*(+(*c*b)+(*c*a)))
MathildaLib.SwapOperator: (*(+b+a)*c)
MathildaLib.MultiplyOperator: (*(+(*b*c)+(*a*c)))
========
MathildaLib.SwapOperator: (+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNested2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*2)))
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
========
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*2)))
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
========
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*2)))
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
========
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*2)))
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*b*a))
MathildaLib.SwapOperator: (+(*a*2)+(*b*a))
MathildaLib.SwapOperator: (+(*b*a)+(*a*2))
MathildaLib.SwapOperator: (+(*a*b)+(*a*2))
MathildaLib.SwapOperator: (+(*a*b)+(*2*a))
MathildaLib.SwapOperator: (+(*b*a)+(*2*a))
MathildaLib.SwapOperator: (*a*(+2+b))
MathildaLib.MultiplyOperator: (*(+(*a*2)+(*a*b)))
MathildaLib.SwapOperator: (*(+2+b)*a)
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*b*a)))
MathildaLib.SwapOperator: (*(+b+2)*a)
MathildaLib.MultiplyOperator: (*(+(*b*a)+(*2*a)))
========
MathildaLib.SwapOperator: (+(*a*2)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*b*a))
MathildaLib.SwapOperator: (+(*a*2)+(*b*a))
MathildaLib.SwapOperator: (+(*b*a)+(*a*2))
MathildaLib.SwapOperator: (+(*b*a)+(*2*a))
MathildaLib.SwapOperator: (+(*a*b)+(*2*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNested3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*c*d)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*c*d)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*c*d)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,03ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*c*d)))
MathildaLib.SumOperator: (+(*a*b)+(*a*c*d))
MathildaLib.SwapOperator: (+(*a*b)+(*a*d*c))
MathildaLib.SwapOperator: (+(*a*b)+(*c*d*a))
MathildaLib.SwapOperator: (+(*a*b)+(*c*a*d))
MathildaLib.SwapOperator: (+(*a*b)+(*d*a*c))
MathildaLib.SwapOperator: (+(*a*b)+(*d*c*a))
MathildaLib.SwapOperator: (+(*b*a)+(*d*c*a))
MathildaLib.SwapOperator: (+(*b*a)+(*a*c*d))
MathildaLib.SwapOperator: (+(*b*a)+(*a*d*c))
MathildaLib.SwapOperator: (+(*b*a)+(*c*d*a))
MathildaLib.SwapOperator: (+(*b*a)+(*c*a*d))
MathildaLib.SwapOperator: (+(*b*a)+(*d*a*c))
MathildaLib.SwapOperator: (+(*d*a*c)+(*b*a))
MathildaLib.SwapOperator: (+(*a*d*c)+(*b*a))
MathildaLib.SwapOperator: (+(*a*c*d)+(*b*a))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*d*c)+(*a*b))
MathildaLib.SwapOperator: (+(*c*d*a)+(*a*b))
MathildaLib.SwapOperator: (+(*c*a*d)+(*a*b))
MathildaLib.SwapOperator: (+(*c*a*d)+(*b*a))
MathildaLib.SwapOperator: (+(*c*d*a)+(*b*a))
MathildaLib.SwapOperator: (+(*d*c*a)+(*b*a))
MathildaLib.SwapOperator: (+(*d*c*a)+(*a*b))
MathildaLib.SwapOperator: (+(*d*a*c)+(*a*b))
MathildaLib.SwapOperator: (*a*(+b+(*d*c)))
MathildaLib.MultiplyOperator: (*(+(*a*b)+(*a*d*c)))
MathildaLib.SwapOperator: (*a*(+(*d*c)+b))
MathildaLib.MultiplyOperator: (*(+(*a*d*c)+(*a*b)))
MathildaLib.SwapOperator: (*a*(+(*c*d)+b))
MathildaLib.MultiplyOperator: (*(+(*a*c*d)+(*a*b)))
MathildaLib.SwapOperator: (*(+(*c*d)+b)*a)
MathildaLib.MultiplyOperator: (*(+(*c*d*a)+(*b*a)))
MathildaLib.SwapOperator: (*(+b+(*c*d))*a)
MathildaLib.MultiplyOperator: (*(+(*b*a)+(*c*d*a)))
MathildaLib.SwapOperator: (*(+b+(*d*c))*a)
MathildaLib.MultiplyOperator: (*(+(*b*a)+(*d*c*a)))
MathildaLib.SwapOperator: (*(+(*d*c)+b)*a)
MathildaLib.MultiplyOperator: (*(+(*d*c*a)+(*b*a)))
========
MathildaLib.SwapOperator: (+(*a*b)+(*a*d*c))
MathildaLib.SwapOperator: (+(*a*b)+(*c*d*a))
MathildaLib.SwapOperator: (+(*a*b)+(*c*a*d))
MathildaLib.SwapOperator: (+(*a*b)+(*d*a*c))
MathildaLib.SwapOperator: (+(*a*b)+(*d*c*a))
MathildaLib.SwapOperator: (+(*b*a)+(*d*c*a))
MathildaLib.SwapOperator: (+(*b*a)+(*a*c*d))
MathildaLib.SwapOperator: (+(*b*a)+(*a*d*c))
MathildaLib.SwapOperator: (+(*b*a)+(*c*d*a))
MathildaLib.SwapOperator: (+(*b*a)+(*c*a*d))
MathildaLib.SwapOperator: (+(*b*a)+(*d*a*c))
MathildaLib.SwapOperator: (+(*d*a*c)+(*b*a))
MathildaLib.SwapOperator: (+(*a*d*c)+(*b*a))
MathildaLib.SwapOperator: (+(*a*c*d)+(*b*a))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*d*c)+(*a*b))
MathildaLib.SwapOperator: (+(*c*d*a)+(*a*b))
MathildaLib.SwapOperator: (+(*c*a*d)+(*a*b))
MathildaLib.SwapOperator: (+(*c*a*d)+(*b*a))
MathildaLib.SwapOperator: (+(*c*d*a)+(*b*a))
MathildaLib.SwapOperator: (+(*d*c*a)+(*b*a))
MathildaLib.SwapOperator: (+(*d*c*a)+(*a*b))
MathildaLib.SwapOperator: (+(*d*a*c)+(*a*b))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSumNumbers">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+10)
MathildaLib.SwapOperator: (+1+2+4+3)
MathildaLib.SwapOperator: (+1+3+4+2)
MathildaLib.SwapOperator: (+1+3+2+4)
MathildaLib.SwapOperator: (+1+4+2+3)
MathildaLib.SwapOperator: (+1+4+3+2)
MathildaLib.SwapOperator: (+2+4+3+1)
MathildaLib.SwapOperator: (+2+1+3+4)
MathildaLib.SwapOperator: (+2+1+4+3)
MathildaLib.SwapOperator: (+2+3+4+1)
MathildaLib.SwapOperator: (+2+3+1+4)
MathildaLib.SwapOperator: (+2+4+1+3)
MathildaLib.SwapOperator: (+3+4+1+2)
MathildaLib.SwapOperator: (+3+1+4+2)
MathildaLib.SwapOperator: (+3+1+2+4)
MathildaLib.SwapOperator: (+3+2+1+4)
MathildaLib.SwapOperator: (+3+2+4+1)
MathildaLib.SwapOperator: (+3+4+2+1)
MathildaLib.SwapOperator: (+4+3+2+1)
MathildaLib.SwapOperator: (+4+1+2+3)
MathildaLib.SwapOperator: (+4+1+3+2)
MathildaLib.SwapOperator: (+4+2+3+1)
MathildaLib.SwapOperator: (+4+2+1+3)
MathildaLib.SwapOperator: (+4+3+1+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableCancellingProduct">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (*1)
MathildaLib.SwapOperator: (/a*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableCancellingSum">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.CancelVariableOperator: (+0)
MathildaLib.SwapOperator: (-a+a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestZeroAdd">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroAddOperator: (+a)
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroAddOperator: (+a)
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroAddOperator: (+a)
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroAddOperator: (+a)
MathildaLib.SwapOperator: (+0+a)
========
========
MathildaLib.ZeroMultiplyOperator: 0
MathildaLib.SwapOperator: (*0*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestZeroMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroMultiplyOperator: 0
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
MathildaLib.ZeroAddOperator: (+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroMultiplyOperator: 0
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
MathildaLib.ZeroAddOperator: (+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroMultiplyOperator: 0
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
MathildaLib.ZeroAddOperator: (+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroMultiplyOperator: 0
MathildaLib.SwapOperator: (*0*a)
========
========
MathildaLib.ZeroMultiplyOperator: 0
MathildaLib.SwapOperator: (*0*a)
========
MathildaLib.ZeroAddOperator: (+a)
MathildaLib.SwapOperator: (+0+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestMultiply">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>14</Passed>
              <Errors>2</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>14</Passed>
              <Errors>2</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>14</Passed>
              <Errors>2</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>14</Passed>
              <Errors>2</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestMultiply1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
MathildaLib.SwapOperator: (*3*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:35</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
MathildaLib.SwapOperator: (*3*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:09:55</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
MathildaLib.LiftOperator: 6
MathildaLib.SwapOperator: (*3*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:06</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 6
MathildaLib.ScalarProductOperator: 6
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*12)+(*2*3*4))
MathildaLib.LiftOperator: (+12+(*2*3*4))
MathildaLib.ScalarProductOperator: (+12+(*24))
MathildaLib.LiftOperator: (+12+24)
MathildaLib.SumOperator: (+36)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*12)+(*2*3*4))
MathildaLib.LiftOperator: (+12+(*2*3*4))
MathildaLib.ScalarProductOperator: (+12+(*24))
MathildaLib.LiftOperator: (+12+24)
MathildaLib.SumOperator: (+36)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*12)+(*2*3*4))
MathildaLib.LiftOperator: (+12+(*2*3*4))
MathildaLib.ScalarProductOperator: (+12+(*24))
MathildaLib.LiftOperator: (+12+24)
MathildaLib.SumOperator: (+36)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,19ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*12)+(*2*3*4))
MathildaLib.LiftOperator: (+12+(*2*3*4))
MathildaLib.ScalarProductOperator: (+12+(*24))
MathildaLib.LiftOperator: (+12+24)
MathildaLib.SumOperator: (+36)
MathildaLib.SwapOperator: (+24+12)
MathildaLib.SwapOperator: (+(*24)+12)
MathildaLib.MultiplyOperator: (+12+(*2*12))
MathildaLib.SwapOperator: (+12+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+12)
MathildaLib.SwapOperator: (+(*2*12)+12)
MathildaLib.MultiplyOperator: (+12+(*6*4))
MathildaLib.SwapOperator: (+12+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+12)
MathildaLib.SwapOperator: (+(*6*4)+12)
MathildaLib.SwapOperator: (+12+(*2*4*3))
MathildaLib.MultiplyOperator: (+12+(*8*3))
MathildaLib.SwapOperator: (+12+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+12)
MathildaLib.SwapOperator: (+(*8*3)+12)
MathildaLib.SwapOperator: (+12+(*3*4*2))
MathildaLib.SwapOperator: (+12+(*3*2*4))
MathildaLib.SwapOperator: (+12+(*4*2*3))
MathildaLib.SwapOperator: (+12+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*2)+12)
MathildaLib.SwapOperator: (+(*2*3*4)+12)
MathildaLib.SwapOperator: (+(*2*4*3)+12)
MathildaLib.SwapOperator: (+(*3*4*2)+12)
MathildaLib.SwapOperator: (+(*3*2*4)+12)
MathildaLib.SwapOperator: (+(*4*2*3)+12)
MathildaLib.ScalarProductOperator: (+(*12)+(*24))
MathildaLib.LiftOperator: (+(*12)+24)
MathildaLib.SwapOperator: (+24+(*12))
MathildaLib.SwapOperator: (+(*24)+(*12))
MathildaLib.MultiplyOperator: (+(*12)+(*2*12))
MathildaLib.SwapOperator: (+(*12)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12))
MathildaLib.MultiplyOperator: (+(*12)+(*6*4))
MathildaLib.SwapOperator: (+(*12)+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+(*12))
MathildaLib.SwapOperator: (+(*6*4)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*12)+(*8*3))
MathildaLib.SwapOperator: (+(*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*12))
MathildaLib.SwapOperator: (+(*8*3)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*3*4*2))
MathildaLib.SwapOperator: (+(*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12)+(*4*2*3))
MathildaLib.SwapOperator: (+(*12)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*2)+(*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12))
MathildaLib.SwapOperator: (+(*2*4*3)+(*12))
MathildaLib.SwapOperator: (+(*3*4*2)+(*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*12))
MathildaLib.MultiplyOperator: (+(*1*12)+(*2*3*4))
MathildaLib.ScalarProductOperator: (+(*1*12)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*1*12))
MathildaLib.LiftOperator: (+24+(*1*12))
MathildaLib.SwapOperator: (+24+(*12*1))
MathildaLib.SwapOperator: (+(*12*1)+24)
MathildaLib.SwapOperator: (+(*1*12)+24)
MathildaLib.SwapOperator: (+(*24)+(*12*1))
MathildaLib.SwapOperator: (+(*12*1)+(*24))
MathildaLib.MultiplyOperator: (+(*1*12)+(*2*12))
MathildaLib.SwapOperator: (+(*1*12)+(*12*2))
MathildaLib.SwapOperator: (+(*12*1)+(*12*2))
MathildaLib.SwapOperator: (+(*12*1)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12*1))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*12*2)+(*1*12))
MathildaLib.SwapOperator: (+(*12*2)+(*12*1))
MathildaLib.MultiplyOperator: (+(*1*12)+(*6*4))
MathildaLib.SwapOperator: (+(*1*12)+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+(*1*12))
MathildaLib.SwapOperator: (+(*4*6)+(*12*1))
MathildaLib.SwapOperator: (+(*6*4)+(*12*1))
MathildaLib.SwapOperator: (+(*6*4)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*6*4))
MathildaLib.SwapOperator: (+(*12*1)+(*4*6))
MathildaLib.SwapOperator: (+(*1*12)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*1*12)+(*8*3))
MathildaLib.SwapOperator: (+(*1*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*1*12))
MathildaLib.SwapOperator: (+(*3*8)+(*12*1))
MathildaLib.SwapOperator: (+(*8*3)+(*12*1))
MathildaLib.SwapOperator: (+(*8*3)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*8*3))
MathildaLib.SwapOperator: (+(*12*1)+(*3*8))
MathildaLib.SwapOperator: (+(*1*12)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*12)+(*4*2*3))
MathildaLib.SwapOperator: (+(*1*12)+(*4*3*2))
MathildaLib.SwapOperator: (+(*12*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*12*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*12*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*12*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*12*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*12*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*12*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*12))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*12*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*12*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*12))
MathildaLib.MultiplyOneOperator: (+(*3*4)+(*2*3*4))
MathildaLib.ScalarProductOperator: (+(*3*4)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*3*4))
MathildaLib.LiftOperator: (+24+(*3*4))
MathildaLib.SwapOperator: (+24+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+24)
MathildaLib.SwapOperator: (+(*3*4)+24)
MathildaLib.SwapOperator: (+(*24)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*24))
MathildaLib.MultiplyOperator: (+(*3*4)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*3*4))
MathildaLib.SwapOperator: (+(*12*2)+(*4*3))
MathildaLib.MultiplyOperator: (+(*3*4)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3)+(*6*4))
MathildaLib.SwapOperator: (+(*6*4)+(*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4))
MathildaLib.SwapOperator: (+(*6*4)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*3*4)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*3*8))
MathildaLib.SwapOperator: (+(*4*3)+(*8*3))
MathildaLib.SwapOperator: (+(*8*3)+(*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*3))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4))
MathildaLib.ScalarProductOperator: (+(*1*3*4)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*1*3*4))
MathildaLib.LiftOperator: (+24+(*1*3*4))
MathildaLib.SwapOperator: (+24+(*1*4*3))
MathildaLib.SwapOperator: (+24+(*3*4*1))
MathildaLib.SwapOperator: (+24+(*3*1*4))
MathildaLib.SwapOperator: (+24+(*4*1*3))
MathildaLib.SwapOperator: (+24+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*3*1)+24)
MathildaLib.SwapOperator: (+(*1*3*4)+24)
MathildaLib.SwapOperator: (+(*1*4*3)+24)
MathildaLib.SwapOperator: (+(*3*4*1)+24)
MathildaLib.SwapOperator: (+(*3*1*4)+24)
MathildaLib.SwapOperator: (+(*4*1*3)+24)
MathildaLib.SwapOperator: (+(*24)+(*1*4*3))
MathildaLib.SwapOperator: (+(*24)+(*3*4*1))
MathildaLib.SwapOperator: (+(*24)+(*3*1*4))
MathildaLib.SwapOperator: (+(*24)+(*4*1*3))
MathildaLib.SwapOperator: (+(*24)+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*3*1)+(*24))
MathildaLib.SwapOperator: (+(*3*4*1)+(*24))
MathildaLib.SwapOperator: (+(*1*4*3)+(*24))
MathildaLib.SwapOperator: (+(*4*1*3)+(*24))
MathildaLib.SwapOperator: (+(*3*1*4)+(*24))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*12)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*12)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*12)+(*4*3*1))
MathildaLib.SwapOperator: (+(*12*2)+(*4*3*1))
MathildaLib.SwapOperator: (+(*12*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*12*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*12*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*12*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*12*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*12*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*12*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*12))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*12))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3*1)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*6*4))
MathildaLib.SwapOperator: (+(*6*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*6)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*6)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*6)+(*4*3*1))
MathildaLib.SwapOperator: (+(*6*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*6*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*6*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*6*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*6*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*6*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*6))
MathildaLib.SwapOperator: (+(*1*4*3)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*6))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*6))
MathildaLib.SwapOperator: (+(*4*1*3)+(*6*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*6*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*8*3))
MathildaLib.SwapOperator: (+(*8*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*8)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*8)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*8)+(*4*1*3))
MathildaLib.SwapOperator: (+(*3*8)+(*4*3*1))
MathildaLib.SwapOperator: (+(*8*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*8*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*8*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*8*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*8))
MathildaLib.SwapOperator: (+(*1*4*3)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*8))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*8))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*8))
MathildaLib.SwapOperator: (+(*4*1*3)+(*8*3))
MathildaLib.SwapOperator: (+(*4*3*1)+(*8*3))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*3*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*3*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:37</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,25ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*12)+(*2*3*4))
MathildaLib.LiftOperator: (+12+(*2*3*4))
MathildaLib.ScalarProductOperator: (+12+(*24))
MathildaLib.LiftOperator: (+12+24)
MathildaLib.SumOperator: (+36)
MathildaLib.SwapOperator: (+24+12)
MathildaLib.SwapOperator: (+(*24)+12)
MathildaLib.MultiplyOperator: (+12+(*2*12))
MathildaLib.SwapOperator: (+12+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+12)
MathildaLib.SwapOperator: (+(*2*12)+12)
MathildaLib.MultiplyOperator: (+12+(*6*4))
MathildaLib.SwapOperator: (+12+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+12)
MathildaLib.SwapOperator: (+(*6*4)+12)
MathildaLib.SwapOperator: (+12+(*2*4*3))
MathildaLib.MultiplyOperator: (+12+(*8*3))
MathildaLib.SwapOperator: (+12+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+12)
MathildaLib.SwapOperator: (+(*8*3)+12)
MathildaLib.SwapOperator: (+12+(*3*4*2))
MathildaLib.SwapOperator: (+12+(*3*2*4))
MathildaLib.SwapOperator: (+12+(*4*2*3))
MathildaLib.SwapOperator: (+12+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*2)+12)
MathildaLib.SwapOperator: (+(*2*3*4)+12)
MathildaLib.SwapOperator: (+(*2*4*3)+12)
MathildaLib.SwapOperator: (+(*3*4*2)+12)
MathildaLib.SwapOperator: (+(*3*2*4)+12)
MathildaLib.SwapOperator: (+(*4*2*3)+12)
MathildaLib.ScalarProductOperator: (+(*12)+(*24))
MathildaLib.LiftOperator: (+(*12)+24)
MathildaLib.SwapOperator: (+24+(*12))
MathildaLib.SwapOperator: (+(*24)+(*12))
MathildaLib.MultiplyOperator: (+(*12)+(*2*12))
MathildaLib.SwapOperator: (+(*12)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12))
MathildaLib.MultiplyOperator: (+(*12)+(*6*4))
MathildaLib.SwapOperator: (+(*12)+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+(*12))
MathildaLib.SwapOperator: (+(*6*4)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*12)+(*8*3))
MathildaLib.SwapOperator: (+(*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*12))
MathildaLib.SwapOperator: (+(*8*3)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*3*4*2))
MathildaLib.SwapOperator: (+(*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12)+(*4*2*3))
MathildaLib.SwapOperator: (+(*12)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*2)+(*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12))
MathildaLib.SwapOperator: (+(*2*4*3)+(*12))
MathildaLib.SwapOperator: (+(*3*4*2)+(*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*12))
MathildaLib.MultiplyOperator: (+(*1*12)+(*2*3*4))
MathildaLib.ScalarProductOperator: (+(*1*12)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*1*12))
MathildaLib.LiftOperator: (+24+(*1*12))
MathildaLib.SwapOperator: (+24+(*12*1))
MathildaLib.SwapOperator: (+(*12*1)+24)
MathildaLib.SwapOperator: (+(*1*12)+24)
MathildaLib.SwapOperator: (+(*24)+(*12*1))
MathildaLib.SwapOperator: (+(*12*1)+(*24))
MathildaLib.MultiplyOperator: (+(*1*12)+(*2*12))
MathildaLib.SwapOperator: (+(*1*12)+(*12*2))
MathildaLib.SwapOperator: (+(*12*1)+(*12*2))
MathildaLib.SwapOperator: (+(*12*1)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12*1))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*12*2)+(*1*12))
MathildaLib.SwapOperator: (+(*12*2)+(*12*1))
MathildaLib.MultiplyOperator: (+(*1*12)+(*6*4))
MathildaLib.SwapOperator: (+(*1*12)+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+(*1*12))
MathildaLib.SwapOperator: (+(*4*6)+(*12*1))
MathildaLib.SwapOperator: (+(*6*4)+(*12*1))
MathildaLib.SwapOperator: (+(*6*4)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*6*4))
MathildaLib.SwapOperator: (+(*12*1)+(*4*6))
MathildaLib.SwapOperator: (+(*1*12)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*1*12)+(*8*3))
MathildaLib.SwapOperator: (+(*1*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*1*12))
MathildaLib.SwapOperator: (+(*3*8)+(*12*1))
MathildaLib.SwapOperator: (+(*8*3)+(*12*1))
MathildaLib.SwapOperator: (+(*8*3)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*8*3))
MathildaLib.SwapOperator: (+(*12*1)+(*3*8))
MathildaLib.SwapOperator: (+(*1*12)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*12)+(*4*2*3))
MathildaLib.SwapOperator: (+(*1*12)+(*4*3*2))
MathildaLib.SwapOperator: (+(*12*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*12*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*12*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*12*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*12*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*12*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*12*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*12))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*12*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*12*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*12))
MathildaLib.MultiplyOneOperator: (+(*3*4)+(*2*3*4))
MathildaLib.ScalarProductOperator: (+(*3*4)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*3*4))
MathildaLib.LiftOperator: (+24+(*3*4))
MathildaLib.SwapOperator: (+24+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+24)
MathildaLib.SwapOperator: (+(*3*4)+24)
MathildaLib.SwapOperator: (+(*24)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*24))
MathildaLib.MultiplyOperator: (+(*3*4)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*3*4))
MathildaLib.SwapOperator: (+(*12*2)+(*4*3))
MathildaLib.MultiplyOperator: (+(*3*4)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3)+(*6*4))
MathildaLib.SwapOperator: (+(*6*4)+(*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4))
MathildaLib.SwapOperator: (+(*6*4)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*3*4)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*3*8))
MathildaLib.SwapOperator: (+(*4*3)+(*8*3))
MathildaLib.SwapOperator: (+(*8*3)+(*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*3))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4))
MathildaLib.ScalarProductOperator: (+(*1*3*4)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*1*3*4))
MathildaLib.LiftOperator: (+24+(*1*3*4))
MathildaLib.SwapOperator: (+24+(*1*4*3))
MathildaLib.SwapOperator: (+24+(*3*4*1))
MathildaLib.SwapOperator: (+24+(*3*1*4))
MathildaLib.SwapOperator: (+24+(*4*1*3))
MathildaLib.SwapOperator: (+24+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*3*1)+24)
MathildaLib.SwapOperator: (+(*1*3*4)+24)
MathildaLib.SwapOperator: (+(*1*4*3)+24)
MathildaLib.SwapOperator: (+(*3*4*1)+24)
MathildaLib.SwapOperator: (+(*3*1*4)+24)
MathildaLib.SwapOperator: (+(*4*1*3)+24)
MathildaLib.SwapOperator: (+(*24)+(*1*4*3))
MathildaLib.SwapOperator: (+(*24)+(*3*4*1))
MathildaLib.SwapOperator: (+(*24)+(*3*1*4))
MathildaLib.SwapOperator: (+(*24)+(*4*1*3))
MathildaLib.SwapOperator: (+(*24)+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*3*1)+(*24))
MathildaLib.SwapOperator: (+(*3*4*1)+(*24))
MathildaLib.SwapOperator: (+(*1*4*3)+(*24))
MathildaLib.SwapOperator: (+(*4*1*3)+(*24))
MathildaLib.SwapOperator: (+(*3*1*4)+(*24))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*12)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*12)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*12)+(*4*3*1))
MathildaLib.SwapOperator: (+(*12*2)+(*4*3*1))
MathildaLib.SwapOperator: (+(*12*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*12*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*12*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*12*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*12*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*12*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*12*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*12))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*12))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3*1)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*6*4))
MathildaLib.SwapOperator: (+(*6*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*6)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*6)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*6)+(*4*3*1))
MathildaLib.SwapOperator: (+(*6*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*6*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*6*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*6*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*6*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*6*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*6))
MathildaLib.SwapOperator: (+(*1*4*3)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*6))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*6))
MathildaLib.SwapOperator: (+(*4*1*3)+(*6*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*6*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*8*3))
MathildaLib.SwapOperator: (+(*8*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*8)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*8)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*8)+(*4*1*3))
MathildaLib.SwapOperator: (+(*3*8)+(*4*3*1))
MathildaLib.SwapOperator: (+(*8*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*8*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*8*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*8*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*8))
MathildaLib.SwapOperator: (+(*1*4*3)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*8))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*8))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*8))
MathildaLib.SwapOperator: (+(*4*1*3)+(*8*3))
MathildaLib.SwapOperator: (+(*4*3*1)+(*8*3))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*3*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*3*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:09:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,29ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*12)+(*2*3*4))
MathildaLib.LiftOperator: (+12+(*2*3*4))
MathildaLib.ScalarProductOperator: (+12+(*24))
MathildaLib.LiftOperator: (+12+24)
MathildaLib.SumOperator: (+36)
MathildaLib.LiftOperator: 36
MathildaLib.SwapOperator: (+24+12)
MathildaLib.SwapOperator: (+(*24)+12)
MathildaLib.MultiplyOperator: (+12+(*2*12))
MathildaLib.SwapOperator: (+12+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+12)
MathildaLib.SwapOperator: (+(*2*12)+12)
MathildaLib.MultiplyOperator: (+12+(*6*4))
MathildaLib.SwapOperator: (+12+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+12)
MathildaLib.SwapOperator: (+(*6*4)+12)
MathildaLib.SwapOperator: (+12+(*2*4*3))
MathildaLib.MultiplyOperator: (+12+(*8*3))
MathildaLib.SwapOperator: (+12+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+12)
MathildaLib.SwapOperator: (+(*8*3)+12)
MathildaLib.SwapOperator: (+12+(*3*4*2))
MathildaLib.SwapOperator: (+12+(*3*2*4))
MathildaLib.SwapOperator: (+12+(*4*2*3))
MathildaLib.SwapOperator: (+12+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*2)+12)
MathildaLib.SwapOperator: (+(*2*3*4)+12)
MathildaLib.SwapOperator: (+(*2*4*3)+12)
MathildaLib.SwapOperator: (+(*3*4*2)+12)
MathildaLib.SwapOperator: (+(*3*2*4)+12)
MathildaLib.SwapOperator: (+(*4*2*3)+12)
MathildaLib.ScalarProductOperator: (+(*12)+(*24))
MathildaLib.LiftOperator: (+(*12)+24)
MathildaLib.SwapOperator: (+24+(*12))
MathildaLib.SwapOperator: (+(*24)+(*12))
MathildaLib.MultiplyOperator: (+(*12)+(*2*12))
MathildaLib.SwapOperator: (+(*12)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12))
MathildaLib.MultiplyOperator: (+(*12)+(*6*4))
MathildaLib.SwapOperator: (+(*12)+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+(*12))
MathildaLib.SwapOperator: (+(*6*4)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*12)+(*8*3))
MathildaLib.SwapOperator: (+(*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*12))
MathildaLib.SwapOperator: (+(*8*3)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*3*4*2))
MathildaLib.SwapOperator: (+(*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12)+(*4*2*3))
MathildaLib.SwapOperator: (+(*12)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*2)+(*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12))
MathildaLib.SwapOperator: (+(*2*4*3)+(*12))
MathildaLib.SwapOperator: (+(*3*4*2)+(*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*12))
MathildaLib.MultiplyOperator: (+(*1*12)+(*2*3*4))
MathildaLib.ScalarProductOperator: (+(*1*12)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*1*12))
MathildaLib.LiftOperator: (+24+(*1*12))
MathildaLib.SwapOperator: (+24+(*12*1))
MathildaLib.SwapOperator: (+(*12*1)+24)
MathildaLib.SwapOperator: (+(*1*12)+24)
MathildaLib.SwapOperator: (+(*24)+(*12*1))
MathildaLib.SwapOperator: (+(*12*1)+(*24))
MathildaLib.MultiplyOperator: (+(*1*12)+(*2*12))
MathildaLib.SwapOperator: (+(*1*12)+(*12*2))
MathildaLib.SwapOperator: (+(*12*1)+(*12*2))
MathildaLib.SwapOperator: (+(*12*1)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12*1))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*12*2)+(*1*12))
MathildaLib.SwapOperator: (+(*12*2)+(*12*1))
MathildaLib.MultiplyOperator: (+(*1*12)+(*6*4))
MathildaLib.SwapOperator: (+(*1*12)+(*4*6))
MathildaLib.SwapOperator: (+(*4*6)+(*1*12))
MathildaLib.SwapOperator: (+(*4*6)+(*12*1))
MathildaLib.SwapOperator: (+(*6*4)+(*12*1))
MathildaLib.SwapOperator: (+(*6*4)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*6*4))
MathildaLib.SwapOperator: (+(*12*1)+(*4*6))
MathildaLib.SwapOperator: (+(*1*12)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*1*12)+(*8*3))
MathildaLib.SwapOperator: (+(*1*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*1*12))
MathildaLib.SwapOperator: (+(*3*8)+(*12*1))
MathildaLib.SwapOperator: (+(*8*3)+(*12*1))
MathildaLib.SwapOperator: (+(*8*3)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*8*3))
MathildaLib.SwapOperator: (+(*12*1)+(*3*8))
MathildaLib.SwapOperator: (+(*1*12)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*12)+(*4*2*3))
MathildaLib.SwapOperator: (+(*1*12)+(*4*3*2))
MathildaLib.SwapOperator: (+(*12*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*12*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*12*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*12*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*12*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*12*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*12*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*12))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*12*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*12*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*12))
MathildaLib.MultiplyOneOperator: (+(*3*4)+(*2*3*4))
MathildaLib.ScalarProductOperator: (+(*3*4)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*3*4))
MathildaLib.LiftOperator: (+24+(*3*4))
MathildaLib.SwapOperator: (+24+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+24)
MathildaLib.SwapOperator: (+(*3*4)+24)
MathildaLib.SwapOperator: (+(*24)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*24))
MathildaLib.MultiplyOperator: (+(*3*4)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*3*4))
MathildaLib.SwapOperator: (+(*12*2)+(*4*3))
MathildaLib.MultiplyOperator: (+(*3*4)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3)+(*6*4))
MathildaLib.SwapOperator: (+(*6*4)+(*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4))
MathildaLib.SwapOperator: (+(*6*4)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*3*4)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*3*8)+(*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*3*8))
MathildaLib.SwapOperator: (+(*4*3)+(*8*3))
MathildaLib.SwapOperator: (+(*8*3)+(*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*3))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4))
MathildaLib.ScalarProductOperator: (+(*1*3*4)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*1*3*4))
MathildaLib.LiftOperator: (+24+(*1*3*4))
MathildaLib.SwapOperator: (+24+(*1*4*3))
MathildaLib.SwapOperator: (+24+(*3*4*1))
MathildaLib.SwapOperator: (+24+(*3*1*4))
MathildaLib.SwapOperator: (+24+(*4*1*3))
MathildaLib.SwapOperator: (+24+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*3*1)+24)
MathildaLib.SwapOperator: (+(*1*3*4)+24)
MathildaLib.SwapOperator: (+(*1*4*3)+24)
MathildaLib.SwapOperator: (+(*3*4*1)+24)
MathildaLib.SwapOperator: (+(*3*1*4)+24)
MathildaLib.SwapOperator: (+(*4*1*3)+24)
MathildaLib.SwapOperator: (+(*24)+(*1*4*3))
MathildaLib.SwapOperator: (+(*24)+(*3*4*1))
MathildaLib.SwapOperator: (+(*24)+(*3*1*4))
MathildaLib.SwapOperator: (+(*24)+(*4*1*3))
MathildaLib.SwapOperator: (+(*24)+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*3*1)+(*24))
MathildaLib.SwapOperator: (+(*3*4*1)+(*24))
MathildaLib.SwapOperator: (+(*1*4*3)+(*24))
MathildaLib.SwapOperator: (+(*4*1*3)+(*24))
MathildaLib.SwapOperator: (+(*3*1*4)+(*24))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*2*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*12)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*12)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*12)+(*4*3*1))
MathildaLib.SwapOperator: (+(*12*2)+(*4*3*1))
MathildaLib.SwapOperator: (+(*12*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*12*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*12*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*12*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*12*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*12*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*12*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*12))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*12))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*12))
MathildaLib.SwapOperator: (+(*4*3*1)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*6*4))
MathildaLib.SwapOperator: (+(*6*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*6)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*6)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*6)+(*4*3*1))
MathildaLib.SwapOperator: (+(*6*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*6*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*6*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*6*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*6*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*6*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*6))
MathildaLib.SwapOperator: (+(*1*4*3)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*6*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*6))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*6))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*6))
MathildaLib.SwapOperator: (+(*4*1*3)+(*6*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*6*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*2*4*3))
MathildaLib.MultiplyOperator: (+(*1*3*4)+(*8*3))
MathildaLib.SwapOperator: (+(*8*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*8)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*8)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*8)+(*4*1*3))
MathildaLib.SwapOperator: (+(*3*8)+(*4*3*1))
MathildaLib.SwapOperator: (+(*8*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*8*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*8*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*8*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*8))
MathildaLib.SwapOperator: (+(*1*4*3)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*8*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*8))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*8))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*8))
MathildaLib.SwapOperator: (+(*4*1*3)+(*8*3))
MathildaLib.SwapOperator: (+(*4*3*1)+(*8*3))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*2*3))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*3*4*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*1*4)+(*4*3*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*3*2*4)+(*4*3*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*3*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*3*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*2*4*3))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*4*2))
MathildaLib.SwapOperator: (+(*4*3*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3*1)+(*4*2*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*3*1))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*1*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*3*4*1))
MathildaLib.SwapOperator: (+(*4*3*2)+(*4*3*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:08</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,19ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 36
MathildaLib.SumOperator: 36
MathildaLib.LiftOperator: 36
MathildaLib.ScalarProductOperator: 36
MathildaLib.SwapOperator: (+(*2*12)+12)
MathildaLib.SwapOperator: (+12+(*4*6))
MathildaLib.SwapOperator: (+12+(*3*8))
MathildaLib.MultiplyOperator: (+12+(*3*8))
MathildaLib.SwapOperator: (+(*3*2*4)+12)
MathildaLib.SwapOperator: (+(*2*3*4)+12)
MathildaLib.SwapOperator: (+12+(*3*2*4))
MathildaLib.LiftOperator: 36
MathildaLib.SwapOperator: (+24+(*12))
MathildaLib.LiftOperator: (+24+(*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*4*6))
MathildaLib.SwapOperator: (+(*12)+(*3*8))
MathildaLib.MultiplyOperator: (+(*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*3*2*4))
MathildaLib.ScalarProductOperator: 36
MathildaLib.SwapOperator: (+(*1*12)+24)
MathildaLib.LiftOperator: (+24+(*1*12))
MathildaLib.SwapOperator: (+24+(*1*12))
MathildaLib.ScalarProductOperator: (+24+(*1*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*6*4)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*4*6))
MathildaLib.SwapOperator: (+(*1*12)+(*4*6))
MathildaLib.SwapOperator: (+(*8*3)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*3*8))
MathildaLib.SwapOperator: (+(*1*12)+(*3*8))
MathildaLib.MultiplyOperator: (+(*1*12)+(*3*8))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*1*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*4)+24)
MathildaLib.LiftOperator: (+24+(*3*4))
MathildaLib.SwapOperator: (+24+(*3*4))
MathildaLib.ScalarProductOperator: (+24+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*3*8))
MathildaLib.MultiplyOperator: (+(*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*1*4)+24)
MathildaLib.SwapOperator: (+(*1*3*4)+24)
MathildaLib.SwapOperator: (+24+(*3*1*4))
MathildaLib.LiftOperator: (+24+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*24))
MathildaLib.SwapOperator: (+(*1*4*3)+(*24))
MathildaLib.SwapOperator: (+(*1*4*3)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*3*1*4))
MathildaLib.SwapOperator: (+24+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*1*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*12*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*12)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*6))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*6))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*6*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*6*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*6*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*8))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*8))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*8*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*8*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*8)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*3*4))
MathildaLib.MultiplyOperator: (+(*3*8)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*2*4))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
MathildaLib.MultiplyOperator: (*1*6)
MathildaLib.SwapOperator: (*6*1)
MathildaLib.MultiplyOneOperator: (*2*3)
MathildaLib.SwapOperator: (*3*2)
MathildaLib.SwapOperator: (*1*3*2)
MathildaLib.SwapOperator: (*2*3*1)
MathildaLib.SwapOperator: (*2*1*3)
MathildaLib.SwapOperator: (*3*1*2)
MathildaLib.SwapOperator: (*3*2*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:39</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
MathildaLib.MultiplyOperator: (*1*6)
MathildaLib.SwapOperator: (*6*1)
MathildaLib.MultiplyOneOperator: (*2*3)
MathildaLib.SwapOperator: (*3*2)
MathildaLib.SwapOperator: (*1*3*2)
MathildaLib.SwapOperator: (*2*3*1)
MathildaLib.SwapOperator: (*2*1*3)
MathildaLib.SwapOperator: (*3*1*2)
MathildaLib.SwapOperator: (*3*2*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:10:00</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*6)
MathildaLib.LiftOperator: 6
MathildaLib.MultiplyOperator: (*1*6)
MathildaLib.SwapOperator: (*6*1)
MathildaLib.MultiplyOneOperator: (*2*3)
MathildaLib.SwapOperator: (*3*2)
MathildaLib.SwapOperator: (*1*3*2)
MathildaLib.SwapOperator: (*2*3*1)
MathildaLib.SwapOperator: (*2*1*3)
MathildaLib.SwapOperator: (*3*1*2)
MathildaLib.SwapOperator: (*3*2*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 6
MathildaLib.ScalarProductOperator: 6
MathildaLib.SwapOperator: (*2*1*3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
MathildaLib.SwapOperator: (*a*2)
MathildaLib.SwapOperator: (*1*a*2)
MathildaLib.SwapOperator: (*2*a*1)
MathildaLib.SwapOperator: (*2*1*a)
MathildaLib.SwapOperator: (*a*1*2)
MathildaLib.SwapOperator: (*a*2*1)
========
MathildaLib.SwapOperator: (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
MathildaLib.SwapOperator: (*a*2)
MathildaLib.SwapOperator: (*1*a*2)
MathildaLib.SwapOperator: (*2*a*1)
MathildaLib.SwapOperator: (*2*1*a)
MathildaLib.SwapOperator: (*a*1*2)
MathildaLib.SwapOperator: (*a*2*1)
========
MathildaLib.SwapOperator: (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:10:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
MathildaLib.SwapOperator: (*a*2)
MathildaLib.SwapOperator: (*1*a*2)
MathildaLib.SwapOperator: (*2*a*1)
MathildaLib.SwapOperator: (*2*1*a)
MathildaLib.SwapOperator: (*a*1*2)
MathildaLib.SwapOperator: (*a*2*1)
========
MathildaLib.SwapOperator: (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:12</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
MathildaLib.SwapOperator: (*2*1*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*6)+(*1*2*4))
MathildaLib.LiftOperator: (+6+(*1*2*4))
MathildaLib.ScalarProductOperator: (+6+(*8))
MathildaLib.LiftOperator: (+6+8)
MathildaLib.SumOperator: (+14)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*6)+(*1*2*4))
MathildaLib.LiftOperator: (+6+(*1*2*4))
MathildaLib.ScalarProductOperator: (+6+(*8))
MathildaLib.LiftOperator: (+6+8)
MathildaLib.SumOperator: (+14)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*6)+(*1*2*4))
MathildaLib.LiftOperator: (+6+(*1*2*4))
MathildaLib.ScalarProductOperator: (+6+(*8))
MathildaLib.LiftOperator: (+6+8)
MathildaLib.SumOperator: (+14)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,13ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*6)+(*1*2*4))
MathildaLib.LiftOperator: (+6+(*1*2*4))
MathildaLib.ScalarProductOperator: (+6+(*8))
MathildaLib.LiftOperator: (+6+8)
MathildaLib.SumOperator: (+14)
MathildaLib.SwapOperator: (+8+6)
MathildaLib.SwapOperator: (+(*8)+6)
MathildaLib.MultiplyOperator: (+6+(*1*8))
MathildaLib.SwapOperator: (+6+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+6)
MathildaLib.SwapOperator: (+(*1*8)+6)
MathildaLib.MultiplyOneOperator: (+6+(*2*4))
MathildaLib.SwapOperator: (+6+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+6)
MathildaLib.SwapOperator: (+(*2*4)+6)
MathildaLib.SwapOperator: (+6+(*1*4*2))
MathildaLib.SwapOperator: (+6+(*2*4*1))
MathildaLib.SwapOperator: (+6+(*2*1*4))
MathildaLib.SwapOperator: (+6+(*4*1*2))
MathildaLib.SwapOperator: (+6+(*4*2*1))
MathildaLib.SwapOperator: (+(*4*2*1)+6)
MathildaLib.SwapOperator: (+(*1*2*4)+6)
MathildaLib.SwapOperator: (+(*1*4*2)+6)
MathildaLib.SwapOperator: (+(*2*4*1)+6)
MathildaLib.SwapOperator: (+(*2*1*4)+6)
MathildaLib.SwapOperator: (+(*4*1*2)+6)
MathildaLib.ScalarProductOperator: (+(*6)+(*8))
MathildaLib.LiftOperator: (+(*6)+8)
MathildaLib.SwapOperator: (+8+(*6))
MathildaLib.SwapOperator: (+(*8)+(*6))
MathildaLib.MultiplyOperator: (+(*6)+(*1*8))
MathildaLib.SwapOperator: (+(*6)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*6))
MathildaLib.SwapOperator: (+(*1*8)+(*6))
MathildaLib.MultiplyOneOperator: (+(*6)+(*2*4))
MathildaLib.SwapOperator: (+(*6)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6))
MathildaLib.SwapOperator: (+(*6)+(*1*4*2))
MathildaLib.SwapOperator: (+(*6)+(*2*4*1))
MathildaLib.SwapOperator: (+(*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6)+(*4*1*2))
MathildaLib.SwapOperator: (+(*6)+(*4*2*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6))
MathildaLib.SwapOperator: (+(*1*4*2)+(*6))
MathildaLib.SwapOperator: (+(*2*4*1)+(*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*6))
MathildaLib.MultiplyOperator: (+(*1*6)+(*1*2*4))
MathildaLib.ScalarProductOperator: (+(*1*6)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*1*6))
MathildaLib.LiftOperator: (+8+(*1*6))
MathildaLib.SwapOperator: (+8+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+8)
MathildaLib.SwapOperator: (+(*1*6)+8)
MathildaLib.SwapOperator: (+(*8)+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+(*8))
MathildaLib.MultiplyOperator: (+(*1*6)+(*1*8))
MathildaLib.SwapOperator: (+(*1*6)+(*8*1))
MathildaLib.SwapOperator: (+(*6*1)+(*8*1))
MathildaLib.SwapOperator: (+(*6*1)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*6*1))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*8*1)+(*1*6))
MathildaLib.SwapOperator: (+(*8*1)+(*6*1))
MathildaLib.MultiplyOneOperator: (+(*1*6)+(*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2)+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+(*4*2))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*6)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*6)+(*4*1*2))
MathildaLib.SwapOperator: (+(*1*6)+(*4*2*1))
MathildaLib.SwapOperator: (+(*6*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*6*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*6*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*6*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*6*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*6*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*6))
MathildaLib.MultiplyOneOperator: (+(*2*3)+(*1*2*4))
MathildaLib.ScalarProductOperator: (+(*2*3)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*2*3))
MathildaLib.LiftOperator: (+8+(*2*3))
MathildaLib.SwapOperator: (+8+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+8)
MathildaLib.SwapOperator: (+(*2*3)+8)
MathildaLib.SwapOperator: (+(*8)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*8))
MathildaLib.MultiplyOperator: (+(*2*3)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*3))
MathildaLib.SwapOperator: (+(*8*1)+(*3*2))
MathildaLib.MultiplyOneOperator: (+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*3*2))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*3*2))
MathildaLib.SwapOperator: (+(*2*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*2*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*2))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3))
MathildaLib.ScalarProductOperator: (+(*1*2*3)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*1*2*3))
MathildaLib.LiftOperator: (+8+(*1*2*3))
MathildaLib.SwapOperator: (+8+(*1*3*2))
MathildaLib.SwapOperator: (+8+(*2*3*1))
MathildaLib.SwapOperator: (+8+(*2*1*3))
MathildaLib.SwapOperator: (+8+(*3*1*2))
MathildaLib.SwapOperator: (+8+(*3*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+8)
MathildaLib.SwapOperator: (+(*1*2*3)+8)
MathildaLib.SwapOperator: (+(*1*3*2)+8)
MathildaLib.SwapOperator: (+(*2*3*1)+8)
MathildaLib.SwapOperator: (+(*2*1*3)+8)
MathildaLib.SwapOperator: (+(*3*1*2)+8)
MathildaLib.SwapOperator: (+(*8)+(*1*3*2))
MathildaLib.SwapOperator: (+(*8)+(*2*3*1))
MathildaLib.SwapOperator: (+(*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8)+(*3*1*2))
MathildaLib.SwapOperator: (+(*8)+(*3*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*8))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8))
MathildaLib.SwapOperator: (+(*3*1*2)+(*8))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8))
MathildaLib.MultiplyOperator: (+(*1*2*3)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*8)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*8)+(*3*2*1))
MathildaLib.SwapOperator: (+(*8*1)+(*3*2*1))
MathildaLib.SwapOperator: (+(*8*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*8*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*8*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*8*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*8))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2*1)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.MultiplyOneOperator: (+(*1*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*2*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*2*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*2*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:43</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,22ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*6)+(*1*2*4))
MathildaLib.LiftOperator: (+6+(*1*2*4))
MathildaLib.ScalarProductOperator: (+6+(*8))
MathildaLib.LiftOperator: (+6+8)
MathildaLib.SumOperator: (+14)
MathildaLib.SwapOperator: (+8+6)
MathildaLib.SwapOperator: (+(*8)+6)
MathildaLib.MultiplyOperator: (+6+(*1*8))
MathildaLib.SwapOperator: (+6+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+6)
MathildaLib.SwapOperator: (+(*1*8)+6)
MathildaLib.MultiplyOneOperator: (+6+(*2*4))
MathildaLib.SwapOperator: (+6+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+6)
MathildaLib.SwapOperator: (+(*2*4)+6)
MathildaLib.SwapOperator: (+6+(*1*4*2))
MathildaLib.SwapOperator: (+6+(*2*4*1))
MathildaLib.SwapOperator: (+6+(*2*1*4))
MathildaLib.SwapOperator: (+6+(*4*1*2))
MathildaLib.SwapOperator: (+6+(*4*2*1))
MathildaLib.SwapOperator: (+(*4*2*1)+6)
MathildaLib.SwapOperator: (+(*1*2*4)+6)
MathildaLib.SwapOperator: (+(*1*4*2)+6)
MathildaLib.SwapOperator: (+(*2*4*1)+6)
MathildaLib.SwapOperator: (+(*2*1*4)+6)
MathildaLib.SwapOperator: (+(*4*1*2)+6)
MathildaLib.ScalarProductOperator: (+(*6)+(*8))
MathildaLib.LiftOperator: (+(*6)+8)
MathildaLib.SwapOperator: (+8+(*6))
MathildaLib.SwapOperator: (+(*8)+(*6))
MathildaLib.MultiplyOperator: (+(*6)+(*1*8))
MathildaLib.SwapOperator: (+(*6)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*6))
MathildaLib.SwapOperator: (+(*1*8)+(*6))
MathildaLib.MultiplyOneOperator: (+(*6)+(*2*4))
MathildaLib.SwapOperator: (+(*6)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6))
MathildaLib.SwapOperator: (+(*6)+(*1*4*2))
MathildaLib.SwapOperator: (+(*6)+(*2*4*1))
MathildaLib.SwapOperator: (+(*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6)+(*4*1*2))
MathildaLib.SwapOperator: (+(*6)+(*4*2*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6))
MathildaLib.SwapOperator: (+(*1*4*2)+(*6))
MathildaLib.SwapOperator: (+(*2*4*1)+(*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*6))
MathildaLib.MultiplyOperator: (+(*1*6)+(*1*2*4))
MathildaLib.ScalarProductOperator: (+(*1*6)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*1*6))
MathildaLib.LiftOperator: (+8+(*1*6))
MathildaLib.SwapOperator: (+8+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+8)
MathildaLib.SwapOperator: (+(*1*6)+8)
MathildaLib.SwapOperator: (+(*8)+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+(*8))
MathildaLib.MultiplyOperator: (+(*1*6)+(*1*8))
MathildaLib.SwapOperator: (+(*1*6)+(*8*1))
MathildaLib.SwapOperator: (+(*6*1)+(*8*1))
MathildaLib.SwapOperator: (+(*6*1)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*6*1))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*8*1)+(*1*6))
MathildaLib.SwapOperator: (+(*8*1)+(*6*1))
MathildaLib.MultiplyOneOperator: (+(*1*6)+(*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2)+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+(*4*2))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*6)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*6)+(*4*1*2))
MathildaLib.SwapOperator: (+(*1*6)+(*4*2*1))
MathildaLib.SwapOperator: (+(*6*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*6*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*6*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*6*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*6*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*6*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*6))
MathildaLib.MultiplyOneOperator: (+(*2*3)+(*1*2*4))
MathildaLib.ScalarProductOperator: (+(*2*3)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*2*3))
MathildaLib.LiftOperator: (+8+(*2*3))
MathildaLib.SwapOperator: (+8+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+8)
MathildaLib.SwapOperator: (+(*2*3)+8)
MathildaLib.SwapOperator: (+(*8)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*8))
MathildaLib.MultiplyOperator: (+(*2*3)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*3))
MathildaLib.SwapOperator: (+(*8*1)+(*3*2))
MathildaLib.MultiplyOneOperator: (+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*3*2))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*3*2))
MathildaLib.SwapOperator: (+(*2*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*2*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*2))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3))
MathildaLib.ScalarProductOperator: (+(*1*2*3)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*1*2*3))
MathildaLib.LiftOperator: (+8+(*1*2*3))
MathildaLib.SwapOperator: (+8+(*1*3*2))
MathildaLib.SwapOperator: (+8+(*2*3*1))
MathildaLib.SwapOperator: (+8+(*2*1*3))
MathildaLib.SwapOperator: (+8+(*3*1*2))
MathildaLib.SwapOperator: (+8+(*3*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+8)
MathildaLib.SwapOperator: (+(*1*2*3)+8)
MathildaLib.SwapOperator: (+(*1*3*2)+8)
MathildaLib.SwapOperator: (+(*2*3*1)+8)
MathildaLib.SwapOperator: (+(*2*1*3)+8)
MathildaLib.SwapOperator: (+(*3*1*2)+8)
MathildaLib.SwapOperator: (+(*8)+(*1*3*2))
MathildaLib.SwapOperator: (+(*8)+(*2*3*1))
MathildaLib.SwapOperator: (+(*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8)+(*3*1*2))
MathildaLib.SwapOperator: (+(*8)+(*3*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*8))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8))
MathildaLib.SwapOperator: (+(*3*1*2)+(*8))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8))
MathildaLib.MultiplyOperator: (+(*1*2*3)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*8)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*8)+(*3*2*1))
MathildaLib.SwapOperator: (+(*8*1)+(*3*2*1))
MathildaLib.SwapOperator: (+(*8*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*8*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*8*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*8*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*8))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2*1)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.MultiplyOneOperator: (+(*1*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*2*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*2*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*2*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:10:04</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,22ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+(*6)+(*1*2*4))
MathildaLib.LiftOperator: (+6+(*1*2*4))
MathildaLib.ScalarProductOperator: (+6+(*8))
MathildaLib.LiftOperator: (+6+8)
MathildaLib.SumOperator: (+14)
MathildaLib.LiftOperator: 14
MathildaLib.SwapOperator: (+8+6)
MathildaLib.SwapOperator: (+(*8)+6)
MathildaLib.MultiplyOperator: (+6+(*1*8))
MathildaLib.SwapOperator: (+6+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+6)
MathildaLib.SwapOperator: (+(*1*8)+6)
MathildaLib.MultiplyOneOperator: (+6+(*2*4))
MathildaLib.SwapOperator: (+6+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+6)
MathildaLib.SwapOperator: (+(*2*4)+6)
MathildaLib.SwapOperator: (+6+(*1*4*2))
MathildaLib.SwapOperator: (+6+(*2*4*1))
MathildaLib.SwapOperator: (+6+(*2*1*4))
MathildaLib.SwapOperator: (+6+(*4*1*2))
MathildaLib.SwapOperator: (+6+(*4*2*1))
MathildaLib.SwapOperator: (+(*4*2*1)+6)
MathildaLib.SwapOperator: (+(*1*2*4)+6)
MathildaLib.SwapOperator: (+(*1*4*2)+6)
MathildaLib.SwapOperator: (+(*2*4*1)+6)
MathildaLib.SwapOperator: (+(*2*1*4)+6)
MathildaLib.SwapOperator: (+(*4*1*2)+6)
MathildaLib.ScalarProductOperator: (+(*6)+(*8))
MathildaLib.LiftOperator: (+(*6)+8)
MathildaLib.SwapOperator: (+8+(*6))
MathildaLib.SwapOperator: (+(*8)+(*6))
MathildaLib.MultiplyOperator: (+(*6)+(*1*8))
MathildaLib.SwapOperator: (+(*6)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*6))
MathildaLib.SwapOperator: (+(*1*8)+(*6))
MathildaLib.MultiplyOneOperator: (+(*6)+(*2*4))
MathildaLib.SwapOperator: (+(*6)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6))
MathildaLib.SwapOperator: (+(*6)+(*1*4*2))
MathildaLib.SwapOperator: (+(*6)+(*2*4*1))
MathildaLib.SwapOperator: (+(*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6)+(*4*1*2))
MathildaLib.SwapOperator: (+(*6)+(*4*2*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6))
MathildaLib.SwapOperator: (+(*1*4*2)+(*6))
MathildaLib.SwapOperator: (+(*2*4*1)+(*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*6))
MathildaLib.MultiplyOperator: (+(*1*6)+(*1*2*4))
MathildaLib.ScalarProductOperator: (+(*1*6)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*1*6))
MathildaLib.LiftOperator: (+8+(*1*6))
MathildaLib.SwapOperator: (+8+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+8)
MathildaLib.SwapOperator: (+(*1*6)+8)
MathildaLib.SwapOperator: (+(*8)+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+(*8))
MathildaLib.MultiplyOperator: (+(*1*6)+(*1*8))
MathildaLib.SwapOperator: (+(*1*6)+(*8*1))
MathildaLib.SwapOperator: (+(*6*1)+(*8*1))
MathildaLib.SwapOperator: (+(*6*1)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*6*1))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*8*1)+(*1*6))
MathildaLib.SwapOperator: (+(*8*1)+(*6*1))
MathildaLib.MultiplyOneOperator: (+(*1*6)+(*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2)+(*6*1))
MathildaLib.SwapOperator: (+(*6*1)+(*4*2))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*6)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*6)+(*4*1*2))
MathildaLib.SwapOperator: (+(*1*6)+(*4*2*1))
MathildaLib.SwapOperator: (+(*6*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*6*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*6*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*6*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*6*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*6*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*6*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*6))
MathildaLib.MultiplyOneOperator: (+(*2*3)+(*1*2*4))
MathildaLib.ScalarProductOperator: (+(*2*3)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*2*3))
MathildaLib.LiftOperator: (+8+(*2*3))
MathildaLib.SwapOperator: (+8+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+8)
MathildaLib.SwapOperator: (+(*2*3)+8)
MathildaLib.SwapOperator: (+(*8)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*8))
MathildaLib.MultiplyOperator: (+(*2*3)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*3))
MathildaLib.SwapOperator: (+(*8*1)+(*3*2))
MathildaLib.MultiplyOneOperator: (+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*3*2))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*3*2))
MathildaLib.SwapOperator: (+(*2*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*2*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*2))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3))
MathildaLib.ScalarProductOperator: (+(*1*2*3)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*1*2*3))
MathildaLib.LiftOperator: (+8+(*1*2*3))
MathildaLib.SwapOperator: (+8+(*1*3*2))
MathildaLib.SwapOperator: (+8+(*2*3*1))
MathildaLib.SwapOperator: (+8+(*2*1*3))
MathildaLib.SwapOperator: (+8+(*3*1*2))
MathildaLib.SwapOperator: (+8+(*3*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+8)
MathildaLib.SwapOperator: (+(*1*2*3)+8)
MathildaLib.SwapOperator: (+(*1*3*2)+8)
MathildaLib.SwapOperator: (+(*2*3*1)+8)
MathildaLib.SwapOperator: (+(*2*1*3)+8)
MathildaLib.SwapOperator: (+(*3*1*2)+8)
MathildaLib.SwapOperator: (+(*8)+(*1*3*2))
MathildaLib.SwapOperator: (+(*8)+(*2*3*1))
MathildaLib.SwapOperator: (+(*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8)+(*3*1*2))
MathildaLib.SwapOperator: (+(*8)+(*3*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*8))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8))
MathildaLib.SwapOperator: (+(*3*1*2)+(*8))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8))
MathildaLib.MultiplyOperator: (+(*1*2*3)+(*1*8))
MathildaLib.SwapOperator: (+(*1*8)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*8)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*8)+(*3*2*1))
MathildaLib.SwapOperator: (+(*8*1)+(*3*2*1))
MathildaLib.SwapOperator: (+(*8*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*8*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*8*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*8*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*8))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*8))
MathildaLib.SwapOperator: (+(*3*2*1)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.MultiplyOneOperator: (+(*1*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*2*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*4))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*1*2))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*1*3)+(*4*2*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*2*1*4)+(*3*2*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*2*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*1*2))
MathildaLib.SwapOperator: (+(*3*1*2)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*2*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*4*2))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*4*1))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*4*1*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*2*1))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*3*1*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*1*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*3*2))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*2*3*1))
MathildaLib.SwapOperator: (+(*4*2*1)+(*3*2*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,17ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 14
MathildaLib.SumOperator: 14
MathildaLib.LiftOperator: 14
MathildaLib.ScalarProductOperator: 14
MathildaLib.SwapOperator: (+(*1*8)+6)
MathildaLib.SwapOperator: (+(*2*4)+6)
MathildaLib.SwapOperator: (+(*2*1*4)+6)
MathildaLib.SwapOperator: (+(*1*2*4)+6)
MathildaLib.SwapOperator: (+6+(*2*1*4))
MathildaLib.LiftOperator: 14
MathildaLib.SwapOperator: (+8+(*6))
MathildaLib.LiftOperator: (+8+(*6))
MathildaLib.SwapOperator: (+(*1*8)+(*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6))
MathildaLib.SwapOperator: (+(*6)+(*2*1*4))
MathildaLib.ScalarProductOperator: 14
MathildaLib.SwapOperator: (+(*1*6)+8)
MathildaLib.LiftOperator: (+8+(*1*6))
MathildaLib.SwapOperator: (+8+(*1*6))
MathildaLib.ScalarProductOperator: (+8+(*1*6))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*6*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*3)+8)
MathildaLib.LiftOperator: (+8+(*2*3))
MathildaLib.SwapOperator: (+8+(*2*3))
MathildaLib.ScalarProductOperator: (+8+(*2*3))
MathildaLib.SwapOperator: (+(*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*3)+8)
MathildaLib.SwapOperator: (+(*1*2*3)+8)
MathildaLib.SwapOperator: (+8+(*2*1*3))
MathildaLib.LiftOperator: (+8+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*2*1*3))
MathildaLib.SwapOperator: (+8+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*1*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*8)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*2*4))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*1*4))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
MathildaLib.MultiplyOperator: (*1*2*12)
MathildaLib.MultiplyOperator: (*1*24)
MathildaLib.SwapOperator: (*24*1)
MathildaLib.MultiplyOneOperator: (*2*12)
MathildaLib.SwapOperator: (*12*2)
MathildaLib.SwapOperator: (*1*12*2)
MathildaLib.SwapOperator: (*2*12*1)
MathildaLib.SwapOperator: (*2*1*12)
MathildaLib.SwapOperator: (*12*1*2)
MathildaLib.SwapOperator: (*12*2*1)
MathildaLib.MultiplyOperator: (*1*6*4)
MathildaLib.MultiplyOneOperator: (*6*4)
MathildaLib.SwapOperator: (*4*6)
MathildaLib.SwapOperator: (*1*4*6)
MathildaLib.SwapOperator: (*4*1*6)
MathildaLib.SwapOperator: (*4*6*1)
MathildaLib.SwapOperator: (*6*4*1)
MathildaLib.SwapOperator: (*6*1*4)
MathildaLib.MultiplyOneOperator: (*2*3*4)
MathildaLib.SwapOperator: (*2*4*3)
MathildaLib.MultiplyOperator: (*8*3)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.SwapOperator: (*3*4*2)
MathildaLib.SwapOperator: (*3*2*4)
MathildaLib.SwapOperator: (*4*2*3)
MathildaLib.SwapOperator: (*4*3*2)
MathildaLib.SwapOperator: (*1*2*4*3)
MathildaLib.MultiplyOperator: (*1*8*3)
MathildaLib.SwapOperator: (*1*3*8)
MathildaLib.SwapOperator: (*3*1*8)
MathildaLib.SwapOperator: (*3*8*1)
MathildaLib.SwapOperator: (*8*3*1)
MathildaLib.SwapOperator: (*8*1*3)
MathildaLib.SwapOperator: (*1*3*4*2)
MathildaLib.SwapOperator: (*1*3*2*4)
MathildaLib.SwapOperator: (*1*4*2*3)
MathildaLib.SwapOperator: (*1*4*3*2)
MathildaLib.SwapOperator: (*2*4*3*1)
MathildaLib.SwapOperator: (*2*1*3*4)
MathildaLib.SwapOperator: (*2*1*4*3)
MathildaLib.SwapOperator: (*2*3*4*1)
MathildaLib.SwapOperator: (*2*3*1*4)
MathildaLib.SwapOperator: (*2*4*1*3)
MathildaLib.SwapOperator: (*3*4*1*2)
MathildaLib.SwapOperator: (*3*1*4*2)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*3*2*1*4)
MathildaLib.SwapOperator: (*3*2*4*1)
MathildaLib.SwapOperator: (*3*4*2*1)
MathildaLib.SwapOperator: (*4*3*2*1)
MathildaLib.SwapOperator: (*4*1*2*3)
MathildaLib.SwapOperator: (*4*1*3*2)
MathildaLib.SwapOperator: (*4*2*3*1)
MathildaLib.SwapOperator: (*4*2*1*3)
MathildaLib.SwapOperator: (*4*3*1*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,07ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
MathildaLib.MultiplyOperator: (*1*2*12)
MathildaLib.MultiplyOperator: (*1*24)
MathildaLib.SwapOperator: (*24*1)
MathildaLib.MultiplyOneOperator: (*2*12)
MathildaLib.SwapOperator: (*12*2)
MathildaLib.SwapOperator: (*1*12*2)
MathildaLib.SwapOperator: (*2*12*1)
MathildaLib.SwapOperator: (*2*1*12)
MathildaLib.SwapOperator: (*12*1*2)
MathildaLib.SwapOperator: (*12*2*1)
MathildaLib.MultiplyOperator: (*1*6*4)
MathildaLib.MultiplyOneOperator: (*6*4)
MathildaLib.SwapOperator: (*4*6)
MathildaLib.SwapOperator: (*1*4*6)
MathildaLib.SwapOperator: (*4*1*6)
MathildaLib.SwapOperator: (*4*6*1)
MathildaLib.SwapOperator: (*6*4*1)
MathildaLib.SwapOperator: (*6*1*4)
MathildaLib.MultiplyOneOperator: (*2*3*4)
MathildaLib.SwapOperator: (*2*4*3)
MathildaLib.MultiplyOperator: (*8*3)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.SwapOperator: (*3*4*2)
MathildaLib.SwapOperator: (*3*2*4)
MathildaLib.SwapOperator: (*4*2*3)
MathildaLib.SwapOperator: (*4*3*2)
MathildaLib.SwapOperator: (*1*2*4*3)
MathildaLib.MultiplyOperator: (*1*8*3)
MathildaLib.SwapOperator: (*1*3*8)
MathildaLib.SwapOperator: (*3*1*8)
MathildaLib.SwapOperator: (*3*8*1)
MathildaLib.SwapOperator: (*8*3*1)
MathildaLib.SwapOperator: (*8*1*3)
MathildaLib.SwapOperator: (*1*3*4*2)
MathildaLib.SwapOperator: (*1*3*2*4)
MathildaLib.SwapOperator: (*1*4*2*3)
MathildaLib.SwapOperator: (*1*4*3*2)
MathildaLib.SwapOperator: (*2*4*3*1)
MathildaLib.SwapOperator: (*2*1*3*4)
MathildaLib.SwapOperator: (*2*1*4*3)
MathildaLib.SwapOperator: (*2*3*4*1)
MathildaLib.SwapOperator: (*2*3*1*4)
MathildaLib.SwapOperator: (*2*4*1*3)
MathildaLib.SwapOperator: (*3*4*1*2)
MathildaLib.SwapOperator: (*3*1*4*2)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*3*2*1*4)
MathildaLib.SwapOperator: (*3*2*4*1)
MathildaLib.SwapOperator: (*3*4*2*1)
MathildaLib.SwapOperator: (*4*3*2*1)
MathildaLib.SwapOperator: (*4*1*2*3)
MathildaLib.SwapOperator: (*4*1*3*2)
MathildaLib.SwapOperator: (*4*2*3*1)
MathildaLib.SwapOperator: (*4*2*1*3)
MathildaLib.SwapOperator: (*4*3*1*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:10:06</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,06ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (*24)
MathildaLib.LiftOperator: 24
MathildaLib.MultiplyOperator: (*1*2*12)
MathildaLib.MultiplyOperator: (*1*24)
MathildaLib.SwapOperator: (*24*1)
MathildaLib.MultiplyOneOperator: (*2*12)
MathildaLib.SwapOperator: (*12*2)
MathildaLib.SwapOperator: (*1*12*2)
MathildaLib.SwapOperator: (*2*12*1)
MathildaLib.SwapOperator: (*2*1*12)
MathildaLib.SwapOperator: (*12*1*2)
MathildaLib.SwapOperator: (*12*2*1)
MathildaLib.MultiplyOperator: (*1*6*4)
MathildaLib.MultiplyOneOperator: (*6*4)
MathildaLib.SwapOperator: (*4*6)
MathildaLib.SwapOperator: (*1*4*6)
MathildaLib.SwapOperator: (*4*1*6)
MathildaLib.SwapOperator: (*4*6*1)
MathildaLib.SwapOperator: (*6*4*1)
MathildaLib.SwapOperator: (*6*1*4)
MathildaLib.MultiplyOneOperator: (*2*3*4)
MathildaLib.SwapOperator: (*2*4*3)
MathildaLib.MultiplyOperator: (*8*3)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.SwapOperator: (*3*4*2)
MathildaLib.SwapOperator: (*3*2*4)
MathildaLib.SwapOperator: (*4*2*3)
MathildaLib.SwapOperator: (*4*3*2)
MathildaLib.SwapOperator: (*1*2*4*3)
MathildaLib.MultiplyOperator: (*1*8*3)
MathildaLib.SwapOperator: (*1*3*8)
MathildaLib.SwapOperator: (*3*1*8)
MathildaLib.SwapOperator: (*3*8*1)
MathildaLib.SwapOperator: (*8*3*1)
MathildaLib.SwapOperator: (*8*1*3)
MathildaLib.SwapOperator: (*1*3*4*2)
MathildaLib.SwapOperator: (*1*3*2*4)
MathildaLib.SwapOperator: (*1*4*2*3)
MathildaLib.SwapOperator: (*1*4*3*2)
MathildaLib.SwapOperator: (*2*4*3*1)
MathildaLib.SwapOperator: (*2*1*3*4)
MathildaLib.SwapOperator: (*2*1*4*3)
MathildaLib.SwapOperator: (*2*3*4*1)
MathildaLib.SwapOperator: (*2*3*1*4)
MathildaLib.SwapOperator: (*2*4*1*3)
MathildaLib.SwapOperator: (*3*4*1*2)
MathildaLib.SwapOperator: (*3*1*4*2)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*3*2*1*4)
MathildaLib.SwapOperator: (*3*2*4*1)
MathildaLib.SwapOperator: (*3*4*2*1)
MathildaLib.SwapOperator: (*4*3*2*1)
MathildaLib.SwapOperator: (*4*1*2*3)
MathildaLib.SwapOperator: (*4*1*3*2)
MathildaLib.SwapOperator: (*4*2*3*1)
MathildaLib.SwapOperator: (*4*2*1*3)
MathildaLib.SwapOperator: (*4*3*1*2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:15</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,06ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 24
MathildaLib.ScalarProductOperator: 24
MathildaLib.MultiplyOperator: (*1*24)
MathildaLib.SwapOperator: (*2*1*12)
MathildaLib.SwapOperator: (*4*6)
MathildaLib.MultiplyOneOperator: (*4*6)
MathildaLib.SwapOperator: (*6*1*4)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.MultiplyOperator: (*3*8)
MathildaLib.SwapOperator: (*3*2*4)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.SwapOperator: (*8*1*3)
MathildaLib.SwapOperator: (*1*3*8)
MathildaLib.MultiplyOperator: (*1*3*8)
MathildaLib.SwapOperator: (*4*2*1*3)
MathildaLib.SwapOperator: (*4*1*2*3)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*2*3*1*4)
MathildaLib.SwapOperator: (*2*1*3*4)
MathildaLib.SwapOperator: (*1*3*2*4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001be] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:174 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:37</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001be] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:174 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:07:38</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001be] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:174 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:10</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Connection refused</Message>
                  <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:08:47</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Connection refused</Message>
                  <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:09:45</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Requires product list to compare ignored</Message>
                  <StackTrace>  at MathildaLib.ListNode.CompareToIgnoreScalar (MathildaLib.Node other) [0x001c6] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:298 
  at MathildaLib.AddOperator.Do (MathildaLib.Node&amp; node) [0x001cd] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:83 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.AddOperator+&lt;Add&gt;c__AnonStorey4.&lt;&gt;m__4 (Int32 i, Int32 j) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:115 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.AddOperator.Add (Search search) [0x00020] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:114 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SmartLiftOperator: (+(*c*a)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*a)+(*c*b))
MathildaLib.LiftOperator: (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SmartLiftOperator: (+(*d*b)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.LiftOperator: (+(+(*d*b)+(*c*b))+(+(*c*a)+(*d*a)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:10:08</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Requires product list to compare ignored</Message>
                  <StackTrace>  at MathildaLib.ListNode.CompareToIgnoreScalar (MathildaLib.Node other) [0x001c6] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:298 
  at MathildaLib.AddOperator.Do (MathildaLib.Node&amp; node) [0x001cd] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:83 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.AddOperator+&lt;Add&gt;c__AnonStorey4.&lt;&gt;m__4 (Int32 i, Int32 j) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:115 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.AddOperator.Add (Search search) [0x00020] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:114 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00132] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*b*d))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*c*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*d*b))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*d*a)+(*c*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*c*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*a*c))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*a*d))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*d*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*d*a))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*a*d))))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*b*c))))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SmartLiftOperator: (+(*c*a)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*c*b)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*d)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*d*b)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*a*c)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*a*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*a*d)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*c*a)+(*d*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*d*b)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*c*b)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*b*d)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*d)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*a*d)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*c*a)+(*d*b)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*a*c)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*b*c)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*c*a)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*a*c)+(*d*b))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*b*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*c*a)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*b*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*c*b)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*d)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*a*d)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*b*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*c*b)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*a*c)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*c*a)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*d*a)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*b)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*c*a)+(*c*b))
MathildaLib.LiftOperator: (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*d*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*b*d))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*b*d))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*d*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*b*c))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*c*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*c*b))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*b*c))))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SmartLiftOperator: (+(*d*b)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*c)+(+(*d*a)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*d)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*a*d))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*c*a)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*c*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*c)+(*d*a)))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*c*a)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*c*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*c*a))+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*c)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*d*a))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*c*a)+(*a*d))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*c*a)+(*a*d)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*a*d)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*c*a))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*d)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*a*c)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*c*b)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*d*b)+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*c*b))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*d*a))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*c)+(*d*b))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*d*b)+(*c*b))
MathildaLib.LiftOperator: (+(+(*d*b)+(*c*b))+(+(*c*a)+(*d*a)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:17</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Requires product list to compare ignored</Message>
                  <StackTrace>  at MathildaLib.ListNode.CompareToIgnoreScalar (MathildaLib.Node other) [0x001c6] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:298 
  at MathildaLib.AddOperator.Do (MathildaLib.Node&amp; node) [0x001cd] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:83 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.AddOperator+&lt;Add&gt;c__AnonStorey4.&lt;&gt;m__4 (Int32 i, Int32 j) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:115 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.AddOperator.Add (Search search) [0x00020] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:114 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*d*b))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*b*d))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*b*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*d*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*d*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*d*b))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*d*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*c*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*c*a))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*d*a))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*b*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*b*c))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*d*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*c*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*d*a))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*c*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*c*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*c*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*a*d))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*d*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*a*d))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*a*d))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*d*a))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*c*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*c*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*b*c))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*d*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*b*d))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*b*c))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*c*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*b*d))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*a*c))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*a*c))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*a*c))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*c*a))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*d*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*c*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*d*a)+(*c*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*c*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*a*c))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*a*d))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*d*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*d*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*a*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*b*c))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*d*b))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*b*d))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*b*c))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*c*b))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*b*d))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*d*b))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*c*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*c*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*c*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*b*c))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*b*d))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*d*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*d*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*b*d))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*b*d))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*b*d))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*b*d))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*b*d))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*b*d))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*d*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*d*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*c*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*c*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*b*c))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*b*c))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*b*c))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*d*b))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*b*d))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*b*c))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*c*b))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*c*b))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*d*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*d*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*d*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*b*d))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*b*c))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*c*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*c*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*c*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*c*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*b*c))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*b*d))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*d*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*d*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*d*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*d*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*d*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*b*d))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*b*c))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*c*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*b*d))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*d*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*b*c))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*b*c))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*b*c))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*b*c))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*c*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*c*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*c*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*b*c))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(-(*b*i)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,10ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(-(*b*i)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(-(*b*i)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(-(*b*i)))
MathildaLib.SumOperator: (-(*b*i))
MathildaLib.SwapOperator: (-(*i*b))
MathildaLib.SwapOperator: (*(-i)*b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:11:47</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(-(*b*i)))
MathildaLib.LiftOperator: (-(*b*i))
MathildaLib.SwapOperator: (-(*i*b))
MathildaLib.SwapOperator: (*(-(*i*b)))
MathildaLib.SwapOperator: (*(-i)*b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,05ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: (-(*b*i))
MathildaLib.MultiplyOperator: (-(*b*i))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:11:49</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*2*b)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*2*b)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*2*b)))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*2*b)))
MathildaLib.SumOperator: (+(*2*a)+(*2*b))
MathildaLib.SwapOperator: (+(*2*a)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*2*b))
MathildaLib.SwapOperator: (+(*2*b)+(*a*2))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*a*2))
MathildaLib.SwapOperator: (*2*(+b+a))
MathildaLib.MultiplyOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+b+a)*2)
MathildaLib.MultiplyOperator: (*(+(*b*2)+(*a*2)))
MathildaLib.SwapOperator: (*(+a+b)*2)
MathildaLib.MultiplyOperator: (*(+(*a*2)+(*b*2)))
========
MathildaLib.SwapOperator: (+(*2*a)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*2*b))
MathildaLib.SwapOperator: (+(*2*b)+(*a*2))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*a*2))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:11:50</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,06ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*2*b)))
MathildaLib.LiftOperator: (+(*2*a)+(*2*b))
MathildaLib.SwapOperator: (+(*2*a)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*2*b))
MathildaLib.SwapOperator: (+(*2*b)+(*a*2))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*a*2))
MathildaLib.SwapOperator: (*(+(*2*a)+(*b*2)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*b*2)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*2*b)))
MathildaLib.SwapOperator: (*(+(*2*b)+(*a*2)))
MathildaLib.SwapOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*b*2)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*b*2)+(*a*2)))
MathildaLib.SwapOperator: (*2*(+b+a))
MathildaLib.SwapOperator: (*(+b+a)*2)
MathildaLib.SwapOperator: (*(+a+b)*2)
========
MathildaLib.SwapOperator: (+(*2*a)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*b*2))
MathildaLib.SwapOperator: (+(*a*2)+(*2*b))
MathildaLib.SwapOperator: (+(*2*b)+(*a*2))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*2*a))
MathildaLib.SwapOperator: (+(*b*2)+(*a*2))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,06ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.LiftOperator: (+(*2*a)+(*2*b))
MathildaLib.SwapOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.MultiplyOperator: (+(*2*a)+(*2*b))
MathildaLib.SwapOperator: (*(+a+b)*2)
========
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:11:52</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:11:54</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.AddOperator: (+(*3*a))
aMin (*3*a) bMin (*3*a)
aMass 3 bMass 3
========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.AddOperator: (+(*3*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.AddOperator: (+(*3*a))
aMin (*3*a) bMin (*3*a)
aMass 3 bMass 3
========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.AddOperator: (+(*3*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.AddOperator: (+(*3*a))
aMin (*3*a) bMin (*3*a)
aMass 3 bMass 3
========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.AddOperator: (+(*3*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (*3*a)
MathildaLib.SwapOperator: (*a*3)
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*2))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*1))
MathildaLib.SwapOperator: (+(*a*1)+(*2*a))
MathildaLib.SwapOperator: (+(*a*1)+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+(*a*1))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SumOperator: (*a*(+3))
MathildaLib.MultiplyOperator: (*(+(*a*3)))
MathildaLib.SumOperator: (+(*a*3))
MathildaLib.SwapOperator: (*(+3)*a)
MathildaLib.SwapOperator: (*a*(+2+1))
MathildaLib.MultiplyOperator: (*(+(*a*2)+(*a*1)))
MathildaLib.SwapOperator: (*(+2+1)*a)
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+1+2)*a)
MathildaLib.MultiplyOperator: (*(+(*1*a)+(*2*a)))
========
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (*3*a)
MathildaLib.SwapOperator: (*a*3)
MathildaLib.SwapOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*2*a)+a)
aMin (*3*a) bMin (*3*a)
aMass 3 bMass 3
========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (*3*a)
MathildaLib.SwapOperator: (*a*3)
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*2))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*1))
MathildaLib.SwapOperator: (+(*a*1)+(*2*a))
MathildaLib.SwapOperator: (+(*a*1)+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+(*a*1))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SumOperator: (*a*(+3))
MathildaLib.MultiplyOperator: (*(+(*a*3)))
MathildaLib.SumOperator: (+(*a*3))
MathildaLib.SwapOperator: (*(+3)*a)
MathildaLib.SwapOperator: (*a*(+2+1))
MathildaLib.MultiplyOperator: (*(+(*a*2)+(*a*1)))
MathildaLib.SwapOperator: (*(+2+1)*a)
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+1+2)*a)
MathildaLib.MultiplyOperator: (*(+(*1*a)+(*2*a)))
========
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (*3*a)
MathildaLib.SwapOperator: (*a*3)
MathildaLib.SwapOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*2*a)+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:11:56</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply6 () [0x000b0] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:64 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.LiftOperator: (+(*a*1)+(*a*2))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*3))
MathildaLib.LiftOperator: (*a*3)
MathildaLib.SwapOperator: (*3*a)
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*2))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*1))
MathildaLib.SwapOperator: (+(*a*1)+(*2*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a*1))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.MultiplyOneOperator: (*(+(*a)+(*a*2)))
MathildaLib.LiftOperator: (*(+a+(*a*2)))
MathildaLib.SwapOperator: (*(+a+(*2*a)))
MathildaLib.AddOperator: (*(+(*3*a)))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*a*3))
MathildaLib.ScalarProductOperator: (*(*a*3))
MathildaLib.SwapOperator: (*(+(*a*3)))
MathildaLib.SwapOperator: (*(+(*2*a)+a))
MathildaLib.SwapOperator: (*(+(*a*2)+a))
MathildaLib.SwapOperator: (*(+(*a)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*a*2)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a*1)))
MathildaLib.SwapOperator: (*(+(*a*1)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*a*1)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SumOperator: (*a*(+3))
MathildaLib.SwapOperator: (*(+3)*a)
MathildaLib.SwapOperator: (*a*(+2+1))
MathildaLib.SwapOperator: (*(+2+1)*a)
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*3))
MathildaLib.LiftOperator: (*a*3)
MathildaLib.SwapOperator: (*3*a)
MathildaLib.SwapOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*2*a)+a)
aMin (*(*3*a)) bMin (+(*3*a))
aMass 4 bMass 4
========
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.LiftOperator: (+(*a*1)+(*a*2))
MathildaLib.MultiplyOneOperator: (+(*a)+(*a*2))
MathildaLib.LiftOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*3))
MathildaLib.LiftOperator: (*a*3)
MathildaLib.SwapOperator: (*3*a)
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*2))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*1))
MathildaLib.SwapOperator: (+(*a*1)+(*2*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a*1))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.MultiplyOneOperator: (*(+(*a)+(*a*2)))
MathildaLib.LiftOperator: (*(+a+(*a*2)))
MathildaLib.SwapOperator: (*(+a+(*2*a)))
MathildaLib.AddOperator: (*(+(*3*a)))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*a*3))
MathildaLib.ScalarProductOperator: (*(*a*3))
MathildaLib.SwapOperator: (*(+(*a*3)))
MathildaLib.SwapOperator: (*(+(*2*a)+a))
MathildaLib.SwapOperator: (*(+(*a*2)+a))
MathildaLib.SwapOperator: (*(+(*a)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*a*2)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a*1)))
MathildaLib.SwapOperator: (*(+(*a*1)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*a*1)))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SumOperator: (*a*(+3))
MathildaLib.SwapOperator: (*(+3)*a)
MathildaLib.SwapOperator: (*a*(+2+1))
MathildaLib.SwapOperator: (*(+2+1)*a)
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*3))
MathildaLib.LiftOperator: (*a*3)
MathildaLib.SwapOperator: (*3*a)
MathildaLib.SwapOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*2*a)+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:13:07</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply6 () [0x000b0] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:64 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
aMin (*(*3*a)) bMin (+(*3*a))
aMass 4 bMass 4
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:29</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply6 () [0x000b0] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:64 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
aMin (*(*3*a)) bMin (+(*3*a))
aMass 4 bMass 4
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:39</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply6 () [0x000b0] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:64 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
aMin (*(*3*a)) bMin (+(*3*a))
aMass 4 bMass 4
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*3)+(*2*3)))
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
========
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*3)+(*2*3)))
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
========
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*3)+(*2*3)))
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
========
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*3)+(*2*3)))
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
MathildaLib.SwapOperator: (+6+3)
MathildaLib.SwapOperator: (+(*6)+3)
MathildaLib.SwapOperator: (+3+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+3)
MathildaLib.SwapOperator: (+(*2*3)+3)
MathildaLib.ScalarProductOperator: (+(*3)+(*6))
MathildaLib.LiftOperator: (+(*3)+6)
MathildaLib.SwapOperator: (+6+(*3))
MathildaLib.SwapOperator: (+(*6)+(*3))
MathildaLib.SwapOperator: (+(*3)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3))
MathildaLib.ScalarProductOperator: (+(*1*3)+(*6))
MathildaLib.SwapOperator: (+(*6)+(*1*3))
MathildaLib.LiftOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+6+(*3*1))
MathildaLib.SwapOperator: (+(*3*1)+6)
MathildaLib.SwapOperator: (+(*1*3)+6)
MathildaLib.SwapOperator: (+(*6)+(*3*1))
MathildaLib.SwapOperator: (+(*3*1)+(*6))
MathildaLib.SumOperator: (+(*1*3)+(*2*3))
MathildaLib.SwapOperator: (+(*1*3)+(*3*2))
MathildaLib.SwapOperator: (+(*3*1)+(*3*2))
MathildaLib.SwapOperator: (+(*3*1)+(*2*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3*1))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*3*2)+(*1*3))
MathildaLib.SwapOperator: (+(*3*2)+(*3*1))
MathildaLib.SwapOperator: (*3*(+1+2))
MathildaLib.MultiplyOperator: (*(+(*3*1)+(*3*2)))
MathildaLib.SumOperator: (*3*(+3))
MathildaLib.LiftOperator: (*3*3)
MathildaLib.ScalarProductOperator: (*9)
MathildaLib.MultiplyOperator: (*(+(*3*3)))
MathildaLib.ScalarProductOperator: (+(*9))
MathildaLib.LiftOperator: 9
MathildaLib.SumOperator: (+(*3*3))
MathildaLib.SwapOperator: (*(+3)*3)
MathildaLib.SwapOperator: (*3*(+2+1))
MathildaLib.MultiplyOperator: (*(+(*3*2)+(*3*1)))
MathildaLib.SwapOperator: (*(+2+1)*3)
MathildaLib.MultiplyOperator: (*(+(*2*3)+(*1*3)))
========
MathildaLib.MultiplyOneOperator: (+(*3)+(*2*3))
MathildaLib.LiftOperator: (+3+(*2*3))
MathildaLib.ScalarProductOperator: (+3+(*6))
MathildaLib.LiftOperator: (+3+6)
MathildaLib.SumOperator: (+9)
MathildaLib.SwapOperator: (+6+3)
MathildaLib.SwapOperator: (+(*6)+3)
MathildaLib.SwapOperator: (+3+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+3)
MathildaLib.SwapOperator: (+(*2*3)+3)
MathildaLib.ScalarProductOperator: (+(*3)+(*6))
MathildaLib.LiftOperator: (+(*3)+6)
MathildaLib.SwapOperator: (+6+(*3))
MathildaLib.SwapOperator: (+(*6)+(*3))
MathildaLib.SwapOperator: (+(*3)+(*3*2))
MathildaLib.SwapOperator: (+(*3*2)+(*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3))
MathildaLib.ScalarProductOperator: (+(*1*3)+(*6))
MathildaLib.SwapOperator: (+(*6)+(*1*3))
MathildaLib.LiftOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+6+(*3*1))
MathildaLib.SwapOperator: (+(*3*1)+6)
MathildaLib.SwapOperator: (+(*1*3)+6)
MathildaLib.SwapOperator: (+(*6)+(*3*1))
MathildaLib.SwapOperator: (+(*3*1)+(*6))
MathildaLib.SwapOperator: (+(*1*3)+(*3*2))
MathildaLib.SwapOperator: (+(*3*1)+(*3*2))
MathildaLib.SwapOperator: (+(*3*1)+(*2*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3*1))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*3*2)+(*1*3))
MathildaLib.SwapOperator: (+(*3*2)+(*3*1))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,09ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 9
MathildaLib.SumOperator: 9
MathildaLib.LiftOperator: 9
MathildaLib.ScalarProductOperator: 9
MathildaLib.SwapOperator: (+(*2*3)+3)
MathildaLib.LiftOperator: 9
MathildaLib.SwapOperator: (+6+(*3))
MathildaLib.LiftOperator: (+6+(*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3))
MathildaLib.MultiplyOneOperator: 9
MathildaLib.SwapOperator: (+(*1*3)+6)
MathildaLib.LiftOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.LiftOperator: 9
MathildaLib.LiftOperator: (*9)
MathildaLib.SumOperator: (*9)
MathildaLib.LiftOperator: (*9)
MathildaLib.ScalarProductOperator: (*9)
MathildaLib.SwapOperator: (*(+(*2*3)+3))
MathildaLib.LiftOperator: (*9)
MathildaLib.SwapOperator: (*(+6+(*3)))
MathildaLib.LiftOperator: (*(+6+(*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*3)))
MathildaLib.SwapOperator: (*(+(*1*3)+6))
MathildaLib.LiftOperator: (*(+6+(*1*3)))
MathildaLib.SwapOperator: (*(+6+(*1*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*1*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*1*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*1*3)))
MathildaLib.MultiplyOperator: 9
MathildaLib.LiftOperator: (*3*3)
MathildaLib.ScalarProductOperator: (*(*9))
MathildaLib.LiftOperator: (*(*9))
MathildaLib.ScalarProductOperator: (+(*9))
MathildaLib.MultiplyOperator: (*(*9))
MathildaLib.SumOperator: (*(*9))
========
MathildaLib.LiftOperator: 9
MathildaLib.SumOperator: 9
MathildaLib.LiftOperator: 9
MathildaLib.ScalarProductOperator: 9
MathildaLib.SwapOperator: (+(*2*3)+3)
MathildaLib.LiftOperator: 9
MathildaLib.SwapOperator: (+6+(*3))
MathildaLib.LiftOperator: (+6+(*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3))
MathildaLib.MultiplyOneOperator: 9
MathildaLib.SwapOperator: (+(*1*3)+6)
MathildaLib.LiftOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
========
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (*3*a)
MathildaLib.SwapOperator: (*a*3)
MathildaLib.SwapOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.SwapOperator: (+(*a)+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+(*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.SumOperator: (+(*1*a)+(*2*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*2))
MathildaLib.SwapOperator: (+(*a*1)+(*a*2))
MathildaLib.SwapOperator: (+(*a*1)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*1))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a*1))
MathildaLib.SwapOperator: (*a*(+1+2))
MathildaLib.MultiplyOperator: (*(+(*a*1)+(*a*2)))
MathildaLib.SumOperator: (*a*(+3))
MathildaLib.MultiplyOperator: (*(+(*a*3)))
MathildaLib.SumOperator: (+(*a*3))
MathildaLib.SwapOperator: (*(+3)*a)
MathildaLib.SwapOperator: (*a*(+2+1))
MathildaLib.MultiplyOperator: (*(+(*a*2)+(*a*1)))
MathildaLib.SwapOperator: (*(+2+1)*a)
MathildaLib.MultiplyOperator: (*(+(*2*a)+(*1*a)))
========
MathildaLib.MultiplyOneOperator: (+(*a)+(*2*a))
MathildaLib.LiftOperator: (+a+(*2*a))
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (*3*a)
MathildaLib.SwapOperator: (*a*3)
MathildaLib.SwapOperator: (+a+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+a)
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.SwapOperator: (+(*a)+(*a*2))
MathildaLib.SwapOperator: (+(*a*2)+(*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.SwapOperator: (+(*1*a)+(*a*2))
MathildaLib.SwapOperator: (+(*a*1)+(*a*2))
MathildaLib.SwapOperator: (+(*a*1)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*1))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a*1))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:33</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply8 () [0x0005d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:82 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*2*a)+a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a)))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SumOperator: (*a*(+3))
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestMultiply.TestMultiply9 () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*(+3+4))+(*2*(+3+4))))
MathildaLib.MultiplyOneOperator: (+(*(+3+4))+(*2*(+3+4)))
before smart lift (+(*(+3+4))+(*2*(+3+4)))
after smart lift (+3+4+(*2*(+3+4)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestMultiply.TestMultiply9 () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*(+3+4))+(*2*(+3+4))))
MathildaLib.MultiplyOneOperator: (+(*(+3+4))+(*2*(+3+4)))
before smart lift (+(*(+3+4))+(*2*(+3+4)))
after smart lift (+3+4+(*2*(+3+4)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001ba] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:160 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00186] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:153 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestMultiply.TestMultiply9 () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*(+3+4))+(*2*(+3+4))))
MathildaLib.MultiplyOneOperator: (+(*(+3+4))+(*2*(+3+4)))
before smart lift (+(*(+3+4))+(*2*(+3+4)))
after smart lift (+3+4+(*2*(+3+4)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : what???</Message>
                  <StackTrace>  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x001be] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:174 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00178] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:154 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestMultiply.TestMultiply9 () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*1*(+3+4))+(*2*(+3+4))))
MathildaLib.MultiplyOneOperator: (+(*(+3+4))+(*2*(+3+4)))
before smart lift (+(*(+3+4))+(*2*(+3+4)))
after smart lift (+3+4+(*2*(+3+4)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:14:37</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.NullReferenceException : Object reference not set to an instance of an object</Message>
                  <StackTrace>  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x00067] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:65 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:84 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00115] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, .OperatorDelegate[] operators) [0x00013] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestMultiply.TestMultiply9 () [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
before smart lift (+(*(+3+4))+(*2*(+3+4)))
after smart lift (+3+4+(*2*(+3+4)))
before smart lift (+(*(+7))+(*2*(+3+4)))
after smart lift (+7+(*2*(+3+4)))
before smart lift (+7+(*(+(*2*3)+(*2*4))))
after smart lift (+7+(*2*3)+(*2*4))
before smart lift (+7+(*(+(*6)+(*2*4))))
after smart lift (+7+(*6)+(*2*4))
before smart lift (+7+(*(+6+(*2*4))))
after smart lift (+7+6+(*2*4))
before smart lift (+7+(*(+6+(*8))))
after smart lift (+7+6+(*8))
before smart lift (+7+(*(+6+8)))
after smart lift (+7+6+8)
before smart lift (+7+(*(+14)))
after smart lift (+7+14)
MathildaLib.LiftOperator: 21
MathildaLib.SumOperator: 21
MathildaLib.SmartLiftOperator: 21
before smart lift (+(*(+14))+7)
after smart lift (+14+7)
MathildaLib.SwapOperator: (+7+(+14))
MathildaLib.SumOperator: 21
before smart lift (+7+(*(+8+6)))
after smart lift (+7+8+6)
before smart lift (+(*(+8+6))+7)
after smart lift (+8+6+7)
before smart lift (+(*(+6+8))+7)
after smart lift (+6+8+7)
MathildaLib.SwapOperator: (+8+6+7)
MathildaLib.SwapOperator: (+6+7+8)
MathildaLib.SwapOperator: (+7+(+6+8))
MathildaLib.SwapOperator: (+(*(+6+8))+7)
MathildaLib.LiftOperator: 21
before smart lift (+7+(*(+(*8)+6)))
after smart lift (+7+(*8)+6)
before smart lift (+(*(+(*8)+6))+7)
after smart lift (+(*8)+6+7)
before smart lift (+(*(+6+(*8)))+7)
after smart lift (+6+(*8)+7)
MathildaLib.SwapOperator: (+8+13)
MathildaLib.LiftOperator: (+8+13)
MathildaLib.SumOperator: (+8+13)
MathildaLib.SwapOperator: (+(*8)+6+7)
MathildaLib.SmartLiftOperator: (+8+13)
MathildaLib.SwapOperator: (+7+(+6+(*8)))
MathildaLib.SwapOperator: (+8+13)
MathildaLib.ScalarProductOperator: 21
before smart lift (+7+(*(+6+(*4*2))))
after smart lift (+7+6+(*4*2))
before smart lift (+7+(*(+(*4*2)+6)))
after smart lift (+7+(*4*2)+6)
before smart lift (+7+(*(+(*2*4)+6)))
after smart lift (+7+(*2*4)+6)
before smart lift (+(*(+(*2*4)+6))+7)
after smart lift (+(*2*4)+6+7)
before smart lift (+(*(+6+(*2*4)))+7)
after smart lift (+6+(*2*4)+7)
before smart lift (+(*(+6+(*4*2)))+7)
after smart lift (+6+(*4*2)+7)
before smart lift (+(*(+(*4*2)+6))+7)
after smart lift (+(*4*2)+6+7)
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SumOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+6+7)
MathildaLib.SwapOperator: (+(*2*4)+6+7)
MathildaLib.SwapOperator: (+7+6+(*2*4))
MathildaLib.SwapOperator: (+6+7+(*2*4))
MathildaLib.SwapOperator: (+6+7+(*2*4))
MathildaLib.SmartLiftOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+(+6+(*2*4))+7)
MathildaLib.SwapOperator: (+7+(+6+(*2*4)))
MathildaLib.SwapOperator: (+7+(+6+(*2*4)))
MathildaLib.SwapOperator: (+7+(+6+(*2*4)))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+6)))
MathildaLib.LiftOperator: 21
before smart lift (+7+(*(+(*6)+(*8))))
after smart lift (+7+(*6)+(*8))
before smart lift (+7+(*(+(*6)+8)))
after smart lift (+7+(*6)+8)
before smart lift (+7+(*(+8+(*6))))
after smart lift (+7+8+(*6))
before smart lift (+(*(+8+(*6)))+7)
after smart lift (+8+(*6)+7)
before smart lift (+(*(+(*6)+8))+7)
after smart lift (+(*6)+8+7)
MathildaLib.LiftOperator: (+6+15)
MathildaLib.SumOperator: (+6+15)
MathildaLib.SwapOperator: (+8+7+(*6))
MathildaLib.SmartLiftOperator: (+6+15)
MathildaLib.SwapOperator: (+7+(+8+(*6)))
MathildaLib.SwapOperator: (+7+(+8+(*6)))
MathildaLib.SwapOperator: (+6+15)
MathildaLib.SwapOperator: (+6+15)
MathildaLib.SwapOperator: (+6+15)
MathildaLib.LiftOperator: (+6+15)
before smart lift (+7+(*(+(*8)+(*6))))
after smart lift (+7+(*8)+(*6))
before smart lift (+(*(+(*8)+(*6)))+7)
after smart lift (+(*8)+(*6)+7)
before smart lift (+(*(+(*6)+(*8)))+7)
after smart lift (+(*6)+(*8)+7)
MathildaLib.SwapOperator: (+7+(*6)+(*8))
MathildaLib.SwapOperator: (+7+(*6)+(*8))
MathildaLib.SwapOperator: (+7+(+(*6)+(*8)))
MathildaLib.SwapOperator: (+(*(+(*6)+(*8)))+7)
before smart lift (+7+(*(+(*6)+(*4*2))))
after smart lift (+7+(*6)+(*4*2))
before smart lift (+7+(*(+(*4*2)+(*6))))
after smart lift (+7+(*4*2)+(*6))
before smart lift (+7+(*(+(*2*4)+(*6))))
after smart lift (+7+(*2*4)+(*6))
before smart lift (+(*(+(*2*4)+(*6)))+7)
after smart lift (+(*2*4)+(*6)+7)
before smart lift (+(*(+(*6)+(*2*4)))+7)
after smart lift (+(*6)+(*2*4)+7)
before smart lift (+(*(+(*6)+(*4*2)))+7)
after smart lift (+(*6)+(*4*2)+7)
before smart lift (+(*(+(*4*2)+(*6)))+7)
after smart lift (+(*4*2)+(*6)+7)
MathildaLib.SwapOperator: (+(*2*4)+7+(*6))
MathildaLib.SwapOperator: (+(*6)+7+(*2*4))
MathildaLib.SwapOperator: (+(*6)+7+(*2*4))
MathildaLib.SwapOperator: (+7+(*6)+(*2*4))
MathildaLib.SwapOperator: (+7+(*6)+(*2*4))
MathildaLib.SwapOperator: (+(+(*6)+(*2*4))+7)
MathildaLib.SwapOperator: (+7+(+(*6)+(*2*4)))
MathildaLib.SwapOperator: (+7+(+(*6)+(*2*4)))
MathildaLib.SwapOperator: (+7+(+(*6)+(*2*4)))
MathildaLib.SwapOperator: (+(*(+(*6)+(*2*4)))+7)
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*6))))
MathildaLib.ScalarProductOperator: 21
before smart lift (+7+(*(+(*2*3)+(*8))))
after smart lift (+7+(*2*3)+(*8))
before smart lift (+7+(*(+(*8)+(*2*3))))
after smart lift (+7+(*8)+(*2*3))
before smart lift (+7+(*(+8+(*2*3))))
after smart lift (+7+8+(*2*3))
before smart lift (+7+(*(+8+(*3*2))))
after smart lift (+7+8+(*3*2))
before smart lift (+7+(*(+(*3*2)+8)))
after smart lift (+7+(*3*2)+8)
before smart lift (+7+(*(+(*2*3)+8)))
after smart lift (+7+(*2*3)+8)
before smart lift (+(*(+(*2*3)+8))+7)
after smart lift (+(*2*3)+8+7)
before smart lift (+(*(+8+(*2*3)))+7)
after smart lift (+8+(*2*3)+7)
before smart lift (+(*(+8+(*3*2)))+7)
after smart lift (+8+(*3*2)+7)
before smart lift (+(*(+(*3*2)+8))+7)
after smart lift (+(*3*2)+8+7)
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SumOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+(*2*3)+7+8)
MathildaLib.SwapOperator: (+8+7+(*2*3))
MathildaLib.SwapOperator: (+8+7+(*2*3))
MathildaLib.SwapOperator: (+7+8+(*2*3))
MathildaLib.SmartLiftOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+(+8+(*2*3))+7)
MathildaLib.SwapOperator: (+7+(+8+(*2*3)))
MathildaLib.SwapOperator: (+7+(+8+(*2*3)))
MathildaLib.SwapOperator: (+7+(+8+(*2*3)))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+7+(*(+(*2*3)+8)))
MathildaLib.LiftOperator: (+7+(*(+8+(*2*3))))
before smart lift (+7+(*(+(*8)+(*3*2))))
after smart lift (+7+(*8)+(*3*2))
before smart lift (+7+(*(+(*3*2)+(*8))))
after smart lift (+7+(*3*2)+(*8))
before smart lift (+(*(+(*3*2)+(*8)))+7)
after smart lift (+(*3*2)+(*8)+7)
before smart lift (+(*(+(*8)+(*3*2)))+7)
after smart lift (+(*8)+(*3*2)+7)
before smart lift (+(*(+(*8)+(*2*3)))+7)
after smart lift (+(*8)+(*2*3)+7)
before smart lift (+(*(+(*2*3)+(*8)))+7)
after smart lift (+(*2*3)+(*8)+7)
MathildaLib.SwapOperator: (+(*2*3)+7+(*8))
MathildaLib.SwapOperator: (+(*2*3)+7+(*8))
MathildaLib.SwapOperator: (+(*8)+7+(*2*3))
MathildaLib.SwapOperator: (+7+(*2*3)+(*8))
MathildaLib.SwapOperator: (+7+(*8)+(*2*3))
MathildaLib.SwapOperator: (+(+(*8)+(*2*3))+7)
MathildaLib.SwapOperator: (+(+(*8)+(*2*3))+7)
MathildaLib.SwapOperator: (+7+(+(*8)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*8)+(*2*3)))
MathildaLib.SwapOperator: (+(*(+(*8)+(*2*3)))+7)
MathildaLib.SwapOperator: (+(*(+(*8)+(*2*3)))+7)
MathildaLib.SwapOperator: (+7+(*(+8+(*2*3))))
before smart lift (+7+(*(+(*2*3)+(*4*2))))
after smart lift (+7+(*2*3)+(*4*2))
before smart lift (+7+(*(+(*3*2)+(*4*2))))
after smart lift (+7+(*3*2)+(*4*2))
before smart lift (+7+(*(+(*3*2)+(*2*4))))
after smart lift (+7+(*3*2)+(*2*4))
before smart lift (+7+(*(+(*2*4)+(*3*2))))
after smart lift (+7+(*2*4)+(*3*2))
before smart lift (+7+(*(+(*2*4)+(*2*3))))
after smart lift (+7+(*2*4)+(*2*3))
before smart lift (+7+(*(+(*4*2)+(*2*3))))
after smart lift (+7+(*4*2)+(*2*3))
before smart lift (+7+(*(+(*4*2)+(*3*2))))
after smart lift (+7+(*4*2)+(*3*2))
before smart lift (+(*(+(*4*2)+(*3*2)))+7)
after smart lift (+(*4*2)+(*3*2)+7)
before smart lift (+(*(+(*2*4)+(*3*2)))+7)
after smart lift (+(*2*4)+(*3*2)+7)
before smart lift (+(*(+(*2*4)+(*2*3)))+7)
after smart lift (+(*2*4)+(*2*3)+7)
before smart lift (+(*(+(*2*3)+(*2*4)))+7)
after smart lift (+(*2*3)+(*2*4)+7)
before smart lift (+(*(+(*2*3)+(*4*2)))+7)
after smart lift (+(*2*3)+(*4*2)+7)
before smart lift (+(*(+(*3*2)+(*4*2)))+7)
after smart lift (+(*3*2)+(*4*2)+7)
before smart lift (+(*(+(*3*2)+(*2*4)))+7)
after smart lift (+(*3*2)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*3*2)+7+(*2*4))
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*3*2)+(*2*4))
MathildaLib.SwapOperator: (+7+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+7+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+7+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(+(*3*2)+(*4*2))+7)
MathildaLib.SwapOperator: (+(+(*2*3)+(*2*4))+7)
MathildaLib.SwapOperator: (+(+(*2*3)+(*2*4))+7)
MathildaLib.SwapOperator: (+7+(+(*2*4)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*2*4)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*2*4)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*2*3)+(*2*4)))
MathildaLib.SwapOperator: (+7+(+(*2*3)+(*2*4)))
MathildaLib.SwapOperator: (+(*(+(*3*2)+(*2*4)))+7)
before smart lift (+(*(+(*4*2)+(*2*3)))+7)
after smart lift (+(*4*2)+(*2*3)+7)
MathildaLib.SwapOperator: (+(*(+(*2*3)+(*2*4)))+7)
MathildaLib.SwapOperator: (+(*(+(*2*3)+(*2*4)))+7)
MathildaLib.SwapOperator: (+(*(+(*2*3)+(*2*4)))+7)
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*2*3))))
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*2*3))))
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*2*3))))
MathildaLib.MultiplyOperator: 21
MathildaLib.SwapOperator: (+(*2*7)+7)
MathildaLib.LiftOperator: (+7+(*2*7))
before smart lift (+7+(*(+(*2*7))))
after smart lift (+7+(*2*7))
MathildaLib.ScalarProductOperator: (+7+(*(*14)))
MathildaLib.SwapOperator: (+(*(*2*7))+7)
MathildaLib.LiftOperator: (+7+(*(*14)))
before smart lift (+7+(*(+(*14))))
after smart lift (+7+(*14))
before smart lift (+(*(+(*14)))+7)
after smart lift (+(*14)+7)
MathildaLib.SwapOperator: (+7+(+(*14)))
before smart lift (+7+(*(+(*7*2))))
after smart lift (+7+(*7*2))
before smart lift (+(*(+(*7*2)))+7)
after smart lift (+(*7*2)+7)
MathildaLib.LiftOperator: (+(*(*7*2))+7)
before smart lift (+(*(+(*2*7)))+7)
after smart lift (+(*2*7)+7)
MathildaLib.SwapOperator: (+7+(+(*2*7)))
MathildaLib.MultiplyOperator: (+7+(*(*14)))
MathildaLib.SwapOperator: (+(*2*(+7))+7)
MathildaLib.SwapOperator: (+(*2*(+3+4))+7)
MathildaLib.SwapOperator: (+7+(*(+3+4)*2))
MathildaLib.SmartLiftOperator: 21
before smart lift (+(*7)+(*(+(*2*3)+(*2*4))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestOperations">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,04ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,04ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,54ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,53ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestListAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestListAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberAddNumberMultiplyNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberAddNumberMultiplyVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyNumberAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyNumberAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyProductList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableMultiplyNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableMultiplyProductList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableMultiplyVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestReal">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,01ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:05:20</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:07:41</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:08:35</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:10:22</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:10</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:18:12</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:19:05</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,16ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:20:21</TestDate>
              <Passed>8</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,16ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:21:40</TestDate>
              <Passed>8</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:25:36</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>2</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:26:13</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>2</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:26:40</TestDate>
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>2</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:26:51</TestDate>
              <Passed>8</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:30:11</TestDate>
              <Passed>8</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:31:02</TestDate>
              <Passed>9</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,17ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:31:28</TestDate>
              <Passed>9</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,17ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>9</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,30ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>9</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,28ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestAdd">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:05:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:07:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:08:35</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:10:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>Multiply +1*a^1
Multiply +1*a^1
Multiply +1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:12</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:05</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestDivide">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:05:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:07:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:08:35</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:10:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>Multiply +1*a^1
Multiply +1*b^1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:12</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:05</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:05:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:07:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:08:35</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:10:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>Multiply +1*a^2
Multiply +1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:12</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:05</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiply2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:05:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:07:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:08:35</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:10:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>Multiply +1*a^1
Multiply +1*b^1
Multiply +1
Multiply +1*c^1
Multiply +1*d^1
Multiply +1
Multiply +1*a^1*c^1
Multiply +1*a^1*d^1
Multiply +1*b^1*c^1
Multiply +1*b^1*d^1
Multiply +1
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:12</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:05</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestScalarToString">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:05:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:07:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:08:35</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:10:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:12</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:05</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestVariableToString">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:05:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:07:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:08:35</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:10:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:12</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:05</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestMultiplyZero">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:05:20</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00026] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:59 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:07:41</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:62 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+0)/(+1)
()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:08:35</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:62 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>Multiply MathildaLib.Real+Product
Multiply MathildaLib.Real+Product
(+0)/(+1)
()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:10:22</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:62 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>Multiply +0*a^1
Multiply +1
(+0)/(+1)
()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:10</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:62 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+0)/(+1)
()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:62 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+0)/(+1)
()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:26</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:62 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+0)/(+1)
()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:12:11</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00044] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:63 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>b (+0)/(+1)
b simplified (0)
()/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:17:36</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00044] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:63 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>b (+0)/(+1)
b simplified (0)
(+0)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:12</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00044] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:63 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>b (+0)/(+1)
b simplified (0)
(+0)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:18:35</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00044] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:63 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>b (+0)/(+1)
b simplified (0)
(+0)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:03</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:19:05</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00022] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:58 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00022] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:58 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestMultiplyZero () [0x00022] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:58 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestZeroPlusOne">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:20:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestZeroPlusVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:21:40</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x00022] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:76 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:22:03</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+0+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:22:25</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:33</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:25:36</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:13</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:40</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:51</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:26:57</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:27:26</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:11</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:16</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(+1*a^1)/(+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:35</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestReal.TestZeroPlusVariable () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/NewLib/Tests/TestReal.cs:80 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>(a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:30:59</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>(a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:02</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>(a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:31:28</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestSubtract">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,16ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,06ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,53ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,53ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestSubtract1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
MathildaLib.SwapOperator: (+-1+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-a)
MathildaLib.SwapOperator: (-a+4)
MathildaLib.SwapOperator: (+1-a+3)
MathildaLib.SwapOperator: (+3-a+1)
MathildaLib.SwapOperator: (+3+1-a)
MathildaLib.SwapOperator: (-a+1+3)
MathildaLib.SwapOperator: (-a+3+1)
========
MathildaLib.SwapOperator: (-a+4)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
MathildaLib.FixSignOperator: (+1+2+-3+-4)
MathildaLib.SwapOperator: (+-4+2+-3+1)
MathildaLib.SwapOperator: (+-4+-3+2+1)
MathildaLib.SwapOperator: (+-4+-3+1+2)
MathildaLib.SwapOperator: (+-4+1+-3+2)
MathildaLib.SwapOperator: (+-4+1+2+-3)
MathildaLib.SwapOperator: (+-4+2+1+-3)
MathildaLib.SwapOperator: (+-3+2+1+-4)
MathildaLib.SwapOperator: (+-3+-4+1+2)
MathildaLib.SwapOperator: (+-3+-4+2+1)
MathildaLib.SwapOperator: (+-3+1+2+-4)
MathildaLib.SwapOperator: (+-3+1+-4+2)
MathildaLib.SwapOperator: (+-3+2+-4+1)
MathildaLib.SwapOperator: (+1+2+-4+-3)
MathildaLib.SwapOperator: (+1+-4+2+-3)
MathildaLib.SwapOperator: (+1+-4+-3+2)
MathildaLib.SwapOperator: (+1+-3+-4+2)
MathildaLib.SwapOperator: (+1+-3+2+-4)
MathildaLib.SwapOperator: (+2+-3+1+-4)
MathildaLib.SwapOperator: (+2+-4+1+-3)
MathildaLib.SwapOperator: (+2+-4+-3+1)
MathildaLib.SwapOperator: (+2+-3+-4+1)
MathildaLib.SwapOperator: (+2+1+-4+-3)
MathildaLib.SwapOperator: (+2+1+-3+-4)
MathildaLib.SwapOperator: (+1+2-4-3)
MathildaLib.SwapOperator: (+1-3-4+2)
MathildaLib.SwapOperator: (+1-3+2-4)
MathildaLib.SwapOperator: (+1-4+2-3)
MathildaLib.SwapOperator: (+1-4-3+2)
MathildaLib.SwapOperator: (+2-4-3+1)
MathildaLib.SwapOperator: (+2+1-3-4)
MathildaLib.SwapOperator: (+2+1-4-3)
MathildaLib.SwapOperator: (+2-3-4+1)
MathildaLib.SwapOperator: (+2-3+1-4)
MathildaLib.SwapOperator: (+2-4+1-3)
MathildaLib.SwapOperator: (-3-4+1+2)
MathildaLib.SwapOperator: (-3+1-4+2)
MathildaLib.SwapOperator: (-3+1+2-4)
MathildaLib.SwapOperator: (-3+2+1-4)
MathildaLib.SwapOperator: (-3+2-4+1)
MathildaLib.SwapOperator: (-3-4+2+1)
MathildaLib.SwapOperator: (-4-3+2+1)
MathildaLib.SwapOperator: (-4+1+2-3)
MathildaLib.SwapOperator: (-4+1-3+2)
MathildaLib.SwapOperator: (-4+2-3+1)
MathildaLib.SwapOperator: (-4+2+1-3)
MathildaLib.SwapOperator: (-4-3+1+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-(*3*4))
MathildaLib.ScalarProductOperator: (+4-(*12))
MathildaLib.LiftOperator: (+4-12)
MathildaLib.SumOperator: (+-8)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-(*3*4))
MathildaLib.ScalarProductOperator: (+4-(*12))
MathildaLib.LiftOperator: (+4-12)
MathildaLib.SumOperator: (+-8)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-(*3*4))
MathildaLib.ScalarProductOperator: (+4-(*12))
MathildaLib.LiftOperator: (+4-12)
MathildaLib.SumOperator: (+-8)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-(*3*4))
MathildaLib.ScalarProductOperator: (+4-(*12))
MathildaLib.LiftOperator: (+4-12)
MathildaLib.SumOperator: (+-8)
MathildaLib.FixSignOperator: (+4+-12)
MathildaLib.SwapOperator: (+-12+4)
MathildaLib.SwapOperator: (-12+4)
MathildaLib.SwapOperator: (-(*12)+4)
MathildaLib.SwapOperator: (+4-(*4*3))
MathildaLib.SwapOperator: (-(*4*3)+4)
MathildaLib.SwapOperator: (-(*3*4)+4)
MathildaLib.ScalarProductOperator: (+1+3-(*12))
MathildaLib.LiftOperator: (+1+3-12)
MathildaLib.FixSignOperator: (+1+3+-12)
MathildaLib.SwapOperator: (+-12+3+1)
MathildaLib.SwapOperator: (+-12+1+3)
MathildaLib.SwapOperator: (+1+-12+3)
MathildaLib.SwapOperator: (+3+-12+1)
MathildaLib.SwapOperator: (+3+1+-12)
MathildaLib.SwapOperator: (+1-12+3)
MathildaLib.SwapOperator: (+3-12+1)
MathildaLib.SwapOperator: (+3+1-12)
MathildaLib.SwapOperator: (-12+1+3)
MathildaLib.SwapOperator: (-12+3+1)
MathildaLib.SwapOperator: (+1-(*12)+3)
MathildaLib.SwapOperator: (+3-(*12)+1)
MathildaLib.SwapOperator: (+3+1-(*12))
MathildaLib.SwapOperator: (-(*12)+1+3)
MathildaLib.SwapOperator: (-(*12)+3+1)
MathildaLib.SwapOperator: (+1+3-(*4*3))
MathildaLib.SwapOperator: (+1-(*4*3)+3)
MathildaLib.SwapOperator: (+1-(*3*4)+3)
MathildaLib.SwapOperator: (+3-(*3*4)+1)
MathildaLib.SwapOperator: (+3+1-(*3*4))
MathildaLib.SwapOperator: (+3+1-(*4*3))
MathildaLib.SwapOperator: (+3-(*4*3)+1)
MathildaLib.SwapOperator: (-(*4*3)+3+1)
MathildaLib.SwapOperator: (-(*3*4)+3+1)
MathildaLib.SwapOperator: (-(*3*4)+1+3)
MathildaLib.SwapOperator: (-(*4*3)+1+3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+-3+(*1*2))
MathildaLib.MultiplyOneOperator: (+-3+(*2))
MathildaLib.LiftOperator: (+-3+2)
MathildaLib.SumOperator: (+-1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+-3+(*1*2))
MathildaLib.MultiplyOneOperator: (+-3+(*2))
MathildaLib.LiftOperator: (+-3+2)
MathildaLib.SumOperator: (+-1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+-3+(*1*2))
MathildaLib.MultiplyOneOperator: (+-3+(*2))
MathildaLib.LiftOperator: (+-3+2)
MathildaLib.SumOperator: (+-1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+-3+(*1*2))
MathildaLib.MultiplyOneOperator: (+-3+(*2))
MathildaLib.LiftOperator: (+-3+2)
MathildaLib.SumOperator: (+-1)
MathildaLib.SwapOperator: (+2+-3)
MathildaLib.SwapOperator: (+(*2)+-3)
MathildaLib.SwapOperator: (+-3+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+-3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (-a+(*1*2))
MathildaLib.MultiplyOneOperator: (-a+(*2))
MathildaLib.LiftOperator: (-a+2)
MathildaLib.SwapOperator: (+2-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (-a+(*1*2))
MathildaLib.MultiplyOneOperator: (-a+(*2))
MathildaLib.LiftOperator: (-a+2)
MathildaLib.SwapOperator: (+2-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (-a+(*1*2))
MathildaLib.MultiplyOneOperator: (-a+(*2))
MathildaLib.LiftOperator: (-a+2)
MathildaLib.SwapOperator: (+2-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (-a+(*1*2))
MathildaLib.MultiplyOneOperator: (-a+(*2))
MathildaLib.LiftOperator: (-a+2)
MathildaLib.SwapOperator: (+2-a)
MathildaLib.SwapOperator: (+(*2)-a)
MathildaLib.SwapOperator: (-a+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)-a)
========
MathildaLib.SwapOperator: (-a+2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+-7)
MathildaLib.SwapOperator: (+-7+(*1*2))
MathildaLib.MultiplyOneOperator: (+-7+(*2))
MathildaLib.LiftOperator: (+-7+2)
MathildaLib.SumOperator: (+-5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+-7)
MathildaLib.SwapOperator: (+-7+(*1*2))
MathildaLib.MultiplyOneOperator: (+-7+(*2))
MathildaLib.LiftOperator: (+-7+2)
MathildaLib.SumOperator: (+-5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+-7)
MathildaLib.SwapOperator: (+-7+(*1*2))
MathildaLib.MultiplyOneOperator: (+-7+(*2))
MathildaLib.LiftOperator: (+-7+2)
MathildaLib.SumOperator: (+-5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+(*1*2)+-7)
MathildaLib.SwapOperator: (+-7+(*1*2))
MathildaLib.MultiplyOneOperator: (+-7+(*2))
MathildaLib.LiftOperator: (+-7+2)
MathildaLib.SumOperator: (+-5)
MathildaLib.SwapOperator: (+2+-7)
MathildaLib.SwapOperator: (+(*2)+-7)
MathildaLib.SwapOperator: (+-7+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+-7)
MathildaLib.SwapOperator: (-3+(*1*2)-4)
MathildaLib.FixSignOperator: (+-3+(*1*2)+-4)
MathildaLib.SwapOperator: (+-4+(*1*2)+-3)
MathildaLib.SwapOperator: (+-4+-3+(*1*2))
MathildaLib.MultiplyOneOperator: (+-4+-3+(*2))
MathildaLib.LiftOperator: (+-4+-3+2)
MathildaLib.SwapOperator: (+-4+2+-3)
MathildaLib.SwapOperator: (+-3+2+-4)
MathildaLib.SwapOperator: (+-3+-4+2)
MathildaLib.SwapOperator: (+2+-4+-3)
MathildaLib.SwapOperator: (+2+-3+-4)
MathildaLib.SwapOperator: (+-4+(*2)+-3)
MathildaLib.SwapOperator: (+-3+(*2)+-4)
MathildaLib.SwapOperator: (+-3+-4+(*2))
MathildaLib.SwapOperator: (+(*2)+-4+-3)
MathildaLib.SwapOperator: (+(*2)+-3+-4)
MathildaLib.SwapOperator: (+-4+-3+(*2*1))
MathildaLib.SwapOperator: (+-4+(*2*1)+-3)
MathildaLib.SwapOperator: (+-3+(*2*1)+-4)
MathildaLib.SwapOperator: (+-3+-4+(*2*1))
MathildaLib.SwapOperator: (+-3+-4+(*1*2))
MathildaLib.SwapOperator: (+(*1*2)+-4+-3)
MathildaLib.SwapOperator: (+(*1*2)+-3+-4)
MathildaLib.SwapOperator: (+(*2*1)+-3+-4)
MathildaLib.SwapOperator: (+(*2*1)+-4+-3)
MathildaLib.SwapOperator: (-3-4+(*1*2))
MathildaLib.MultiplyOneOperator: (-3-4+(*2))
MathildaLib.LiftOperator: (-3-4+2)
MathildaLib.SwapOperator: (+2-4-3)
MathildaLib.SwapOperator: (+2-3-4)
MathildaLib.SwapOperator: (-3+2-4)
MathildaLib.SwapOperator: (-4+2-3)
MathildaLib.SwapOperator: (-4-3+2)
MathildaLib.SwapOperator: (-3+(*2)-4)
MathildaLib.SwapOperator: (-4+(*2)-3)
MathildaLib.SwapOperator: (-4-3+(*2))
MathildaLib.SwapOperator: (+(*2)-3-4)
MathildaLib.SwapOperator: (+(*2)-4-3)
MathildaLib.SwapOperator: (-3-4+(*2*1))
MathildaLib.SwapOperator: (-3+(*2*1)-4)
MathildaLib.SwapOperator: (-4+(*2*1)-3)
MathildaLib.SwapOperator: (-4-3+(*2*1))
MathildaLib.SwapOperator: (-4-3+(*1*2))
MathildaLib.SwapOperator: (-4+(*1*2)-3)
MathildaLib.SwapOperator: (+(*1*2)-4-3)
MathildaLib.SwapOperator: (+(*2*1)-4-3)
MathildaLib.SwapOperator: (+(*2*1)-3-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)-(*3*4))
MathildaLib.LiftOperator: (+2-(*3*4))
MathildaLib.ScalarProductOperator: (+2-(*12))
MathildaLib.LiftOperator: (+2-12)
MathildaLib.SumOperator: (+-10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)-(*3*4))
MathildaLib.LiftOperator: (+2-(*3*4))
MathildaLib.ScalarProductOperator: (+2-(*12))
MathildaLib.LiftOperator: (+2-12)
MathildaLib.SumOperator: (+-10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)-(*3*4))
MathildaLib.LiftOperator: (+2-(*3*4))
MathildaLib.ScalarProductOperator: (+2-(*12))
MathildaLib.LiftOperator: (+2-12)
MathildaLib.SumOperator: (+-10)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+(*2)-(*3*4))
MathildaLib.LiftOperator: (+2-(*3*4))
MathildaLib.ScalarProductOperator: (+2-(*12))
MathildaLib.LiftOperator: (+2-12)
MathildaLib.SumOperator: (+-10)
MathildaLib.FixSignOperator: (+2+-12)
MathildaLib.SwapOperator: (+-12+2)
MathildaLib.SwapOperator: (-12+2)
MathildaLib.SwapOperator: (-(*12)+2)
MathildaLib.SwapOperator: (+2-(*4*3))
MathildaLib.SwapOperator: (-(*4*3)+2)
MathildaLib.SwapOperator: (-(*3*4)+2)
MathildaLib.ScalarProductOperator: (+(*2)-(*12))
MathildaLib.LiftOperator: (+(*2)-12)
MathildaLib.SwapOperator: (-12+(*2))
MathildaLib.FixSignOperator: (+-12+(*2))
MathildaLib.SwapOperator: (+(*2)+-12)
MathildaLib.SwapOperator: (-(*12)+(*2))
MathildaLib.SwapOperator: (+(*2)-(*4*3))
MathildaLib.SwapOperator: (-(*4*3)+(*2))
MathildaLib.SwapOperator: (-(*3*4)+(*2))
MathildaLib.ScalarProductOperator: (+(*1*2)-(*12))
MathildaLib.SwapOperator: (-(*12)+(*1*2))
MathildaLib.LiftOperator: (-12+(*1*2))
MathildaLib.FixSignOperator: (+-12+(*1*2))
MathildaLib.SwapOperator: (+-12+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)+-12)
MathildaLib.SwapOperator: (+(*1*2)+-12)
MathildaLib.SwapOperator: (-12+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)-12)
MathildaLib.SwapOperator: (+(*1*2)-12)
MathildaLib.SwapOperator: (-(*12)+(*2*1))
MathildaLib.SwapOperator: (+(*2*1)-(*12))
MathildaLib.SwapOperator: (+(*1*2)-(*4*3))
MathildaLib.SwapOperator: (+(*2*1)-(*4*3))
MathildaLib.SwapOperator: (+(*2*1)-(*3*4))
MathildaLib.SwapOperator: (-(*3*4)+(*2*1))
MathildaLib.SwapOperator: (-(*3*4)+(*1*2))
MathildaLib.SwapOperator: (-(*4*3)+(*1*2))
MathildaLib.SwapOperator: (-(*4*3)+(*2*1))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+-4)
MathildaLib.FixSignOperator: (+1+-2+-3)
MathildaLib.SwapOperator: (+-3+-2+1)
MathildaLib.SwapOperator: (+-3+1+-2)
MathildaLib.SwapOperator: (+-2+1+-3)
MathildaLib.SwapOperator: (+-2+-3+1)
MathildaLib.SwapOperator: (+1+-3+-2)
MathildaLib.SwapOperator: (+1-3-2)
MathildaLib.SwapOperator: (-2-3+1)
MathildaLib.SwapOperator: (-2+1-3)
MathildaLib.SwapOperator: (-3+1-2)
MathildaLib.SwapOperator: (-3-2+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1-(*6))
MathildaLib.LiftOperator: (+1-6)
MathildaLib.SumOperator: (+-5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1-(*6))
MathildaLib.LiftOperator: (+1-6)
MathildaLib.SumOperator: (+-5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1-(*6))
MathildaLib.LiftOperator: (+1-6)
MathildaLib.SumOperator: (+-5)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ScalarProductOperator: (+1-(*6))
MathildaLib.LiftOperator: (+1-6)
MathildaLib.SumOperator: (+-5)
MathildaLib.FixSignOperator: (+1+-6)
MathildaLib.SwapOperator: (+-6+1)
MathildaLib.SwapOperator: (-6+1)
MathildaLib.SwapOperator: (-(*6)+1)
MathildaLib.SwapOperator: (+1-(*3*2))
MathildaLib.SwapOperator: (-(*3*2)+1)
MathildaLib.SwapOperator: (-(*2*3)+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+a+-3)
MathildaLib.SwapOperator: (+-3+a)
========
MathildaLib.SwapOperator: (+-3+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+a+-3)
MathildaLib.SwapOperator: (+-3+a)
========
MathildaLib.SwapOperator: (+-3+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+a+-3)
MathildaLib.SwapOperator: (+-3+a)
========
MathildaLib.SwapOperator: (+-3+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+a+-3)
MathildaLib.SwapOperator: (+-3+a)
MathildaLib.SwapOperator: (-1+a-2)
MathildaLib.FixSignOperator: (+-1+a+-2)
MathildaLib.SwapOperator: (+-2+a+-1)
MathildaLib.SwapOperator: (+-2+-1+a)
MathildaLib.SwapOperator: (+-1+-2+a)
MathildaLib.SwapOperator: (+a+-2+-1)
MathildaLib.SwapOperator: (+a+-1+-2)
MathildaLib.SwapOperator: (-1-2+a)
MathildaLib.SwapOperator: (-2-1+a)
MathildaLib.SwapOperator: (-2+a-1)
MathildaLib.SwapOperator: (+a-2-1)
========
MathildaLib.SwapOperator: (+-3+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a-(*2))
MathildaLib.LiftOperator: (+a-2)
MathildaLib.SwapOperator: (-2+a)
MathildaLib.FixSignOperator: (+-2+a)
========
MathildaLib.SwapOperator: (+-2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a-(*2))
MathildaLib.LiftOperator: (+a-2)
MathildaLib.SwapOperator: (-2+a)
MathildaLib.FixSignOperator: (+-2+a)
========
MathildaLib.SwapOperator: (+-2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a-(*2))
MathildaLib.LiftOperator: (+a-2)
MathildaLib.SwapOperator: (-2+a)
MathildaLib.FixSignOperator: (+-2+a)
========
MathildaLib.SwapOperator: (+-2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+a-(*2))
MathildaLib.LiftOperator: (+a-2)
MathildaLib.SwapOperator: (-2+a)
MathildaLib.FixSignOperator: (+-2+a)
MathildaLib.SwapOperator: (+a+-2)
MathildaLib.SwapOperator: (-(*2)+a)
MathildaLib.SwapOperator: (+a-(*2*1))
MathildaLib.SwapOperator: (-(*2*1)+a)
MathildaLib.SwapOperator: (-(*1*2)+a)
========
MathildaLib.SwapOperator: (+-2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestSubtract9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+0)
MathildaLib.SwapOperator: (+-3+2+1)
MathildaLib.SwapOperator: (+-3+1+2)
MathildaLib.SwapOperator: (+1+-3+2)
MathildaLib.SwapOperator: (+2+-3+1)
MathildaLib.SwapOperator: (+2+1+-3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestSum">
          <Results>
            <UnitTestResult>
              <TestDate>2013-07-15T00:25:41</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,00ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T01:11:21</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,01ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T14:53:26</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,07ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-07-15T15:06:20</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,07ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="Test1Plus2Equals3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
            <TestRecord Name="TestIgnoringVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-15T00:25:41</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T01:11:21</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T14:53:26</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-15T15:06:20</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
              <Tests />
            </TestRecord>
          </Tests>
        </TestRecord>
      </Tests>
    </TestRecord>
  </Tests>
</TestRecord>