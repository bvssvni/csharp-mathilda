<?xml version="1.0" encoding="utf-8"?>
<TestRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Tests>
    <TestRecord Name="MathildaLib">
      <Tests>
        <TestRecord Name="TestMultiply">
          <Tests>
            <TestRecord Name="TestMultiply15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:00:46</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.ArgumentOutOfRangeException : Argument is out of range.
Parameter name: index</Message>
                  <StackTrace>  at System.Collections.Generic.List`1[MathildaLib.Node].get_Item (Int32 index) [0x00024] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Collections.Generic/List.cs:637 
  at MathildaLib.ListNode.get_Item (Int32 index) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:33 
  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x00022] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:53 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:84 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:114 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:01:44</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.ArgumentOutOfRangeException : Argument is out of range.
Parameter name: index</Message>
                  <StackTrace>  at System.Collections.Generic.List`1[MathildaLib.Node].get_Item (Int32 index) [0x00024] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Collections.Generic/List.cs:637 
  at MathildaLib.ListNode.get_Item (Int32 index) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:33 
  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x00022] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:53 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:87 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:114 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 4
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:02:21</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.ArgumentOutOfRangeException : Argument is out of range.
Parameter name: index</Message>
                  <StackTrace>  at System.Collections.Generic.List`1[MathildaLib.Node].get_Item (Int32 index) [0x00024] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Collections.Generic/List.cs:637 
  at MathildaLib.ListNode.get_Item (Int32 index) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:33 
  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x00022] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:53 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:87 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:114 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 4 NodeCount 3
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:02:38</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:136 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*(+(*b*c)+(*b*d))))
tmp (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
(+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:03:02</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:136 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
(+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:03:47</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:136 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*(+(*b*c)+(*b*d))))
tmp (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
(+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:04:23</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.ArgumentOutOfRangeException : Argument is out of range.
Parameter name: index</Message>
                  <StackTrace>  at System.Collections.Generic.List`1[MathildaLib.Node].get_Item (Int32 index) [0x00024] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Collections.Generic/List.cs:637 
  at MathildaLib.ListNode.get_Item (Int32 index) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:33 
  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x00067] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:66 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:89 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:114 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:04:44</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:136 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*(+(*b*c)+(*b*d))))
tmp (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
(+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:05:17</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.ArgumentOutOfRangeException : Argument is out of range.
Parameter name: index</Message>
                  <StackTrace>  at System.Collections.Generic.List`1[MathildaLib.Node].CheckIndex (Int32 index) [0x0001e] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Collections.Generic/List.cs:420 
  at System.Collections.Generic.List`1[MathildaLib.Node].Insert (Int32 index, MathildaLib.Node item) [0x00000] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Collections.Generic/List.cs:424 
  at MathildaLib.ListNode.InsertNode (Int32 index, MathildaLib.Node node) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:75 
  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x00093] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:70 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:89 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:114 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:05:35</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:136 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*(+(*b*c)+(*b*d))))
tmp (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
(+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:05:57</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.ArgumentOutOfRangeException : Argument is out of range.
Parameter name: index</Message>
                  <StackTrace>  at System.Collections.Generic.List`1[MathildaLib.Node].get_Item (Int32 index) [0x00024] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Collections.Generic/List.cs:637 
  at MathildaLib.ListNode.get_Item (Int32 index) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:33 
  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x0005f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:64 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00029] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00000] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:90 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0008f] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:114 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, .OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x00140] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:140 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0002e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*(+(*b*c)+(*b*d))))
tmp (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
i 2 n 3 NodeCount 3
(*(+(*b*c)+(*b*d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:07:12</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:136 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*b*(+c+d)))
tmp (+(*a*c)+(*a*d)+(*b*(+c+d)))
i 2 n 3 NodeCount 3
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
(*(+(*a*c)+(*a*d)))
tmp (+(*a*c)+(*(+(*b*c)+(*b*d))))
tmp (+(*a*c)+(*a*d)+(*(+(*b*c)+(*b*d))))
i 2 n 3 NodeCount 3
(*(+(*b*c)+(*b*d)))
tmp (+(*a*c)+(*a*d)+(*b*c))
tmp (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
i 4 n 4 NodeCount 4
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
(+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-07-01T00:08:08</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: False
  But was:  True
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.False (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:136 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x000d5] in /private/tmp/source/bockbuild/profiles/mono-2-10/build-root/mono-2.10.12/_build/mono-2.10.12.git/mcs/class/corlib/System.Reflection/MonoMethod.cs:226 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOperator: (*(+(*a*(+c+d))+(*b*(+c+d))))
MathildaLib.LiftOperator: (+(*a*(+c+d))+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
MathildaLib.MultiplyOperator: (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
(+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
      </Tests>
    </TestRecord>
  </Tests>
</TestRecord>