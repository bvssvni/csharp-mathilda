<?xml version="1.0" encoding="utf-8"?>
<TestRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Results>
    <UnitTestResult>
      <TestDate>2013-09-21T01:12:24</TestDate>
      <Passed>109</Passed>
      <Errors>6</Errors>
      <Failures>9</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T01:18:55</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,01ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T01:26:03</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,01ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T01:31:10</TestDate>
      <Passed>1</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,04ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T01:37:57</TestDate>
      <Passed>2</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,13ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T01:44:59</TestDate>
      <Passed>2</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,16ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:01:58</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,18ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:22:32</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,16ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:24:29</TestDate>
      <Passed>4</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,21ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:24:45</TestDate>
      <Passed>4</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,21ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:25:31</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:25:36</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:26:06</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:26:40</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:28:01</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:28:22</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:28:34</TestDate>
      <Passed>3</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:29:45</TestDate>
      <Passed>4</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,19ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:35:31</TestDate>
      <Passed>4</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,19ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:36:27</TestDate>
      <Passed>4</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,20ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-09-21T02:52:58</TestDate>
      <Passed>4</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0,20ms</Message>
    </UnitTestResult>
  </Results>
  <Tests>
    <TestRecord Name="MathildaLib">
      <Results>
        <UnitTestResult>
          <TestDate>2013-09-21T01:12:24</TestDate>
          <Passed>109</Passed>
          <Errors>6</Errors>
          <Failures>9</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T01:29:00</TestDate>
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,03ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T01:30:24</TestDate>
          <Passed>0</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T01:30:44</TestDate>
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,03ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T01:31:08</TestDate>
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,03ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T01:31:10</TestDate>
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,04ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T01:37:57</TestDate>
          <Passed>2</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,12ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T01:44:59</TestDate>
          <Passed>2</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,15ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:01:58</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,17ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:22:32</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,15ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:24:29</TestDate>
          <Passed>4</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,20ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:24:45</TestDate>
          <Passed>4</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,20ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:25:31</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:25:36</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:26:06</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:26:40</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:28:01</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:28:22</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:28:34</TestDate>
          <Passed>3</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:29:45</TestDate>
          <Passed>4</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,19ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:35:31</TestDate>
          <Passed>4</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,18ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:36:27</TestDate>
          <Passed>4</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,19ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-09-21T02:52:58</TestDate>
          <Passed>4</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0,20ms</Message>
        </UnitTestResult>
      </Results>
      <Tests>
        <TestRecord Name="TestAdd">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,71ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestAdd1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 2
MathildaLib.SumOperator: 2
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 10
MathildaLib.SumOperator: 10
MathildaLib.LiftOperator: 10
MathildaLib.SumOperator: 10
MathildaLib.SwapOperator: (+(+3+4)+3)
MathildaLib.SumOperator: 10
MathildaLib.SwapOperator: (+2+1+7)
MathildaLib.LiftOperator: (+1+2+7)
MathildaLib.SwapOperator: (+2+1+(+7))
MathildaLib.SwapOperator: (+(+3+4)+1+2)
MathildaLib.SwapOperator: (+(+3+4)+1+2)
MathildaLib.SwapOperator: (+2+1+(+3+4))
MathildaLib.SwapOperator: (+1+(+3+4)+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 15
MathildaLib.SumOperator: 15
MathildaLib.LiftOperator: 15
MathildaLib.ScalarProductOperator: 15
MathildaLib.SwapOperator: (+(*3*4)+3)
MathildaLib.SumOperator: 15
MathildaLib.SwapOperator: (+2+1+12)
MathildaLib.LiftOperator: (+1+2+12)
MathildaLib.SwapOperator: (+2+1+(*12))
MathildaLib.SwapOperator: (+(*3*4)+1+2)
MathildaLib.SwapOperator: (+(*3*4)+1+2)
MathildaLib.SwapOperator: (+2+1+(*3*4))
MathildaLib.SwapOperator: (+1+(*3*4)+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 5
MathildaLib.SumOperator: 5
MathildaLib.LiftOperator: 5
MathildaLib.MultiplyOneOperator: 5
MathildaLib.SwapOperator: 5
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+2+a)
MathildaLib.LiftOperator: (+2+a)
MathildaLib.MultiplyOneOperator: (+2+a)
MathildaLib.SwapOperator: (+2+a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 9
MathildaLib.SumOperator: 9
MathildaLib.LiftOperator: 9
MathildaLib.MultiplyOneOperator: 9
MathildaLib.SwapOperator: 9
MathildaLib.SumOperator: 9
MathildaLib.SwapOperator: (+2+3+4)
MathildaLib.SwapOperator: (+2+3+4)
MathildaLib.LiftOperator: (+2+3+4)
MathildaLib.SwapOperator: (+4+3+(*2))
MathildaLib.MultiplyOneOperator: (+2+3+4)
MathildaLib.SwapOperator: (+(*2*1)+3+4)
MathildaLib.SwapOperator: (+4+3+(*1*2))
MathildaLib.SwapOperator: (+4+3+(*1*2))
MathildaLib.SwapOperator: (+2+3+4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 14
MathildaLib.SumOperator: 14
MathildaLib.LiftOperator: 14
MathildaLib.ScalarProductOperator: 14
MathildaLib.SwapOperator: (+(*3*4)+2)
MathildaLib.LiftOperator: 14
MathildaLib.SwapOperator: (+12+(*2))
MathildaLib.LiftOperator: (+12+(*2))
MathildaLib.SwapOperator: (+(*3*4)+(*2))
MathildaLib.MultiplyOneOperator: 14
MathildaLib.SwapOperator: (+(*1*2)+12)
MathildaLib.LiftOperator: (+12+(*1*2))
MathildaLib.SwapOperator: (+12+(*1*2))
MathildaLib.SwapOperator: (+(*3*4)+(*1*2))
MathildaLib.SwapOperator: (+(*2*1)+(*3*4))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 6
MathildaLib.SumOperator: 6
MathildaLib.SwapOperator: (+2+1+3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 7
MathildaLib.SumOperator: 7
MathildaLib.LiftOperator: 7
MathildaLib.ScalarProductOperator: 7
MathildaLib.SwapOperator: (+(*2*3)+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+2+a)
MathildaLib.LiftOperator: (+2+a)
MathildaLib.MultiplyOneOperator: (+2+a)
MathildaLib.SwapOperator: (+(*1*2)+a)
========
MathildaLib.SwapOperator: (+2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestAdd9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestCompare">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>6</Passed>
              <Errors>0</Errors>
              <Failures>2</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="Test2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*b*i)-c)
MathildaLib.LiftOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (*(+(*b*i)-c))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="Test3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="Test4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="Test5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestCompareSmartList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestCompare.TestCompareSmartList () [0x00142] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestCompare.cs:131 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>aMass 13 bMass 17
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNestedProductList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestProductListEquivalentToSumListWithOnlyOneElement">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubListLessThanSize">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestCompare.TestSubListLessThanSize () [0x00065] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestCompare.cs:24 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*c*i*i)
MathildaLib.SwapOperator: (*(*c*i*i))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestCompareIgnoreScalar">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,06ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestTwoVSNone">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestTwoVSOne">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestComplex">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T01:29:00</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,02ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T01:30:24</TestDate>
              <Passed>0</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T01:30:44</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,02ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T01:31:08</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,02ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T01:31:10</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,03ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T01:37:57</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T01:44:59</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,14ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:01:58</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:22:32</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:24:29</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:24:45</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:25:31</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:25:36</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:26:06</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:26:40</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:28:01</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:28:22</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:28:34</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:29:45</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,09ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:35:31</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:36:27</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,09ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:52:58</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,11ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestComplexComplexMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestComplexMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestComplexToString">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:29:00</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:30:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestComplex.TestMultiply () [0x00063] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestComplex.cs:15 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:30:44</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:31:08</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:31:10</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:37:57</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:44:59</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:01:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:22:32</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:29</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:06</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:01</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:34</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:29:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:35:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:36:27</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:52:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:37:57</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:44:59</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:01:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:22:32</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:29</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:06</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:01</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:34</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:29:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:35:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:36:27</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:52:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestComplexNumbers">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>3</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,10ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestABA">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: b
MathildaLib.MultiplyOneOperator: b
MathildaLib.ReplaceOperator: b
MathildaLib.SwapOperator: b
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestISquared">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -1
MathildaLib.ReplaceOperator: -1
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNested1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+-1+i)
MathildaLib.LiftOperator: (+-1+i)
MathildaLib.ReplaceOperator: (+-1+i)
MathildaLib.LiftOperator: (+-1+i)
MathildaLib.LiftOperator: (+-1+(*i))
MathildaLib.SwapOperator: (+-1+(*i))
MathildaLib.MultiplyOneOperator: (+-1+i)
MathildaLib.SwapOperator: (+(*1*i)+-1)
MathildaLib.LiftOperator: (+-1+(*1*i))
MathildaLib.SwapOperator: (+-1+(*1*i))
MathildaLib.ReplaceOperator: (+-1+(*1*i))
MathildaLib.LiftOperator: (+-1+i)
MathildaLib.SwapOperator: (*(+-1+i))
MathildaLib.LiftOperator: (*(+-1+i))
MathildaLib.ReplaceOperator: (*(+-1+i))
MathildaLib.LiftOperator: (*(+-1+i))
MathildaLib.LiftOperator: (*(+-1+(*i)))
MathildaLib.SwapOperator: (*(+-1+(*i)))
MathildaLib.SwapOperator: (*(+(*1*i)+-1))
MathildaLib.LiftOperator: (*(+-1+(*1*i)))
MathildaLib.SwapOperator: (*(+-1+(*1*i)))
MathildaLib.ReplaceOperator: (*(+-1+(*1*i)))
MathildaLib.MultiplyOperator: (+-1+i)
MathildaLib.SwapOperator: (*(+1+i)*i)
========
MathildaLib.SwapOperator: (+-1+i)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestConjugate">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>0</Passed>
              <Errors>1</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestCase">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Requires product list to compare ignored</Message>
                  <StackTrace>  at MathildaLib.ListNode.CompareToIgnoreScalar (MathildaLib.Node other) [0x00201] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:298 
  at MathildaLib.AddOperator.Do (MathildaLib.Node&amp; node) [0x001f4] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:83 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x000d5] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:79 
  at MathildaLib.AddOperator+&lt;Add&gt;c__AnonStorey4.&lt;&gt;m__4 (Int32 i, Int32 j) [0x0000e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:115 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x0001a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.AddOperator.Add (Search search) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:114 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule+&lt;Minimize&gt;c__AnonStorey1.&lt;&gt;m__1 (MathildaLib.Address address) [0x0004d] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:139 
  at MathildaLib.ListNode.ForEachNode (MathildaLib.ForEachNodeDelegate f, MathildaLib.Address address, MathildaLib.ListNode parent) [0x00040] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:466 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x000de] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:131 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.TestConjugate.TestCase () [0x00093] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestConjugate.cs:26 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*b*i)-c)
MathildaLib.LiftOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (+(*b*i)-(*c))
MathildaLib.NegativeProductOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (+(*c*-1)+(*b*i))
MathildaLib.SwapOperator: (+(-c)+(*b*i))
MathildaLib.SwapOperator: (+(-c)+(*b*i))
MathildaLib.SwapOperator: (+(*i*b)+(*-1*c))
MathildaLib.SwapOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (-c+(*b*i))
MathildaLib.ReplaceOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (+(*i*i*c)+(*b*i))
MathildaLib.SwapOperator: (+(*c*i*i)+(*b*i))
MathildaLib.SwapOperator: (+(*i*b)+(*c*i*i))
MathildaLib.SwapOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (-c+(*b*i))
MathildaLib.LiftOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (*(+(*b*i)-c))
MathildaLib.LiftOperator: (*(-c+(*b*i)))
MathildaLib.SwapOperator: (*(+(*b*i)-(*c)))
MathildaLib.NegativeProductOperator: (*(-c+(*b*i)))
MathildaLib.SwapOperator: (*(+(*c*-1)+(*b*i)))
MathildaLib.SwapOperator: (*(+(-c)+(*b*i)))
MathildaLib.SwapOperator: (*(+(-c)+(*b*i)))
MathildaLib.SwapOperator: (*(+(*i*b)+(*-1*c)))
MathildaLib.SwapOperator: (*(-c+(*b*i)))
MathildaLib.SwapOperator: (*(-c+(*b*i)))
MathildaLib.ReplaceOperator: (*(-c+(*b*i)))
MathildaLib.SwapOperator: (*(+(*i*i*c)+(*b*i)))
MathildaLib.SwapOperator: (*(+(*c*i*i)+(*b*i)))
MathildaLib.SwapOperator: (*(+(*i*b)+(*c*i*i)))
MathildaLib.SwapOperator: (*(-c+(*b*i)))
MathildaLib.MultiplyOperator: (-c+(*b*i))
MathildaLib.SwapOperator: (*(+b+(*c*i))*i)
MathildaLib.SwapOperator: (*(+b+(*c*i))*i)
MathildaLib.SwapOperator: (*i*(+b+(*c*i)))
========
before smart lift (+(*(-(*b*i)))+(*(-i)*c*(-i)))
after smart lift (+(*b*i)+(*(-i)*c*(-i)))
MathildaLib.SwapOperator: (+(*(-(*c*i))*(-i))+(*b*i))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*b*i))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*b*i))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*b*i))
MathildaLib.SwapOperator: (+(*i*b)+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(*b*i)+(*(-(*c*i))*(-i)))
MathildaLib.MultiplyOperator: (+(*b*i)+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(*c*(-i)*(-i))+(*b*i))
MathildaLib.SwapOperator: (+(*c*(-i)*(-i))+(*b*i))
MathildaLib.SwapOperator: (+(*i*b)+(*c*(-i)*(-i)))
MathildaLib.SmartLiftOperator: (+(*b*i)+(*(-i)*(-(*c*i))))
before smart lift (+(*(-(*b*i)))+(*(-i)*(-(*c*i))))
after smart lift (+(*b*i)+(*(-i)*(-(*c*i))))
before smart lift (+(*(-(*b*i)))+(*(-i)*(-(*i*c))))
after smart lift (+(*b*i)+(*(-i)*(-(*i*c))))
before smart lift (+(*(-(*b*i)))+(*(-(*i*c))*(-i)))
after smart lift (+(*b*i)+(*(-(*i*c))*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-(*c*i))*(-i)))
after smart lift (+(*b*i)+(*(-(*c*i))*(-i)))
before smart lift (+(*(-(*i*b)))+(*(-(*c*i))*(-i)))
after smart lift (+(*i*b)+(*(-(*c*i))*(-i)))
before smart lift (+(*(-(*i*b)))+(*(-i)*(-(*c*i))))
after smart lift (+(*i*b)+(*(-i)*(-(*c*i))))
before smart lift (+(*(-(*i*b)))+(*(-i)*(-(*i*c))))
after smart lift (+(*i*b)+(*(-i)*(-(*i*c))))
before smart lift (+(*(-(*i*b)))+(*(-(*i*c))*(-i)))
after smart lift (+(*i*b)+(*(-(*i*c))*(-i)))
before smart lift (+(*(-(*i*c))*(-i))+(*(-(*i*b))))
after smart lift (+(*(-(*i*c))*(-i))+(*i*b))
before smart lift (+(*(-i)*(-(*i*c)))+(*(-(*i*b))))
after smart lift (+(*(-i)*(-(*i*c)))+(*i*b))
before smart lift (+(*(-i)*(-(*c*i)))+(*(-(*i*b))))
after smart lift (+(*(-i)*(-(*c*i)))+(*i*b))
before smart lift (+(*(-i)*(-(*c*i)))+(*(-(*b*i))))
after smart lift (+(*(-i)*(-(*c*i)))+(*b*i))
before smart lift (+(*(-i)*(-(*i*c)))+(*(-(*b*i))))
after smart lift (+(*(-i)*(-(*i*c)))+(*b*i))
before smart lift (+(*(-(*i*c))*(-i))+(*(-(*b*i))))
after smart lift (+(*(-(*i*c))*(-i))+(*b*i))
before smart lift (+(*(-(*c*i))*(-i))+(*(-(*b*i))))
after smart lift (+(*(-(*c*i))*(-i))+(*b*i))
before smart lift (+(*(-(*c*i))*(-i))+(*(-(*i*b))))
after smart lift (+(*(-(*c*i))*(-i))+(*i*b))
MathildaLib.SwapOperator: (+(*(-(*c*i))*(-i))+(-(*b*i)))
MathildaLib.SwapOperator: (+(*(-(*c*i))*(-i))+(-(*b*i)))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(-(*b*i)))
MathildaLib.SwapOperator: (+(-(*i*b))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*i*b))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(*(-(*c*i))*(-i))+(*(-(*b*i))))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*(-(*b*i))))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*(-(*b*i))))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*(-(*b*i))))
MathildaLib.SwapOperator: (+(*(-(*i*b)))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(*(-(*b*i)))+(*(-(*c*i))*(-i)))
before smart lift (+(*(-(*b*i)))+(*c*(-i)*(-i)))
after smart lift (+(*b*i)+(*c*(-i)*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-i)*(-i)*c))
after smart lift (+(*b*i)+(*(-i)*(-i)*c))
before smart lift (+(*(-(*i*b)))+(*(-i)*(-i)*c))
after smart lift (+(*i*b)+(*(-i)*(-i)*c))
before smart lift (+(*(-(*i*b)))+(*c*(-i)*(-i)))
after smart lift (+(*i*b)+(*c*(-i)*(-i)))
before smart lift (+(*(-(*i*b)))+(*(-i)*c*(-i)))
after smart lift (+(*i*b)+(*(-i)*c*(-i)))
before smart lift (+(*(-i)*c*(-i))+(*(-(*i*b))))
after smart lift (+(*(-i)*c*(-i))+(*i*b))
before smart lift (+(*c*(-i)*(-i))+(*(-(*i*b))))
after smart lift (+(*c*(-i)*(-i))+(*i*b))
before smart lift (+(*c*(-i)*(-i))+(*(-(*b*i))))
after smart lift (+(*c*(-i)*(-i))+(*b*i))
before smart lift (+(*(-i)*c*(-i))+(*(-(*b*i))))
after smart lift (+(*(-i)*c*(-i))+(*b*i))
before smart lift (+(*(-i)*(-i)*c)+(*(-(*b*i))))
after smart lift (+(*(-i)*(-i)*c)+(*b*i))
before smart lift (+(*(-i)*(-i)*c)+(*(-(*i*b))))
after smart lift (+(*(-i)*(-i)*c)+(*i*b))
MathildaLib.SwapOperator: (+(*c*(-i)*(-i))+(-(*b*i)))
MathildaLib.SwapOperator: (+(-(*i*b))+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (+(-(*b*i))+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (+(-(*b*i))+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (+(-(*b*i))+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (+(*c*(-i)*(-i))+(*(-(*b*i))))
MathildaLib.SwapOperator: (+(*c*(-i)*(-i))+(*(-(*b*i))))
MathildaLib.SwapOperator: (+(*(-(*i*b)))+(*c*(-i)*(-i)))
MathildaLib.MultiplyOperator: (+(*b*i)+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(*(-(*c*i))*(-i))+(*b*(-i)))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*b*(-i)))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*b*(-i)))
MathildaLib.SwapOperator: (+(*(-i)*(-(*c*i)))+(*b*(-i)))
MathildaLib.SwapOperator: (+(*(-i)*b)+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(*b*(-i))+(*(-(*c*i))*(-i)))
MathildaLib.SwapOperator: (+(*(-i)*(-i)*c)+(*b*(-i)))
MathildaLib.SwapOperator: (+(*c*(-i)*(-i))+(*b*(-i)))
MathildaLib.SwapOperator: (+(*(-i)*b)+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (+(*b*i)+(*(-i)*(-(*c*i))))
MathildaLib.LiftOperator: (+(*b*i)+(*(-i)*(-(*c*i))))
before smart lift (+(*(-(*b*i)))+(*(-i)*c*(-i)))
after smart lift (+(*b*i)+(*(-i)*c*(-i)))
MathildaLib.SwapOperator: (*(+(*(-(*c*i))*(-i))+(*b*i)))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*b*i)))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*b*i)))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*b*i)))
MathildaLib.SwapOperator: (*(+(*i*b)+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(*b*i)+(*(-(*c*i))*(-i))))
MathildaLib.MultiplyOperator: (*(+(*b*i)+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(*c*(-i)*(-i))+(*b*i)))
MathildaLib.SwapOperator: (*(+(*c*(-i)*(-i))+(*b*i)))
MathildaLib.SwapOperator: (*(+(*i*b)+(*c*(-i)*(-i))))
MathildaLib.SmartLiftOperator: (*(+(*b*i)+(*(-i)*(-(*c*i)))))
before smart lift (+(*(-(*b*i)))+(*(-i)*(-(*c*i))))
after smart lift (+(*b*i)+(*(-i)*(-(*c*i))))
before smart lift (+(*(-(*b*i)))+(*(-i)*(-(*i*c))))
after smart lift (+(*b*i)+(*(-i)*(-(*i*c))))
before smart lift (+(*(-(*b*i)))+(*(-(*i*c))*(-i)))
after smart lift (+(*b*i)+(*(-(*i*c))*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-(*c*i))*(-i)))
after smart lift (+(*b*i)+(*(-(*c*i))*(-i)))
before smart lift (+(*(-(*i*b)))+(*(-(*c*i))*(-i)))
after smart lift (+(*i*b)+(*(-(*c*i))*(-i)))
before smart lift (+(*(-(*i*b)))+(*(-i)*(-(*c*i))))
after smart lift (+(*i*b)+(*(-i)*(-(*c*i))))
before smart lift (+(*(-(*i*b)))+(*(-i)*(-(*i*c))))
after smart lift (+(*i*b)+(*(-i)*(-(*i*c))))
before smart lift (+(*(-(*i*b)))+(*(-(*i*c))*(-i)))
after smart lift (+(*i*b)+(*(-(*i*c))*(-i)))
before smart lift (+(*(-(*i*c))*(-i))+(*(-(*i*b))))
after smart lift (+(*(-(*i*c))*(-i))+(*i*b))
before smart lift (+(*(-i)*(-(*i*c)))+(*(-(*i*b))))
after smart lift (+(*(-i)*(-(*i*c)))+(*i*b))
before smart lift (+(*(-i)*(-(*c*i)))+(*(-(*i*b))))
after smart lift (+(*(-i)*(-(*c*i)))+(*i*b))
before smart lift (+(*(-i)*(-(*c*i)))+(*(-(*b*i))))
after smart lift (+(*(-i)*(-(*c*i)))+(*b*i))
before smart lift (+(*(-i)*(-(*i*c)))+(*(-(*b*i))))
after smart lift (+(*(-i)*(-(*i*c)))+(*b*i))
before smart lift (+(*(-(*i*c))*(-i))+(*(-(*b*i))))
after smart lift (+(*(-(*i*c))*(-i))+(*b*i))
before smart lift (+(*(-(*c*i))*(-i))+(*(-(*b*i))))
after smart lift (+(*(-(*c*i))*(-i))+(*b*i))
before smart lift (+(*(-(*c*i))*(-i))+(*(-(*i*b))))
after smart lift (+(*(-(*c*i))*(-i))+(*i*b))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(-(*i*b))))
MathildaLib.SwapOperator: (*(+(*(-(*c*i))*(-i))+(-(*b*i))))
MathildaLib.SwapOperator: (*(+(*(-(*c*i))*(-i))+(-(*b*i))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(-(*i*b))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(-(*b*i))))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(*(-(*c*i))*(-i))+(*(-(*b*i)))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*(-(*b*i)))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*(-(*b*i)))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*(-(*b*i)))))
MathildaLib.SwapOperator: (*(+(*(-(*i*b)))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(*(-(*b*i)))+(*(-(*c*i))*(-i))))
before smart lift (+(*(-(*b*i)))+(*c*(-i)*(-i)))
after smart lift (+(*b*i)+(*c*(-i)*(-i)))
before smart lift (+(*(-(*b*i)))+(*(-i)*(-i)*c))
after smart lift (+(*b*i)+(*(-i)*(-i)*c))
before smart lift (+(*(-(*i*b)))+(*(-i)*(-i)*c))
after smart lift (+(*i*b)+(*(-i)*(-i)*c))
before smart lift (+(*(-(*i*b)))+(*c*(-i)*(-i)))
after smart lift (+(*i*b)+(*c*(-i)*(-i)))
before smart lift (+(*(-(*i*b)))+(*(-i)*c*(-i)))
after smart lift (+(*i*b)+(*(-i)*c*(-i)))
before smart lift (+(*(-i)*c*(-i))+(*(-(*i*b))))
after smart lift (+(*(-i)*c*(-i))+(*i*b))
before smart lift (+(*c*(-i)*(-i))+(*(-(*i*b))))
after smart lift (+(*c*(-i)*(-i))+(*i*b))
before smart lift (+(*c*(-i)*(-i))+(*(-(*b*i))))
after smart lift (+(*c*(-i)*(-i))+(*b*i))
before smart lift (+(*(-i)*c*(-i))+(*(-(*b*i))))
after smart lift (+(*(-i)*c*(-i))+(*b*i))
before smart lift (+(*(-i)*(-i)*c)+(*(-(*b*i))))
after smart lift (+(*(-i)*(-i)*c)+(*b*i))
before smart lift (+(*(-i)*(-i)*c)+(*(-(*i*b))))
after smart lift (+(*(-i)*(-i)*c)+(*i*b))
MathildaLib.MultiplyOperator: (*(+(*(-(*c*i))*(-i))+(-(*b*i))))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*c*(-i)*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*c*(-i)*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*c*(-i)*(-i))))
MathildaLib.SwapOperator: (+(-(*i*b))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.MultiplyOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (+(-(*b*i))+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*c*(-i)*(-i))))
MathildaLib.SwapOperator: (+(-(*i*b))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*i*b))+(*(-i)*(-(*c*i))))
MathildaLib.MultiplyOperator: (*(+(-(*i*b))+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.ScalarProductOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.ScalarProductOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.MultiplyOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.LiftOperator: (+(*(-i)*(-(*c*i)))+(-(*i*b)))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (+(-(*i*b))+(*c*(-i)*(-i)))
MathildaLib.SwapOperator: (*(+(-(*i*b))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-i)*(-i)*c)))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(-(*b*i))+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(*c*(-i)*(-i))+(*(-(*b*i)))))
MathildaLib.SwapOperator: (*(+(*c*(-i)*(-i))+(*(-(*b*i)))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.MultiplyOperator: (+(-(*b*i))+(*(-i)*(-(*c*i))))
MathildaLib.SwapOperator: (*(+(*(-(*i*b)))+(*c*(-i)*(-i))))
MathildaLib.MultiplyOperator: (*(+(*b*i)+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(*(-(*c*i))*(-i))+(*b*(-i))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*b*(-i))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*b*(-i))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-(*c*i)))+(*b*(-i))))
MathildaLib.SwapOperator: (*(+(*(-i)*b)+(*(-i)*(-(*c*i)))))
MathildaLib.SwapOperator: (*(+(*b*(-i))+(*(-(*c*i))*(-i))))
MathildaLib.SwapOperator: (*(+(*(-i)*(-i)*c)+(*b*(-i))))
MathildaLib.SwapOperator: (*(+(*c*(-i)*(-i))+(*b*(-i))))
MathildaLib.SwapOperator: (*(+(*(-i)*b)+(*c*(-i)*(-i))))
MathildaLib.LiftOperator: (+(*b*i)+(*(-i)*(-(*c*i))))
before smart lift (+(+(*(-i)*(-(*c*i))))+(*(-(*b*i))))
after smart lift (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-(*i*c))*(-i)))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SumOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.LiftOperator: (+(*i*b)+(+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.ScalarProductOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.LiftOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.LiftOperator: (+(*i*b)+(+(*(-(*i*c))*(-i))))
MathildaLib.SwapOperator: (*(+(*b*i)+(+(*(-(*c*i))*(-i)))))
MathildaLib.SwapOperator: (*(+(*b*i)+(+(*(-(*c*i))*(-i)))))
MathildaLib.SwapOperator: (*(+(*b*i)+(+(*(-(*c*i))*(-i)))))
MathildaLib.SwapOperator: (*(+(*b*i)+(+(*(-i)*(-(*i*c))))))
MathildaLib.SwapOperator: (*(+(*b*i)+(+(*(-i)*(-(*c*i))))))
MathildaLib.SwapOperator: (*(+(*b*i)+(+(*(-i)*(-(*c*i))))))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*i*b)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*i*b)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*i*b)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*i*b)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*i*b)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*i*c))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*i*c))))+(*b*i)))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (+(+(*(-i)*(-(*c*i))))+(*b*i))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SumOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SwapOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
MathildaLib.SmartLiftOperator: (*(+(+(*(-i)*(-(*c*i))))+(*b*i)))
before smart lift (+(+(*(-i)*(-(*c*i))))+(*(-(*i*b))))
after smart lift (+(+(*(-i)*(-(*c*i))))+(*i*b))
before smart lift (+(+(*(-i)*(-(*c*i))))+(*(-(*b*i))))
after smart lift (+(+(*(-i)*(-(*c*i))))+(*b*i))
before smart lift (+(+(*(-i)*(-(*i*c))))+(*(-(*b*i))))
after smart lift (+(+(*(-i)*(-(*i*c))))+(*b*i))
before smart lift (+(+(*(-i)*(-(*i*c))))+(*(-(*i*b))))
after smart lift (+(+(*(-i)*(-(*i*c))))+(*i*b))
before smart lift (+(+(*(-(*i*c))*(-i)))+(*(-(*i*b))))
after smart lift (+(+(*(-(*i*c))*(-i)))+(*i*b))
before smart lift (+(+(*(-(*c*i))*(-i)))+(*(-(*i*b))))
after smart lift (+(+(*(-(*c*i))*(-i)))+(*i*b))
before smart lift (+(+(*(-(*c*i))*(-i)))+(*(-(*b*i))))
after smart lift (+(+(*(-(*c*i))*(-i)))+(*b*i))
before smart lift (+(+(*(-(*i*c))*(-i)))+(*(-(*b*i))))
after smart lift (+(+(*(-(*i*c))*(-i)))+(*b*i))
before smart lift (+(+(*(-(*i*c))*(-i)))+(*(-(*i*b))))
after smart lift (+(+(*(-(*i*c))*(-i)))+(*i*b))
before smart lift (+(*(-(*i*b)))+(+(*(-(*i*c))*(-i))))
after smart lift (+(*i*b)+(+(*(-(*i*c))*(-i))))
before smart lift (+(*(-(*b*i)))+(+(*(-(*i*c))*(-i))))
after smart lift (+(*b*i)+(+(*(-(*i*c))*(-i))))
before smart lift (+(*(-(*b*i)))+(+(*(-i)*(-(*i*c)))))
after smart lift (+(*b*i)+(+(*(-i)*(-(*i*c)))))
before smart lift (+(*(-(*b*i)))+(+(*(-i)*(-(*c*i)))))
after smart lift (+(*b*i)+(+(*(-i)*(-(*c*i)))))
before smart lift (+(*(-(*b*i)))+(+(*(-i)*(-(*c*i)))))
after smart lift (+(*b*i)+(+(*(-i)*(-(*c*i)))))
before smart lift (+(*(-(*b*i)))+(+(*(-(*c*i))*(-i))))
after smart lift (+(*b*i)+(+(*(-(*c*i))*(-i))))
before smart lift (+(*(-(*b*i)))+(+(*(-(*c*i))*(-i))))
after smart lift (+(*b*i)+(+(*(-(*c*i))*(-i))))
before smart lift (+(*(-(*b*i)))+(+(*(-(*i*c))*(-i))))
after smart lift (+(*b*i)+(+(*(-(*i*c))*(-i))))
before smart lift (+(*(-(*b*i)))+(+(*(-i)*(-(*i*c)))))
after smart lift (+(*b*i)+(+(*(-i)*(-(*i*c)))))
before smart lift (+(*(-(*b*i)))+(+(*(-(*i*c))*(-i))))
after smart lift (+(*b*i)+(+(*(-(*i*c))*(-i))))
before smart lift (+(+(*(-(*i*c))*(-i)))+(*(-(*b*i))))
after smart lift (+(+(*(-(*i*c))*(-i)))+(*b*i))
before smart lift (+(+(*(-i)*(-(*i*c))))+(*(-(*b*i))))
after smart lift (+(+(*(-i)*(-(*i*c))))+(*b*i))
before smart lift (+(+(*(-i)*(-(*c*i))))+(*(-(*b*i))))
after smart lift (+(+(*(-i)*(-(*c*i))))+(*b*i))
before smart lift (+(+(*(-i)*(-(*c*i))))+(*(-(*i*b))))
after smart lift (+(+(*(-i)*(-(*c*i))))+(*i*b))
before smart lift (+(+(*(-i)*(-(*i*c))))+(*(-(*i*b))))
after smart lift (+(+(*(-i)*(-(*i*c))))+(*i*b))
before smart lift (+(*(-(*i*b)))+(+(*(-i)*(-(*i*c)))))
after smart lift (+(*i*b)+(+(*(-i)*(-(*i*c)))))
before smart lift (+(*(-(*i*b)))+(+(*(-i)*(-(*c*i)))))
after smart lift (+(*i*b)+(+(*(-i)*(-(*c*i)))))
before smart lift (+(*(-(*i*b)))+(+(*(-i)*(-(*i*c)))))
after smart lift (+(*i*b)+(+(*(-i)*(-(*i*c)))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestDivide">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>10</Passed>
              <Errors>3</Errors>
              <Failures>4</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestDivide1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 0.5
MathildaLib.ScalarProductOperator: 0.5
MathildaLib.SwapOperator: (*0.5*1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*2/a)+1)
MathildaLib.LiftOperator: (+1+(*2/a))
MathildaLib.SwapOperator: (+(*2/a)+(*1))
MathildaLib.CancelVariableOperator: (+1+(*2/a))
MathildaLib.SwapOperator: (+(/a*a)+(*2/a))
MathildaLib.SwapOperator: (+(*a/a)+(/a*2))
MathildaLib.SwapOperator: (+(*a/a)+(/a*2))
MathildaLib.LiftOperator: (+1+(*2/a))
MathildaLib.SwapOperator: (*(+(*2/a)+1))
MathildaLib.LiftOperator: (*(+1+(*2/a)))
MathildaLib.SwapOperator: (*(+(*2/a)+(*1)))
MathildaLib.SwapOperator: (*(+(/a*a)+(*2/a)))
MathildaLib.SwapOperator: (*(+(*a/a)+(/a*2)))
MathildaLib.SwapOperator: (*(+(*a/a)+(/a*2)))
MathildaLib.MultiplyOperator: (+1+(*2/a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*a))
MathildaLib.LiftOperator: (+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a*a)))
MathildaLib.MultiplyOperator: (+(*2*a)+(*a*a))
========
MathildaLib.SwapOperator: (+(*2/a)+1)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Requires product list to compare ignored</Message>
                  <StackTrace>  at MathildaLib.ListNode.CompareToIgnoreScalar (MathildaLib.Node other) [0x00201] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:298 
  at MathildaLib.AddOperator.Do (MathildaLib.Node&amp; node) [0x001f4] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:83 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.AddOperator+&lt;Add&gt;c__AnonStorey4.&lt;&gt;m__4 (Int32 i, Int32 j) [0x0000e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:115 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x0001a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.AddOperator.Add (Search search) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:114 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0009c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, OperatorDelegate[] operators) [0x00019] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestDivide.TestDivide11 () [0x00049] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 1
MathildaLib.MultiplyOperator: 1
before smart lift (+(*2/(+2+a))+(*(+(*2*a)+(*a*a))))
after smart lift (+(*2/(+2+a))+(*2*a)+(*a*a))
before smart lift (+(*(+(*2*a)+(*a*a)))+(*2/(+2+a)))
after smart lift (+(*2*a)+(*a*a)+(*2/(+2+a)))
before smart lift (+(*(+(*2*a)+(*a*a)))+(*2/(+a+2)))
after smart lift (+(*2*a)+(*a*a)+(*2/(+a+2)))
before smart lift (+(*(+(*2*a)+(*a*a)))+(/(+a+2)*2))
after smart lift (+(*2*a)+(*a*a)+(/(+a+2)*2))
before smart lift (+(*(+(*2*a)+(*a*a)))+(*(+(*a*2)+(*2*2))))
after smart lift (+(*2*a)+(*a*a)+(*a*2)+(*2*2))
before smart lift (+(*(+(*2*a)+(*a*a)))+(*(+(*2*2)+(*a*2))))
after smart lift (+(*2*a)+(*a*a)+(*2*2)+(*a*2))
before smart lift (+(*(+(*2*2)+(*a*2)))+(*(+(*2*a)+(*a*a))))
after smart lift (+(*2*2)+(*a*2)+(*2*a)+(*a*a))
before smart lift (+(*(+(*4)+(*a*2)))+(*(+(*2*a)+(*a*a))))
after smart lift (+(*4)+(*a*2)+(*2*a)+(*a*a))
before smart lift (+(*(+4+(*a*2)))+(*(+(*2*a)+(*a*a))))
after smart lift (+4+(*a*2)+(*2*a)+(*a*a))
before smart lift (+(*(+4+(*2*a)))+(*(+(*2*a)+(*a*a))))
after smart lift (+4+(*2*a)+(*2*a)+(*a*a))
before smart lift (+(*(+4+(*2*a)))+(*(+(*a*2)+(*a*a))))
after smart lift (+4+(*2*a)+(*a*2)+(*a*a))
before smart lift (+(*(+4+(*2*a)))+(*(+(*a*a)+(*a*2))))
after smart lift (+4+(*2*a)+(*a*a)+(*a*2))
before smart lift (+(*(+4+(*2*a)))+(*(+(*a*a)+(*2*a))))
after smart lift (+4+(*2*a)+(*a*a)+(*2*a))
before smart lift (+(*(+4+(*a*2)))+(*(+(*a*a)+(*2*a))))
after smart lift (+4+(*a*2)+(*a*a)+(*2*a))
before smart lift (+(*(+4+(*a*2)))+(*(+(*a*a)+(*a*2))))
after smart lift (+4+(*a*2)+(*a*a)+(*a*2))
before smart lift (+(*(+4+(*a*2)))+(*(+(*a*2)+(*a*a))))
after smart lift (+4+(*a*2)+(*a*2)+(*a*a))
before smart lift (+(*(+(*a*2)+4))+(*(+(*a*2)+(*a*a))))
after smart lift (+(*a*2)+4+(*a*2)+(*a*a))
before smart lift (+(*(+(*2*a)+4))+(*(+(*a*2)+(*a*a))))
after smart lift (+(*2*a)+4+(*a*2)+(*a*a))
before smart lift (+(*(+(*2*a)+4))+(*(+(*2*a)+(*a*a))))
after smart lift (+(*2*a)+4+(*2*a)+(*a*a))
before smart lift (+(*(+(*2*a)+4))+(*(+(*a*a)+(*2*a))))
after smart lift (+(*2*a)+4+(*a*a)+(*2*a))
before smart lift (+(*(+(*2*a)+4))+(*(+(*a*a)+(*a*2))))
after smart lift (+(*2*a)+4+(*a*a)+(*a*2))
before smart lift (+(*(+(*a*2)+4))+(*(+(*a*a)+(*a*2))))
after smart lift (+(*a*2)+4+(*a*a)+(*a*2))
before smart lift (+(*(+(*a*2)+4))+(*(+(*a*a)+(*2*a))))
after smart lift (+(*a*2)+4+(*a*a)+(*2*a))
before smart lift (+(*(+(*a*2)+4))+(*(+(*2*a)+(*a*a))))
after smart lift (+(*a*2)+4+(*2*a)+(*a*a))
before smart lift (+(*(+(*2*a)+(*a*a)))+(*(+(*a*2)+4)))
after smart lift (+(*2*a)+(*a*a)+(*a*2)+4)
before smart lift (+(*(+(*2*a)+(*a*a)))+(*(+4+(*a*2))))
after smart lift (+(*2*a)+(*a*a)+4+(*a*2))
before smart lift (+(*(+(*2*a)+(*a*a)))+(*(+4+(*2*a))))
after smart lift (+(*2*a)+(*a*a)+4+(*2*a))
before smart lift (+(*(+(*2*a)+(*a*a)))+(*(+(*2*a)+4)))
after smart lift (+(*2*a)+(*a*a)+(*2*a)+4)
before smart lift (+(*(+(*a*2)+(*a*a)))+(*(+(*2*a)+4)))
after smart lift (+(*a*2)+(*a*a)+(*2*a)+4)
before smart lift (+(*(+(*a*2)+(*a*a)))+(*(+4+(*2*a))))
after smart lift (+(*a*2)+(*a*a)+4+(*2*a))
before smart lift (+(*(+(*a*2)+(*a*a)))+(*(+4+(*a*2))))
after smart lift (+(*a*2)+(*a*a)+4+(*a*2))
before smart lift (+(*(+(*a*2)+(*a*a)))+(*(+(*a*2)+4)))
after smart lift (+(*a*2)+(*a*a)+(*a*2)+4)
before smart lift (+(*(+(*a*a)+(*a*2)))+(*(+(*a*2)+4)))
after smart lift (+(*a*a)+(*a*2)+(*a*2)+4)
before smart lift (+(*(+(*a*a)+(*2*a)))+(*(+(*a*2)+4)))
after smart lift (+(*a*a)+(*2*a)+(*a*2)+4)
before smart lift (+(*(+(*a*a)+(*2*a)))+(*(+4+(*a*2))))
after smart lift (+(*a*a)+(*2*a)+4+(*a*2))
before smart lift (+(*(+(*a*a)+(*2*a)))+(*(+4+(*2*a))))
after smart lift (+(*a*a)+(*2*a)+4+(*2*a))
before smart lift (+(*(+(*a*a)+(*2*a)))+(*(+(*2*a)+4)))
after smart lift (+(*a*a)+(*2*a)+(*2*a)+4)
before smart lift (+(*(+(*a*a)+(*a*2)))+(*(+(*2*a)+4)))
after smart lift (+(*a*a)+(*a*2)+(*2*a)+4)
before smart lift (+(*(+(*a*a)+(*a*2)))+(*(+4+(*2*a))))
after smart lift (+(*a*a)+(*a*2)+4+(*2*a))
before smart lift (+(*(+(*a*a)+(*a*2)))+(*(+4+(*a*2))))
after smart lift (+(*a*a)+(*a*2)+4+(*a*2))
MathildaLib.SwapOperator: (+(*a*a)+(*2*a)+4+(*2*a))
MathildaLib.SwapOperator: (+(*a*a)+(*2*a)+4+(*2*a))
MathildaLib.SwapOperator: (+(*a*a)+(*2*a)+4+(*2*a))
MathildaLib.SwapOperator: (+(*a*a)+4+(*2*a)+(*2*a))
MathildaLib.SwapOperator: (+(*a*a)+4+(*2*a)+(*2*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a*a)+4+(*2*a))
MathildaLib.SwapOperator: (+(*a*2)+(*a*a)+4+(*2*a))
MathildaLib.SwapOperator: (+(*a*2)+(*2*a)+4+(*a*a))
MathildaLib.SwapOperator: (+(*a*2)+4+(*a*a)+(*2*a))
MathildaLib.SwapOperator: (+(*a*2)+4+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*a)+4+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*2*a)+4+(*a*a))
MathildaLib.SwapOperator: (+(*2*a)+(*2*a)+4+(*a*a))
MathildaLib.SwapOperator: (+(*2*a)+4+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+(*2*a)+4+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+4+(*a*a)+(*2*a)+(*2*a))
MathildaLib.SwapOperator: (+4+(*a*a)+(*2*a)+(*2*a))
MathildaLib.SwapOperator: (+4+(*a*2)+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+4+(*2*a)+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+4+(*2*a)+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+4+(*2*a)+(*2*a)+(*a*a))
MathildaLib.SwapOperator: (+4+(*2*a)+(*2*a)+(*a*a))
before smart lift (+(+(*a*a)+(*a*2))+(*(+4+(*a*2))))
after smart lift (+(+(*a*a)+(*a*2))+4+(*a*2))
before smart lift (+(+(*a*2)+(*a*a))+(*(+4+(*a*2))))
after smart lift (+(+(*a*2)+(*a*a))+4+(*a*2))
before smart lift (+(+(*2*a)+(*a*a))+(*(+4+(*a*2))))
after smart lift (+(+(*2*a)+(*a*a))+4+(*a*2))
before smart lift (+(+(*2*a)+(*a*a))+(*(+4+(*2*a))))
after smart lift (+(+(*2*a)+(*a*a))+4+(*2*a))
before smart lift (+(+(*2*a)+(*a*a))+(*(+(*2*a)+4)))
after smart lift (+(+(*2*a)+(*a*a))+(*2*a)+4)
before smart lift (+(+(*2*a)+(*a*a))+(*(+(*a*2)+4)))
after smart lift (+(+(*2*a)+(*a*a))+(*a*2)+4)
before smart lift (+(+(*a*2)+(*a*a))+(*(+(*a*2)+4)))
after smart lift (+(+(*a*2)+(*a*a))+(*a*2)+4)
before smart lift (+(+(*a*2)+(*a*a))+(*(+(*2*a)+4)))
after smart lift (+(+(*a*2)+(*a*a))+(*2*a)+4)
before smart lift (+(+(*a*2)+(*a*a))+(*(+4+(*2*a))))
after smart lift (+(+(*a*2)+(*a*a))+4+(*2*a))
before smart lift (+(+(*a*a)+(*a*2))+(*(+4+(*2*a))))
after smart lift (+(+(*a*a)+(*a*2))+4+(*2*a))
before smart lift (+(+(*a*a)+(*2*a))+(*(+4+(*2*a))))
after smart lift (+(+(*a*a)+(*2*a))+4+(*2*a))
before smart lift (+(+(*a*a)+(*2*a))+(*(+4+(*a*2))))
after smart lift (+(+(*a*a)+(*2*a))+4+(*a*2))
before smart lift (+(+(*a*a)+(*2*a))+(*(+(*a*2)+4)))
after smart lift (+(+(*a*a)+(*2*a))+(*a*2)+4)
before smart lift (+(+(*a*a)+(*2*a))+(*(+(*2*a)+4)))
after smart lift (+(+(*a*a)+(*2*a))+(*2*a)+4)
before smart lift (+(+(*a*a)+(*a*2))+(*(+(*2*a)+4)))
after smart lift (+(+(*a*a)+(*a*2))+(*2*a)+4)
before smart lift (+(+(*a*a)+(*a*2))+(*(+(*a*2)+4)))
after smart lift (+(+(*a*a)+(*a*2))+(*a*2)+4)
before smart lift (+(*(+(*a*2)+4))+(+(*a*a)+(*a*2)))
after smart lift (+(*a*2)+4+(+(*a*a)+(*a*2)))
before smart lift (+(*(+4+(*a*2)))+(+(*a*a)+(*a*2)))
after smart lift (+4+(*a*2)+(+(*a*a)+(*a*2)))
before smart lift (+(*(+4+(*2*a)))+(+(*a*a)+(*a*2)))
after smart lift (+4+(*2*a)+(+(*a*a)+(*a*2)))
before smart lift (+(*(+4+(*2*a)))+(+(*a*2)+(*a*a)))
after smart lift (+4+(*2*a)+(+(*a*2)+(*a*a)))
before smart lift (+(*(+4+(*2*a)))+(+(*2*a)+(*a*a)))
after smart lift (+4+(*2*a)+(+(*2*a)+(*a*a)))
before smart lift (+(*(+4+(*2*a)))+(+(*a*a)+(*2*a)))
after smart lift (+4+(*2*a)+(+(*a*a)+(*2*a)))
before smart lift (+(*(+4+(*a*2)))+(+(*a*a)+(*2*a)))
after smart lift (+4+(*a*2)+(+(*a*a)+(*2*a)))
before smart lift (+(*(+4+(*a*2)))+(+(*2*a)+(*a*a)))
after smart lift (+4+(*a*2)+(+(*2*a)+(*a*a)))
before smart lift (+(*(+4+(*a*2)))+(+(*a*2)+(*a*a)))
after smart lift (+4+(*a*2)+(+(*a*2)+(*a*a)))
before smart lift (+(*(+(*a*2)+4))+(+(*a*2)+(*a*a)))
after smart lift (+(*a*2)+4+(+(*a*2)+(*a*a)))
before smart lift (+(*(+(*2*a)+4))+(+(*a*2)+(*a*a)))
after smart lift (+(*2*a)+4+(+(*a*2)+(*a*a)))
before smart lift (+(*(+(*2*a)+4))+(+(*2*a)+(*a*a)))
after smart lift (+(*2*a)+4+(+(*2*a)+(*a*a)))
before smart lift (+(*(+(*2*a)+4))+(+(*a*a)+(*2*a)))
after smart lift (+(*2*a)+4+(+(*a*a)+(*2*a)))
before smart lift (+(*(+(*2*a)+4))+(+(*a*a)+(*a*2)))
after smart lift (+(*2*a)+4+(+(*a*a)+(*a*2)))
MathildaLib.SwapOperator: (+(+(*a*a)+(*2*a))+4+(*2*a))
MathildaLib.SwapOperator: (+(+(*a*a)+(*2*a))+4+(*2*a))
MathildaLib.SwapOperator: (+(+(*a*2)+(*a*a))+4+(*2*a))
MathildaLib.SwapOperator: (+(+(*a*2)+(*a*a))+4+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*a*a)+(*a*2))+4)
MathildaLib.SwapOperator: (+(*2*a)+(+(*2*a)+(*a*a))+4)
MathildaLib.SwapOperator: (+(*2*a)+4+(+(*2*a)+(*a*a)))
MathildaLib.SwapOperator: (+(*2*a)+4+(+(*2*a)+(*a*a)))
MathildaLib.SwapOperator: (+(*2*a)+4+(+(*2*a)+(*a*a)))
MathildaLib.SwapOperator: (+4+(+(*a*a)+(*2*a))+(*2*a))
MathildaLib.SwapOperator: (+4+(+(*2*a)+(*a*a))+(*2*a))
MathildaLib.SwapOperator: (+4+(+(*2*a)+(*a*a))+(*2*a))
MathildaLib.SwapOperator: (+4+(+(*2*a)+(*a*a))+(*2*a))
MathildaLib.SwapOperator: (+4+(*a*2)+(+(*2*a)+(*a*a)))
MathildaLib.SwapOperator: (+4+(*2*a)+(+(*2*a)+(*a*a)))
MathildaLib.SwapOperator: (+4+(*2*a)+(+(*2*a)+(*a*a)))
MathildaLib.SwapOperator: (+4+(*2*a)+(+(*2*a)+(*a*a)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 1,29ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(*1/a)+0.5)
MathildaLib.ScalarProductOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+0.5)
MathildaLib.SwapOperator: (+(*0.5*2/a)+0.5)
MathildaLib.SwapOperator: (+0.5+(/a*0.5*2))
MathildaLib.SwapOperator: (+0.5+(*0.5*2/a))
MathildaLib.FixSignOperator: (+0.5+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.25/a)+0.5)
MathildaLib.FixSignOperator: (+0.5+(*0.25/a))
MathildaLib.SwapOperator: (+(/4/a)+0.5)
MathildaLib.MultiplyOperator: (+0.5+(*0.25/a))
MathildaLib.SwapOperator: (+(*2/2/a)+0.5)
MathildaLib.SwapOperator: (+(*2/2/a)+0.5)
MathildaLib.SwapOperator: (+0.5+(/a*2/2))
MathildaLib.SwapOperator: (+0.5+(*0.25/a))
MathildaLib.LiftOperator: (+0.5+(/a))
MathildaLib.MultiplyOneOperator: (+(*0.5)+(/a))
MathildaLib.SwapOperator: (+(*1/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5)+(*0.5*2/a))
MathildaLib.FixSignOperator: (+(*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5))
MathildaLib.FixSignOperator: (+(*0.5)+(*0.25/a))
MathildaLib.SwapOperator: (+(/4/a)+(*0.5))
MathildaLib.MultiplyOperator: (+(*0.5)+(*0.25/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5))
MathildaLib.SwapOperator: (+(*0.5)+(/a*2/2))
MathildaLib.SwapOperator: (+(*0.5)+(*0.25/a))
MathildaLib.ScalarProductOperator: (+0.5+(/a))
MathildaLib.MultiplyOneOperator: (+(/2)+(/a))
MathildaLib.SwapOperator: (+(*1/a)+(/2))
MathildaLib.ScalarProductOperator: (+(/2)+(/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/2))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/2))
MathildaLib.SwapOperator: (+(/2)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/2)+(*0.5*2/a))
MathildaLib.FixSignOperator: (+(/2)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2))
MathildaLib.FixSignOperator: (+(/2)+(*0.25/a))
MathildaLib.SwapOperator: (+(/4/a)+(/2))
MathildaLib.MultiplyOperator: (+(/2)+(*0.25/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(/2))
MathildaLib.SwapOperator: (+(*2/2/a)+(/2))
MathildaLib.SwapOperator: (+(/2)+(/a*2/2))
MathildaLib.SwapOperator: (+(/2)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a)+(*0.5*1))
MathildaLib.MultiplyOneOperator: (+(/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*1/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*1*0.5)+(*1/a))
MathildaLib.ScalarProductOperator: (+(/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*1))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*1*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*1*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*1)+(*0.5*2/a))
MathildaLib.FixSignOperator: (+(*0.5*1)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*0.25))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*0.25))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*1))
MathildaLib.FixSignOperator: (+(*0.25/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/4/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*1*0.5)+(/4/a))
MathildaLib.MultiplyOperator: (+(*0.25/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a*2/2)+(*0.5*1))
MathildaLib.SwapOperator: (+(/2*2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(*1*0.5)+(/2/a*2))
MathildaLib.SwapOperator: (+(*1*0.5)+(*2/2/a))
MathildaLib.SwapOperator: (+(*1*0.5)+(*2/2/a))
MathildaLib.SwapOperator: (+(*0.5*1)+(/a*2/2))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a)+(*0.5*1))
MathildaLib.SwapOperator: (+(/a)+(*1/2))
MathildaLib.MultiplyOneOperator: (+(/a)+(*1/2))
MathildaLib.SwapOperator: (+(*1/a)+(*1/2))
MathildaLib.SwapOperator: (+(*1/a)+(*1/2))
MathildaLib.SwapOperator: (+(*1/a)+(*1/2))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*1/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*1/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*1/2))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*1/2))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*1/2))
MathildaLib.SwapOperator: (+(/2*1)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2*1)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*1/2)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*1/2)+(*0.5*2/a))
MathildaLib.FixSignOperator: (+(*1/2)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*1/2)+(/a*0.25))
MathildaLib.SwapOperator: (+(*1/2)+(/a*0.25))
MathildaLib.SwapOperator: (+(*0.25/a)+(*1/2))
MathildaLib.FixSignOperator: (+(*0.25/a)+(*1/2))
MathildaLib.SwapOperator: (+(/4/a)+(*1/2))
MathildaLib.SwapOperator: (+(/2*1)+(/4/a))
MathildaLib.MultiplyOperator: (+(*0.25/a)+(*1/2))
MathildaLib.SwapOperator: (+(/a*2/2)+(*1/2))
MathildaLib.SwapOperator: (+(/2*2/a)+(*1/2))
MathildaLib.SwapOperator: (+(/2*2/a)+(*1/2))
MathildaLib.SwapOperator: (+(*2/2/a)+(*1/2))
MathildaLib.SwapOperator: (+(*2/2/a)+(*1/2))
MathildaLib.SwapOperator: (+(/2*1)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*1)+(*2/2/a))
MathildaLib.SwapOperator: (+(*1/2)+(/a*2/2))
MathildaLib.SwapOperator: (+(*0.25/a)+(*1/2))
MathildaLib.CancelVariableOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a))
MathildaLib.SwapOperator: (+(/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(/a)+(*0.5*a/a))
MathildaLib.FixSignOperator: (+(/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/a))
MathildaLib.SwapOperator: (+(/a)+(*0.5*a/a))
MathildaLib.MultiplyOneOperator: (+(/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*1/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*1/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*1/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*1/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*1/a))
MathildaLib.SwapOperator: (+(/a*1)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*1)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*1/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*1/a)+(*0.5*a/a))
MathildaLib.FixSignOperator: (+(*1/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*1/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*1/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*1/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*1/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*1/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*1/a))
MathildaLib.SwapOperator: (+(/a*1)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*1)+(/2*a/a))
MathildaLib.ScalarProductOperator: (+(/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/a*0.5)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5*a/a))
MathildaLib.FixSignOperator: (+(*0.5*2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a/2*a)+(/a*0.5*2))
MathildaLib.SwapOperator: (+(/a*2*0.5)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(/a*0.5*2)+(/2/a*a))
MathildaLib.SwapOperator: (+(*a/a/2)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(*a/a/2)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(*2*0.5/a))
MathildaLib.SwapOperator: (+(/2/a*a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.5*2/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/a*a/2))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*2*0.5/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(*a/2/a))
MathildaLib.SwapOperator: (+(*0.5/a*2)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.5*2/a)+(*0.5*a/a))
MathildaLib.FixSignOperator: (+(*0.5*2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*a*0.5/a))
MathildaLib.FixSignOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a/4))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a/4))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/a/4))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/4/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/4/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/4/a))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a/4))
MathildaLib.SwapOperator: (+(*0.5*a/a)+(/a/4))
MathildaLib.SwapOperator: (+(/a/4)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a/4)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/4/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.MultiplyOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*a*0.5)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(/a*2/2))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a*0.5*a)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(/2*2/a))
MathildaLib.SwapOperator: (+(*a/a*0.5)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(*a*0.5/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(*a*0.5/a))
MathildaLib.SwapOperator: (+(*2/a/2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/a/2)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(/a*0.5*a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*2/2/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(/2*2/a))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*2/a/2))
MathildaLib.SwapOperator: (+(*0.5/a*a)+(*2/a/2))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.FixSignOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*0.25/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*0.25)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.FixSignOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/4/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(/4/a))
MathildaLib.SwapOperator: (+(*a/2/a)+(/4/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/4/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(/4/a))
MathildaLib.SwapOperator: (+(/a/4)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a/4)+(/2*a/a))
MathildaLib.SwapOperator: (+(/4/a)+(/a/2*a))
MathildaLib.MultiplyOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a/2*2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a*a/2)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(/2*2/a))
MathildaLib.SwapOperator: (+(/a/2*a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(*a/2/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/a*2/2)+(/2*a/a))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2/a*2)+(*a/a/2))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*a/a)+(*2/2/a))
MathildaLib.SwapOperator: (+(/2*2/a)+(/a/2*a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(/2*a/a))
MathildaLib.SwapOperator: (+(*0.25/a)+(*0.5*a/a))
MathildaLib.LiftOperator: (+0.5+(/a))
MathildaLib.MultiplyOneOperator: (*(+0.5+(/a)))
MathildaLib.SwapOperator: (*(+(*1/a)+0.5))
MathildaLib.ScalarProductOperator: (*(+0.5+(/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+0.5))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+0.5))
MathildaLib.SwapOperator: (*(+0.5+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+0.5+(*0.5*2/a)))
MathildaLib.FixSignOperator: (*(+0.5+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+0.5))
MathildaLib.FixSignOperator: (*(+0.5+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/4/a)+0.5))
MathildaLib.MultiplyOperator: (*(+0.5+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+0.5))
MathildaLib.SwapOperator: (*(+(*2/2/a)+0.5))
MathildaLib.SwapOperator: (*(+0.5+(/a*2/2)))
MathildaLib.SwapOperator: (*(+0.5+(*0.25/a)))
MathildaLib.LiftOperator: (*(+0.5+(/a)))
MathildaLib.MultiplyOneOperator: (*(+(*0.5)+(/a)))
MathildaLib.SwapOperator: (*(+(*1/a)+(*0.5)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*0.5)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*0.5)))
MathildaLib.SwapOperator: (*(+(*0.5)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5)+(*0.5*2/a)))
MathildaLib.FixSignOperator: (*(+(*0.5)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5)))
MathildaLib.FixSignOperator: (*(+(*0.5)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/4/a)+(*0.5)))
MathildaLib.MultiplyOperator: (*(+(*0.5)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*0.5)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*0.5)))
MathildaLib.SwapOperator: (*(+(*0.5)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(*0.5)+(*0.25/a)))
MathildaLib.ScalarProductOperator: (*(+0.5+(/a)))
MathildaLib.MultiplyOneOperator: (*(+(/2)+(/a)))
MathildaLib.SwapOperator: (*(+(*1/a)+(/2)))
MathildaLib.ScalarProductOperator: (*(+(/2)+(/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(/2)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(/2)))
MathildaLib.SwapOperator: (*(+(/2)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(/2)+(*0.5*2/a)))
MathildaLib.FixSignOperator: (*(+(/2)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2)))
MathildaLib.FixSignOperator: (*(+(/2)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/4/a)+(/2)))
MathildaLib.MultiplyOperator: (*(+(/2)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(/2)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(/2)))
MathildaLib.SwapOperator: (*(+(/2)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(/2)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/a)+(*0.5*1)))
MathildaLib.MultiplyOneOperator: (*(+(/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*1/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*1*0.5)+(*1/a)))
MathildaLib.ScalarProductOperator: (*(+(/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*1*0.5)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*1*0.5)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*1)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*1)+(*0.5*2/a)))
MathildaLib.FixSignOperator: (*(+(*0.5*1)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*1)+(/a*0.25)))
MathildaLib.SwapOperator: (*(+(*0.5*1)+(/a*0.25)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*1)))
MathildaLib.FixSignOperator: (*(+(*0.25/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(/4/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*1*0.5)+(/4/a)))
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(/a*2/2)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(/2*2/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(*1*0.5)+(/2/a*2)))
MathildaLib.SwapOperator: (*(+(*1*0.5)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*1*0.5)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*1)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(/a)+(*0.5*1)))
MathildaLib.SwapOperator: (*(+(/a)+(*1/2)))
MathildaLib.MultiplyOneOperator: (*(+(/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*1/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*1/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*1/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/2*1)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/2*1)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*1/2)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*1/2)+(*0.5*2/a)))
MathildaLib.FixSignOperator: (*(+(*1/2)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*1/2)+(/a*0.25)))
MathildaLib.SwapOperator: (*(+(*1/2)+(/a*0.25)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*1/2)))
MathildaLib.FixSignOperator: (*(+(*0.25/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/4/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/2*1)+(/4/a)))
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/a*2/2)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/2*2/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/2*2/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(/2*1)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/2*1)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*1/2)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*1/2)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(/a)))
MathildaLib.SwapOperator: (*(+(/a)+(/a*0.5*a)))
MathildaLib.SwapOperator: (*(+(/a)+(*0.5*a/a)))
MathildaLib.FixSignOperator: (*(+(/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(/a)))
MathildaLib.SwapOperator: (*(+(/a)+(*0.5*a/a)))
MathildaLib.MultiplyOneOperator: (*(+(/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(/a*1)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*1)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*1/a)+(/a*0.5*a)))
MathildaLib.SwapOperator: (*(+(*1/a)+(*0.5*a/a)))
MathildaLib.FixSignOperator: (*(+(*1/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*1/a)))
MathildaLib.SwapOperator: (*(+(/a*1)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(/a*1)+(/2*a/a)))
MathildaLib.ScalarProductOperator: (*(+(/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*2*0.5)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/a*2*0.5)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*a*0.5)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*a/a*0.5)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*a/a*0.5)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(*2/a*0.5)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*2/a*0.5)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(/a*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*0.5*a/a)))
MathildaLib.FixSignOperator: (*(+(*0.5*2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(/a*0.5*2)))
MathildaLib.SwapOperator: (*(+(/a*2*0.5)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*2)+(/2/a*a)))
MathildaLib.SwapOperator: (*(+(*a/a/2)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(*a/a/2)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/2/a*a)+(*2*0.5/a)))
MathildaLib.SwapOperator: (*(+(/2/a*a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*0.5*2/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/a*a/2)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/a*a/2)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/a*a/2)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/a*a/2)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/a*a/2)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*2*0.5/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*2)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.5*2/a)+(*0.5*a/a)))
MathildaLib.FixSignOperator: (*(+(*0.5*2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/a*0.25)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/a*0.25)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*a*0.5/a)))
MathildaLib.FixSignOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*a/a*0.5)+(/a/4)))
MathildaLib.SwapOperator: (*(+(*a/a*0.5)+(/a/4)))
MathildaLib.SwapOperator: (*(+(*a/a*0.5)+(/a/4)))
MathildaLib.SwapOperator: (*(+(*0.5/a*a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(/a/4)))
MathildaLib.SwapOperator: (*(+(*0.5*a/a)+(/a/4)))
MathildaLib.SwapOperator: (*(+(/a/4)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/a/4)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/4/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a/2*2)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/a/2*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*a*0.5)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/a*2/2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*2/2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*a)+(/a*2/2)))
MathildaLib.SwapOperator: (*(+(/a*0.5*a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/a*0.5*a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*a/a*0.5)+(/2*2/a)))
MathildaLib.SwapOperator: (*(+(*a/a*0.5)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(*a*0.5/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/2*2/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/2*2/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(/2*2/a)+(*a*0.5/a)))
MathildaLib.SwapOperator: (*(+(*2/a/2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*2/a/2)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(/a*0.5*a)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*2/2/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*a)+(/2*2/a)))
MathildaLib.SwapOperator: (*(+(*0.5/a*a)+(*2/a/2)))
MathildaLib.SwapOperator: (*(+(*0.5/a*a)+(*2/a/2)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.FixSignOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*0.25/a)))
MathildaLib.SwapOperator: (*(+(/a*0.25)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a*0.25)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/a/2*a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.FixSignOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(*a/2/a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(/4/a)))
MathildaLib.SwapOperator: (*(+(/a/4)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a/4)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/4/a)+(/a/2*a)))
MathildaLib.MultiplyOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a/2*2)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a/2*2)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a*a/2)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/a*a/2)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(/2*2/a)))
MathildaLib.SwapOperator: (*(+(/a/2*a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/a*2/2)+(*a/2/a)))
MathildaLib.SwapOperator: (*(+(/a*2/2)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/a*2/2)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2/a*2)+(*a/a/2)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/2*a/a)+(*2/2/a)))
MathildaLib.SwapOperator: (*(+(/2*2/a)+(/a/2*a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(/2*a/a)))
MathildaLib.SwapOperator: (*(+(*0.25/a)+(*0.5*a/a)))
MathildaLib.MultiplyOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(*4/a)+2)
MathildaLib.ScalarProductOperator: (+2+(*4/a))
MathildaLib.SwapOperator: (+(*2*2/a)+2)
MathildaLib.LiftOperator: (+2+(*4/a))
MathildaLib.SwapOperator: (+(*4/a)+(*2))
MathildaLib.SwapOperator: (+(*2*2/a)+(*2))
MathildaLib.MultiplyOneOperator: (+2+(*4/a))
MathildaLib.SwapOperator: (+(*4/a)+(*1*2))
MathildaLib.SwapOperator: (+(*2*1)+(*4/a))
MathildaLib.ScalarProductOperator: (+(*1*2)+(*4/a))
MathildaLib.SwapOperator: (+(*2*2/a)+(*1*2))
MathildaLib.SwapOperator: (+(*2*2/a)+(*1*2))
MathildaLib.SwapOperator: (+(*2*1)+(*2/a*2))
MathildaLib.CancelVariableOperator: (+2+(*4/a))
MathildaLib.SwapOperator: (+(/a*2*a)+(*4/a))
MathildaLib.SwapOperator: (+(/a*2*a)+(*4/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*4/a))
MathildaLib.SwapOperator: (+(*2*a/a)+(*4/a))
MathildaLib.SwapOperator: (+(*2*a/a)+(*4/a))
MathildaLib.SwapOperator: (+(*2*a/a)+(*4/a))
MathildaLib.SwapOperator: (+(/a*4)+(*a*2/a))
MathildaLib.SwapOperator: (+(/a*4)+(*2*a/a))
MathildaLib.SwapOperator: (+(*4/a)+(*a*2/a))
MathildaLib.ScalarProductOperator: (+(*4/a)+(*2*a/a))
MathildaLib.SwapOperator: (+(/a*a*2)+(*2*2/a))
MathildaLib.SwapOperator: (+(/a*2*a)+(*2*2/a))
MathildaLib.SwapOperator: (+(/a*2*a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a/a*2)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*a*2/a)+(*2*2/a))
MathildaLib.SwapOperator: (+(*2/a*2)+(*a*2/a))
MathildaLib.SwapOperator: (+(*2/a*2)+(*2/a*a))
MathildaLib.SwapOperator: (+(*2/a*2)+(*2/a*a))
MathildaLib.SwapOperator: (+(*2/a*2)+(*2/a*a))
MathildaLib.SwapOperator: (+(*2*a/a)+(*2/a*2))
MathildaLib.SwapOperator: (+(*2*a/a)+(*2/a*2))
MathildaLib.SwapOperator: (+(*2*2/a)+(*a*2/a))
MathildaLib.LiftOperator: (+2+(*4/a))
MathildaLib.SwapOperator: (*(+(*4/a)+2))
MathildaLib.ScalarProductOperator: (*(+2+(*4/a)))
MathildaLib.SwapOperator: (*(+(*2*2/a)+2))
MathildaLib.LiftOperator: (*(+2+(*4/a)))
MathildaLib.SwapOperator: (*(+(*4/a)+(*2)))
MathildaLib.SwapOperator: (*(+(*2*2/a)+(*2)))
MathildaLib.MultiplyOneOperator: (*(+2+(*4/a)))
MathildaLib.SwapOperator: (*(+(*4/a)+(*1*2)))
MathildaLib.SwapOperator: (*(+(*2*1)+(*4/a)))
MathildaLib.ScalarProductOperator: (*(+(*1*2)+(*4/a)))
MathildaLib.SwapOperator: (*(+(*2*2/a)+(*1*2)))
MathildaLib.SwapOperator: (*(+(*2*2/a)+(*1*2)))
MathildaLib.SwapOperator: (*(+(*2*1)+(*2/a*2)))
MathildaLib.SwapOperator: (*(+(/a*2*a)+(*4/a)))
MathildaLib.SwapOperator: (*(+(/a*2*a)+(*4/a)))
MathildaLib.SwapOperator: (*(+(*a*2/a)+(*4/a)))
MathildaLib.SwapOperator: (*(+(*2*a/a)+(*4/a)))
MathildaLib.SwapOperator: (*(+(*2*a/a)+(*4/a)))
MathildaLib.SwapOperator: (*(+(*2*a/a)+(*4/a)))
MathildaLib.SwapOperator: (*(+(/a*4)+(*a*2/a)))
MathildaLib.SwapOperator: (*(+(/a*4)+(*2*a/a)))
MathildaLib.SwapOperator: (*(+(*4/a)+(*a*2/a)))
MathildaLib.ScalarProductOperator: (*(+(*4/a)+(*2*a/a)))
MathildaLib.SwapOperator: (*(+(/a*a*2)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(/a*2*a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(/a*2*a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*a/a*2)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*a*2/a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*a*2/a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*a*2/a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*a*2/a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*a*2/a)+(*2*2/a)))
MathildaLib.SwapOperator: (*(+(*2/a*2)+(*a*2/a)))
MathildaLib.SwapOperator: (*(+(*2/a*2)+(*2/a*a)))
MathildaLib.SwapOperator: (*(+(*2/a*2)+(*2/a*a)))
MathildaLib.SwapOperator: (*(+(*2/a*2)+(*2/a*a)))
MathildaLib.SwapOperator: (*(+(*2*a/a)+(*2/a*2)))
MathildaLib.SwapOperator: (*(+(*2*a/a)+(*2/a*2)))
MathildaLib.SwapOperator: (*(+(*2*2/a)+(*a*2/a)))
MathildaLib.MultiplyOperator: (+2+(*4/a))
MathildaLib.SwapOperator: (*(+1+(*2/a))*0.5)
MathildaLib.SwapOperator: (*0.5*(+(*2/a)+1))
MathildaLib.LiftOperator: (*0.5*(+1+(*2/a)))
MathildaLib.SwapOperator: (*(+(*1)+(*2/a))*0.5)
MathildaLib.SwapOperator: (*0.5*(+(*2/a)+(*1)))
MathildaLib.CancelVariableOperator: (*0.5*(+1+(*2/a)))
MathildaLib.SwapOperator: (*(+(*2/a)+(*a/a))*0.5)
MathildaLib.SwapOperator: (*(+(*2/a)+(*a/a))*0.5)
MathildaLib.SwapOperator: (*0.5*(+(/a*a)+(*2/a)))
MathildaLib.SwapOperator: (*0.5*(+(*a/a)+(/a*2)))
MathildaLib.SwapOperator: (*0.5*(+(*a/a)+(/a*2)))
MathildaLib.SwapOperator: (*(+1+(*2/a))/2)
MathildaLib.SwapOperator: (/2*(+(*2/a)+1))
MathildaLib.LiftOperator: (/2*(+1+(*2/a)))
MathildaLib.SwapOperator: (*(+(*1)+(*2/a))/2)
MathildaLib.SwapOperator: (/2*(+(*2/a)+(*1)))
MathildaLib.SwapOperator: (*(+(/a*2)+(/a*a))/2)
MathildaLib.SwapOperator: (*(+(*a/a)+(/a*2))/2)
MathildaLib.SwapOperator: (*(+(*2/a)+(*a/a))/2)
MathildaLib.SwapOperator: (*(+(*2/a)+(*a/a))/2)
MathildaLib.SwapOperator: (/2*(+(/a*a)+(*2/a)))
MathildaLib.SwapOperator: (/2*(+(*a/a)+(/a*2)))
MathildaLib.SwapOperator: (/2*(+(*a/a)+(/a*2)))
MathildaLib.MultiplyOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(*2*a*a)+(*4*a))
MathildaLib.SwapOperator: (+(*2*a*a)+(*4*a))
MathildaLib.SwapOperator: (+(*a*4)+(*2*a*a))
MathildaLib.ScalarProductOperator: (+(*4*a)+(*2*a*a))
MathildaLib.SwapOperator: (+(*a*2*2)+(*a*a*2))
MathildaLib.SwapOperator: (+(*a*2*2)+(*a*a*2))
MathildaLib.SwapOperator: (+(*a*2*2)+(*a*a*2))
MathildaLib.SwapOperator: (+(*a*2*2)+(*a*a*2))
MathildaLib.SwapOperator: (+(*2*a*a)+(*2*2*a))
MathildaLib.SwapOperator: (+(*2*a*a)+(*2*2*a))
MathildaLib.SwapOperator: (+(*2*a*a)+(*2*2*a))
MathildaLib.SwapOperator: (+(*2*a*2)+(*a*2*a))
MathildaLib.SwapOperator: (+(*4*a)+(*2*a*a))
MathildaLib.LiftOperator: (+(*4*a)+(*2*a*a))
MathildaLib.SwapOperator: (*(+(*2*a*a)+(*4*a)))
MathildaLib.SwapOperator: (*(+(*2*a*a)+(*4*a)))
MathildaLib.SwapOperator: (*(+(*a*4)+(*2*a*a)))
MathildaLib.ScalarProductOperator: (*(+(*4*a)+(*2*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2*2)+(*a*a*2)))
MathildaLib.SwapOperator: (*(+(*a*2*2)+(*a*a*2)))
MathildaLib.SwapOperator: (*(+(*a*2*2)+(*a*a*2)))
MathildaLib.SwapOperator: (*(+(*a*2*2)+(*a*a*2)))
MathildaLib.SwapOperator: (*(+(*2*a*a)+(*2*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a*a)+(*2*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a*a)+(*2*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a*2)+(*a*2*a)))
MathildaLib.MultiplyOperator: (+(*4*a)+(*2*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+a)
MathildaLib.LiftOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a))
MathildaLib.MultiplyOneOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*1*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a*1)+(*0.5*a*a))
MathildaLib.ScalarProductOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2*0.5)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*2*a*0.5))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(*a*0.5*a))
MathildaLib.SwapOperator: (+a+(*0.5*a*a))
MathildaLib.LiftOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+a))
MathildaLib.LiftOperator: (*(+a+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*a)))
MathildaLib.MultiplyOneOperator: (*(+a+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*a*1)+(*0.5*a*a)))
MathildaLib.ScalarProductOperator: (*(+a+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2*0.5)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2*0.5)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2*0.5)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2*0.5)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2*0.5)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2*0.5)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(*2*0.5*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*2)+(*a*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*a*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*2*a*0.5)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*2)+(*a*0.5*a)))
MathildaLib.MultiplyOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a*a))*0.5)
MathildaLib.SwapOperator: (*0.5*(+(*2*a)+(*a*a)))
MathildaLib.FixSignOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (+(/2*a*a)+a)
MathildaLib.SwapOperator: (+a+(/2*a*a))
MathildaLib.LiftOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*a))
MathildaLib.MultiplyOneOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*1*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*1*a))
MathildaLib.SwapOperator: (+(*a*1)+(/2*a*a))
MathildaLib.ScalarProductOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*2*0.5*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*0.5*2)+(*a*a/2))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.5*2*a))
MathildaLib.SwapOperator: (+(*2*0.5*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*2*0.5*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*2)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.5*2*a)+(/2*a*a))
MathildaLib.FixSignOperator: (+(*0.5*2*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a*0.25)+(*0.5*a*a))
MathildaLib.FixSignOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(/4*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(/4*a))
MathildaLib.SwapOperator: (+(*0.5*a*a)+(*a/4))
MathildaLib.SwapOperator: (+(*a/4)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.MultiplyOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a*0.5))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(/2*2*a))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(*a*0.5*a)+(*2*a/2))
MathildaLib.SwapOperator: (+(/2*a*2)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(/2*2*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(/2*2*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*2*a/2)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*2/2*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*2/2*a)+(*a*0.5*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.FixSignOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*0.25*a))
MathildaLib.SwapOperator: (+(*a*0.25)+(/2*a*a))
MathildaLib.FixSignOperator: (+(*0.25*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(/4*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(/4*a))
MathildaLib.SwapOperator: (+(*a/4)+(/2*a*a))
MathildaLib.MultiplyOperator: (+(*0.25*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*a*a/2)+(*2/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(*a/2*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a/2))
MathildaLib.SwapOperator: (+(*a*2/2)+(*a*a/2))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(/2*a*a)+(*2/2*a))
MathildaLib.SwapOperator: (+(/2*a*2)+(*a/2*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(/2*a*a))
MathildaLib.SwapOperator: (+(*0.25*a)+(*0.5*a*a))
MathildaLib.SwapOperator: (+a+(/2*a*a))
MathildaLib.LiftOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (*(+(/2*a*a)+a))
MathildaLib.SwapOperator: (*(+a+(/2*a*a)))
MathildaLib.LiftOperator: (*(+a+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*a)))
MathildaLib.MultiplyOneOperator: (*(+a+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*a*1)+(/2*a*a)))
MathildaLib.ScalarProductOperator: (*(+a+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*a*a/2)+(*2*0.5*a)))
MathildaLib.SwapOperator: (*(+(*a*a/2)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*a/2*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*a/2*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*a/2*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*2)+(*a*a/2)))
MathildaLib.SwapOperator: (*(+(*a*0.5*2)+(*a*a/2)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*0.5*2*a)))
MathildaLib.SwapOperator: (*(+(*2*0.5*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*2*0.5*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*2)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.5*2*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.5*2*a)+(/2*a*a)))
MathildaLib.FixSignOperator: (*(+(*0.5*2*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*0.25*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*0.25*a)))
MathildaLib.SwapOperator: (*(+(*a*0.25)+(*0.5*a*a)))
MathildaLib.FixSignOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(/4*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(/4*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a*a)+(*a/4)))
MathildaLib.SwapOperator: (*(+(*a/4)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.MultiplyOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a*0.5)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(/2*2*a)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(*2*a/2)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(*2*a/2)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(*2*a/2)))
MathildaLib.SwapOperator: (*(+(*a*0.5*a)+(*2*a/2)))
MathildaLib.SwapOperator: (*(+(/2*a*2)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(/2*2*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(/2*2*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*2*a/2)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*2/2*a)+(*a*0.5*a)))
MathildaLib.SwapOperator: (*(+(*2/2*a)+(*a*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.FixSignOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*0.25*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*0.25*a)))
MathildaLib.SwapOperator: (*(+(*a*0.25)+(/2*a*a)))
MathildaLib.FixSignOperator: (*(+(*0.25*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(/4*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(/4*a)))
MathildaLib.SwapOperator: (*(+(*a/4)+(/2*a*a)))
MathildaLib.MultiplyOperator: (*(+(*0.25*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*a*a/2)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(*a/2*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(*a/2*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(*a/2*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a/2)))
MathildaLib.SwapOperator: (*(+(*a*2/2)+(*a*a/2)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*a)+(*2/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a*2)+(*a/2*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(/2*a*a)))
MathildaLib.SwapOperator: (*(+(*0.25*a)+(*0.5*a*a)))
MathildaLib.MultiplyOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (+a+(/2*a*a))
MathildaLib.SwapOperator: (+a+(/2*a*a))
MathildaLib.MultiplyOperator: (+a+(*0.5*a*a))
MathildaLib.SwapOperator: (*(+1+(*0.5*a))/a)
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+1))
MathildaLib.LiftOperator: (/a*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*1)+(*0.5*a))/a)
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*1)))
MathildaLib.ScalarProductOperator: (/a*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*2*0.5)+(*0.5*a))/a)
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*a*0.5))/a)
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*a*0.5))/a)
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*a*0.5))/a)
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*a*0.5))/a)
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*0.5*2)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*0.5*2)))
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*0.5*2)))
MathildaLib.SwapOperator: (/a*(+1+(*0.5*a)))
MathildaLib.MultiplyOperator: (/a*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (*(+2+a)*0.5/a)
MathildaLib.SwapOperator: (/a*0.5*(+2+a))
MathildaLib.SwapOperator: (/a*0.5*(+2+a))
MathildaLib.SwapOperator: (/a*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (/a*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (*(+4+(*2*a))/a)
MathildaLib.SwapOperator: (/a*(+(*2*a)+4))
MathildaLib.LiftOperator: (/a*(+4+(*2*a)))
MathildaLib.SwapOperator: (*(+(*4)+(*2*a))/a)
MathildaLib.SwapOperator: (/a*(+(*2*a)+(*4)))
MathildaLib.ScalarProductOperator: (/a*(+4+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*2)+(*a*2))/a)
MathildaLib.SwapOperator: (*(+(*2*2)+(*a*2))/a)
MathildaLib.SwapOperator: (/a*(+(*2*a)+(*2*2)))
MathildaLib.SwapOperator: (/a*(+4+(*2*a)))
MathildaLib.MultiplyOperator: (/a*(+4+(*2*a)))
MathildaLib.SwapOperator: (*(+1+(/2*a))/a)
MathildaLib.SwapOperator: (*(+1+(/2*a))/a)
MathildaLib.SwapOperator: (/a*(+1+(/2*a)))
MathildaLib.LiftOperator: (/a*(+1+(/2*a)))
MathildaLib.SwapOperator: (*(+(*1)+(/2*a))/a)
MathildaLib.SwapOperator: (*(+(*1)+(/2*a))/a)
MathildaLib.ScalarProductOperator: (/a*(+1+(/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*0.5*2))/a)
MathildaLib.SwapOperator: (*(+(*0.5*2)+(/2*a))/a)
MathildaLib.SwapOperator: (*(+(*0.5*2)+(/2*a))/a)
MathildaLib.SwapOperator: (*(+(*0.5*2)+(/2*a))/a)
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*0.5*2)))
MathildaLib.SwapOperator: (/a*(+(*0.5*2)+(/2*a)))
MathildaLib.SwapOperator: (/a*(+(*0.5*2)+(/2*a)))
MathildaLib.SwapOperator: (*(+0.25+(*0.5*a))/a)
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+0.25))
MathildaLib.LiftOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.25)+(*0.5*a))/a)
MathildaLib.SwapOperator: (/a*(+(*0.5*a)+(*0.25)))
MathildaLib.FixSignOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(/4)+(*0.5*a))/a)
MathildaLib.SwapOperator: (*(+(/4)+(*0.5*a))/a)
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.MultiplyOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(/2*2)+(*0.5*a))/a)
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*2/2))/a)
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*2/2))/a)
MathildaLib.SwapOperator: (/a*(+(*2/2)+(*a*0.5)))
MathildaLib.SwapOperator: (/a*(+(*2/2)+(*a*0.5)))
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.FixSignOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+0.25+(/2*a))/a)
MathildaLib.SwapOperator: (/a*(+(/2*a)+0.25))
MathildaLib.LiftOperator: (/a*(+0.25+(/2*a)))
MathildaLib.SwapOperator: (*(+(*0.25)+(/2*a))/a)
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*0.25)))
MathildaLib.FixSignOperator: (/a*(+0.25+(/2*a)))
MathildaLib.SwapOperator: (*(+(/4)+(/2*a))/a)
MathildaLib.SwapOperator: (/a*(+(/2*a)+(/4)))
MathildaLib.MultiplyOperator: (/a*(+0.25+(/2*a)))
MathildaLib.SwapOperator: (*(+(*a/2)+(*2/2))/a)
MathildaLib.SwapOperator: (*(+(/2*2)+(/2*a))/a)
MathildaLib.SwapOperator: (*(+(*2/2)+(/2*a))/a)
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*2/2)))
MathildaLib.SwapOperator: (/a*(+(/2*a)+(*2/2)))
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.MultiplyOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+2+a)/2/a)
MathildaLib.SwapOperator: (/a/2*(+2+a))
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (/a*(+0.25+(*0.5*a)))
========
MathildaLib.MultiplyOneOperator: (+0.5+(/a))
MathildaLib.SwapOperator: (+(*1/a)+0.5)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: a
MathildaLib.MultiplyOneOperator: a
MathildaLib.ScalarProductOperator: a
MathildaLib.SwapOperator: (*a*0.5*2)
MathildaLib.SwapOperator: (*0.5*2*a)
MathildaLib.FixSignOperator: (*0.5*2*a)
MathildaLib.FixSignOperator: (*0.25*a)
MathildaLib.MultiplyOperator: (*0.25*a)
MathildaLib.SwapOperator: (*0.25*a)
MathildaLib.SwapOperator: (*0.25*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 2
MathildaLib.MultiplyOneOperator: 2
MathildaLib.CancelVariableOperator: 2
MathildaLib.SwapOperator: (/a*2*a)
MathildaLib.SwapOperator: 2
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.NotImplementedException : The requested feature is not implemented.</Message>
                  <StackTrace>  at MathildaLib.MultiplyOperator.Do (MathildaLib.Node&amp; node) [0x006c2] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:226 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.MultiplyOperator+&lt;Multiply&gt;c__AnonStorey2.&lt;&gt;m__2 (Int32 i, Int32 j) [0x00010] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:240 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x0001a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.MultiplyOperator.Multiply (Search search) [0x00047] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:242 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0009c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, OperatorDelegate[] operators) [0x00019] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestDivide.TestDivide15 () [0x00043] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:124 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 1
MathildaLib.FixSignOperator: 1
MathildaLib.LiftOperator: 1
MathildaLib.ScalarProductOperator: 1
MathildaLib.MultiplyOperator: 1
MathildaLib.SwapOperator: (*0.5*2)
MathildaLib.FixSignOperator: (*0.5*2)
MathildaLib.LiftOperator: 0.25
MathildaLib.FixSignOperator: 0.25
MathildaLib.MultiplyOperator: 0.25
MathildaLib.SwapOperator: 0.25
MathildaLib.LiftOperator: 0.25
MathildaLib.LiftOperator: 0.5
MathildaLib.FixSignOperator: 0.5
MathildaLib.LiftOperator: 0.5
MathildaLib.MultiplyOperator: 0.5
MathildaLib.MultiplyOperator: 0.25
unsupported multiply a (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivide16 () [0x0004c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:132 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 1
MathildaLib.CancelVariableOperator: 1
MathildaLib.MultiplyOneOperator: 1
MathildaLib.MultiplyOneOperator: ()
MathildaLib.CancelVariableOperator: ()
MathildaLib.ScalarProductOperator: 1
MathildaLib.SwapOperator: (*0.5*2)
MathildaLib.FixSignOperator: (*0.5*2)
MathildaLib.LiftOperator: 0.25
MathildaLib.FixSignOperator: 0.25
MathildaLib.MultiplyOperator: 0.25
MathildaLib.SwapOperator: 0.25
MathildaLib.MultiplyOneOperator: 0.25
MathildaLib.SwapOperator: (*0.25*1)
MathildaLib.FixSignOperator: (*0.25*1)
MathildaLib.MultiplyOperator: (*0.25*1)
MathildaLib.SwapOperator: (*2*0.5*1)
MathildaLib.SwapOperator: (*0.5*1*2)
MathildaLib.CancelVariableOperator: 0.25
MathildaLib.SwapOperator: (/a*0.5*2*a)
MathildaLib.SwapOperator: (/a*0.5*2*a)
MathildaLib.SwapOperator: (*a/a*0.5*2)
MathildaLib.SwapOperator: (*a*0.5*2/a)
MathildaLib.SwapOperator: (*2*a*0.5/a)
MathildaLib.SwapOperator: (*2*0.5/a*a)
MathildaLib.SwapOperator: (*2*0.5/a*a)
MathildaLib.SwapOperator: (*0.5*a*2/a)
MathildaLib.SwapOperator: (*0.5*2*a/a)
MathildaLib.SwapOperator: (*a*0.25/a)
MathildaLib.FixSignOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (*a/4/a)
MathildaLib.MultiplyOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (/a/2*2*a)
MathildaLib.SwapOperator: (/a*2/2*a)
MathildaLib.SwapOperator: (*a*2/2/a)
MathildaLib.SwapOperator: (*a*2/2/a)
MathildaLib.SwapOperator: (/2*a*2/a)
MathildaLib.SwapOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (*0.25*a/a)
MathildaLib.SwapOperator: (*0.25*a/a)
MathildaLib.SwapOperator: 0.25
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivide3 () [0x00048] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:28 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 1
MathildaLib.ScalarProductOperator: 1
MathildaLib.SwapOperator: (*0.25*4)
MathildaLib.LiftOperator: 0.0625
MathildaLib.FixSignOperator: 0.0625
MathildaLib.MultiplyOperator: 0.0625
MathildaLib.SwapOperator: 0.0625
MathildaLib.LiftOperator: 0.0625
MathildaLib.SumOperator: 0.0625
MathildaLib.LiftOperator: 16
MathildaLib.SumOperator: 16
MathildaLib.LiftOperator: 16
MathildaLib.MultiplyOneOperator: 16
MathildaLib.SwapOperator: (+(*1*4)+12)
MathildaLib.LiftOperator: 16
MathildaLib.LiftOperator: (+4+(*12))
MathildaLib.SwapOperator: (+4+(*12))
MathildaLib.SwapOperator: (+(*1*4)+(*12))
MathildaLib.ScalarProductOperator: 16
MathildaLib.SwapOperator: (+(*3*4)+4)
MathildaLib.LiftOperator: (+4+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4))
MathildaLib.MultiplyOneOperator: (+4+(*3*4))
MathildaLib.SwapOperator: (+(*4*3)+(*1*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*1))
MathildaLib.SwapOperator: (+(*3*4)+(*4*1))
MathildaLib.LiftOperator: 16
MathildaLib.LiftOperator: (*16)
MathildaLib.SumOperator: (*16)
MathildaLib.LiftOperator: (*16)
MathildaLib.MultiplyOneOperator: (*16)
MathildaLib.SwapOperator: (*(+(*1*4)+12))
MathildaLib.LiftOperator: (*16)
MathildaLib.LiftOperator: (*(+4+(*12)))
MathildaLib.SwapOperator: (*(+4+(*12)))
MathildaLib.SwapOperator: (*(+(*1*4)+(*12)))
MathildaLib.SwapOperator: (*(+(*3*4)+4))
MathildaLib.LiftOperator: (*(+4+(*3*4)))
MathildaLib.SwapOperator: (*(+(*3*4)+(*4)))
MathildaLib.MultiplyOneOperator: (*(+4+(*3*4)))
MathildaLib.SwapOperator: (*(+(*4*3)+(*1*4)))
MathildaLib.SwapOperator: (*(+(*3*4)+(*4*1)))
MathildaLib.SwapOperator: (*(+(*3*4)+(*4*1)))
MathildaLib.MultiplyOperator: 16
MathildaLib.SwapOperator: 16
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 0.166666666666667
MathildaLib.ScalarProductOperator: 0.166666666666667
MathildaLib.SwapOperator: (*0.333333333333333*0.5)
MathildaLib.FixSignOperator: (*0.333333333333333*0.5)
MathildaLib.LiftOperator: 0.666666666666667
MathildaLib.FixSignOperator: 0.666666666666667
MathildaLib.MultiplyOperator: 0.666666666666667
MathildaLib.SwapOperator: 0.666666666666667
MathildaLib.LiftOperator: 1.5
MathildaLib.FixSignOperator: 1.5
MathildaLib.MultiplyOneOperator: 1.5
MathildaLib.SwapOperator: (*1*1.5)
MathildaLib.SwapOperator: (*0.166666666666667*1)
MathildaLib.MultiplyOperator: (*0.166666666666667*1)
MathildaLib.SwapOperator: (*0.5*0.333333333333333*1)
MathildaLib.MultiplyOperator: (*0.333333333333333/2)
MathildaLib.SwapOperator: (*0.666666666666667*1)
MathildaLib.FixSignOperator: (*0.666666666666667*1)
MathildaLib.SwapOperator: (/2*1/3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.FixSignOperator: (*0.5*a)
MathildaLib.SwapOperator: (*0.5*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 1
MathildaLib.CancelVariableOperator: 1
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.NotImplementedException : The requested feature is not implemented.</Message>
                  <StackTrace>  at MathildaLib.MultiplyOperator.Do (MathildaLib.Node&amp; node) [0x006c2] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:226 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.MultiplyOperator+&lt;Multiply&gt;c__AnonStorey2.&lt;&gt;m__2 (Int32 i, Int32 j) [0x00010] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:240 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x0001a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.MultiplyOperator.Multiply (Search search) [0x00047] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/MultiplyOperator.cs:242 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0009c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, OperatorDelegate[] operators) [0x00019] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestDivide.TestDivide7 () [0x00037] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:57 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 0.5
MathildaLib.FixSignOperator: 0.5
MathildaLib.LiftOperator: 0.5
MathildaLib.MultiplyOperator: 0.5
unsupported multiply a (*a*2)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (/b)
MathildaLib.CancelVariableOperator: (/b)
MathildaLib.SwapOperator: (/b*a/a)
MathildaLib.SwapOperator: (/b)
========
MathildaLib.MultiplyOneOperator: (/b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivide9 () [0x00057] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:72 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*0.5*a)+1)
MathildaLib.FixSignOperator: (+1+(*0.5*a))
MathildaLib.SwapOperator: (+1+(*0.5*a))
MathildaLib.LiftOperator: (+1+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a)+(*1))
MathildaLib.FixSignOperator: (+(*1)+(*0.5*a))
MathildaLib.ScalarProductOperator: (+1+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a)+(*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a)+(*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*a)+(*0.5*2))
MathildaLib.FixSignOperator: (+(*0.5*2)+(*0.5*a))
MathildaLib.SwapOperator: (+(/2*a)+(*0.5*2))
MathildaLib.SwapOperator: (+(*0.5*2)+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*2)+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a)+0.25)
MathildaLib.LiftOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+(*0.5*a)+(*0.25))
MathildaLib.FixSignOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+0.25+(*0.5*a))
MathildaLib.MultiplyOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+(*2/2)+(*a*0.5))
MathildaLib.SwapOperator: (+(*2/2)+(*a*0.5))
MathildaLib.SwapOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+0.25+(*0.5*a))
MathildaLib.FixSignOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+(/2*a)+0.25)
MathildaLib.LiftOperator: (+0.25+(/2*a))
MathildaLib.SwapOperator: (+(/2*a)+(*0.25))
MathildaLib.FixSignOperator: (+0.25+(/2*a))
MathildaLib.SwapOperator: (+(/2*a)+(/4))
MathildaLib.MultiplyOperator: (+0.25+(/2*a))
MathildaLib.SwapOperator: (+(/2*a)+(*2/2))
MathildaLib.SwapOperator: (+(/2*a)+(*2/2))
MathildaLib.SwapOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+0.25+(*0.5*a))
MathildaLib.LiftOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (*(+(*0.5*a)+1))
MathildaLib.FixSignOperator: (*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (*(+1+(*0.5*a)))
MathildaLib.LiftOperator: (*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*1)))
MathildaLib.FixSignOperator: (*(+(*1)+(*0.5*a)))
MathildaLib.ScalarProductOperator: (*(+1+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*0.5*2)))
MathildaLib.FixSignOperator: (*(+(*0.5*2)+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*0.5*2)))
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.5*2)+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+0.25))
MathildaLib.LiftOperator: (*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*0.5*a)+(*0.25)))
MathildaLib.FixSignOperator: (*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+0.25+(*0.5*a)))
MathildaLib.MultiplyOperator: (*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(*2/2)+(*a*0.5)))
MathildaLib.SwapOperator: (*(+(*2/2)+(*a*0.5)))
MathildaLib.SwapOperator: (*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+0.25+(*0.5*a)))
MathildaLib.FixSignOperator: (*(+0.25+(*0.5*a)))
MathildaLib.SwapOperator: (*(+(/2*a)+0.25))
MathildaLib.LiftOperator: (*(+0.25+(/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*0.25)))
MathildaLib.FixSignOperator: (*(+0.25+(/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(/4)))
MathildaLib.MultiplyOperator: (*(+0.25+(/2*a)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*2/2)))
MathildaLib.SwapOperator: (*(+(/2*a)+(*2/2)))
MathildaLib.SwapOperator: (*(+0.25+(*0.5*a)))
MathildaLib.MultiplyOperator: (+0.25+(*0.5*a))
MathildaLib.SwapOperator: (+(*2*a)+4)
MathildaLib.LiftOperator: (+4+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*4))
MathildaLib.ScalarProductOperator: (+4+(*2*a))
MathildaLib.SwapOperator: (+4+(*2*a))
MathildaLib.LiftOperator: (+4+(*2*a))
MathildaLib.SwapOperator: (*(+(*2*a)+4))
MathildaLib.LiftOperator: (*(+4+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*4)))
MathildaLib.ScalarProductOperator: (*(+4+(*2*a)))
MathildaLib.MultiplyOperator: (+4+(*2*a))
MathildaLib.SwapOperator: (*0.5*(+2+a))
========
MathildaLib.SwapOperator: (+1+(*0.5*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivideByZero">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestDivide.TestDivideByZero () [0x00056] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestDivide.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (/0)
MathildaLib.LiftOperator: Infinity
MathildaLib.ScalarProductOperator: Infinity
MathildaLib.SwapOperator: Infinity
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestDualQuaternionModule">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,03ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestCase">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestEqualityModule">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>13</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestABvsBA">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
MathildaLib.SwapOperator: (+a+b)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDuplicates">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestEqualityModule.TestDuplicates () [0x00037] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestEqualityModule.cs:99 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*2*a)
MathildaLib.AddOperator: (+(*2*a))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestInvertedInequality">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 30
MathildaLib.ScalarProductOperator: 30
MathildaLib.SwapOperator: (*3*10)
MathildaLib.SwapOperator: (*5*6)
MathildaLib.MultiplyOperator: (*5*6)
MathildaLib.SwapOperator: (*5*2*3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiplyNumbers">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 24
MathildaLib.ScalarProductOperator: 24
MathildaLib.MultiplyOperator: (*1*24)
MathildaLib.SwapOperator: (*2*1*12)
MathildaLib.SwapOperator: (*4*6)
MathildaLib.MultiplyOneOperator: (*4*6)
MathildaLib.SwapOperator: (*6*1*4)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.MultiplyOperator: (*3*8)
MathildaLib.SwapOperator: (*3*2*4)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.SwapOperator: (*8*1*3)
MathildaLib.SwapOperator: (*1*3*8)
MathildaLib.MultiplyOperator: (*1*3*8)
MathildaLib.SwapOperator: (*4*2*1*3)
MathildaLib.SwapOperator: (*4*1*2*3)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*2*3*1*4)
MathildaLib.SwapOperator: (*2*1*3*4)
MathildaLib.SwapOperator: (*1*3*2*4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNegativeVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.NegativeVariableOperator: (-a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNested1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
MathildaLib.LiftOperator: (+(*a*c)+(*b*c))
MathildaLib.SwapOperator: (*(+(*b*c)+(*a*c)))
MathildaLib.SwapOperator: (*(+(*b*c)+(*a*c)))
MathildaLib.SwapOperator: (*(+(*b*c)+(*a*c)))
MathildaLib.MultiplyOperator: (+(*a*c)+(*b*c))
========
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*c)+(*a*c))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNested2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*a*b)+(*2*a))
MathildaLib.SwapOperator: (+(*a*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
MathildaLib.LiftOperator: (+(*2*a)+(*a*b))
MathildaLib.SwapOperator: (*(+(*a*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*a*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a*b)))
MathildaLib.MultiplyOperator: (+(*2*a)+(*a*b))
========
MathildaLib.SwapOperator: (+(*a*b)+(*2*a))
MathildaLib.SwapOperator: (+(*a*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
MathildaLib.SwapOperator: (+(*2*a)+(*a*b))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNested3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,02ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*d*a*c)+(*a*b))
MathildaLib.SwapOperator: (+(*d*a*c)+(*a*b))
MathildaLib.SwapOperator: (+(*c*a*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*b*a)+(*c*a*d))
MathildaLib.SwapOperator: (+(*b*a)+(*a*c*d))
MathildaLib.SwapOperator: (+(*a*b)+(*c*a*d))
MathildaLib.LiftOperator: (+(*a*b)+(*a*c*d))
MathildaLib.SwapOperator: (*(+(*d*a*c)+(*a*b)))
MathildaLib.SwapOperator: (*(+(*d*a*c)+(*a*b)))
MathildaLib.SwapOperator: (*(+(*c*a*d)+(*a*b)))
MathildaLib.SwapOperator: (*(+(*a*c*d)+(*a*b)))
MathildaLib.SwapOperator: (*(+(*a*c*d)+(*a*b)))
MathildaLib.SwapOperator: (*(+(*a*c*d)+(*a*b)))
MathildaLib.SwapOperator: (*(+(*b*a)+(*c*a*d)))
MathildaLib.SwapOperator: (*(+(*b*a)+(*a*c*d)))
MathildaLib.SwapOperator: (*(+(*a*b)+(*c*a*d)))
MathildaLib.MultiplyOperator: (+(*a*b)+(*a*c*d))
MathildaLib.SwapOperator: (*(+b+(*c*d))*a)
MathildaLib.SwapOperator: (*a*(+(*c*d)+b))
========
MathildaLib.SwapOperator: (+(*d*a*c)+(*a*b))
MathildaLib.SwapOperator: (+(*d*a*c)+(*a*b))
MathildaLib.SwapOperator: (+(*c*a*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*a*c*d)+(*a*b))
MathildaLib.SwapOperator: (+(*b*a)+(*c*a*d))
MathildaLib.SwapOperator: (+(*b*a)+(*a*c*d))
MathildaLib.SwapOperator: (+(*a*b)+(*c*a*d))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSumNumbers">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 10
MathildaLib.SumOperator: 10
MathildaLib.SwapOperator: (+4+2+1+3)
MathildaLib.SwapOperator: (+4+1+2+3)
MathildaLib.SwapOperator: (+3+1+2+4)
MathildaLib.SwapOperator: (+3+1+2+4)
MathildaLib.SwapOperator: (+2+3+1+4)
MathildaLib.SwapOperator: (+2+1+3+4)
MathildaLib.SwapOperator: (+1+3+2+4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableCancellingProduct">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 1
MathildaLib.CancelVariableOperator: 1
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableCancellingSum">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 0
MathildaLib.CancelVariableOperator: 0
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestZeroAdd">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: a
MathildaLib.ZeroAddOperator: a
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestZeroMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.ZeroMultiplyOperator: 0
========
========
MathildaLib.ZeroMultiplyOperator: 0
========
MathildaLib.LiftOperator: a
MathildaLib.ZeroAddOperator: a
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestMultiply">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>12</Passed>
              <Errors>2</Errors>
              <Failures>2</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestMultiply1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 6
MathildaLib.ScalarProductOperator: 6
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 36
MathildaLib.SumOperator: 36
MathildaLib.LiftOperator: 36
MathildaLib.ScalarProductOperator: 36
MathildaLib.SwapOperator: (+(*2*12)+12)
MathildaLib.SwapOperator: (+12+(*4*6))
MathildaLib.SwapOperator: (+12+(*3*8))
MathildaLib.MultiplyOperator: (+12+(*3*8))
MathildaLib.SwapOperator: (+(*3*2*4)+12)
MathildaLib.SwapOperator: (+(*2*3*4)+12)
MathildaLib.SwapOperator: (+12+(*3*2*4))
MathildaLib.LiftOperator: 36
MathildaLib.SwapOperator: (+24+(*12))
MathildaLib.LiftOperator: (+24+(*12))
MathildaLib.SwapOperator: (+(*2*12)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*4*6))
MathildaLib.SwapOperator: (+(*12)+(*3*8))
MathildaLib.MultiplyOperator: (+(*12)+(*3*8))
MathildaLib.SwapOperator: (+(*3*2*4)+(*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*12))
MathildaLib.SwapOperator: (+(*12)+(*3*2*4))
MathildaLib.ScalarProductOperator: 36
MathildaLib.SwapOperator: (+(*1*12)+24)
MathildaLib.LiftOperator: (+24+(*1*12))
MathildaLib.SwapOperator: (+24+(*1*12))
MathildaLib.ScalarProductOperator: (+24+(*1*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*2*12)+(*1*12))
MathildaLib.SwapOperator: (+(*6*4)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*4*6))
MathildaLib.SwapOperator: (+(*1*12)+(*4*6))
MathildaLib.SwapOperator: (+(*8*3)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*3*8))
MathildaLib.SwapOperator: (+(*1*12)+(*3*8))
MathildaLib.MultiplyOperator: (+(*1*12)+(*3*8))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*12))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*12))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*12))
MathildaLib.SwapOperator: (+(*12*1)+(*3*2*4))
MathildaLib.SwapOperator: (+(*12*1)+(*2*3*4))
MathildaLib.SwapOperator: (+(*1*12)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*4)+24)
MathildaLib.LiftOperator: (+24+(*3*4))
MathildaLib.SwapOperator: (+24+(*3*4))
MathildaLib.ScalarProductOperator: (+24+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*2*12)+(*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*8*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*3*8))
MathildaLib.MultiplyOperator: (+(*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*3*4))
MathildaLib.SwapOperator: (+(*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*4)+(*3*2*4))
MathildaLib.SwapOperator: (+(*3*1*4)+24)
MathildaLib.SwapOperator: (+(*1*3*4)+24)
MathildaLib.SwapOperator: (+24+(*3*1*4))
MathildaLib.LiftOperator: (+24+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*24))
MathildaLib.SwapOperator: (+(*1*4*3)+(*24))
MathildaLib.SwapOperator: (+(*1*4*3)+(*24))
MathildaLib.SwapOperator: (+(*24)+(*3*1*4))
MathildaLib.SwapOperator: (+24+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.SwapOperator: (+(*3*4*1)+(*12*2))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*12))
MathildaLib.SwapOperator: (+(*1*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*1*3*4)+(*12*2))
MathildaLib.SwapOperator: (+(*12*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*12*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*12)+(*3*1*4))
MathildaLib.SwapOperator: (+(*2*12)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*4*6))
MathildaLib.SwapOperator: (+(*3*4*1)+(*4*6))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*1*3*4)+(*4*6))
MathildaLib.SwapOperator: (+(*6*4)+(*3*1*4))
MathildaLib.SwapOperator: (+(*6*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*6*4)+(*1*4*3))
MathildaLib.SwapOperator: (+(*4*6)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*6)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*3*8))
MathildaLib.SwapOperator: (+(*3*4*1)+(*3*8))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*8))
MathildaLib.SwapOperator: (+(*8*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*8*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*8*3)+(*1*4*3))
MathildaLib.SwapOperator: (+(*3*8)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*8)+(*1*3*4))
MathildaLib.MultiplyOperator: (+(*3*8)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*3*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*3*1*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*2*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*4*1*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*3*1*4))
MathildaLib.SwapOperator: (+(*3*4*2)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*2*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*3*4))
MathildaLib.SwapOperator: (+(*3*1*4)+(*2*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*3*4*1))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*4*3)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*4*1*3))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*2*3*4)+(*1*3*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*3*2*4))
MathildaLib.SwapOperator: (+(*1*4*3)+(*2*3*4))
MathildaLib.SwapOperator: (+(*1*3*4)+(*3*2*4))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 6
MathildaLib.ScalarProductOperator: 6
MathildaLib.SwapOperator: (*2*1*3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.MultiplyOneOperator: (*2*a)
MathildaLib.SwapOperator: (*2*1*a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,04ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 14
MathildaLib.SumOperator: 14
MathildaLib.LiftOperator: 14
MathildaLib.ScalarProductOperator: 14
MathildaLib.SwapOperator: (+(*1*8)+6)
MathildaLib.SwapOperator: (+(*2*4)+6)
MathildaLib.SwapOperator: (+(*2*1*4)+6)
MathildaLib.SwapOperator: (+(*1*2*4)+6)
MathildaLib.SwapOperator: (+6+(*2*1*4))
MathildaLib.LiftOperator: 14
MathildaLib.SwapOperator: (+8+(*6))
MathildaLib.LiftOperator: (+8+(*6))
MathildaLib.SwapOperator: (+(*1*8)+(*6))
MathildaLib.SwapOperator: (+(*2*4)+(*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*6))
MathildaLib.SwapOperator: (+(*6)+(*2*1*4))
MathildaLib.ScalarProductOperator: 14
MathildaLib.SwapOperator: (+(*1*6)+8)
MathildaLib.LiftOperator: (+8+(*1*6))
MathildaLib.SwapOperator: (+8+(*1*6))
MathildaLib.ScalarProductOperator: (+8+(*1*6))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*1*8)+(*1*6))
MathildaLib.SwapOperator: (+(*6*1)+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*6))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*6))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*6))
MathildaLib.SwapOperator: (+(*6*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*6*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*1*6)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*3)+8)
MathildaLib.LiftOperator: (+8+(*2*3))
MathildaLib.SwapOperator: (+8+(*2*3))
MathildaLib.ScalarProductOperator: (+8+(*2*3))
MathildaLib.SwapOperator: (+(*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*1*8)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*2*3))
MathildaLib.SwapOperator: (+(*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*3)+(*2*1*4))
MathildaLib.SwapOperator: (+(*2*1*3)+8)
MathildaLib.SwapOperator: (+(*1*2*3)+8)
MathildaLib.SwapOperator: (+8+(*2*1*3))
MathildaLib.LiftOperator: (+8+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*3)+(*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*8))
MathildaLib.SwapOperator: (+(*8)+(*2*1*3))
MathildaLib.SwapOperator: (+8+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.SwapOperator: (+(*2*3*1)+(*8*1))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*8))
MathildaLib.SwapOperator: (+(*1*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*1*2*3)+(*8*1))
MathildaLib.SwapOperator: (+(*8*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*8*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*8)+(*2*1*3))
MathildaLib.SwapOperator: (+(*1*8)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*2*3*1)+(*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*4))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*1*2*3)+(*4*2))
MathildaLib.SwapOperator: (+(*4*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*4)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*2*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*2*1*3))
MathildaLib.SwapOperator: (+(*4*1*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*3*2*1)+(*2*1*4))
MathildaLib.SwapOperator: (+(*3*2*1)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*3*1*2)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*4*1)+(*2*1*3))
MathildaLib.SwapOperator: (+(*2*4*1)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*2*4))
MathildaLib.SwapOperator: (+(*2*1*3)+(*1*2*4))
MathildaLib.SwapOperator: (+(*1*4*2)+(*2*3*1))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*4*2)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*3*2)+(*2*1*4))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*3*2)+(*1*4*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*3*1*2))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*4)+(*1*2*3))
MathildaLib.SwapOperator: (+(*1*2*3)+(*2*1*4))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 24
MathildaLib.ScalarProductOperator: 24
MathildaLib.MultiplyOperator: (*1*24)
MathildaLib.SwapOperator: (*2*1*12)
MathildaLib.SwapOperator: (*4*6)
MathildaLib.MultiplyOneOperator: (*4*6)
MathildaLib.SwapOperator: (*6*1*4)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.MultiplyOperator: (*3*8)
MathildaLib.SwapOperator: (*3*2*4)
MathildaLib.SwapOperator: (*3*8)
MathildaLib.SwapOperator: (*8*1*3)
MathildaLib.SwapOperator: (*1*3*8)
MathildaLib.MultiplyOperator: (*1*3*8)
MathildaLib.SwapOperator: (*4*2*1*3)
MathildaLib.SwapOperator: (*4*1*2*3)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*3*1*2*4)
MathildaLib.SwapOperator: (*2*3*1*4)
MathildaLib.SwapOperator: (*2*1*3*4)
MathildaLib.SwapOperator: (*1*3*2*4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.Exception : Requires product list to compare ignored</Message>
                  <StackTrace>  at MathildaLib.ListNode.CompareToIgnoreScalar (MathildaLib.Node other) [0x00201] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:298 
  at MathildaLib.AddOperator.Do (MathildaLib.Node&amp; node) [0x001f4] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:83 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.AddOperator+&lt;Add&gt;c__AnonStorey4.&lt;&gt;m__4 (Int32 i, Int32 j) [0x0000e] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:115 
  at MathildaLib.ListNode.ForEachNeighborPair (MathildaLib.ForEachPairDelegate f) [0x0001a] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Nodes/ListNode.cs:222 
  at MathildaLib.AddOperator.Add (Search search) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/AddOperator.cs:114 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0009c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.TestMultiply.TestMultiply15 () [0x0003c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:140 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
before smart lift (+(*(+(*a*c)+(*a*d)))+(*b*(+c+d)))
after smart lift (+(*a*c)+(*a*d)+(*b*(+c+d)))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*d*b))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*a*d)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*c)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*a*d)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*c)+(*d*a)+(*c*b)+(*b*d))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*b*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*a*c)+(*c*b)+(*d*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*d)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*a*d)+(*c*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*a*d)+(*c*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*a*d)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*a*d)+(*c*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*c*b)+(*d*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*d*b))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*b*d)+(*c*a)+(*d*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*c*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*c)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*b*d)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*c)+(*d*b)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*c)+(*d*b)+(*d*a)+(*c*a))
before smart lift (+(*(+(*b*c)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*c)+(*d*b)+(*c*a)+(*d*a))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*d*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*c*a)+(*a*d)+(*b*c)+(*b*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*b*c))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*b*c)+(*c*a)+(*d*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*c*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*d)+(*b*c)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*b*c)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*a*c))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*d*a))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*a*c)+(*a*d))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*a*c))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*a*d))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*b*d)+(*c*b)+(*c*a)+(*d*a))
before smart lift (+(*(+(*b*d)+(*c*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*b*d)+(*c*b)+(*d*a)+(*c*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*c*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*c*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*a*d))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*a*c)+(*d*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*b*d)+(*c*a)+(*a*d))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*a*d))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*c)+(*d*a))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*c*a)+(*d*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*c*b))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*a*d)+(*b*d)+(*c*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*c*a)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*d*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*a*c)+(*d*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*b*c))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*d*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*b*c)+(*b*d))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*b*c))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*b*d)+(*c*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*b*d))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*b*d))
before smart lift (+(*(+(*c*b)+(*b*d)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*b*d)+(*d*a)+(*a*c))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*a*c))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*a*c))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
before smart lift (+(*(+(*c*b)+(*d*b)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*c*b)+(*d*b)+(*d*a)+(*c*a))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*c*b)+(*d*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*c*b)+(*d*b))))
after smart lift (+(*d*a)+(*a*c)+(*c*b)+(*d*b))
before smart lift (+(*(+(*d*a)+(*a*c)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*a*c)+(*d*b)+(*c*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*c*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*c*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*c*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*d)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*b*d)+(*b*c))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*b*d))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*b*d))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*b*c)+(*d*b))))
after smart lift (+(*d*a)+(*c*a)+(*b*c)+(*d*b))
before smart lift (+(*(+(*d*a)+(*c*a)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*d*a)+(*c*a)+(*d*b)+(*b*c))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*d*a)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*d*a)+(*c*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*c*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*c*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*d)+(*a*c))))
after smart lift (+(*d*b)+(*b*c)+(*a*d)+(*a*c))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*a*d))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*a*c)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*a*c)+(*d*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*d*a))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*d*a))
before smart lift (+(*(+(*d*b)+(*b*c)))+(*(+(*c*a)+(*a*d))))
after smart lift (+(*d*b)+(*b*c)+(*c*a)+(*a*d))
before smart lift (+(*(+(*c*a)+(*a*d)))+(*(+(*d*b)+(*b*c))))
after smart lift (+(*c*a)+(*a*d)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*d*a)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*a*c)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*d*b)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*c*b)+(*a*c))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*d*a)+(*b*d)+(*b*c)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*b)+(*a*c)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*c*a)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*d*a)+(*a*c)+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*c*a)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*b*d)+(*a*d)+(*a*c))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*b)+(*a*c)+(*b*d)+(*d*a))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*c*a)+(*b*d)+(*c*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*d*a)+(*b*c)+(*a*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(*a*d)+(*c*a))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*a)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*b*c)+(*c*a)+(*d*b)+(*a*d))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*b)+(*d*b)+(*a*c))
MathildaLib.SwapOperator: (+(*a*d)+(*c*a)+(*b*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*b*c)+(*d*b)+(*c*a))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*d)+(*a*c)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*b*c)+(*a*d))
MathildaLib.SwapOperator: (+(*a*c)+(*d*b)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*d)+(*c*b))
MathildaLib.SwapOperator: (+(*a*c)+(*d*a)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*d*a)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*d)+(*a*d)+(*b*c))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*b*c)+(*a*d)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(*a*c)+(*a*d)+(*b*c)+(*b*d))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*b*c))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*d*b))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*c)+(*b*d))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*b*c))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*b*d)+(*c*b))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*b*d))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*c*b)+(*d*b))
before smart lift (+(+(*a*c)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*a*d))+(*d*b)+(*c*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*c*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*c*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*d)+(*b*c))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*b*d))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*b*c)+(*d*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*d*b))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*c)+(*d*a))+(*c*b)+(*b*d))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*b*d))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*b*d))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*b*d))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*b*d))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*b*d))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*c)+(*d*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*c*b)+(*d*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*c*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*c*b))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*b*d)+(*b*c))
before smart lift (+(+(*a*d)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*a*c))+(*d*b)+(*b*c))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*b*c))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*d*b))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*c)+(*b*d))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*b*c))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*b*d)+(*c*b))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*d*b)+(*c*b))
before smart lift (+(+(*a*d)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*a*d)+(*c*a))+(*c*b)+(*d*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*c*b)+(*d*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*d*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*c)+(*b*d))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*b*c))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*b*d)+(*c*b))
before smart lift (+(+(*c*a)+(*a*d))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*a*d))+(*d*b)+(*c*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*c*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*c*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*d)+(*b*c))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*b*d))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*b*c)+(*d*b))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*c*a)+(*d*a))+(*c*b)+(*d*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*d*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*d*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*d*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*c)+(*b*d))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*b*c))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*b*d)+(*c*b))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*c*b)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*c*b)+(*b*d))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*b*d))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*c)+(*d*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*c)+(*d*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*b*c))
before smart lift (+(+(*c*a)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*c*a)+(*d*a))+(*d*b)+(*b*c))
before smart lift (+(+(*a*c)+(*d*a))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*a*c)+(*d*a))+(*d*b)+(*b*c))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*b*c))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*b*c))
before smart lift (+(+(*d*a)+(*a*c))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*a*c))+(*d*b)+(*c*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*d*b)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*d*b)+(*c*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*c*b))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*c*b))
before smart lift (+(+(*d*a)+(*c*a))+(*(+(*b*d)+(*b*c))))
after smart lift (+(+(*d*a)+(*c*a))+(*b*d)+(*b*c))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*b*d)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*d*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*c)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*b*c)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*b*d)+(*c*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*b*d)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*b*d)+(*c*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*b*d)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*b*d)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*c*b)+(*d*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*c*a)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*b*c)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*b*c)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*a*c)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*a*c)))
before smart lift (+(*(+(*c*b)+(*d*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*c*b)+(*d*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*d*a)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*c*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*c*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*d)+(*a*c)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*a*d)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*a*d)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*a*c)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*a*c)+(*d*a)))
before smart lift (+(*(+(*d*b)+(*c*b)))+(+(*c*a)+(*d*a)))
after smart lift (+(*d*b)+(*c*b)+(+(*c*a)+(*d*a)))
MathildaLib.SwapOperator: (+(+(*d*a)+(*a*c))+(*c*b)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(+(*d*a)+(*c*a))+(*b*c)+(*b*d))
MathildaLib.SwapOperator: (+(+(*c*a)+(*a*d))+(*d*b)+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*d*a)+(*c*a)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*d*b)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*d*a)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*c*b)+(+(*a*c)+(*d*a))+(*d*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*d*a)+(*a*c))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*d*a))+(*c*b))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(+(*a*c)+(*a*d))+(*b*c))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*c*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*d)+(*b*c)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*c*a)+(*d*a))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*d)+(*a*c))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(+(*a*c)+(*a*d))+(*b*d))
MathildaLib.SwapOperator: (+(*b*c)+(*d*b)+(+(*a*d)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*d*a)+(*a*c)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
MathildaLib.SwapOperator: (+(*b*c)+(*b*d)+(+(*a*c)+(*a*d)))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: (-(*b*i))
MathildaLib.MultiplyOperator: (-(*b*i))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.LiftOperator: (+(*2*a)+(*2*b))
MathildaLib.SwapOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.SwapOperator: (*(+(*2*b)+(*2*a)))
MathildaLib.MultiplyOperator: (+(*2*a)+(*2*b))
MathildaLib.SwapOperator: (*(+a+b)*2)
========
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
MathildaLib.SwapOperator: (+(*2*b)+(*2*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply6 () [0x000b9] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:64 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
aMin (*(*3*a)) bMin (+(*3*a))
aMass 4 bMass 4
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*3*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*a*2)+(*1*a))
MathildaLib.SwapOperator: (+(*1*a)+(*2*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*a*2)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*1*a)+(*2*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+1+2)*a)
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 9
MathildaLib.SumOperator: 9
MathildaLib.LiftOperator: 9
MathildaLib.ScalarProductOperator: 9
MathildaLib.SwapOperator: (+(*2*3)+3)
MathildaLib.LiftOperator: 9
MathildaLib.SwapOperator: (+6+(*3))
MathildaLib.LiftOperator: (+6+(*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3))
MathildaLib.MultiplyOneOperator: 9
MathildaLib.SwapOperator: (+(*1*3)+6)
MathildaLib.LiftOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.LiftOperator: 9
MathildaLib.LiftOperator: (*9)
MathildaLib.SumOperator: (*9)
MathildaLib.LiftOperator: (*9)
MathildaLib.ScalarProductOperator: (*9)
MathildaLib.SwapOperator: (*(+(*2*3)+3))
MathildaLib.LiftOperator: (*9)
MathildaLib.SwapOperator: (*(+6+(*3)))
MathildaLib.LiftOperator: (*(+6+(*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*3)))
MathildaLib.SwapOperator: (*(+(*1*3)+6))
MathildaLib.LiftOperator: (*(+6+(*1*3)))
MathildaLib.SwapOperator: (*(+6+(*1*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*1*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*1*3)))
MathildaLib.SwapOperator: (*(+(*2*3)+(*1*3)))
MathildaLib.MultiplyOperator: 9
MathildaLib.LiftOperator: (*3*3)
MathildaLib.ScalarProductOperator: (*(*9))
MathildaLib.LiftOperator: (*(*9))
MathildaLib.ScalarProductOperator: (+(*9))
MathildaLib.MultiplyOperator: (*(*9))
MathildaLib.SumOperator: (*(*9))
========
MathildaLib.LiftOperator: 9
MathildaLib.SumOperator: 9
MathildaLib.LiftOperator: 9
MathildaLib.ScalarProductOperator: 9
MathildaLib.SwapOperator: (+(*2*3)+3)
MathildaLib.LiftOperator: 9
MathildaLib.SwapOperator: (+6+(*3))
MathildaLib.LiftOperator: (+6+(*3))
MathildaLib.SwapOperator: (+(*2*3)+(*3))
MathildaLib.MultiplyOneOperator: 9
MathildaLib.SwapOperator: (+(*1*3)+6)
MathildaLib.LiftOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+6+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
MathildaLib.SwapOperator: (+(*2*3)+(*1*3))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestMultiply.TestMultiply8 () [0x00066] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:82 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.AddOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*2*a)+a))
MathildaLib.LiftOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*2*a)+(*a)))
MathildaLib.MultiplyOneOperator: (*(*3*a))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.SwapOperator: (*(+(*2*a)+(*1*a)))
MathildaLib.MultiplyOperator: (*(*3*a))
MathildaLib.SumOperator: (*a*(+3))
========
MathildaLib.SwapOperator: (*3*a)
MathildaLib.AddOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+a)
MathildaLib.LiftOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*a))
MathildaLib.MultiplyOneOperator: (+(*3*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
MathildaLib.SwapOperator: (+(*2*a)+(*1*a))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>System.NullReferenceException : Object reference not set to an instance of an object</Message>
                  <StackTrace>  at MathildaLib.SmartLiftOperator.Do (MathildaLib.Node&amp; node) [0x0006b] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:65 
  at MathildaLib.SearchModule+Search.Alternative (MathildaLib.Operator op) [0x00033] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:58 
  at MathildaLib.SmartLiftOperator.SmartLift (Search search) [0x00008] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Operators/SmartLiftOperator.cs:84 
  at (wrapper delegate-invoke) &lt;Module&gt;:invoke_void__this___SearchModule/Search (MathildaLib.SearchModule/Search)
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0009c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:126 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.SearchModule.Minimize (MathildaLib.Node node, OperatorDelegate[] operators, System.Collections.Generic.SortedList`2 history) [0x0012c] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/SearchModule.cs:149 
  at MathildaLib.EqualityModule.IsEqualTo (MathildaLib.Node a, MathildaLib.Node b, OperatorDelegate[] operators) [0x00019] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Modules/EqualityModule.cs:12 
  at MathildaLib.TestMultiply.TestMultiply9 () [0x00051] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestMultiply.cs:91 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput>========
before smart lift (+(*(+3+4))+(*2*(+3+4)))
after smart lift (+3+4+(*2*(+3+4)))
before smart lift (+(*(+7))+(*2*(+3+4)))
after smart lift (+7+(*2*(+3+4)))
before smart lift (+7+(*(+(*2*3)+(*2*4))))
after smart lift (+7+(*2*3)+(*2*4))
before smart lift (+7+(*(+(*6)+(*2*4))))
after smart lift (+7+(*6)+(*2*4))
before smart lift (+7+(*(+6+(*2*4))))
after smart lift (+7+6+(*2*4))
before smart lift (+7+(*(+6+(*8))))
after smart lift (+7+6+(*8))
before smart lift (+7+(*(+6+8)))
after smart lift (+7+6+8)
before smart lift (+7+(*(+14)))
after smart lift (+7+14)
MathildaLib.LiftOperator: 21
MathildaLib.SumOperator: 21
MathildaLib.SmartLiftOperator: 21
before smart lift (+(*(+14))+7)
after smart lift (+14+7)
MathildaLib.SwapOperator: (+7+(+14))
MathildaLib.SumOperator: 21
before smart lift (+7+(*(+8+6)))
after smart lift (+7+8+6)
before smart lift (+(*(+8+6))+7)
after smart lift (+8+6+7)
before smart lift (+(*(+6+8))+7)
after smart lift (+6+8+7)
MathildaLib.SwapOperator: (+8+6+7)
MathildaLib.SwapOperator: (+6+7+8)
MathildaLib.SwapOperator: (+7+(+6+8))
MathildaLib.SwapOperator: (+(*(+6+8))+7)
MathildaLib.LiftOperator: 21
before smart lift (+7+(*(+(*8)+6)))
after smart lift (+7+(*8)+6)
before smart lift (+(*(+(*8)+6))+7)
after smart lift (+(*8)+6+7)
before smart lift (+(*(+6+(*8)))+7)
after smart lift (+6+(*8)+7)
MathildaLib.SwapOperator: (+8+13)
MathildaLib.LiftOperator: (+8+13)
MathildaLib.SumOperator: (+8+13)
MathildaLib.SwapOperator: (+(*8)+6+7)
MathildaLib.SmartLiftOperator: (+8+13)
MathildaLib.SwapOperator: (+7+(+6+(*8)))
MathildaLib.SwapOperator: (+8+13)
MathildaLib.ScalarProductOperator: 21
before smart lift (+7+(*(+6+(*4*2))))
after smart lift (+7+6+(*4*2))
before smart lift (+7+(*(+(*4*2)+6)))
after smart lift (+7+(*4*2)+6)
before smart lift (+7+(*(+(*2*4)+6)))
after smart lift (+7+(*2*4)+6)
before smart lift (+(*(+(*2*4)+6))+7)
after smart lift (+(*2*4)+6+7)
before smart lift (+(*(+6+(*2*4)))+7)
after smart lift (+6+(*2*4)+7)
before smart lift (+(*(+6+(*4*2)))+7)
after smart lift (+6+(*4*2)+7)
before smart lift (+(*(+(*4*2)+6))+7)
after smart lift (+(*4*2)+6+7)
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SumOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+(*2*4)+6+7)
MathildaLib.SwapOperator: (+(*2*4)+6+7)
MathildaLib.SwapOperator: (+7+6+(*2*4))
MathildaLib.SwapOperator: (+6+7+(*2*4))
MathildaLib.SwapOperator: (+6+7+(*2*4))
MathildaLib.SmartLiftOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+(+6+(*2*4))+7)
MathildaLib.SwapOperator: (+7+(+6+(*2*4)))
MathildaLib.SwapOperator: (+7+(+6+(*2*4)))
MathildaLib.SwapOperator: (+7+(+6+(*2*4)))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+13+(*2*4))
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+6)))
MathildaLib.LiftOperator: 21
before smart lift (+7+(*(+(*6)+(*8))))
after smart lift (+7+(*6)+(*8))
before smart lift (+7+(*(+(*6)+8)))
after smart lift (+7+(*6)+8)
before smart lift (+7+(*(+8+(*6))))
after smart lift (+7+8+(*6))
before smart lift (+(*(+8+(*6)))+7)
after smart lift (+8+(*6)+7)
before smart lift (+(*(+(*6)+8))+7)
after smart lift (+(*6)+8+7)
MathildaLib.LiftOperator: (+6+15)
MathildaLib.SumOperator: (+6+15)
MathildaLib.SwapOperator: (+8+7+(*6))
MathildaLib.SmartLiftOperator: (+6+15)
MathildaLib.SwapOperator: (+7+(+8+(*6)))
MathildaLib.SwapOperator: (+7+(+8+(*6)))
MathildaLib.SwapOperator: (+6+15)
MathildaLib.SwapOperator: (+6+15)
MathildaLib.SwapOperator: (+6+15)
MathildaLib.LiftOperator: (+6+15)
before smart lift (+7+(*(+(*8)+(*6))))
after smart lift (+7+(*8)+(*6))
before smart lift (+(*(+(*8)+(*6)))+7)
after smart lift (+(*8)+(*6)+7)
before smart lift (+(*(+(*6)+(*8)))+7)
after smart lift (+(*6)+(*8)+7)
MathildaLib.SwapOperator: (+7+(*6)+(*8))
MathildaLib.SwapOperator: (+7+(*6)+(*8))
MathildaLib.SwapOperator: (+7+(+(*6)+(*8)))
MathildaLib.SwapOperator: (+(*(+(*6)+(*8)))+7)
before smart lift (+7+(*(+(*6)+(*4*2))))
after smart lift (+7+(*6)+(*4*2))
before smart lift (+7+(*(+(*4*2)+(*6))))
after smart lift (+7+(*4*2)+(*6))
before smart lift (+7+(*(+(*2*4)+(*6))))
after smart lift (+7+(*2*4)+(*6))
before smart lift (+(*(+(*2*4)+(*6)))+7)
after smart lift (+(*2*4)+(*6)+7)
before smart lift (+(*(+(*6)+(*2*4)))+7)
after smart lift (+(*6)+(*2*4)+7)
before smart lift (+(*(+(*6)+(*4*2)))+7)
after smart lift (+(*6)+(*4*2)+7)
before smart lift (+(*(+(*4*2)+(*6)))+7)
after smart lift (+(*4*2)+(*6)+7)
MathildaLib.SwapOperator: (+(*2*4)+7+(*6))
MathildaLib.SwapOperator: (+(*6)+7+(*2*4))
MathildaLib.SwapOperator: (+(*6)+7+(*2*4))
MathildaLib.SwapOperator: (+7+(*6)+(*2*4))
MathildaLib.SwapOperator: (+7+(*6)+(*2*4))
MathildaLib.SwapOperator: (+(+(*6)+(*2*4))+7)
MathildaLib.SwapOperator: (+7+(+(*6)+(*2*4)))
MathildaLib.SwapOperator: (+7+(+(*6)+(*2*4)))
MathildaLib.SwapOperator: (+7+(+(*6)+(*2*4)))
MathildaLib.SwapOperator: (+(*(+(*6)+(*2*4)))+7)
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*6))))
MathildaLib.ScalarProductOperator: 21
before smart lift (+7+(*(+(*2*3)+(*8))))
after smart lift (+7+(*2*3)+(*8))
before smart lift (+7+(*(+(*8)+(*2*3))))
after smart lift (+7+(*8)+(*2*3))
before smart lift (+7+(*(+8+(*2*3))))
after smart lift (+7+8+(*2*3))
before smart lift (+7+(*(+8+(*3*2))))
after smart lift (+7+8+(*3*2))
before smart lift (+7+(*(+(*3*2)+8)))
after smart lift (+7+(*3*2)+8)
before smart lift (+7+(*(+(*2*3)+8)))
after smart lift (+7+(*2*3)+8)
before smart lift (+(*(+(*2*3)+8))+7)
after smart lift (+(*2*3)+8+7)
before smart lift (+(*(+8+(*2*3)))+7)
after smart lift (+8+(*2*3)+7)
before smart lift (+(*(+8+(*3*2)))+7)
after smart lift (+8+(*3*2)+7)
before smart lift (+(*(+(*3*2)+8))+7)
after smart lift (+(*3*2)+8+7)
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SumOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+(*2*3)+7+8)
MathildaLib.SwapOperator: (+8+7+(*2*3))
MathildaLib.SwapOperator: (+8+7+(*2*3))
MathildaLib.SwapOperator: (+7+8+(*2*3))
MathildaLib.SmartLiftOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+(+8+(*2*3))+7)
MathildaLib.SwapOperator: (+7+(+8+(*2*3)))
MathildaLib.SwapOperator: (+7+(+8+(*2*3)))
MathildaLib.SwapOperator: (+7+(+8+(*2*3)))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+15+(*2*3))
MathildaLib.SwapOperator: (+7+(*(+(*2*3)+8)))
MathildaLib.LiftOperator: (+7+(*(+8+(*2*3))))
before smart lift (+7+(*(+(*8)+(*3*2))))
after smart lift (+7+(*8)+(*3*2))
before smart lift (+7+(*(+(*3*2)+(*8))))
after smart lift (+7+(*3*2)+(*8))
before smart lift (+(*(+(*3*2)+(*8)))+7)
after smart lift (+(*3*2)+(*8)+7)
before smart lift (+(*(+(*8)+(*3*2)))+7)
after smart lift (+(*8)+(*3*2)+7)
before smart lift (+(*(+(*8)+(*2*3)))+7)
after smart lift (+(*8)+(*2*3)+7)
before smart lift (+(*(+(*2*3)+(*8)))+7)
after smart lift (+(*2*3)+(*8)+7)
MathildaLib.SwapOperator: (+(*2*3)+7+(*8))
MathildaLib.SwapOperator: (+(*2*3)+7+(*8))
MathildaLib.SwapOperator: (+(*8)+7+(*2*3))
MathildaLib.SwapOperator: (+7+(*2*3)+(*8))
MathildaLib.SwapOperator: (+7+(*8)+(*2*3))
MathildaLib.SwapOperator: (+(+(*8)+(*2*3))+7)
MathildaLib.SwapOperator: (+(+(*8)+(*2*3))+7)
MathildaLib.SwapOperator: (+7+(+(*8)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*8)+(*2*3)))
MathildaLib.SwapOperator: (+(*(+(*8)+(*2*3)))+7)
MathildaLib.SwapOperator: (+(*(+(*8)+(*2*3)))+7)
MathildaLib.SwapOperator: (+7+(*(+8+(*2*3))))
before smart lift (+7+(*(+(*2*3)+(*4*2))))
after smart lift (+7+(*2*3)+(*4*2))
before smart lift (+7+(*(+(*3*2)+(*4*2))))
after smart lift (+7+(*3*2)+(*4*2))
before smart lift (+7+(*(+(*3*2)+(*2*4))))
after smart lift (+7+(*3*2)+(*2*4))
before smart lift (+7+(*(+(*2*4)+(*3*2))))
after smart lift (+7+(*2*4)+(*3*2))
before smart lift (+7+(*(+(*2*4)+(*2*3))))
after smart lift (+7+(*2*4)+(*2*3))
before smart lift (+7+(*(+(*4*2)+(*2*3))))
after smart lift (+7+(*4*2)+(*2*3))
before smart lift (+7+(*(+(*4*2)+(*3*2))))
after smart lift (+7+(*4*2)+(*3*2))
before smart lift (+(*(+(*4*2)+(*3*2)))+7)
after smart lift (+(*4*2)+(*3*2)+7)
before smart lift (+(*(+(*2*4)+(*3*2)))+7)
after smart lift (+(*2*4)+(*3*2)+7)
before smart lift (+(*(+(*2*4)+(*2*3)))+7)
after smart lift (+(*2*4)+(*2*3)+7)
before smart lift (+(*(+(*2*3)+(*2*4)))+7)
after smart lift (+(*2*3)+(*2*4)+7)
before smart lift (+(*(+(*2*3)+(*4*2)))+7)
after smart lift (+(*2*3)+(*4*2)+7)
before smart lift (+(*(+(*3*2)+(*4*2)))+7)
after smart lift (+(*3*2)+(*4*2)+7)
before smart lift (+(*(+(*3*2)+(*2*4)))+7)
after smart lift (+(*3*2)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*3*2)+7+(*2*4))
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+(*2*3)+(*2*4)+7)
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*4*2)+(*2*3))
MathildaLib.SwapOperator: (+7+(*3*2)+(*2*4))
MathildaLib.SwapOperator: (+7+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+7+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+7+(*2*3)+(*2*4))
MathildaLib.SwapOperator: (+(+(*3*2)+(*4*2))+7)
MathildaLib.SwapOperator: (+(+(*2*3)+(*2*4))+7)
MathildaLib.SwapOperator: (+(+(*2*3)+(*2*4))+7)
MathildaLib.SwapOperator: (+7+(+(*2*4)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*2*4)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*2*4)+(*2*3)))
MathildaLib.SwapOperator: (+7+(+(*2*3)+(*2*4)))
MathildaLib.SwapOperator: (+7+(+(*2*3)+(*2*4)))
MathildaLib.SwapOperator: (+(*(+(*3*2)+(*2*4)))+7)
before smart lift (+(*(+(*4*2)+(*2*3)))+7)
after smart lift (+(*4*2)+(*2*3)+7)
MathildaLib.SwapOperator: (+(*(+(*2*3)+(*2*4)))+7)
MathildaLib.SwapOperator: (+(*(+(*2*3)+(*2*4)))+7)
MathildaLib.SwapOperator: (+(*(+(*2*3)+(*2*4)))+7)
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*2*3))))
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*2*3))))
MathildaLib.SwapOperator: (+7+(*(+(*2*4)+(*2*3))))
MathildaLib.MultiplyOperator: 21
MathildaLib.SwapOperator: (+(*2*7)+7)
MathildaLib.LiftOperator: (+7+(*2*7))
before smart lift (+7+(*(+(*2*7))))
after smart lift (+7+(*2*7))
MathildaLib.ScalarProductOperator: (+7+(*(*14)))
MathildaLib.SwapOperator: (+(*(*2*7))+7)
MathildaLib.LiftOperator: (+7+(*(*14)))
before smart lift (+7+(*(+(*14))))
after smart lift (+7+(*14))
before smart lift (+(*(+(*14)))+7)
after smart lift (+(*14)+7)
MathildaLib.SwapOperator: (+7+(+(*14)))
before smart lift (+7+(*(+(*7*2))))
after smart lift (+7+(*7*2))
before smart lift (+(*(+(*7*2)))+7)
after smart lift (+(*7*2)+7)
MathildaLib.LiftOperator: (+(*(*7*2))+7)
before smart lift (+(*(+(*2*7)))+7)
after smart lift (+(*2*7)+7)
MathildaLib.SwapOperator: (+7+(+(*2*7)))
MathildaLib.MultiplyOperator: (+7+(*(*14)))
MathildaLib.SwapOperator: (+(*2*(+7))+7)
MathildaLib.SwapOperator: (+(*2*(+3+4))+7)
MathildaLib.SwapOperator: (+7+(*(+3+4)*2))
MathildaLib.SmartLiftOperator: 21
before smart lift (+(*7)+(*(+(*2*3)+(*2*4))))
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestOperations">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,52ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestListAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestListAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberAddNumberMultiplyNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberAddNumberMultiplyVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyNumberAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyNumberAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyProductList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestNumberMultiplyVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableAddNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableAddVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableMultiplyNumber">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableMultiplyProductList">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableMultiplyVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestReal">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>9</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,29ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestAdd">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDivide">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiply2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestMultiplyZero">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestScalarToString">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestVariableToString">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestZeroPlusOne">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestZeroPlusVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestSubtract">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>16</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,61ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestSubtract1">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 0
MathildaLib.SumOperator: 0
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract10">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SumOperator: (+4-a)
MathildaLib.SwapOperator: (+3+1-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract11">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -4
MathildaLib.SumOperator: -4
MathildaLib.SwapOperator: (+2+-4+-3+1)
MathildaLib.SwapOperator: (+2+-4+-3+1)
MathildaLib.SwapOperator: (+1+-4+-3+2)
MathildaLib.SwapOperator: (+1+-4+-3+2)
MathildaLib.SwapOperator: (+-3+1+-4+2)
MathildaLib.SwapOperator: (+-3+-4+1+2)
MathildaLib.SwapOperator: (+-4+-3+1+2)
MathildaLib.SwapOperator: (+-4+-3+1+2)
MathildaLib.SwapOperator: (+-4+-3+1+2)
MathildaLib.SwapOperator: (-4+2+1-3)
MathildaLib.SwapOperator: (-4+1+2-3)
MathildaLib.SwapOperator: (-3+1+2-4)
MathildaLib.SwapOperator: (-3+1+2-4)
MathildaLib.SwapOperator: (+2-3+1-4)
MathildaLib.SwapOperator: (+2+1-3-4)
MathildaLib.SwapOperator: (+1-3+2-4)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract12">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -8
MathildaLib.SumOperator: -8
MathildaLib.SwapOperator: (+-12+4)
MathildaLib.LiftOperator: -8
MathildaLib.ScalarProductOperator: -8
MathildaLib.SwapOperator: (-(*3*4)+4)
MathildaLib.SumOperator: -8
MathildaLib.SwapOperator: (+-12+1+3)
MathildaLib.SwapOperator: (+-12+1+3)
MathildaLib.FixSignOperator: (+-12+1+3)
MathildaLib.SwapOperator: (+3+1-12)
MathildaLib.LiftOperator: (+-12+1+3)
MathildaLib.SwapOperator: (+3+1-(*12))
MathildaLib.SwapOperator: (-(*3*4)+1+3)
MathildaLib.SwapOperator: (-(*3*4)+1+3)
MathildaLib.SwapOperator: (+3+1-(*3*4))
MathildaLib.SwapOperator: (+1-(*3*4)+3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract13">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,10ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -1
MathildaLib.SumOperator: -1
MathildaLib.LiftOperator: -1
MathildaLib.MultiplyOneOperator: -1
MathildaLib.SwapOperator: -1
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract14">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+2-a)
MathildaLib.LiftOperator: (+2-a)
MathildaLib.MultiplyOneOperator: (+2-a)
MathildaLib.SwapOperator: (+2-a)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract15">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -5
MathildaLib.SumOperator: -5
MathildaLib.LiftOperator: -5
MathildaLib.MultiplyOneOperator: -5
MathildaLib.SwapOperator: -5
MathildaLib.SumOperator: -5
MathildaLib.SwapOperator: (+-3+-4+2)
MathildaLib.LiftOperator: (+-4+-3+2)
MathildaLib.SwapOperator: (+-3+-4+(*2))
MathildaLib.MultiplyOneOperator: (+-4+-3+2)
MathildaLib.SwapOperator: (+(*2*1)+-4+-3)
MathildaLib.SwapOperator: (+-3+-4+(*1*2))
MathildaLib.SwapOperator: (+-3+-4+(*1*2))
MathildaLib.SwapOperator: (+-4+-3+2)
MathildaLib.SwapOperator: (+-4+-3+2)
MathildaLib.FixSignOperator: (+-4+-3+2)
MathildaLib.SwapOperator: (+2-3-4)
MathildaLib.SwapOperator: (+2-3-4)
MathildaLib.LiftOperator: (+2-3-4)
MathildaLib.SwapOperator: (-4-3+(*2))
MathildaLib.MultiplyOneOperator: (+2-3-4)
MathildaLib.SwapOperator: (+(*2*1)-3-4)
MathildaLib.SwapOperator: (-4-3+(*1*2))
MathildaLib.SwapOperator: (-4-3+(*1*2))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract16">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -10
MathildaLib.SumOperator: -10
MathildaLib.SwapOperator: (+-12+2)
MathildaLib.LiftOperator: -10
MathildaLib.ScalarProductOperator: -10
MathildaLib.SwapOperator: (-(*3*4)+2)
MathildaLib.LiftOperator: -10
MathildaLib.FixSignOperator: (+-12+(*2))
MathildaLib.SwapOperator: (+-12+(*2))
MathildaLib.LiftOperator: (+-12+(*2))
MathildaLib.SwapOperator: (-(*3*4)+(*2))
MathildaLib.MultiplyOneOperator: -10
MathildaLib.SwapOperator: (+(*1*2)+-12)
MathildaLib.FixSignOperator: (+-12+(*1*2))
MathildaLib.SwapOperator: (+(*1*2)-12)
MathildaLib.LiftOperator: (+-12+(*1*2))
MathildaLib.SwapOperator: (+-12+(*1*2))
MathildaLib.SwapOperator: (-(*3*4)+(*1*2))
MathildaLib.SwapOperator: (+(*2*1)-(*3*4))
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract2">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -4
MathildaLib.SumOperator: -4
MathildaLib.SwapOperator: (+-2+-3+1)
MathildaLib.SwapOperator: (+-3+-2+1)
MathildaLib.SwapOperator: (-2+1-3)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract4">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: -5
MathildaLib.SumOperator: -5
MathildaLib.SwapOperator: (+-6+1)
MathildaLib.LiftOperator: -5
MathildaLib.ScalarProductOperator: -5
MathildaLib.SwapOperator: (-(*2*3)+1)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract5">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract6">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract7">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.SwapOperator: (+-3+a)
MathildaLib.SumOperator: (+-3+a)
MathildaLib.SwapOperator: (+-2+-1+a)
MathildaLib.SwapOperator: (+-2+-1+a)
MathildaLib.FixSignOperator: (+-2+-1+a)
========
MathildaLib.SwapOperator: (+-3+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract8">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.FixSignOperator: (+-2+a)
MathildaLib.SwapOperator: (+-2+a)
MathildaLib.LiftOperator: (+-2+a)
MathildaLib.MultiplyOneOperator: (+-2+a)
MathildaLib.SwapOperator: (-(*1*2)+a)
========
MathildaLib.SwapOperator: (+-2+a)
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestSubtract9">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput>========
MathildaLib.LiftOperator: 0
MathildaLib.SumOperator: 0
MathildaLib.SwapOperator: (+-3+1+2)
========
</ConsoleOutput>
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestSum">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T01:12:24</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,06ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="Test1Plus2Equals3">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestIgnoringVariable">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T01:12:24</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
        <TestRecord Name="TestPower">
          <Results>
            <UnitTestResult>
              <TestDate>2013-09-21T02:01:58</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,02ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:22:32</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,02ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:24:29</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:24:45</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:25:31</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:25:36</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:26:06</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:26:40</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:28:01</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:28:22</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:28:34</TestDate>
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:29:45</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:35:31</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:36:27</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-09-21T02:52:58</TestDate>
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0,05ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestCase">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:01:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:22:32</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestDual">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:29</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:31</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestPower.TestDual () [0x00061] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestPower.cs:24 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:36</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: True
  But was:  False
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.True (Boolean condition) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestPower.TestDual () [0x00061] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestPower.cs:24 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:06</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: 4.0d
  But was:  2
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestPower.TestDual () [0x0004b] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestPower.cs:24 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:40</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: 2
  But was:  13.545177444479563d
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestPower.TestDual () [0x00066] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestPower.cs:25 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:01</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: 2
  But was:  13.545177444479563d
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestPower.TestDual () [0x00066] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestPower.cs:25 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:22</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: 4
  But was:  1.0d
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestPower.TestDual () [0x0004b] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestPower.cs:24 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:34</TestDate>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>  Expected: 0
  But was:  4.0d
</Message>
                  <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at MathildaLib.TestPower.TestDual () [0x00066] in /Volumes/sven/csharp-mathilda/MathildaLib/MathildaLib/Tests/TestPower.cs:25 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin-no-pcl/build-root/mono-3.2.0/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:29:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:35:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:36:27</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:52:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,01ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
            <TestRecord Name="TestScalar">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:29</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:24:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:25:36</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:06</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:26:40</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:01</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:22</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:28:34</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:29:45</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:35:31</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:36:27</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-09-21T02:52:58</TestDate>
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0,00ms</Message>
                  <ConsoleOutput />
                  <ConsoleError />
                </UnitTestResult>
              </Results>
            </TestRecord>
          </Tests>
        </TestRecord>
      </Tests>
    </TestRecord>
  </Tests>
</TestRecord>